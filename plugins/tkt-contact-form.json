{
    "name": "TukuToi Contact Form",
    "slug": "tkt-contact-form",
    "version": "2.2.0",
    "author": "<a href=\"https://www.tukutoi.com/\">bedas</a>",
    "author_profile": "https://profiles.wordpress.org/bedas/",
    "contributors": {
        "bedas": {
            "profile": "https://profiles.wordpress.org/bedas/",
            "avatar": "https://secure.gravatar.com/avatar/5dfce927e603a9ef1e0d25564ce941bf?s=96&d=monsterid&r=g",
            "display_name": "Beda"
        }
    },
    "requires": "4.9.15",
    "tested": "5.8.10",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/tkt-contact-form/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 699,
    "last_updated": "2021-09-09 9:27am GMT",
    "added": "2021-09-01",
    "homepage": "https://www.tukutoi.com/program/tukutoi-contact-form/",
    "sections": {
        "description": "<p>TukuToi Contact Form Plugin lets you add a simple Contact Form to any Page, Post or Custom Post of your WordPress Website.<br />\nUsing the ShortCode <code>[tkt_cntct_frm_contact_form]</code> with attributes you can configure several aspects of the Contact Form, such as:<br />\n&#8211; Form ID<br />\n&#8211; Label for the Name Input<br />\n&#8211; Label for the Email Input<br />\n&#8211; Label for the Subject Input<br />\n&#8211; Label for the Message Input<br />\n&#8211; Label for the Send Button<br />\n&#8211; Error message for required Fields<br />\n&#8211; Error for invalid Emails<br />\n&#8211; Success message</p>\n<p>Why would we need one more Contact Form Plugin? There are too many Contact Form Plugins already!</p>\n<p>Because most Contact Form Plugins are/became actual Form Builders, that let you create any kind and sort of Form.</p>\n<p>Which is great, of course, but it also means the actual purpose of the &#8220;Contact Form&#8221;, being a wrapper for the &#8220;Email Me&#8221; link, got sort of defied in most &#8220;Contact Form&#8221; Plugins.</p>\n<p>TukuToi Contact Form does exactly what its name suggests.<br />\nIt lets you add simplest of Contact Forms to your Website thru a ShortCode.<br />\nThat&#8217;s it. There&#8217;s no Form Builder, complex validation or Captcha Settings (there&#8217;s a honeypot against robots, inbuilt in the plugin).</p>\n<p>With a minimal set of ShortCode attributes you can control the visual aspects of the Form (Labels and Success/Error messages).<br />\nThru a set of Filters and Actions you can further control the Form and its behaviour, down to almost every action and string it does or uses.</p>\n<p>These Filters and Actions usually get &#8220;wrapped&#8221; into a Graphical User Interface (GUI) for anyone to easily change those settings, however that also adds bloat, and encourages to ask for more tiny features, which one added to another, end up making the Contact Form Plugins be actual Form Builders.</p>\n<p>Thus a clear decision was made to not provide a GUI for this plugin.</p>\n<p>Furthermore, keeping the plugin minimal, targeted and not using any advanced features, we can keep it compatible with WordPress versions from 4.x up to any version to come, without having to make a split between the worlds.</p>\n<p>This plugin therefore is compatible with ClassicPress, as well as with WordPress.</p>\n<p>Note: Only one Contact Form can be inserted each page or post.</p>\n<h3>ShortCode Attributes</h3>\n<ul>\n<li><code>id</code>. ID of the Form. Defaults to 1 if not passed. Must be set when using Filters or actions referring to this ID, Accepts only text or numeric value. Can be string or numeric (although we recommend string, since it is used as the Form HTML ID as well).</li>\n<li><code>label_name</code>. Label of Name Input. Defaults to &#8220;Your Name&#8221;. Accepts only text.</li>\n<li><code>label_email</code>. Label of the Email Input. Defaults to &#8220;Your E-mail Address&#8221;. Accepts only text.</li>\n<li><code>label_subject</code>. Label of the Subject Input. Defaults to &#8220;Subject&#8221;. Accepts only text.</li>\n<li><code>label_message</code>. Label of the Message Input. Defaults to &#8220;Your Message&#8221;. Accepts only text.</li>\n<li><code>label_submit</code>. Label for the Submit Button. Defaults to &#8220;Submit&#8221;. Accepts only text.</li>\n<li><code>error_empty</code>. Error message for empty field(s). Defaults to &#8220;Please fill in all the required fields.&#8221;. Accepts only text.</li>\n<li><code>error_noemail</code>. Error message for empty or invalid Email Input. Defaults to &#8220;Please enter a valid e-mail address.&#8221;. Accepts only text.</li>\n<li><code>success</code>. Success message shown instead of the Form when the email was sent successfully. Defaults to &#8220;Thanks for your e-mail! We&#8217;ll get back to you as soon as we can.&#8221;. Accepts only text.</li>\n</ul>\n",
        "installation": "<ol>\n<li>Install and Activate like any other WordPress Plugin</li>\n<li>Insert and configure the ShortCode <code>[tkt_cntct_frm_contact_form]</code> anywhere you want to see the form</li>\n</ol>\n",
        "faq": "\n<dt id='how%20can%20i%20modify%20the%20receiver%20email%20to%20which%20the%20email%20is%20sent%3F'>\nHow can I modify the Receiver Email to which the Email is sent?\n</h4>\n<p>\n<p>tkt_cntct_frm_email. Allows to modify the receveir email of a Contact form. Defaults to <code>get_bloginfo( 'admin_email' )</code>. Second argument passed is the Form ID.</p>\n<pre><code>add_filter( 'tkt_cntct_frm_email', 'special_receiver', 10, 2 );\nfunction special_receiver( $email, $id ){\n    if( (int)$id === 1 ){// If your Form ID is 1\n        return 'an@email.com';\n    } else {\n        return 'another@email.com';\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20modify%20the%20from%20email%20header%3F'>\nHow can I modify the From Email Header?\n</h4>\n<p>\n<p>tkt_cntct_frm_from. Allows to modify the &#8220;from&#8221; email header of a the email sent. Defaults to <code>get_bloginfo( 'name' )</code>. Second argument passed is the Form ID.</p>\n<pre><code>add_filter( 'tkt_cntct_frm_from', 'special_header_from', 10, 2 );\nfunction special_header_from( $from, $id ){\n    if( (int)$id === 1 ){// If your Form ID is 1\n        return 'A prospect';\n    } else {\n        return $from;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20modify%20the%20subject%20added%20in%20the%20form%3F'>\nHow can I modify the Subject added in the Form?\n</h4>\n<p>\n<p>tkt_cntct_frm_subject. Allows to modify the Subject <strong>passed in the Form</strong>. This subject is appended to the Footer of the Email. Second argument are ALL the form fields (array). Form ID is part of the form fields. Third argument is the receiver Email.</p>\n<pre><code>add_filter( 'tkt_cntct_frm_subject', 'special_subject', 10, 3 );\nfunction special_subject( $subject, $form_fields, $receiver ){\n    if( $form_fields['id'] === 'my-contact-form' ){// If your Form ID is my-contact-form\n        return 'Custom Subject';\n    } else {\n        return $subject;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20modify%20the%20subject%20of%20the%20email%20sent%20by%20the%20form%3F'>\nHow can I modify the Subject of the Email sent by the form?\n</h4>\n<p>\n<p>tkt_cntct_frm_internal_subject. Allows to modify the Subject <strong>in the sent mail Header</strong>. This subject is the one you see in the &#8220;From&#8221; of the email you will receive when this Contact Form is submitted. Second argument are ALL the form fields (array). Form ID is part of the form fields. Third argument is the receiver Email.</p>\n<pre><code>add_filter( 'tkt_cntct_frm_internal_subject', 'special_internal_subject', 10, 3 );\nfunction special_internal_subject( $subject, $form_fields, $receiver ){\n    if( $form_fields['id'] === 'my-contact-form' ){// If your Form ID is my-contact-form\n        return 'You have new mail';\n    } else {\n        return $subject;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20modify%20the%20message%20sent%20by%20the%20contact%20form%3F'>\nHow can I modify the Message sent by the Contact Form?\n</h4>\n<p>\n<p>tkt_cntct_frm_message. Allows to modify (or append to) the Message of email sent. Second argument are ALL the form Fields (array). Form ID is part of the form fields. Third argument is the receiver Email.</p>\n<pre><code>add_filter('tkt_cntct_frm_message', 'append_to_message', 10, 3);\nfunction append_to_message( $message, $form_fields, $receiver ){\n    if( $form_fields['id'] === 'my-contact-form' ){// If your form is ID my-contact-form\n        return $message . '&lt;p&gt;appended string&lt;/p&gt;';\n    } elseif( $receiver === 'my@receiver.com' ){\n      return 'overwrite the entire message';\n    } else{\n        return $message;\n    }\n\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20modify%20the%20redirect%20url%20to%20which%20the%20form%20redirects%20after%20successfull%20submission%3F'>\nHow can I modify the Redirect URL to which the Form redirects after successfull submission?\n</h4>\n<p>\n<p>tkt_cntct_frm_redirect_uri. Allows to filter the Redirect URL. Defaults to current page with <code>?success=true</code> appended on success. Second argument passed is Form ID.</p>\n<pre><code>add_filter('tkt_cntct_frm_redirect_uri', 'redirect_url', 10, 2);\nfunction redirect_url( $redirect, $id ){\n    if( $id === 'my-contact-form' ){// If your form is ID my-contact-form\n        return 'https://custom.url/thing';\n    } else{\n        return $redirect;\n    }\n\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20modify%2Fremove%20the%20ip%20address%20appended%20in%20the%20email%20message%3F'>\nHow can I modify/remove the IP Address appended in the Email Message?\n</h4>\n<p>\n<p>tkt_cntct_frm_ip. Allows to filter the IP Address appended to the email body (useful to remove it, for example). Second argument passed is Form ID.</p>\n<pre><code>add_filter('tkt_cntct_frm_ip', 'filter_ip', 10, 2);\nfunction filter_ip( $ip, $id ){\n    if( $id === 'my-contact-form' ){// If your form is ID my-contact-form\n        return '';// remove IP alltogether.\n    } else {\n        return $ip;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20stop%20the%20confirmation%20email%20sent%20to%20the%20prospect%3F'>\nHow can I stop the confirmation Email sent to the prospect?\n</h4>\n<p>\n<p>tkt_cntct_frm_send_confirmation. Allows to stop the Confirmation Email from being sent. Second argument passed is Form ID.</p>\n<pre><code>add_filter('tkt_cntct_frm_send_confirmation', 'stop_confirmation', 10, 2);\nfunction filter_ip( $ip, $id ){\n    if( $id === 'my-contact-form' ){// If your form is ID my-contact-form\n        return false;// stop email.\n    } else {\n        return true;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20change%20the%20contents%20of%20the%20confirmation%20email%20sent%20to%20the%20prospect%3F'>\nHow can I change the contents of the confirmation Email sent to the prospect?\n</h4>\n<p>\n<p>tkt_cntct_frm_confirmation_message. Allows to change the Confirmation Email Text. Defaults to <code>We have received your message and will reply soon. For the records, this was your message:</code> Second argument passed is Form ID.<br />\nNOTE: The Message the prospect sent in the form is always appended in a separate paragraph.<br />\nNOTE: all filters applied to From/Receiver, Subjects, and form message are applied to this email as well.</p>\n<pre><code>add_filter('tkt_cntct_frm_confirmation_message', 'confirmation_message', 10, 2);\nfunction filter_ip( $message, $id ){\n    if( $id === 'my-contact-form' ){// If your form is ID my-contact-form\n        return 'We will reply to you. This is your message:';// stop email.\n    }\n    else {\n        return $message;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20%22do%20something%22%20right%20before%20the%20email%20is%20sent%20by%20the%20form%3F'>\nHow can I &#8220;do something&#8221; right before the email is sent by the Form?\n</h4>\n<p>\n<p>tkt_cntct_frm_pre_send_mail. Action fired right before the mail is sent. Second argument all form fields. Helpful to do things before the mail is sent&#8230;</p>\n<pre><code>add_action( 'tkt_cntct_frm_pre_send_mail', 'pre_send_mail', 10, 1 );\nfunction pre_send_mail($form_fields){\n    if($form_fields['id'] === 'my-contact-form'){\n        wp_mail( 'custom@email.com', 'new mail', 'someone is about to send an email with your contact form' );\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20%22do%20something%22%20right%20after%20the%20email%20is%20sent%20by%20the%20form%3F'>\nHow can I &#8220;do something&#8221; right after the email is sent by the Form?\n</h4>\n<p>\n<p>tkt_cntct_frm_post_send_mail. Action fired right after the email is sent. Arguments include $receiver, $email_subject, $email_message, $headers, $form_fields. Helpful to for example send another email to another place, after the mail was sent. Or whatever, abort the script, if you like.</p>\n<pre><code>add_action( 'tkt_cntct_frm_post_send_mail', 'post_send_mail', 10, 5 );\nfunction post_send_mail($receiver, $email_subject, $email_message, $headers, $form_fields){\n    if($form_fields['id'] === 'my-contact-form'){\n        wp_mail( 'custom@email.com', 'new mail', 'someone has sent an email with your contact form' );\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20%22do%20something%22%20right%20before%20the%20form%20redirects%20to%20the%20success%20message%3F'>\nHow can I &#8220;do something&#8221; right before the Form redirects to the success message?\n</h4>\n<p>\n<p>tkt_cntct_frm_pre_redirect. Action fired right before the wp_redirect is fired. Arguments are $redirect_url, $form_id</p>\n<pre><code>add_action( 'tkt_cntct_frm_pre_redirect', 'pre_redirect', 10, 2 );\nfunction pre_redirect($redirect_url, $form_id){\n    if($form_id === 'my-contact-form'){\n        wp_redirect( 'https://wherever.com' );\n        exit;\n    }\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20%22do%20something%22%20right%20after%20the%20form%20redirects%20to%20the%20success%20message%3F'>\nHow can I &#8220;do something&#8221; right after the Form redirects to the success message?\n</h4>\n<p>\n<p>tkt_cntct_frm_post_redirect. Action fired right after the wp_redirect is fired. No arguments.</p>\n<pre><code>add_action( 'tkt_cntct_frm_post_redirect', 'post_redirect', 10 );\nfunction post_redirect(){\n    wp_mail( 'custom@email.com', 'new mail', 'someone has sent an email with your contact form and everything went well, they where redirected to your target url' );\n}\n</code></pre>\n</p>\n<dt id='how%20can%20i%20style%20the%20form%3F'>\nHow can I Style the Form?\n</h4>\n<p>\n<p>The Form is built with native HTML and minimal markup, so you can apply whatever styles you want in general.<br />\nThe few classes and IDs passed have all a <code>tkt-</code> prefix.<br />\nAvailable classes and IDs:</p>\n<ul>\n<li><code>tkt-contact-form</code>. Class for the <code>form</code> HTML attribute.</li>\n<li>Form ID is the ID you pass to the ShortCode <code>id</code> attribute.</li>\n<li>Each input has an error class set when failing validaton: <code>tkt-missing-or-invalid</code></li>\n<li>Honeypot fields are usually not to be styled further, but who knows you might need to access them, they use class <code>tkt-ohnohoney</code></li>\n</ul>\n<p>Note that Plugin CSS (and JS) are enqueued only when the ShortCode is added to a page/post. For this reason scripts are added to the footer.</p>\n</p>\n\n"
    },
    "short_description": "Simple Contact Form for WordPress and ClassicPress Websites.",
    "description": "<p>TukuToi Contact Form Plugin lets you add a simple Contact Form to any Page, Post or Custom Post of your WordPress Website.<br />\nUsing the ShortCode <code>[tkt_cntct_frm_contact_form]</code> with attributes you can configure several aspects of the Contact Form, such as:<br />\n&#8211; Form ID<br />\n&#8211; Label for the Name Input<br />\n&#8211; Label for the Email Input<br />\n&#8211; Label for the Subject Input<br />\n&#8211; Label for the Message Input<br />\n&#8211; Label for the Send Button<br />\n&#8211; Error message for required Fields<br />\n&#8211; Error for invalid Emails<br />\n&#8211; Success message</p>\n<p>Why would we need one more Contact Form Plugin? There are too many Contact Form Plugins already!</p>\n<p>Because most Contact Form Plugins are/became actual Form Builders, that let you create any kind and sort of Form.</p>\n<p>Which is great, of course, but it also means the actual purpose of the &#8220;Contact Form&#8221;, being a wrapper for the &#8220;Email Me&#8221; link, got sort of defied in most &#8220;Contact Form&#8221; Plugins.</p>\n<p>TukuToi Contact Form does exactly what its name suggests.<br />\nIt lets you add simplest of Contact Forms to your Website thru a ShortCode.<br />\nThat&#8217;s it. There&#8217;s no Form Builder, complex validation or Captcha Settings (there&#8217;s a honeypot against robots, inbuilt in the plugin).</p>\n<p>With a minimal set of ShortCode attributes you can control the visual aspects of the Form (Labels and Success/Error messages).<br />\nThru a set of Filters and Actions you can further control the Form and its behaviour, down to almost every action and string it does or uses.</p>\n<p>These Filters and Actions usually get &#8220;wrapped&#8221; into a Graphical User Interface (GUI) for anyone to easily change those settings, however that also adds bloat, and encourages to ask for more tiny features, which one added to another, end up making the Contact Form Plugins be actual Form Builders.</p>\n<p>Thus a clear decision was made to not provide a GUI for this plugin.</p>\n<p>Furthermore, keeping the plugin minimal, targeted and not using any advanced features, we can keep it compatible with WordPress versions from 4.x up to any version to come, without having to make a split between the worlds.</p>\n<p>This plugin therefore is compatible with ClassicPress, as well as with WordPress.</p>\n<p>Note: Only one Contact Form can be inserted each page or post.</p>\n<h3>ShortCode Attributes</h3>\n<ul>\n<li><code>id</code>. ID of the Form. Defaults to 1 if not passed. Must be set when using Filters or actions referring to this ID, Accepts only text or numeric value. Can be string or numeric (although we recommend string, since it is used as the Form HTML ID as well).</li>\n<li><code>label_name</code>. Label of Name Input. Defaults to &#8220;Your Name&#8221;. Accepts only text.</li>\n<li><code>label_email</code>. Label of the Email Input. Defaults to &#8220;Your E-mail Address&#8221;. Accepts only text.</li>\n<li><code>label_subject</code>. Label of the Subject Input. Defaults to &#8220;Subject&#8221;. Accepts only text.</li>\n<li><code>label_message</code>. Label of the Message Input. Defaults to &#8220;Your Message&#8221;. Accepts only text.</li>\n<li><code>label_submit</code>. Label for the Submit Button. Defaults to &#8220;Submit&#8221;. Accepts only text.</li>\n<li><code>error_empty</code>. Error message for empty field(s). Defaults to &#8220;Please fill in all the required fields.&#8221;. Accepts only text.</li>\n<li><code>error_noemail</code>. Error message for empty or invalid Email Input. Defaults to &#8220;Please enter a valid e-mail address.&#8221;. Accepts only text.</li>\n<li><code>success</code>. Success message shown instead of the Form when the email was sent successfully. Defaults to &#8220;Thanks for your e-mail! We&#8217;ll get back to you as soon as we can.&#8221;. Accepts only text.</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/tkt-contact-form.2.2.0.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/tkt-contact-form/assets/screenshot-1.png?rev=2591794",
            "caption": "Default Contact Form"
        },
        {
            "src": "https://ps.w.org/tkt-contact-form/assets/screenshot-2.png?rev=2591794",
            "caption": "No Email Provided validation"
        },
        {
            "src": "https://ps.w.org/tkt-contact-form/assets/screenshot-3.png?rev=2591794",
            "caption": "Success Message"
        }
    ],
    "tags": {
        "classicpress": "ClassicPress",
        "contact-form": "contact form",
        "form": "form"
    },
    "stable_tag": "2.2.0",
    "versions": {
        "2.1.2": "https://downloads.wordpress.org/plugin/tkt-contact-form.2.1.2.zip",
        "2.1.3": "https://downloads.wordpress.org/plugin/tkt-contact-form.2.1.3.zip",
        "2.2.0": "https://downloads.wordpress.org/plugin/tkt-contact-form.2.2.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/tkt-contact-form.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.tukutoi.com/",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/tkt-contact-form/assets/icon.svg?rev=2591794",
        "svg": "https://ps.w.org/tkt-contact-form/assets/icon.svg?rev=2591794"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}