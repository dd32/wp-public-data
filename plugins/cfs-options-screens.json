{
    "name": "CFS Options Screens",
    "slug": "cfs-options-screens",
    "version": "1.2.7",
    "author": "<a href=\"http://mondaybynoon.com/\">Jonathan Christopher</a>",
    "author_profile": "https://profiles.wordpress.org/jchristopher/",
    "contributors": {
        "jchristopher": {
            "profile": "https://profiles.wordpress.org/jchristopher/",
            "avatar": "https://secure.gravatar.com/avatar/f4f9565e5694d3541298f5123e89267c?s=96&d=monsterid&r=g",
            "display_name": "Jon Christopher"
        }
    },
    "requires": "3.9",
    "tested": "5.9.0",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 2,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/cfs-options-screens/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 600,
    "downloaded": 5759,
    "last_updated": "2022-02-10 5:11pm GMT",
    "added": "2014-07-24",
    "homepage": "http://wordpress.org/plugins/cfs-options-screens/",
    "sections": {
        "description": "<p>Build any number of options screens based on <a href=\"https://wordpress.org/plugins/custom-field-suite/\" rel=\"ugc\">Custom Field Suite</a>.</p>\n<h4>For Example</h4>\n<p>Begin by creating Field Group(s) you want to include on your options screen. <strong>Be sure to set NO Placement Rules.</strong> Once it&#8217;s created, note the post ID it uses. You can then register any number of options screens like so:</p>\n<pre><code>function my_cfs_options_screens( $screens ) {\n    $screens[] = array(\n        'name'            =&gt; 'options',\n        'menu_title'      =&gt; __( 'Site Options' ),\n        'page_title'      =&gt; __( 'Customize Site Options' ),\n        'menu_position'   =&gt; 100,\n        'icon'            =&gt; 'dashicons-admin-generic', // optional, dashicons-admin-generic is the default\n        'field_groups'    =&gt; array( 'My Field Group' ), // Field Group name(s) of CFS Field Group to use on this page (can also be post IDs)\n    );\n\n    return $screens;\n}\n\nadd_filter( 'cfs_options_screens', 'my_cfs_options_screens' );\n</code></pre>\n<h4>Retrieve your options like so:</h4>\n<pre><code>$value = cfs_get_option( 'options_screen_name', 'cfs_field_name_from_field_group' );\n</code></pre>\n<p>You can set up multiple top level and/or children options pages by adding a <code>parent</code> argument when registering your screen:</p>\n<pre><code>function my_cfs_options_screens( $screens ) {\n\n    // Parent\n    $screens[] = array(\n        'name'         =&gt; 'options',\n        'field_groups' =&gt; array( 'My Parent Field Group Name' ),\n    );\n\n    // Child\n    $screens[] = array(\n        'name'         =&gt; 'options-nav',\n        'parent'       =&gt; 'options', // name of the parent\n        'field_groups' =&gt; array( 'My Child Field Group Name' ),\n    );\n\n    return $screens;\n }\n\n add_filter( 'cfs_options_screens', 'my_cfs_options_screens' );\n</code></pre>\n<p>You can also use CFS Options Screens to set up Field Group &#8216;defaults&#8217;, allowing a Field Group to appear both on a CFS Options Screen and a post edit screen. The CFS Options Screen will act as the default/fallback and the post edit screen will override those defaults.</p>\n<pre><code>function my_cfs_options_screens( $screens ) {\n    $screens[] = array(\n        'name'            =&gt; 'options',\n        'menu_title'      =&gt; __( 'Site Options' ),\n        'page_title'      =&gt; __( 'Customize Site Options' ),\n        'menu_position'   =&gt; 100,\n        'icon'            =&gt; 'dashicons-admin-generic', // optional, dashicons-admin-generic is the default\n        'field_groups'    =&gt; array(\n            array(\n                'title'         =&gt; 'My CFS Field Group Name',\n                'has_overrides' =&gt; true,\n            ),\n        ),\n    );\n\n    return $screens;\n}\n\nadd_filter( 'cfs_options_screens', 'my_cfs_options_screens' );\n</code></pre>\n<p>Check out the <code>cfs_options_screens_override_note_default</code> and <code>cfs_options_screens_override_note_override</code> filters to customize the messaging for CFS Options Screens overrides.</p>\n",
        "installation": "<ol>\n<li>Upload <code>cfs-options-screens</code> to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Register your options screen(s) using the code snippets from this readme</li>\n</ol>\n",
        "faq": "\n<dt id='how%20do%20i%20add%20a%20field%20group%20to%20my%20options%20screen%3F'>\nHow do I add a Field Group to my options screen?\n</h4>\n<p>\n<p>You must specify the Field Group Title(s) in the <code>field_groups</code> parameter when using the <code>cfs_options_screens</code> hook</p>\n</p>\n<dt id='how%20do%20i%20retrieve%20saved%20options%3F'>\nHow do I retrieve saved options?\n</h4>\n<p>\n<p>$value = cfs_get_option( &#8216;options_screen_name&#8217;, &#8216;field_name_from_field_group&#8217; );</p>\n</p>\n\n",
        "changelog": "<h4>1.2.7</h4>\n<ul>\n<li>Add support for using CFS Field Group title instead of ID</li>\n</ul>\n<h4>1.2.5</h4>\n<ul>\n<li>Better handling of overrides when not viewing a single post</li>\n</ul>\n<h4>1.2.4</h4>\n<ul>\n<li>PHP Warning cleanup</li>\n</ul>\n<h4>1.2.3</h4>\n<ul>\n<li>Fixed an issue that would output override note if any Field Group on an Options Screen had one</li>\n<li>Fixed an issue where multiple override notes would be output when there were multiple override Field Groups</li>\n</ul>\n<h4>1.2.1</h4>\n<ul>\n<li>PHP Warning cleanup for <code>cfs_get_option</code></li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>Added support for Field Group defaults/overrides where a Field Group can appear both on a CFS Options Screen and a post edit screen, and &#8216;fall back&#8217; to the CFS Options Screen where applicable</li>\n</ul>\n<h4>1.1.2</h4>\n<ul>\n<li>Refined the arguments for the underlying CPT to hide it from the Admin menu, filterable with <code>cfs_options_screens_post_type_args</code></li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>Fixed an issue resulting in a change in WordPress 4.4 that prevented editing options screens</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Added new <code>cfs_get_options()</code> function to retrieve all CFS data for an options screen</li>\n</ul>\n<h4>1.0.3</h4>\n<ul>\n<li>Fixed an issue in WordPress 4.3 where customized edit screen titles were not shown</li>\n</ul>\n<h4>1.0.2</h4>\n<ul>\n<li>Only show &#8216;Saved&#8217; update notice when editing an options screen</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>Proper page title is now output when editing a screen</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n"
    },
    "short_description": "Create options screens that utilize Custom Field Suite",
    "description": "<p>Build any number of options screens based on <a href=\"https://wordpress.org/plugins/custom-field-suite/\" rel=\"ugc\">Custom Field Suite</a>.</p>\n<h4>For Example</h4>\n<p>Begin by creating Field Group(s) you want to include on your options screen. <strong>Be sure to set NO Placement Rules.</strong> Once it&#8217;s created, note the post ID it uses. You can then register any number of options screens like so:</p>\n<pre><code>function my_cfs_options_screens( $screens ) {\n    $screens[] = array(\n        'name'            =&gt; 'options',\n        'menu_title'      =&gt; __( 'Site Options' ),\n        'page_title'      =&gt; __( 'Customize Site Options' ),\n        'menu_position'   =&gt; 100,\n        'icon'            =&gt; 'dashicons-admin-generic', // optional, dashicons-admin-generic is the default\n        'field_groups'    =&gt; array( 'My Field Group' ), // Field Group name(s) of CFS Field Group to use on this page (can also be post IDs)\n    );\n\n    return $screens;\n}\n\nadd_filter( 'cfs_options_screens', 'my_cfs_options_screens' );\n</code></pre>\n<h4>Retrieve your options like so:</h4>\n<pre><code>$value = cfs_get_option( 'options_screen_name', 'cfs_field_name_from_field_group' );\n</code></pre>\n<p>You can set up multiple top level and/or children options pages by adding a <code>parent</code> argument when registering your screen:</p>\n<pre><code>function my_cfs_options_screens( $screens ) {\n\n    // Parent\n    $screens[] = array(\n        'name'         =&gt; 'options',\n        'field_groups' =&gt; array( 'My Parent Field Group Name' ),\n    );\n\n    // Child\n    $screens[] = array(\n        'name'         =&gt; 'options-nav',\n        'parent'       =&gt; 'options', // name of the parent\n        'field_groups' =&gt; array( 'My Child Field Group Name' ),\n    );\n\n    return $screens;\n }\n\n add_filter( 'cfs_options_screens', 'my_cfs_options_screens' );\n</code></pre>\n<p>You can also use CFS Options Screens to set up Field Group &#8216;defaults&#8217;, allowing a Field Group to appear both on a CFS Options Screen and a post edit screen. The CFS Options Screen will act as the default/fallback and the post edit screen will override those defaults.</p>\n<pre><code>function my_cfs_options_screens( $screens ) {\n    $screens[] = array(\n        'name'            =&gt; 'options',\n        'menu_title'      =&gt; __( 'Site Options' ),\n        'page_title'      =&gt; __( 'Customize Site Options' ),\n        'menu_position'   =&gt; 100,\n        'icon'            =&gt; 'dashicons-admin-generic', // optional, dashicons-admin-generic is the default\n        'field_groups'    =&gt; array(\n            array(\n                'title'         =&gt; 'My CFS Field Group Name',\n                'has_overrides' =&gt; true,\n            ),\n        ),\n    );\n\n    return $screens;\n}\n\nadd_filter( 'cfs_options_screens', 'my_cfs_options_screens' );\n</code></pre>\n<p>Check out the <code>cfs_options_screens_override_note_default</code> and <code>cfs_options_screens_override_note_override</code> filters to customize the messaging for CFS Options Screens overrides.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.7.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "cfs": "cfs",
        "custom-field-suite": "custom field suite",
        "options": "options",
        "screen": "screen",
        "settings": "settings"
    },
    "stable_tag": "1.2.7",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.0.1.zip",
        "1.0.2": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.0.2.zip",
        "1.0.3": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.0.3.zip",
        "1.1": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.1.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.1.2.zip",
        "1.2": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.zip",
        "1.2.1": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.1.zip",
        "1.2.2": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.2.zip",
        "1.2.3": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.3.zip",
        "1.2.4": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.4.zip",
        "1.2.5": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.5.zip",
        "1.2.6": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.6.zip",
        "1.2.7": "https://downloads.wordpress.org/plugin/cfs-options-screens.1.2.7.zip",
        "trunk": "https://downloads.wordpress.org/plugin/cfs-options-screens.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://mondaybynoon.com/donate/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/cfs-options-screens.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}