{
    "name": "NP Twig: Front End for Custom Field &amp; ACF",
    "slug": "np-tiwg",
    "version": "1.0.5",
    "author": "<a href=\"https://www.miniindustry.com/d/\">NewPast</a>",
    "author_profile": "https://profiles.wordpress.org/miniindustry/",
    "contributors": {
        "miniindustry": {
            "profile": "https://profiles.wordpress.org/miniindustry/",
            "avatar": "https://secure.gravatar.com/avatar/d5914c62657cc59906736408bd646431?s=96&d=monsterid&r=g",
            "display_name": "NewPast"
        }
    },
    "requires": "5.0",
    "tested": "5.7.12",
    "requires_php": "7.0",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/np-tiwg/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 5606,
    "last_updated": "2021-06-04 3:31pm GMT",
    "added": "2021-04-08",
    "homepage": "https://www.miniindustry.com/d/np-twig",
    "sections": {
        "description": "<ul>\n<li>I use <a href=\"https://twig.symfony.com/\" rel=\"nofollow ugc\">Twig</a> template to display your post or custom post or <a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">Advanced Custom Fields</a></li>\n<li><a href=\"https://twig.symfony.com/\" rel=\"nofollow ugc\">Twig</a> and <a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">ACF</a> are a third-party plugin, we used them to render templates</li>\n</ul>\n<h4>Arabic Version of this Article</h4>\n<ul>\n<li><a href=\"https://www.miniindustry.com/d/ar-np-twig\" rel=\"nofollow ugc\">https://www.miniindustry.com/d/ar-np-twig</a></li>\n</ul>\n<h4>Template requirements</h4>\n<ul>\n<li>Ensure installs of Timber plugin: <a href=\"https://wordpress.org/plugins/timber-library/\" rel=\"ugc\">https://wordpress.org/plugins/timber-library/</a></li>\n<li>Then create a private post or page or of any post type</li>\n<li>For custom post type template ensures that your template name looks like: <code>tpl-{{post_type}}</code></li>\n<li>or add a custom field to your post name it <strong>twig</strong> and store the template name inside it</li>\n</ul>\n<h4>Custom Fields and ACF</h4>\n<ul>\n<li>WordPress supports custom fields, and you could add them directly to your post,</li>\n<li>and ACF plugin gives more power to the custom fields</li>\n<li>Use the Advanced Custom Fields plugin to take full control of your WordPress edit screens &amp; custom field data.</li>\n<li>Read more about ACF on <a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">https://wordpress.org/plugins/advanced-custom-fields/</a></li>\n</ul>\n<h4>Template Syntax: a quick guide for WordPress Front End for Custom Field</h4>\n<p>Note: <a href=\"https://wordpress.org/plugins/classic-editor/\" rel=\"ugc\">WordPress Classic Editor</a> is preferred to edit templates</p>\n<h4>Comments</h4>\n<ul>\n<li>Use <code>{# comments #}</code> for comments, and comments will not render to the user,</li>\n</ul>\n<h4>Variables output</h4>\n<p>Variables in templets are post title, post object, and custom fields. To output post title you can use <code>{{ title }}</code>. If your post has a custom field called price. We use <code>{{ price }}</code> to output the price. Use a dot (.) to access attributes of a variable (methods or properties of an object, or items of an array: <code>{{ foo.bar }}</code></p>\n<h4>Conditional output</h4>\n<p>The <code>if</code> statement in Twig check if a variable has a value or an expression evaluates to <code>true</code> We can add conditions to display any text. Let&#8217;s say that we have a custom field named &#8220;agent&#8221; and want to display a text when the field agent contains a text. We can write</p>\n<pre>{% if agent %}\n    We have an agent in your area\n    Our agent: {{ agent }}\n{% endif %}</pre>\n<p>another example; let&#8217;s say that we have a field named price. We want to display a text if the price is zero</p>\n<pre>{% if price == 0 %}\n   &lt;p&gt;This product is free&lt;/p&gt;\n{% endif %}\n</pre>\n<p>Please note that we use the operator <code>==</code> to check the equality You can also test if an array is not empty:</p>\n<pre>{% if meanings %}\n   &lt;p&gt;The array or repeater field **meaning** contains some values&lt;/p&gt;\n{% endif %}</pre>\n<h4>Closing condition block</h4>\n<p>Always use <code>{% endif %}</code> to close the previous if condition, Read more about <a href=\"https://twig.symfony.com/doc/3.x/tags/if.html\" rel=\"nofollow ugc\">if keyword in twig</a></p>\n<h4>Repeater field and arrays</h4>\n<p>If our field or variable is an array or a repeater field we can loop over each item in a sequence using for keyword</p>\n<p>The for statement code example</p>\n<pre>{% for m in meanings %}\n   Meaning: {{ m.meaning }}\n{% endfor %}</pre>\n<p>The for statement format</p>\n<ul>\n<li>We use  <code>{% for m in meanings %}</code> to loop over an array or repeater field called <code>meanings</code> using <strong><code>m</code></strong> to mention for each row</li>\n<li>Inside the loop starts the subfields or array items with the variable name <code>**m.**</code></li>\n<li>Always close the loop use <code>{% endfor %}</code></li>\n<li>Read more about <a href=\"https://twig.symfony.com/doc/3.x/tags/for.html\" rel=\"nofollow ugc\">the <code>for</code> keyword in twig</a></li>\n</ul>\n<h4>Important notes for templates code</h4>\n<ul>\n<li>In WordPress classic editor show source and ensure there are no tags inside the template code; ex <code>{% &lt;del&gt;&lt;span&gt;&lt;/del&gt; endfor &lt;del&gt;&lt;/span&gt;&lt;/del&gt; %}</code></li>\n<li>For more details, see: <a href=\"https://twig.symfony.com/doc/2.x/\" rel=\"nofollow ugc\">https://twig.symfony.com/doc/2.x/</a></li>\n</ul>\n<h4>Power templating with only 4 keyword</h4>\n<p>Using <code>if, endif, for and endfor</code> allows to generate a powerful template; however, twig contains many other useful keywords to see other keyword and how to use them visit <a href=\"https://twig.symfony.com/doc/2.x/\" rel=\"nofollow ugc\">twig documentation</a></p>\n<h4>Short template example</h4>\n<pre>&lt;h2&gt;Meaning of {{ title }}&lt;/h2&gt;\n{# This is a comment and will not render #}\n{% for m in meanings %}\n    {% if m.meaning %}\n        Meaning: {{ row.meaning }}\n    {% endif %}\n    {% if m.example %}\n        Example: {{ m.example }}\n    {% endif %}\n{% endfor %}\n</pre>\n<h4>Output post data</h4>\n<p>We can access the post using the post keyword. to access any property of the post we put a dot (.)  and then we put the property name for example use <code>post.content</code> to access post content</p>\n<pre>{{ post.title }}\n   \n{{ post.content }}\n</pre>\n<p>read more about accessing post content on <a href=\"https://timber.github.io/docs/v2\" rel=\"nofollow ugc\">timber documents</a></p>\n<h4>Why templating engine and not a raw PHP programming language</h4>\n<ul>\n<li>More Simple; so templating is more readable, and very easy that allows users to learn quickly,</li>\n<li>and Limit the allowed function to prevent bad mistakes,</li>\n<li>and easy to edit using WordPress classic editor</li>\n</ul>\n<h4>About Twig templating engine</h4>\n<ul>\n<li>The twig template engine process templates data, and output a webpage.</li>\n<li>and it is a flexible, fast, and secure template engine for PHP.</li>\n<li>We use Twig a template language, and we allow users to modify the template design.</li>\n<li>It is fast because Twig compiles templates into optimized PHP code.</li>\n<li>Get flexible, so it allows the developer to define its own custom tags and filters.</li>\n<li>Read more about <a href=\"https://twig.symfony.com\" rel=\"nofollow ugc\">Twig</a></li>\n</ul>\n<h4>Timber and Twig</h4>\n<ul>\n<li>Timber helps to include Twig in WordPress,</li>\n<li>with Timber, you write your HTML using the Twig Template Engine separate from your PHP files,</li>\n<li>and this cleans up your template code so, for example, and your Twig template can focus on the HTML and display.</li>\n</ul>\n<h4>License and use</h4>\n<p>This plugin is distributed in the hope that it will be useful, but without any warranty. See the GNU General Public License for more details. http://www.gnu.org/licenses/.</p>\n<h3>For Developers</h3>\n<h4>Add custom data to fields</h4>\n<ul>\n<li>Edit the file user-functions.php</li>\n<li>Create a function and name it <code>get_fields_{{post_type}}</code></li>\n<li>If your custom post type contains ‘-‘ replace it with ‘_’</li>\n<li>I include a sample function in user-functions.php</li>\n<li>Backup your functions, and keep in mind that the file user-function may be replaced on upgrade</li>\n</ul>\n<h4>Add custom data for each singular page</h4>\n<ul>\n<li>Edit the file user-functions.php</li>\n<li>then create a function and name it np_content_singular</li>\n<li>I include a sample function in user-functions.php</li>\n<li>Backup your functions, and keep in mind that the file user-function may be replaced on upgrade</li>\n</ul>\n",
        "installation": "<ol>\n<li>Install <a href=\"https://wordpress.org/plugins/timber-library/\" rel=\"ugc\">Timber plugin</a></li>\n<li>Upload this plugin folder to the <code>/wp-content/plugins/</code> directory, or install it through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the ‘Plugins’ screen in WordPress</li>\n<li>and you will more benefit from our plugin if you could install<br />\n<a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">Advanced Custom Fields</a></li>\n</ol>\n",
        "faq": "<p>This section may be added in the next version</p>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Plugin initial release</li>\n</ul>\n"
    },
    "short_description": "NP Twig Front End for WordPress Custom Field and Advance Custom Fields. Renders data using a twig template. It supports both free ACF and ACF pro.",
    "description": "<ul>\n<li>I use <a href=\"https://twig.symfony.com/\" rel=\"nofollow ugc\">Twig</a> template to display your post or custom post or <a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">Advanced Custom Fields</a></li>\n<li><a href=\"https://twig.symfony.com/\" rel=\"nofollow ugc\">Twig</a> and <a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">ACF</a> are a third-party plugin, we used them to render templates</li>\n</ul>\n<h4>Arabic Version of this Article</h4>\n<ul>\n<li><a href=\"https://www.miniindustry.com/d/ar-np-twig\" rel=\"nofollow ugc\">https://www.miniindustry.com/d/ar-np-twig</a></li>\n</ul>\n<h4>Template requirements</h4>\n<ul>\n<li>Ensure installs of Timber plugin: <a href=\"https://wordpress.org/plugins/timber-library/\" rel=\"ugc\">https://wordpress.org/plugins/timber-library/</a></li>\n<li>Then create a private post or page or of any post type</li>\n<li>For custom post type template ensures that your template name looks like: <code>tpl-{{post_type}}</code></li>\n<li>or add a custom field to your post name it <strong>twig</strong> and store the template name inside it</li>\n</ul>\n<h4>Custom Fields and ACF</h4>\n<ul>\n<li>WordPress supports custom fields, and you could add them directly to your post,</li>\n<li>and ACF plugin gives more power to the custom fields</li>\n<li>Use the Advanced Custom Fields plugin to take full control of your WordPress edit screens &amp; custom field data.</li>\n<li>Read more about ACF on <a href=\"https://wordpress.org/plugins/advanced-custom-fields/\" rel=\"ugc\">https://wordpress.org/plugins/advanced-custom-fields/</a></li>\n</ul>\n<h4>Template Syntax: a quick guide for WordPress Front End for Custom Field</h4>\n<p>Note: <a href=\"https://wordpress.org/plugins/classic-editor/\" rel=\"ugc\">WordPress Classic Editor</a> is preferred to edit templates</p>\n<h4>Comments</h4>\n<ul>\n<li>Use <code>{# comments #}</code> for comments, and comments will not render to the user,</li>\n</ul>\n<h4>Variables output</h4>\n<p>Variables in templets are post title, post object, and custom fields. To output post title you can use <code>{{ title }}</code>. If your post has a custom field called price. We use <code>{{ price }}</code> to output the price. Use a dot (.) to access attributes of a variable (methods or properties of an object, or items of an array: <code>{{ foo.bar }}</code></p>\n<h4>Conditional output</h4>\n<p>The <code>if</code> statement in Twig check if a variable has a value or an expression evaluates to <code>true</code> We can add conditions to display any text. Let&#8217;s say that we have a custom field named &#8220;agent&#8221; and want to display a text when the field agent contains a text. We can write</p>\n<pre>{% if agent %}\n    We have an agent in your area\n    Our agent: {{ agent }}\n{% endif %}</pre>\n<p>another example; let&#8217;s say that we have a field named price. We want to display a text if the price is zero</p>\n<pre>{% if price == 0 %}\n   &lt;p&gt;This product is free&lt;/p&gt;\n{% endif %}\n</pre>\n<p>Please note that we use the operator <code>==</code> to check the equality You can also test if an array is not empty:</p>\n<pre>{% if meanings %}\n   &lt;p&gt;The array or repeater field **meaning** contains some values&lt;/p&gt;\n{% endif %}</pre>\n<h4>Closing condition block</h4>\n<p>Always use <code>{% endif %}</code> to close the previous if condition, Read more about <a href=\"https://twig.symfony.com/doc/3.x/tags/if.html\" rel=\"nofollow ugc\">if keyword in twig</a></p>\n<h4>Repeater field and arrays</h4>\n<p>If our field or variable is an array or a repeater field we can loop over each item in a sequence using for keyword</p>\n<p>The for statement code example</p>\n<pre>{% for m in meanings %}\n   Meaning: {{ m.meaning }}\n{% endfor %}</pre>\n<p>The for statement format</p>\n<ul>\n<li>We use  <code>{% for m in meanings %}</code> to loop over an array or repeater field called <code>meanings</code> using <strong><code>m</code></strong> to mention for each row</li>\n<li>Inside the loop starts the subfields or array items with the variable name <code>**m.**</code></li>\n<li>Always close the loop use <code>{% endfor %}</code></li>\n<li>Read more about <a href=\"https://twig.symfony.com/doc/3.x/tags/for.html\" rel=\"nofollow ugc\">the <code>for</code> keyword in twig</a></li>\n</ul>\n<h4>Important notes for templates code</h4>\n<ul>\n<li>In WordPress classic editor show source and ensure there are no tags inside the template code; ex <code>{% &lt;del&gt;&lt;span&gt;&lt;/del&gt; endfor &lt;del&gt;&lt;/span&gt;&lt;/del&gt; %}</code></li>\n<li>For more details, see: <a href=\"https://twig.symfony.com/doc/2.x/\" rel=\"nofollow ugc\">https://twig.symfony.com/doc/2.x/</a></li>\n</ul>\n<h4>Power templating with only 4 keyword</h4>\n<p>Using <code>if, endif, for and endfor</code> allows to generate a powerful template; however, twig contains many other useful keywords to see other keyword and how to use them visit <a href=\"https://twig.symfony.com/doc/2.x/\" rel=\"nofollow ugc\">twig documentation</a></p>\n<h4>Short template example</h4>\n<pre>&lt;h2&gt;Meaning of {{ title }}&lt;/h2&gt;\n{# This is a comment and will not render #}\n{% for m in meanings %}\n    {% if m.meaning %}\n        Meaning: {{ row.meaning }}\n    {% endif %}\n    {% if m.example %}\n        Example: {{ m.example }}\n    {% endif %}\n{% endfor %}\n</pre>\n<h4>Output post data</h4>\n<p>We can access the post using the post keyword. to access any property of the post we put a dot (.)  and then we put the property name for example use <code>post.content</code> to access post content</p>\n<pre>{{ post.title }}\n   \n{{ post.content }}\n</pre>\n<p>read more about accessing post content on <a href=\"https://timber.github.io/docs/v2\" rel=\"nofollow ugc\">timber documents</a></p>\n<h4>Why templating engine and not a raw PHP programming language</h4>\n<ul>\n<li>More Simple; so templating is more readable, and very easy that allows users to learn quickly,</li>\n<li>and Limit the allowed function to prevent bad mistakes,</li>\n<li>and easy to edit using WordPress classic editor</li>\n</ul>\n<h4>About Twig templating engine</h4>\n<ul>\n<li>The twig template engine process templates data, and output a webpage.</li>\n<li>and it is a flexible, fast, and secure template engine for PHP.</li>\n<li>We use Twig a template language, and we allow users to modify the template design.</li>\n<li>It is fast because Twig compiles templates into optimized PHP code.</li>\n<li>Get flexible, so it allows the developer to define its own custom tags and filters.</li>\n<li>Read more about <a href=\"https://twig.symfony.com\" rel=\"nofollow ugc\">Twig</a></li>\n</ul>\n<h4>Timber and Twig</h4>\n<ul>\n<li>Timber helps to include Twig in WordPress,</li>\n<li>with Timber, you write your HTML using the Twig Template Engine separate from your PHP files,</li>\n<li>and this cleans up your template code so, for example, and your Twig template can focus on the HTML and display.</li>\n</ul>\n<h4>License and use</h4>\n<p>This plugin is distributed in the hope that it will be useful, but without any warranty. See the GNU General Public License for more details. http://www.gnu.org/licenses/.</p>\n<h3>For Developers</h3>\n<h4>Add custom data to fields</h4>\n<ul>\n<li>Edit the file user-functions.php</li>\n<li>Create a function and name it <code>get_fields_{{post_type}}</code></li>\n<li>If your custom post type contains ‘-‘ replace it with ‘_’</li>\n<li>I include a sample function in user-functions.php</li>\n<li>Backup your functions, and keep in mind that the file user-function may be replaced on upgrade</li>\n</ul>\n<h4>Add custom data for each singular page</h4>\n<ul>\n<li>Edit the file user-functions.php</li>\n<li>then create a function and name it np_content_singular</li>\n<li>I include a sample function in user-functions.php</li>\n<li>Backup your functions, and keep in mind that the file user-function may be replaced on upgrade</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.5.zip",
    "upgrade_notice": {
        "": "<p>No special requirements for the upgrade.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/np-tiwg/assets/screenshot-1.png?rev=2516414",
            "caption": "A screenshot of the template edit using WordPress classic editor."
        },
        {
            "src": "https://ps.w.org/np-tiwg/assets/screenshot-2.png?rev=2516414",
            "caption": "A screenshot of the post NP Twig setting"
        }
    ],
    "tags": {
        "acf": "acf",
        "custom-fields": "custom fields",
        "display": "display",
        "fron-end": "Fron End",
        "timber": "Timber"
    },
    "stable_tag": "1.0.5",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.1.zip",
        "1.0.2": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.2.zip",
        "1.0.3": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.3.zip",
        "1.0.4": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.4.zip",
        "1.0.5": "https://downloads.wordpress.org/plugin/np-tiwg.1.0.5.zip",
        "trunk": "https://downloads.wordpress.org/plugin/np-tiwg.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.buymeacoffee.com/NewPast",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/np-tiwg.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}