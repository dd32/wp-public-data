{
    "name": "Category Image(s)",
    "slug": "category-images",
    "version": "1.7.3",
    "author": "<a href=\"http://coffee2code.com/\">Scott Reilly</a>",
    "author_profile": "https://profiles.wordpress.org/coffee2code/",
    "contributors": {
        "coffee2code": {
            "profile": "https://profiles.wordpress.org/coffee2code/",
            "avatar": "https://secure.gravatar.com/avatar/5af525fba95b93c4e0c8a03b639c9486?s=96&d=monsterid&r=g",
            "display_name": "Scott Reilly"
        }
    },
    "requires": "2.2",
    "tested": "3.4.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 90,
    "ratings": {
        "5": 1,
        "4": 1,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/category-images/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 30041,
    "last_updated": "2012-06-11 6:28am GMT",
    "added": "2004-12-21",
    "homepage": "http://coffee2code.com/wp-plugins/category-images/",
    "sections": {
        "description": "<p>Display an image for each category associated with a post.</p>\n<p>Notes:</p>\n<p>This plugin provides the templates tag <code>c2c_the_category_image()</code> which basically reproduces and extends the functionality of WordPress&#8217;s core function <code>the_category()</code> to add the ability to display a category image instead of the category name in the link to the category archive.  With its $image_extensions argument defaulted to <code>\"\"</code>, the plugin could be a drop-in replacement for <code>the_category()</code>.  As is done in <code>the_category()</code>, the image or text for each category is also a link back to that category&#8217;s archive.</p>\n<p>Related info about the function:</p>\n<ul>\n<li>If $image_extensions is defined, but no image is found for the category, then nothing is displayed for that category.</li>\n<li>$image_extensions can be defined as a space separated list of image extensions.  Files will be checked with the image extensions in the order those extensions were provided; default is &#8216;png gif jpg&#8217;.</li>\n<li>The number of category links/images displayed can be limited via the $limit argument</li>\n<li>Category image  tags are defined with class=&#8221;catimage&#8221; for stylesheet manipulation.</li>\n<li>The result can be filtered via the filter named &#8220;c2c_the_category_image&#8221;.</li>\n<li>\n<p>Must be run inside &#8220;the loop&#8221;.</p>\n<p>c2c_get_category_image_list() is another provided function, which is identical to <code>c2c_the_category_image()</code> except that it doesn&#8217;t echo the result.</p>\n</li>\n</ul>\n<p>Links: <a href=\"http://coffee2code.com/wp-plugins/category-images/\" rel=\"nofollow ugc\">Plugin Homepage</a> | <a href=\"https://wordpress.org/extend/plugins/category-images/\" rel=\"ugc\">Plugin Directory Page</a> | <a href=\"http://coffee2code.com\" rel=\"nofollow ugc\">Author Homepage</a></p>\n<h3>Template Tags</h3>\n<p>The plugin provides one optional template tag for use in your theme templates.</p>\n<h4>Functions</h4>\n<ul>\n<li><code>&lt;?php function c2c_the_category_image( $seperator='', $parents='', $image_extensions='png gif jpg', $image_dir='/wp-content/images/', $use_name_if_no_image=false, $start_from='begin', $limit=999 ) ?&gt;</code></li>\n</ul>\n<p>This displays the image associated with a post&#8217;s categories.</p>\n<h4>Arguments</h4>\n<ul>\n<li>\n<p><code>$separator</code><br />\nOptional argument.  The text and/or HTML to appear between each of a post&#8217;s category images.</p>\n</li>\n<li>\n<p><code>$parents</code><br />\nOptional argument.  Allows you to specify if you want ancestor categories of a post&#8217;s category to be imaged and linked as well.  Valid options are &#8216;multiple&#8217;, &#8216;single&#8217;, and &#8221;. Default is &#8221;.</p>\n</li>\n<li>\n<p><code>$image_extensions</code><br />\nOptional argument.  A space-separated list of image extensions (case insensitive).  If defined as &#8221; then no image is retrieved and the category name is displayed instead (a la <code>the_category()</code>).  Default is &#8216;png gif jpg&#8217;.</p>\n</li>\n<li>\n<p><code>$image_dir</code><br />\nOptional argument.  The directory in which the category image(s) reside.  The value should be a location relative to the main URL of your blog.  Default is &#8216;/wp-content/images/&#8217;</p>\n</li>\n<li>\n<p><code>$use_name_if_no_image</code><br />\nOptional argument.  Boolean value (true or false) indicating if the name of the category should be displayed for each category that does not have an associated image.  Default is false.</p>\n</li>\n<li>\n<p><code>$start_from</code><br />\nOptional argument.  How to traverse the list of post&#8217;s categories; either &#8216;begin&#8217; or &#8216;end&#8217;.  Default is &#8216;begin&#8217;</p>\n</li>\n<li>\n<p><code>$limit</code><br />\nOptional argument.  The maximum number of category images to be displayed.  Default is 999 (basically, no limit)</p>\n</li>\n<li>\n<p><code>$post_id</code><br />\nOptional argument.  The Post ID.  If false, then use the current post (i.e. while in the loop).  Default is false.</p>\n</li>\n</ul>\n<h3>Examples</h3>\n<ul>\n<li>\n<p>You can opt to treat only certain categories as having a graphical representation by defining an image for them but not creating images for the non-graphically represented categories (as in you can have a subset of categories that dictate what image to be displayed for the post).</p>\n</li>\n<li>\n<p>You can take advantage of the $image_extension and/or $image_dir arguments to display different category icons under different contexts, i.e. if showing a $single post, choose to use a &#8216;png&#8217; image, otherwise use &#8216;gif&#8217;; or locate your images in different directories &#8216;/wp-content/images/cat-images/small/&#8217; and &#8216;/wp-content/images/cat-images/large/&#8217; and decide based on context where to get the image(s) from:</p>\n<p>// In showing the post singularly, then use a larger image, else use a small image<br />\n  if ( is_single() ) {<br />\n    c2c_the_category_image(&#8221;, &#8221;, &#8216;gif&#8217;, &#8216;/wp-content/images/cat-images/large/&#8217;);<br />\n  } else {<br />\n    c2c_the_category_image(&#8221;, &#8221;, &#8216;gif&#8217;, &#8216;/wp-content/images/cat-images/small/&#8217;);<br />\n  }</p>\n</li>\n<li>\n<p>Show all images in a comma-separated line:</p>\n</li>\n<li>\n<p>Show all images in an unordered list:</p>\n</li>\n<li>\n<p>Assuming one category per post, just show the category image without further HTML markup:</p>\n<p>&lt; ?php c2c_the_category_image(&#039; &#039;);  // note the space in the argument, necessary to turn off default </p>\n<ul> markups ?&gt;</p>\n<h3>Filters</h3>\n<p>The plugin exposes two filters and one action for hooking.  Typically, customizations utilizing these hooks would be put into your active theme&#8217;s functions.php file, or used by another plugin.</p>\n</li>\n</ul>\n<h4>c2c_get_category_image (filter)</h4>\n<p>The &#8216;c2c_get_category_image&#8217; hook allows you to use an alternative approach to safely invoke <code>c2c_get_category_image()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</p>\n<p>Arguments:</p>\n<ul>\n<li>same as for <code>c2c_get_category_image()</code></li>\n</ul>\n<p>Example:</p>\n<p>Instead of:</p>\n<pre><code>    &lt;?php $cat_images = c2c_get_category_image( $cat ); ?&gt;\n</code></pre>\n<p>Do:</p>\n<pre><code>    &lt;?php $cat_images = apply_filters( 'c2c_get_category_image', $cat ); ?&gt;\n</code></pre>\n<h4>c2c_get_the_category_image_list (filter)</h4>\n<p>The &#8216;c2c_get_the_category_image_list&#8217; hook allows you to use an alternative approach to safely invoke <code>c2c_get_the_category_image_list()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</p>\n<p>Arguments:</p>\n<ul>\n<li>same as for <code>c2c_get_the_category_image_list()</code></li>\n</ul>\n<p>Example:</p>\n<p>Instead of:</p>\n<pre><code>    &lt;?php $cat_list = c2c_get_the_category_image_list(); ?&gt;\n</code></pre>\n<p>Do:</p>\n<pre><code>    &lt;?php $cat_list = apply_filters( 'c2c_get_the_category_image_list', '' ); ?&gt;\n</code></pre>\n<h4>c2c_the_category_image (action)</h4>\n<p>The &#8216;c2c_the_category_image&#8217; hook allows you to use an alternative approach to safely invoke <code>c2c_the_category_image()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</p>\n<p>Arguments:</p>\n<ul>\n<li>same as for <code>c2c_the_category_image()</code></li>\n</ul>\n<p>Example:</p>\n<p>Instead of:</p>\n<pre><code>    &lt;?php c2c_the_category_image(); ?&gt;\n</code></pre>\n<p>Do:</p>\n<pre><code>    &lt;?php do_action( 'c2c_the_category_image' ); ?&gt;\n</code></pre>\n",
        "installation": "<ol>\n<li>Unzip <code>category-images.zip</code> inside the <code>/wp-content/plugins/</code> directory (or install via the built-in WordPress plugin installer)</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; admin menu in WordPress</li>\n<li>Create category image (.png unless you specify the extension in your call to <code>c2c_the_category_image()</code>) for each category you wish to have an image for, placing the image into the wp-content/images/ directory (unless you specify another location in your call to <code>c2c_the_category_image()</code>).  Remember to give the filename the nice-name version of the category name.</li>\n<li>Make use of the <code>c2c_the_category_image()</code> template function in your template (see examples below).</li>\n</ol>\n",
        "changelog": "<h4>1.7.3</h4>\n<ul>\n<li>Re-license as GPLv2 or later (from X11)</li>\n<li>Add &#8216;License&#8217; and &#8216;License URI&#8217; header tags to readme.txt and plugin file</li>\n<li>Remove ending PHP close tag</li>\n<li>Note compatibility through WP 3.4+</li>\n</ul>\n<h4>1.7.2</h4>\n<ul>\n<li>Note compatibility through WP 3.3+</li>\n<li>Add link to plugin directory page to readme.txt</li>\n<li>Note many TODO ideas</li>\n<li>Update copyright date (2012)</li>\n</ul>\n<h4>1.7.1</h4>\n<ul>\n<li>Note compatibility through WP 3.2+</li>\n<li>Minor code formatting changes (spacing)</li>\n<li>Minor readme.txt formatting changes</li>\n<li>Add plugin homepage and author links in description in readme.txt</li>\n<li>Update copyright date (2011)</li>\n</ul>\n<h4>1.7</h4>\n<ul>\n<li>Rename filter &#8216;c2c_the_category_image&#8217; to &#8216;c2c_category_image_list&#8217;</li>\n<li>Add hooks &#8216;c2c_get_category_image&#8217; (filter), &#8216;c2c_get_the_category_image_list&#8217; (filter), and &#8216;c2c_the_category_image&#8217; (action) to respond to the function of the same name so that users can use the apply_filters() or do_action() notation for invoking template tags</li>\n<li>Change to make leading and trailing forward slashes optional for $image_dir value</li>\n<li>Wrap each global function in function_exists() check</li>\n<li>Remove docs from top of plugin file (all that and more are in readme.txt)</li>\n<li>Note compatibility with WP 2.9+, 3.0+</li>\n<li>Minor tweaks to code formatting (spacing)</li>\n<li>Add Changelog, Filters, and Upgrade Notice sections to readme.txt</li>\n<li>Add PHPDoc documentation</li>\n<li>Add package info to top of plugin file</li>\n<li>Update copyright date</li>\n<li>Remove trailing whitespace</li>\n</ul>\n<h4>1.6 (unreleased)</h4>\n<p>=<br />\n* Add optional arg $post_id (default of false) to c2c_get_the_category_image_list() to allow specifying a post<br />\n* Send $separator as arg in calls to get_category_parents()<br />\n* Use get_options() instead of get_settings()<br />\n* Note compatibility with WP 2.6+, 2.7+, 2.8+<br />\n* Update copyright date</p>\n<h4>1.5</h4>\n<ul>\n<li>Move plugin into its own sub-directory</li>\n<li>Lots of changes to ensure compatibility with latest releases of WP</li>\n<li>Add function c2c_get_the_category_image_list() and move code from c2c_the_category_image() into it (but non-echoing though)</li>\n<li>Change c2c_the_category_image() to simply echo result of c2c_get_the_category_image_list()</li>\n<li>Use $cat-&gt;name instead $cat-&gt;cat_name</li>\n<li>Use term_id instead of cat_ID</li>\n<li>Allow filter of result via the filter named &#8220;c2c_the_category_image&#8221;.</li>\n<li>Add readme.txt</li>\n<li>Minor code formatting changes</li>\n<li>Add installation instructions</li>\n<li>Change plugin description</li>\n<li>Change Plugin URI</li>\n<li>Change Author  URI</li>\n<li>Note compatibility with WP 2.3+, 2.5+</li>\n<li>Update copyright date</li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>Compatibility fix for WP1.5.1</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Same as v1.0 but compatible with WP1.5+</li>\n<li>Change to accommodate new get_category_link() arguments</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Last version compatible with WP 1.2</li>\n<li>Add argument $use_name_if_no_image=false to allow showing cat name if no image was located</li>\n<li>Tweaks to update c2c_the_category_image() with changes made to the_category() (mostly rel= stuff)</li>\n<li>Change default category images directory from /wp-images/ to /wp-content/images/</li>\n</ul>\n<h4>0.92</h4>\n<ul>\n<li>Fix a pair of typos that prevented images from showing</li>\n</ul>\n<h4>0.91</h4>\n<ul>\n<li>Now supports listing multiple image extensions</li>\n<li>Prepended all functions with \u201cc2c_\u201d to avoid potential function name collision with other plugins or future core functions\u2026 NOTE: If you are upgrading from an earlier version of the plugin, you\u2019ll need to change your calls from the_category_image() to c2c_category_image()</li>\n<li>Change from BSD-new license to MIT license</li>\n</ul>\n<h4>0.9</h4>\n<ul>\n<li>Initial public release</li>\n</ul>\n"
    },
    "short_description": "Display an image for each category associated with a post.",
    "description": "<p>Display an image for each category associated with a post.</p>\n<p>Notes:</p>\n<p>This plugin provides the templates tag <code>c2c_the_category_image()</code> which basically reproduces and extends the functionality of WordPress&#8217;s core function <code>the_category()</code> to add the ability to display a category image instead of the category name in the link to the category archive.  With its $image_extensions argument defaulted to <code>\"\"</code>, the plugin could be a drop-in replacement for <code>the_category()</code>.  As is done in <code>the_category()</code>, the image or text for each category is also a link back to that category&#8217;s archive.</p>\n<p>Related info about the function:</p>\n<ul>\n<li>If $image_extensions is defined, but no image is found for the category, then nothing is displayed for that category.</li>\n<li>$image_extensions can be defined as a space separated list of image extensions.  Files will be checked with the image extensions in the order those extensions were provided; default is &#8216;png gif jpg&#8217;.</li>\n<li>The number of category links/images displayed can be limited via the $limit argument</li>\n<li>Category image  tags are defined with class=&#8221;catimage&#8221; for stylesheet manipulation.</li>\n<li>The result can be filtered via the filter named &#8220;c2c_the_category_image&#8221;.</li>\n<li>\n<p>Must be run inside &#8220;the loop&#8221;.</p>\n<p>c2c_get_category_image_list() is another provided function, which is identical to <code>c2c_the_category_image()</code> except that it doesn&#8217;t echo the result.</p>\n</li>\n</ul>\n<p>Links: <a href=\"http://coffee2code.com/wp-plugins/category-images/\" rel=\"nofollow ugc\">Plugin Homepage</a> | <a href=\"https://wordpress.org/extend/plugins/category-images/\" rel=\"ugc\">Plugin Directory Page</a> | <a href=\"http://coffee2code.com\" rel=\"nofollow ugc\">Author Homepage</a></p>\n<h3>Template Tags</h3>\n<p>The plugin provides one optional template tag for use in your theme templates.</p>\n<h4>Functions</h4>\n<ul>\n<li><code>&lt;?php function c2c_the_category_image( $seperator='', $parents='', $image_extensions='png gif jpg', $image_dir='/wp-content/images/', $use_name_if_no_image=false, $start_from='begin', $limit=999 ) ?&gt;</code></li>\n</ul>\n<p>This displays the image associated with a post&#8217;s categories.</p>\n<h4>Arguments</h4>\n<ul>\n<li>\n<p><code>$separator</code><br />\nOptional argument.  The text and/or HTML to appear between each of a post&#8217;s category images.</p>\n</li>\n<li>\n<p><code>$parents</code><br />\nOptional argument.  Allows you to specify if you want ancestor categories of a post&#8217;s category to be imaged and linked as well.  Valid options are &#8216;multiple&#8217;, &#8216;single&#8217;, and &#8221;. Default is &#8221;.</p>\n</li>\n<li>\n<p><code>$image_extensions</code><br />\nOptional argument.  A space-separated list of image extensions (case insensitive).  If defined as &#8221; then no image is retrieved and the category name is displayed instead (a la <code>the_category()</code>).  Default is &#8216;png gif jpg&#8217;.</p>\n</li>\n<li>\n<p><code>$image_dir</code><br />\nOptional argument.  The directory in which the category image(s) reside.  The value should be a location relative to the main URL of your blog.  Default is &#8216;/wp-content/images/&#8217;</p>\n</li>\n<li>\n<p><code>$use_name_if_no_image</code><br />\nOptional argument.  Boolean value (true or false) indicating if the name of the category should be displayed for each category that does not have an associated image.  Default is false.</p>\n</li>\n<li>\n<p><code>$start_from</code><br />\nOptional argument.  How to traverse the list of post&#8217;s categories; either &#8216;begin&#8217; or &#8216;end&#8217;.  Default is &#8216;begin&#8217;</p>\n</li>\n<li>\n<p><code>$limit</code><br />\nOptional argument.  The maximum number of category images to be displayed.  Default is 999 (basically, no limit)</p>\n</li>\n<li>\n<p><code>$post_id</code><br />\nOptional argument.  The Post ID.  If false, then use the current post (i.e. while in the loop).  Default is false.</p>\n</li>\n</ul>\n<h3>Examples</h3>\n<ul>\n<li>\n<p>You can opt to treat only certain categories as having a graphical representation by defining an image for them but not creating images for the non-graphically represented categories (as in you can have a subset of categories that dictate what image to be displayed for the post).</p>\n</li>\n<li>\n<p>You can take advantage of the $image_extension and/or $image_dir arguments to display different category icons under different contexts, i.e. if showing a $single post, choose to use a &#8216;png&#8217; image, otherwise use &#8216;gif&#8217;; or locate your images in different directories &#8216;/wp-content/images/cat-images/small/&#8217; and &#8216;/wp-content/images/cat-images/large/&#8217; and decide based on context where to get the image(s) from:</p>\n<p>// In showing the post singularly, then use a larger image, else use a small image<br />\n  if ( is_single() ) {<br />\n    c2c_the_category_image(&#8221;, &#8221;, &#8216;gif&#8217;, &#8216;/wp-content/images/cat-images/large/&#8217;);<br />\n  } else {<br />\n    c2c_the_category_image(&#8221;, &#8221;, &#8216;gif&#8217;, &#8216;/wp-content/images/cat-images/small/&#8217;);<br />\n  }</p>\n</li>\n<li>\n<p>Show all images in a comma-separated line:</p>\n</li>\n<li>\n<p>Show all images in an unordered list:</p>\n</li>\n<li>\n<p>Assuming one category per post, just show the category image without further HTML markup:</p>\n<p>&lt; ?php c2c_the_category_image(&#039; &#039;);  // note the space in the argument, necessary to turn off default </p>\n<ul> markups ?&gt;</p>\n<h3>Filters</h3>\n<p>The plugin exposes two filters and one action for hooking.  Typically, customizations utilizing these hooks would be put into your active theme&#8217;s functions.php file, or used by another plugin.</p>\n</li>\n</ul>\n<h4>c2c_get_category_image (filter)</h4>\n<p>The &#8216;c2c_get_category_image&#8217; hook allows you to use an alternative approach to safely invoke <code>c2c_get_category_image()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</p>\n<p>Arguments:</p>\n<ul>\n<li>same as for <code>c2c_get_category_image()</code></li>\n</ul>\n<p>Example:</p>\n<p>Instead of:</p>\n<pre><code>    &lt;?php $cat_images = c2c_get_category_image( $cat ); ?&gt;\n</code></pre>\n<p>Do:</p>\n<pre><code>    &lt;?php $cat_images = apply_filters( 'c2c_get_category_image', $cat ); ?&gt;\n</code></pre>\n<h4>c2c_get_the_category_image_list (filter)</h4>\n<p>The &#8216;c2c_get_the_category_image_list&#8217; hook allows you to use an alternative approach to safely invoke <code>c2c_get_the_category_image_list()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</p>\n<p>Arguments:</p>\n<ul>\n<li>same as for <code>c2c_get_the_category_image_list()</code></li>\n</ul>\n<p>Example:</p>\n<p>Instead of:</p>\n<pre><code>    &lt;?php $cat_list = c2c_get_the_category_image_list(); ?&gt;\n</code></pre>\n<p>Do:</p>\n<pre><code>    &lt;?php $cat_list = apply_filters( 'c2c_get_the_category_image_list', '' ); ?&gt;\n</code></pre>\n<h4>c2c_the_category_image (action)</h4>\n<p>The &#8216;c2c_the_category_image&#8217; hook allows you to use an alternative approach to safely invoke <code>c2c_the_category_image()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</p>\n<p>Arguments:</p>\n<ul>\n<li>same as for <code>c2c_the_category_image()</code></li>\n</ul>\n<p>Example:</p>\n<p>Instead of:</p>\n<pre><code>    &lt;?php c2c_the_category_image(); ?&gt;\n</code></pre>\n<p>Do:</p>\n<pre><code>    &lt;?php do_action( 'c2c_the_category_image' ); ?&gt;\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/category-images.1.7.3.zip",
    "upgrade_notice": {
        "1.7.3": "<p>Trivial update: noted compatibility through WP 3.4+; explicitly stated license</p>",
        "1.7.2": "<p>Trivial update: noted compatibility through WP 3.3+</p>",
        "1.7.1": "<p>Trivial update: noted compatibility through WP 3.2+</p>",
        "1.7": "<p>Recommended update. Highlights: added multiple hooks to allow customization; made leading and trailing slashes in paths optional; allow sending post_id arg to c2c_get_the_category_image_list(); verified WP 3.0 compatibility; other miscellaneous tweaks and fixes.</p>"
    },
    "screenshots": [],
    "tags": {
        "categories": "categories",
        "category": "category",
        "icon": "icon",
        "image": "image",
        "post": "post"
    },
    "stable_tag": "1.7.3",
    "versions": {
        "1.7": "https://downloads.wordpress.org/plugin/category-images.1.7.zip",
        "1.7.1": "https://downloads.wordpress.org/plugin/category-images.1.7.1.zip",
        "1.7.2": "https://downloads.wordpress.org/plugin/category-images.1.7.2.zip",
        "1.7.3": "https://downloads.wordpress.org/plugin/category-images.1.7.3.zip",
        "v1.0": "https://downloads.wordpress.org/plugin/category-images.v1.0.zip",
        "v1.1": "https://downloads.wordpress.org/plugin/category-images.v1.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/category-images.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://coffee2code.com/donate",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/category-images.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 90,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}