{
    "name": "Custom Options",
    "slug": "custom-options",
    "version": "1.2",
    "author": "<a href=\"http://jacobgsp.com\">Jacob Guite-St-Pierre</a>",
    "author_profile": "https://profiles.wordpress.org/jacobgsp/",
    "contributors": {
        "jacobgsp": {
            "profile": "https://profiles.wordpress.org/jacobgsp/",
            "avatar": "https://secure.gravatar.com/avatar/9f1574e8b6432f3d0135eb5a7481809e?s=96&d=monsterid&r=g",
            "display_name": "Jacob Guite-St-Pierre"
        }
    },
    "requires": "3.0",
    "tested": "3.3.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 20,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 1
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/custom-options/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 2889,
    "last_updated": "2012-02-14 02:13:00",
    "added": "2012-01-24",
    "homepage": "http://jacobgsp.com/wordpress/",
    "sections": {
        "description": "<p>Allows you to create custom options that you can easily update via the <code>Options</code> administration panel and also allows you to use mentioned options in your theme using a simple PHP function:</p>\n<pre><code>get_custom_option ( $slug [, $default_value, $field ] )\n</code></pre>\n<p>By default, only Administrators can change Custom Options, however you can use the filter <code>gsp_custom_options_capability</code> to change that. For example, if you wish to allow Editors to use Custom Options you can add this to your functions.php file:</p>\n<pre><code>function custom_options_capability ($capability) {\n    return 'publish_pages';\n}\nadd_filter ( 'gsp_custom_options_capability', 'custom_options_capability' );\n</code></pre>\n<p>Very simple, yet efficient.</p>\n",
        "installation": "<ol>\n<li>Upload the folder <code>custom-options</code> to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the <code>Plugins</code> menu in WordPress</li>\n<li>Update the plugin through the <code>Options</code> menu in WordPress</li>\n<li>Use Custom Options in your theme through the PHP function <code>get_custom_option( $slug, $default_value )</code></li>\n<li>Don&#8217;t forget to precede the function by an <code>echo</code> if you want to output it</li>\n</ol>\n",
        "faq": "\n<h4>What&#8217;s the difference between Custom Options and your old plugin Custom Configs/Settings?</h4>\n<p>\n<p>From a user&#8217;s point of view, nothing. However, from a developer&#8217;s point of view, this new plugin is somewhat cleaner. Options are now saved in a serialized array in the WordPress options table.</p>\n</p>\n<h4>Is Custom Options backward compatible with Custom Configs/Settings?</h4>\n<p>\n<p>No.</p>\n</p>\n\n",
        "changelog": "<h4>1.2</h4>\n<ul>\n<li>Added the filter <code>gsp_custom_options_capability</code> to customize what capability has access to Custom Options.</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Added the field parameter. The function can now receive a new optional parameter: $field which defaults to <code>value</code> and if set to <code>label</code> will display the title of label of the custom option. As requested by <code>Jam Tin</code> on the forums.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>First stable version</li>\n</ul>\n"
    },
    "short_description": "Quickly create, manage and use custom options in your themes!",
    "description": "<p>Allows you to create custom options that you can easily update via the <code>Options</code> administration panel and also allows you to use mentioned options in your theme using a simple PHP function:</p>\n<pre><code>get_custom_option ( $slug [, $default_value, $field ] )\n</code></pre>\n<p>By default, only Administrators can change Custom Options, however you can use the filter <code>gsp_custom_options_capability</code> to change that. For example, if you wish to allow Editors to use Custom Options you can add this to your functions.php file:</p>\n<pre><code>function custom_options_capability ($capability) {\n    return 'publish_pages';\n}\nadd_filter ( 'gsp_custom_options_capability', 'custom_options_capability' );\n</code></pre>\n<p>Very simple, yet efficient.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/custom-options.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/custom-options/trunk/screenshot-1.png?rev=1538987",
            "caption": "Administration view"
        }
    ],
    "tags": {
        "options": "options",
        "settings": "settings"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/custom-options.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/custom-options.1.1.zip",
        "1.2": "https://downloads.wordpress.org/plugin/custom-options.1.2.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/custom-options.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 20,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}