{
    "name": "WP-Syntax",
    "slug": "wp-syntax",
    "version": "1.2",
    "author": "<a href=\"http://www.connections-pro.com\">Steven A. Zahm</a>",
    "author_profile": "https://profiles.wordpress.org/shazahm1hotmailcom/",
    "contributors": {
        "shazahm1hotmailcom": {
            "profile": "https://profiles.wordpress.org/shazahm1hotmailcom/",
            "avatar": "https://secure.gravatar.com/avatar/0a1efb5eadb51082866388d562fb97a9?s=96&d=monsterid&r=g",
            "display_name": "Steven"
        }
    },
    "requires": "4.7",
    "tested": "6.4.5",
    "requires_php": "5.6.20",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 80,
    "ratings": {
        "5": 8,
        "4": 3,
        "3": 2,
        "2": 0,
        "1": 2
    },
    "num_ratings": 15,
    "support_url": "https://wordpress.org/support/plugin/wp-syntax/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 3000,
    "downloaded": 346570,
    "last_updated": "2023-12-01 15:45:00",
    "added": "2007-01-21",
    "homepage": "http://www.connections-pro.com",
    "sections": {
        "description": "<p>WP-Syntax provides clean syntax highlighting using<br />\n<a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> &#8212; supporting a wide range of popular<br />\nlanguages.  It supports highlighting with or without line numbers and maintains formatting while copying snippets of code<br />\nfrom the browser.</p>\n<p>It avoids conflicts with other 3rd party plugins by running an early<br />\npre-filter and a late post-filter that substitutes and pulls the code snippets<br />\nout first and then pushes them back in with highlighting at the end.  The<br />\nresult is source code formatted and highlighted the way you intended.</p>\n<p>Usage, Supported Languages, Styling Guidelines, and Release Notes are available<br />\nin the <a href=\"https://wordpress.org/extend/plugins/wp-syntax/other_notes/\" rel=\"ugc\">Other Notes</a> section.</p>\n<p>Want to contribute? WP-Syntax can be found on GitHub. <a href=\"https://github.com/shazahm1/WP-Syntax\" rel=\"nofollow ugc\">Fork and submit your pull requests today!</a></p>\n<h4>Basic Usage</h4>\n<p>Wrap code blocks with <code>&lt;pre lang=\"LANGUAGE\" line=\"1\"&gt;</code> and <code>&lt;/pre&gt;</code> where <strong>&#8220;LANGUAGE&#8221;</strong><br />\nis a <a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> supported language syntax.<br />\nThe <code>line</code> attribute is optional. <a href=\"https://wordpress.org/extend/plugins/wp-syntax/other_notes/\" rel=\"ugc\">More usage examples</a></p>\n<h3>Usage</h3>\n<p>Wrap code blocks with <code>&lt;pre lang=\"LANGUAGE\" line=\"1\"&gt;</code> and <code>&lt;/pre&gt;</code> where <strong>&#8220;LANGUAGE&#8221;</strong> is a <a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> supported<br />\nlanguage syntax. See below for a full list of supported languages.<br />\nThe <code>line</code> attribute is optional.</p>\n<p><strong>Example 1: PHP, no line numbers</strong></p>\n<pre><code>&lt;pre lang=\"php\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 2: Java, with line numbers</strong></p>\n<pre><code>&lt;pre lang=\"java\" line=\"1\"&gt;\npublic class Hello {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World!\");\n  }\n}\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 3: Ruby, with line numbers starting at 18</strong></p>\n<pre><code>&lt;pre lang=\"ruby\" line=\"18\"&gt;\nclass Example\n  def example(arg1)\n    return \"Hello: \" + arg1.to_s\n  end\nend\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 4: If your code already has html entities escaped, use <code>escaped=\"true\"</code> as an option</strong></p>\n<pre><code>&lt;pre lang=\"xml\" escaped=\"true\"&gt;\n&amp;lt;xml&amp;gt;Hello&amp;lt;/xml&amp;gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 5: PHP, with line numbers and highlighting a specific line</strong></p>\n<pre><code>&lt;pre lang=\"php\" line=\"1\" highlight=\"3\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 6: PHP, with a caption (file and/or file path of the source file)</strong></p>\n<pre><code>&lt;pre lang=\"php\" src\"https://github.com/shazahm1/Connections/blob/master/connections.php\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;&lt;h3&gt;Supported Languages&lt;/h3&gt;\n</code></pre>\n<p>The following languages are most supported in the <code>lang</code> attribute:</p>\n<p>abap, actionscript, actionscript3, ada, apache, applescript, apt_sources, asm,<br />\n<strong>asp</strong>, autoit, avisynth, <strong>bash</strong>, bf, bibtex, blitzbasic, bnf, boo, <strong>c</strong>,<br />\nc_mac, caddcl, cadlisp, cil, cfdg, cfm, cmake, cobol, cpp-qt, <strong>cpp</strong>,<br />\n<strong>csharp</strong>, <strong>css</strong>, d, dcs, delphi, diff, div, dos, dot, eiffel, email, erlang,<br />\nfo, fortran, freebasic, genero, gettext, glsl, gml, bnuplot, groovy, haskell,<br />\nhq9plus, <strong>html4strict</strong>, idl, ini, inno, intercal, io, <strong>java</strong>, <strong>java5</strong>,<br />\n<strong>javascript</strong>, kixtart, klonec, klonecpp, latex, <strong>lisp</strong>, locobasic, lolcode<br />\nlotusformulas, lotusscript, lscript, lsl2, lua, m68k, make, matlab, mirc,<br />\nmodula3, mpasm, mxml, <strong>mysql</strong>, nsis, oberon2, <strong>objc</strong>, ocaml-brief, ocaml,<br />\noobas, <strong>oracle11</strong>, oracle8, pascal, per, pic16, pixelbender, <strong>perl</strong>,<br />\nphp-brief, <strong>php</strong>, plsql, povray, powershell, progress, prolog, properties,<br />\nprovidex, <strong>python</strong>, qbasic, <strong>rails</strong>, rebol, reg, robots, <strong>ruby</strong>, sas,<br />\nscala, scheme, scilab, sdlbasic, smalltalk, smarty, <strong>sql</strong>, tcl, teraterm,<br />\ntext, thinbasic, tsql, typoscript, <strong>vb</strong>, <strong>vbnet</strong>, verilog, vhdl, vim,<br />\nvisualfoxpro, visualprolog, whitespace, whois, winbatch, <strong>xml</strong>, xorg_conf,<br />\nxpp, z80</p>\n<p>See the <a href=\"http://qbnz.com/highlighter/geshi-doc.html\" rel=\"nofollow ugc\">GeSHi Documentation</a><br />\nfor a full list of supported languages.</p>\n<p>(Bold languages just highlight the more popular ones.)</p>\n<h3>Styling Guidelines</h3>\n<p>WP-Syntax colors code using the default GeSHi colors.  It also uses inline<br />\nstyling to make sure that code highlights still work in RSS feeds.  It uses a<br />\ndefault <code>wp-syntax.css</code> stylesheet for basic layout.  To customize your styling,<br />\ncopy the default <code>wp-content/plugins/wp-syntax/wp-syntax.css</code> to your theme&#8217;s<br />\ntemplate directory and modify it.  If a file named <code>wp-syntax.css</code> exists in<br />\nyour theme&#8217;s template directory, this stylesheet is used instead of the default.<br />\nThis allows theme authors to add their own customizations as they see fit.</p>\n<h3>Advanced Customization</h3>\n<p>WP-Syntax supports a <code>wp_syntax_init_geshi</code> action hook to customize GeSHi<br />\ninitialization settings.  Blog owners can handle the hook in a hand-made plugin<br />\nor somewhere else like this:</p>\n<pre><code>&lt;?php\nadd_action('wp_syntax_init_geshi', 'my_custom_geshi_styles');\n\nfunction my_custom_geshi_styles(&amp;$geshi)\n{\n    $geshi-&gt;set_brackets_style('color: #000;');\n    $geshi-&gt;set_keyword_group_style(1, 'color: #22f;');\n}\n?&gt;\n</code></pre>\n<p>This allows for a great possibility of different customizations. Be sure to<br />\nreview the <a href=\"http://qbnz.com/highlighter/geshi-doc.html\" rel=\"nofollow ugc\">GeSHi Documentation</a>.</p>\n",
        "installation": "<ol>\n<li>Upload wp-syntax.zip to your WordPress plugins directory, usually <code>wp-content/plugins/</code> and unzip the file.  It will create a <code>wp-content/plugins/wp-syntax/</code> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n<li>Create a post/page that contains a code snippet following the <a href=\"https://wordpress.org/extend/plugins/wp-syntax/other_notes/\" rel=\"ugc\">proper usage syntax</a>.</li>\n</ol>\n",
        "faq": "\n<dt id='why%20is%20the%20plugin%20generating%20unexpected%20output%3F'>\nWhy is the plugin generating unexpected output?\n</h4>\n<p>\n<p>Try editing code snippets without the visual editor.  To turn off the visual<br />\neditor for all your edits, uncheck the visual editor checkbox in your profile.<br />\nDepending on what type of code you&#8217;re trying to display, you might also need<br />\nto disable WordPress&#8217; corrections of invalidly nested XHTML (under Options -&gt;<br />\nWriting).</p>\n</p>\n<dt id='why%20can%20i%2C%20as%20an%20admin%2C%20post%20code%20snippets%2C%20but%20my%20authors%20cannot%3F'>\nWhy can I, as an admin, post code snippets, but my authors cannot?\n</h4>\n<p>\n<p>By default, WordPress filters HTML for particular user roles, and this affects<br />\nWP-Syntax&#8217;s input.  As a workaround, install the <a href=\"http://www.im-web-gefunden.de/wordpress-plugins/role-manager/\" rel=\"nofollow ugc\">Role Manager</a><br />\nplugin, and check &#8220;unfiltered HTML&#8221; for the roles that would like to post code snippets.</p>\n</p>\n\n",
        "changelog": "<h4>1.1 12/01/2023</h4>\n<ul>\n<li>TWEAK: Ensure <code>$content</code> is always returned by the filter callback.</li>\n<li>TWEAK: Slash the highlighted code blocks before saving cache to the post meta.</li>\n<li>BUG: Cache each page of a multi-paged post separately.</li>\n<li>BUG: Fix notice level error when global $comment is not available.</li>\n<li>OTHER: Update GeSHi to version 1.0.9.1 at GH commit 7884d22 on Feb 19, 2023.</li>\n<li>OTHER: Correct misspellings.</li>\n</ul>\n<h4>1.1 12/14/2016</h4>\n<ul>\n<li>NEW: Introduce caching of the syntax highlighted code rather than parsing it on page load.</li>\n<li>NEW: Introduce double click to copy code from highlight code block. Props zavr!</li>\n<li>TWEAK: PHP 7.1 compatibility.</li>\n<li>TWEAK: Remove horizontal padding from caption.</li>\n<li>TWEAK: Remove duplicate CSS padding property.</li>\n<li>TWEAK: Remove the unnecessary px from properties set as <code>0</code> in CSS.</li>\n<li>TWEAK: Adjust font size of highlight code for better vertical alignment.</li>\n<li>BUG: Ensure string is return in caption.</li>\n<li>BUG: Fix line numbering bug.</li>\n<li>BUG: Remove old plugin file.</li>\n<li>OTHER: UPDATE GeSHi to the latest dev branch.</li>\n<li>DEV: Correct phpDoc errors.</li>\n</ul>\n<h4>1.0 02/09/2013</h4>\n<ul>\n<li>NEW: CSS3 for alternating background lines for easier reading.</li>\n<li>OTHER: Completely refactor code to utilize current best practices for plugin development which will provide a solid foundation for further development.</li>\n<li>OTHER: Remove GeSHi contrib and test folders.</li>\n<li>OTHER: Move CSS to <code>css</code> sub-folder.</li>\n<li>OTHER: Move JavaScript to <code>js</code> sub-folder.</li>\n<li>OTHER: CSS fixes to keep theme from breaking output formatting.</li>\n</ul>\n<h4>0.9.13 09/01/12</h4>\n<ul>\n<li>FEATURE: Added a new &#8220;src&#8221; shortcode option to allow reference of the source filename. Props: Steffen Vogel</li>\n<li>BUG: Properly enqueue the CSS file.</li>\n<li>BUG: Updated TinyMCE allow list to allow required tags. Props: Steffen Vogel</li>\n<li>OTHER: Updated GeSHi to 1.0.8.11</li>\n<li>OTHER: Remove old unused code.</li>\n<li>OTHER: Improved line highlighting. Props: Steffen Vogel</li>\n<li>OTHER: Added some additional CSS styles to help keep theme&#8217;s from breaking the presentation of the code.</li>\n</ul>\n<p><strong>0.9.12</strong> : Fixed a range bug in the new highlight feature.</p>\n<p><strong>0.9.11</strong> : Added line highlighting support. User submitted patch. <a href=\"http://www.flynsarmy.com/2011/06/how-to-add-line-highlight-support-to-wp-syntax/\" rel=\"nofollow ugc\">Thanks Flynsarmy &amp;&amp; Chimo</a></p>\n<p><strong>0.9.10</strong> : Fix for security vulnerability when register_globals in php is enabled.</p>\n<p><strong>0.9.9</strong> : Fix to support child theme&#8217;s. WP-Syntax now requires WP &gt;= 3.0.<br />\n  Credit to <a href=\"https://wordpress.org/support/topic/wp-syntax-css-with-twenty-ten-child-theme\" rel=\"ugc\">OddOneOut</a><br />\n  Updated to use 1.0.8.9.</p>\n<p><strong>0.9.8</strong> : Fix for optional line attributes; Tested on WP 2.8</p>\n<p><strong>0.9.7</strong> : Reverted GeSHi v1.0.8.3 to avoid a slew of issues;</p>\n<p><strong>0.9.6</strong> : Updated to use GeSHi v1.0.8.4;</p>\n<p><strong>0.9.5</strong> : Minor style override to prevent themes from mangling code structure</p>\n<p><strong>0.9.4</strong> : Updated to use GeSHi v1.0.8.3;</p>\n<p><strong>0.9.3</strong> : Fixed hard-coded plugin path<br />\n  (<a href=\"https://plugins.trac.wordpress.org/ticket/964\" rel=\"nofollow ugc\">#964</a>);</p>\n<p><strong>0.9.2</strong> : Updated to use GeSHi v1.0.8.2; Added optional <code>escaped=\"true\"</code><br />\n  support in case code snippets are already escaped with html entities.</p>\n<p><strong>0.9.1</strong> : Updated to use GeSHi v1.0.8; Improved the FAQ;</p>\n<p><strong>0.9</strong> : Added support for anonymous subscribers to use pre tags in their<br />\n  comments allowing for their own colored code snippets [Fernando Briano];</p>\n<p><strong>0.8</strong> : Updated to use GeSHi v1.0.7.22 (this normally would be a revision<br />\n  release, but colors changed and there are 9 new languages supported); Added a<br />\n  font-size setting in the default css to thwart complaints about small sizes<br />\n  caused by other default WP themes;</p>\n<p><strong>0.7</strong> : Automatically included common styles without requiring manual theme<br />\n  customization [Christian Heim]; Added support for adding a custom<br />\n  wp-syntax.css stylesheet to a theme;</p>\n<p><strong>0.6.1</strong> : Updated to use GeSHi v1.0.7.21; Updated the WP compatibility version;</p>\n<p><strong>0.6</strong> : Support init hook for geshi settings (<code>wp_syntax_init_geshi</code>);<br />\n  (<a href=\"http://dev.wp-plugins.org/ticket/667\" rel=\"nofollow ugc\">#667</a>)<br />\n  [<a href=\"https://wordpress.org/support/topic/125127?replies=1#post-586215\" rel=\"ugc\">reedom</a>]</p>\n<p><strong>0.5.4</strong> : Updated to use GeSHi v1.0.7.20;</p>\n<p><strong>0.5.3</strong> : Fixed styling guideline issue that affected IE 6 [kimuraco];</p>\n<p><strong>0.5.2</strong> : Updated to use GeSHi v1.0.7.19;</p>\n<p><strong>0.5.1</strong> : Switched <code>geshi</code> directory export to utilize<br />\n  <a href=\"http://piston.rubyforge.org/\" rel=\"nofollow ugc\">piston</a> instead of <code>svn:externals</code> properties;</p>\n<p><strong>0.5</strong> : Added support for single quoted attributes;<br />\n  (<a href=\"http://dev.wp-plugins.org/ticket/624\" rel=\"nofollow ugc\">#624</a>)</p>\n<p><strong>0.4</strong> : Cleanup and documentation for WordPress.org <a href=\"https://wordpress.org/extend/plugins/\" rel=\"ugc\">plugin<br />\n  listings</a>;</p>\n<p><strong>0.3</strong> : First official public release; Added line number support; Uses GeSHi v1.0.7.18;<br />\n(<a href=\"http://dev.wp-plugins.org/ticket/532\" rel=\"nofollow ugc\">#532</a>)</p>\n<p><strong>0.2</strong> : Internal release; Adds &#8220;before and after&#8221; filter support to avoid<br />\nconflicts with other plugins;<br />\n(<a href=\"http://dev.wp-plugins.org/ticket/531\" rel=\"nofollow ugc\">#531</a>)</p>\n<p><strong>0.1</strong> : First internal release; Uses GeSHi v1.0.7.16;</p>\n"
    },
    "short_description": "WP-Syntax provides clean syntax highlighting for embedding source code within pages or posts.",
    "description": "<p>WP-Syntax provides clean syntax highlighting using<br />\n<a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> &#8212; supporting a wide range of popular<br />\nlanguages.  It supports highlighting with or without line numbers and maintains formatting while copying snippets of code<br />\nfrom the browser.</p>\n<p>It avoids conflicts with other 3rd party plugins by running an early<br />\npre-filter and a late post-filter that substitutes and pulls the code snippets<br />\nout first and then pushes them back in with highlighting at the end.  The<br />\nresult is source code formatted and highlighted the way you intended.</p>\n<p>Usage, Supported Languages, Styling Guidelines, and Release Notes are available<br />\nin the <a href=\"https://wordpress.org/extend/plugins/wp-syntax/other_notes/\" rel=\"ugc\">Other Notes</a> section.</p>\n<p>Want to contribute? WP-Syntax can be found on GitHub. <a href=\"https://github.com/shazahm1/WP-Syntax\" rel=\"nofollow ugc\">Fork and submit your pull requests today!</a></p>\n<h4>Basic Usage</h4>\n<p>Wrap code blocks with <code>&lt;pre lang=\"LANGUAGE\" line=\"1\"&gt;</code> and <code>&lt;/pre&gt;</code> where <strong>&#8220;LANGUAGE&#8221;</strong><br />\nis a <a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> supported language syntax.<br />\nThe <code>line</code> attribute is optional. <a href=\"https://wordpress.org/extend/plugins/wp-syntax/other_notes/\" rel=\"ugc\">More usage examples</a></p>\n<h3>Usage</h3>\n<p>Wrap code blocks with <code>&lt;pre lang=\"LANGUAGE\" line=\"1\"&gt;</code> and <code>&lt;/pre&gt;</code> where <strong>&#8220;LANGUAGE&#8221;</strong> is a <a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> supported<br />\nlanguage syntax. See below for a full list of supported languages.<br />\nThe <code>line</code> attribute is optional.</p>\n<p><strong>Example 1: PHP, no line numbers</strong></p>\n<pre><code>&lt;pre lang=\"php\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 2: Java, with line numbers</strong></p>\n<pre><code>&lt;pre lang=\"java\" line=\"1\"&gt;\npublic class Hello {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World!\");\n  }\n}\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 3: Ruby, with line numbers starting at 18</strong></p>\n<pre><code>&lt;pre lang=\"ruby\" line=\"18\"&gt;\nclass Example\n  def example(arg1)\n    return \"Hello: \" + arg1.to_s\n  end\nend\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 4: If your code already has html entities escaped, use <code>escaped=\"true\"</code> as an option</strong></p>\n<pre><code>&lt;pre lang=\"xml\" escaped=\"true\"&gt;\n&amp;lt;xml&amp;gt;Hello&amp;lt;/xml&amp;gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 5: PHP, with line numbers and highlighting a specific line</strong></p>\n<pre><code>&lt;pre lang=\"php\" line=\"1\" highlight=\"3\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 6: PHP, with a caption (file and/or file path of the source file)</strong></p>\n<pre><code>&lt;pre lang=\"php\" src\"https://github.com/shazahm1/Connections/blob/master/connections.php\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;&lt;h3&gt;Supported Languages&lt;/h3&gt;\n</code></pre>\n<p>The following languages are most supported in the <code>lang</code> attribute:</p>\n<p>abap, actionscript, actionscript3, ada, apache, applescript, apt_sources, asm,<br />\n<strong>asp</strong>, autoit, avisynth, <strong>bash</strong>, bf, bibtex, blitzbasic, bnf, boo, <strong>c</strong>,<br />\nc_mac, caddcl, cadlisp, cil, cfdg, cfm, cmake, cobol, cpp-qt, <strong>cpp</strong>,<br />\n<strong>csharp</strong>, <strong>css</strong>, d, dcs, delphi, diff, div, dos, dot, eiffel, email, erlang,<br />\nfo, fortran, freebasic, genero, gettext, glsl, gml, bnuplot, groovy, haskell,<br />\nhq9plus, <strong>html4strict</strong>, idl, ini, inno, intercal, io, <strong>java</strong>, <strong>java5</strong>,<br />\n<strong>javascript</strong>, kixtart, klonec, klonecpp, latex, <strong>lisp</strong>, locobasic, lolcode<br />\nlotusformulas, lotusscript, lscript, lsl2, lua, m68k, make, matlab, mirc,<br />\nmodula3, mpasm, mxml, <strong>mysql</strong>, nsis, oberon2, <strong>objc</strong>, ocaml-brief, ocaml,<br />\noobas, <strong>oracle11</strong>, oracle8, pascal, per, pic16, pixelbender, <strong>perl</strong>,<br />\nphp-brief, <strong>php</strong>, plsql, povray, powershell, progress, prolog, properties,<br />\nprovidex, <strong>python</strong>, qbasic, <strong>rails</strong>, rebol, reg, robots, <strong>ruby</strong>, sas,<br />\nscala, scheme, scilab, sdlbasic, smalltalk, smarty, <strong>sql</strong>, tcl, teraterm,<br />\ntext, thinbasic, tsql, typoscript, <strong>vb</strong>, <strong>vbnet</strong>, verilog, vhdl, vim,<br />\nvisualfoxpro, visualprolog, whitespace, whois, winbatch, <strong>xml</strong>, xorg_conf,<br />\nxpp, z80</p>\n<p>See the <a href=\"http://qbnz.com/highlighter/geshi-doc.html\" rel=\"nofollow ugc\">GeSHi Documentation</a><br />\nfor a full list of supported languages.</p>\n<p>(Bold languages just highlight the more popular ones.)</p>\n<h3>Styling Guidelines</h3>\n<p>WP-Syntax colors code using the default GeSHi colors.  It also uses inline<br />\nstyling to make sure that code highlights still work in RSS feeds.  It uses a<br />\ndefault <code>wp-syntax.css</code> stylesheet for basic layout.  To customize your styling,<br />\ncopy the default <code>wp-content/plugins/wp-syntax/wp-syntax.css</code> to your theme&#8217;s<br />\ntemplate directory and modify it.  If a file named <code>wp-syntax.css</code> exists in<br />\nyour theme&#8217;s template directory, this stylesheet is used instead of the default.<br />\nThis allows theme authors to add their own customizations as they see fit.</p>\n<h3>Advanced Customization</h3>\n<p>WP-Syntax supports a <code>wp_syntax_init_geshi</code> action hook to customize GeSHi<br />\ninitialization settings.  Blog owners can handle the hook in a hand-made plugin<br />\nor somewhere else like this:</p>\n<pre><code>&lt;?php\nadd_action('wp_syntax_init_geshi', 'my_custom_geshi_styles');\n\nfunction my_custom_geshi_styles(&amp;$geshi)\n{\n    $geshi-&gt;set_brackets_style('color: #000;');\n    $geshi-&gt;set_keyword_group_style(1, 'color: #22f;');\n}\n?&gt;\n</code></pre>\n<p>This allows for a great possibility of different customizations. Be sure to<br />\nreview the <a href=\"http://qbnz.com/highlighter/geshi-doc.html\" rel=\"nofollow ugc\">GeSHi Documentation</a>.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-syntax.1.2.zip",
    "upgrade_notice": {
        "0.9.10": "<p>Fixes a security vulnerability. Upgrade immediately.</p>",
        "0.9.9": "<p>Compatible with WP &gt;= 3.0 and latest GeSHi</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-syntax/trunk/screenshot-1.png?rev=3004314",
            "caption": "PHP, no line numbers."
        },
        {
            "src": "https://ps.w.org/wp-syntax/trunk/screenshot-2.png?rev=3004314",
            "caption": "Java, with line numbers."
        },
        {
            "src": "https://ps.w.org/wp-syntax/trunk/screenshot-3.png?rev=3004314",
            "caption": "Ruby, with line numbers starting at 18."
        }
    ],
    "tags": {
        "code": "code",
        "formatting": "formatting",
        "highlight": "Highlight",
        "syntax": "syntax",
        "syntax-highlighting": "syntax highlighting"
    },
    "stable_tag": "1.2",
    "versions": {
        "0.1": "https://downloads.wordpress.org/plugin/wp-syntax.0.1.zip",
        "0.2": "https://downloads.wordpress.org/plugin/wp-syntax.0.2.zip",
        "0.3": "https://downloads.wordpress.org/plugin/wp-syntax.0.3.zip",
        "0.4": "https://downloads.wordpress.org/plugin/wp-syntax.0.4.zip",
        "0.5": "https://downloads.wordpress.org/plugin/wp-syntax.0.5.zip",
        "0.5.1": "https://downloads.wordpress.org/plugin/wp-syntax.0.5.1.zip",
        "0.5.2": "https://downloads.wordpress.org/plugin/wp-syntax.0.5.2.zip",
        "0.5.3": "https://downloads.wordpress.org/plugin/wp-syntax.0.5.3.zip",
        "0.5.4": "https://downloads.wordpress.org/plugin/wp-syntax.0.5.4.zip",
        "0.6": "https://downloads.wordpress.org/plugin/wp-syntax.0.6.zip",
        "0.6.1": "https://downloads.wordpress.org/plugin/wp-syntax.0.6.1.zip",
        "0.7": "https://downloads.wordpress.org/plugin/wp-syntax.0.7.zip",
        "0.8": "https://downloads.wordpress.org/plugin/wp-syntax.0.8.zip",
        "0.9": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.zip",
        "0.9.1": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.1.zip",
        "0.9.10": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.10.zip",
        "0.9.11": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.11.zip",
        "0.9.12": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.12.zip",
        "0.9.13": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.13.zip",
        "0.9.2": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.2.zip",
        "0.9.3": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.3.zip",
        "0.9.4": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.4.zip",
        "0.9.5": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.5.zip",
        "0.9.6": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.6.zip",
        "0.9.7": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.7.zip",
        "0.9.8": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.8.zip",
        "0.9.9": "https://downloads.wordpress.org/plugin/wp-syntax.0.9.9.zip",
        "1.0": "https://downloads.wordpress.org/plugin/wp-syntax.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/wp-syntax.1.1.zip",
        "1.2": "https://downloads.wordpress.org/plugin/wp-syntax.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-syntax.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/wp-syntax/assets/banner-772x250.jpg?rev=665783",
        "high": "https://ps.w.org/wp-syntax/assets/banner-1544x500.jpg?rev=665783"
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wp-syntax_f8f6f6.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 80,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "wp-syntax",
            "language": "es_ES",
            "version": "1.2",
            "updated": "2019-01-19 13:43:14",
            "package": "https://downloads.wordpress.org/translation/plugin/wp-syntax/1.2/es_ES.zip"
        },
        {
            "type": "plugin",
            "slug": "wp-syntax",
            "language": "nl_NL",
            "version": "1.2",
            "updated": "2020-11-21 11:52:34",
            "package": "https://downloads.wordpress.org/translation/plugin/wp-syntax/1.2/nl_NL.zip"
        },
        {
            "type": "plugin",
            "slug": "wp-syntax",
            "language": "pl_PL",
            "version": "1.2",
            "updated": "2023-07-05 21:11:54",
            "package": "https://downloads.wordpress.org/translation/plugin/wp-syntax/1.2/pl_PL.zip"
        },
        {
            "type": "plugin",
            "slug": "wp-syntax",
            "language": "ru_RU",
            "version": "1.2",
            "updated": "2021-05-09 19:35:15",
            "package": "https://downloads.wordpress.org/translation/plugin/wp-syntax/1.2/ru_RU.zip"
        },
        {
            "type": "plugin",
            "slug": "wp-syntax",
            "language": "tr_TR",
            "version": "1.2",
            "updated": "2017-04-08 20:56:27",
            "package": "https://downloads.wordpress.org/translation/plugin/wp-syntax/1.2/tr_TR.zip"
        }
    ]
}