{
    "name": "{eac}Doojigger Simple CDN Extension for WordPress",
    "slug": "eacsimplecdn",
    "version": "1.1.6",
    "author": "<a href=\"http://www.earthasylum.com\">EarthAsylum Consulting</a>",
    "author_profile": "https://profiles.wordpress.org/kevinburkholder/",
    "contributors": {
        "kevinburkholder": {
            "profile": "https://profiles.wordpress.org/kevinburkholder/",
            "avatar": "https://secure.gravatar.com/avatar/96a56f75ef5d0788969760dfb8237d8d?s=96&d=monsterid&r=g",
            "display_name": "Kevin Burkholder"
        }
    },
    "requires": "5.5.0",
    "tested": "6.5.5",
    "requires_php": "7.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/eacsimplecdn/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1016,
    "last_updated": "2024-05-25 11:16am GMT",
    "added": "2023-09-21",
    "homepage": "https://eacdoojigger.earthasylum.com/eacsimplecdn/",
    "sections": {
        "description": "<p><em>{eac}SimpleCDN</em> is an <a href=\"https://eacDoojigger.earthasylum.com/\" rel=\"nofollow ugc\">{eac}Doojigger</a> extension which rewrites the URLs on your site&#8217;s front-end pages so that specific content is loaded from your Content Delivery Network rather than your WordPress server.</p>\n<blockquote>\n<p>What is a CDN?<br />\n  A content delivery network, or content distribution network, is a geographically distributed network of proxy servers and their data centers. The goal is to provide high availability and performance by distributing the service spatially relative to end users. <a href=\"https://en.wikipedia.org/wiki/Content_delivery_network\" rel=\"nofollow ugc\">Wikipedia</a></p>\n</blockquote>\n<p>{eac}SimpleCDN is not a content delivery network. What it does is filter your web pages replacing local http addresses with the address of your CDN so that your site assets (images, scripts, etc.) are served from your CDN rather than directly from your web server.</p>\n<p>You can specify what file types should be served from the CDN and add url string exclusions to prevent specific urls from being served from the CDN.</p>\n<p>{eac}SimpleCDN works with Amazon CloudFront, KeyCDN, Akamai ION, RocketCDN, StackPath, Rackspace, Azure CDN<br />\nand many other Content Delivery Networks as well as many cloud storage services such as Amazon S3 or Google Cloud Storage.</p>\n<p>If you&#8217;re using CloudFront and you have the <a href=\"https://dev.earthasylum.net/eacsimpleaws/\" rel=\"nofollow ugc\">{eac}SimpleAWS</a> extension enabled, you can flush the CDN cache (invalidate the distribution) by providing your CloudFront distribution id.</p>\n<p>If you&#8217;re using any other supported CDN, you can flush the CDN cache by providing your API credentials specific to the CDN you&#8217;re using.</p>\n<p>Unsupported, or <em>Universal</em> CDNs will work just as well with {eac}SimpleCDN provided that the CDN will store and serve all cacheable site content in a directory structure matching your web server. The only difference is that the API to purge the CDN cache has not been implemented (yet).</p>\n<p>If the CDN service does not automatically retrieve files from your origin server, you will need to upload all cacheable files from your web server to the CDN storage or use some other method to synchronize your files.</p>\n<h4>Extra Options</h4>\n<p>The extra options include:</p>\n<ul>\n<li><em>Additional Domains</em> treated as local domain(s), useful with multi-site and/or when your CDN has multiple origins.</li>\n<li><em>Cacheable Downloads</em> additional file type(s) to be rewitten with the CDN host.</li>\n<li><em>Page Inclusions</em> to only include specific page URIs based on string(s) in the URI.</li>\n<li><em>URL Inclusions</em> to limit URLs on the page to be rewritten by string(s) in the URL.</li>\n</ul>\n<p>To enable the extra options, first enable the <em>SimpleCDN Menu</em> option, then select <em>Enable Extra Options</em> from the <em>SimpleCDN</em> menu.</p>\n<h4>Network/Multisite</h4>\n<p>On a multi-site server, when {eac}SimpleCDN is <em>network enabled</em>, the network administrator has the option to push settings to all individual sites. The individual site administrators have the option to pull settings from the network administrator.</p>\n<h4>Available Methods</h4>\n<pre><code>flush_cdn_cache() tells {eac}SimpleCDN to flush the cdn cache (if supported).\n</code></pre>\n<h4>Available Filters</h4>\n<pre><code>SimpleCDN_page_enabled enable/disable use of cdn on current page.\n\nSimpleCDN_file_types filter string of included file types (delimited by '|').\n\nSimpleCDN_include_strings filter string of included strings (delimited by '|').\n\nSimpleCDN_exclude_strings filter string of excluded strings (delimited by '|').\n</code></pre>\n<h4>Available Actions</h4>\n<pre><code>SimpleCDN_flush_cache tells SimpleCDN to flush the cdn cache (if supported).\n\nSimpleCDN_cache_flushed triggered when SimpleCDN has flushed the cdn cache.\n</code></pre>\n<p><strong>Universal CDNs</strong></p>\n<p>A <em>Universal</em> CDN is a CDN not fully supported by {eac}SimpleCDN and is treated universally. No additional options, no purge API is included.</p>\n<p>With your custom code and the following filters, additional options and purging may be added.</p>\n<pre><code>SimpleCDN_add_settings add additional option fields to the settings page.\n\nSimpleCDN_add_help add additional contextual help.\n\nSimpleCDN_purge_cdn_cache adds support for and custom method to flush (purge) the CDN cache.\n</code></pre>\n<p>This is a special-use case for <em>Universal</em> CDNs where custom code can be added to both indicate that the cache can be purged and to provide the method for doing the purge. When this hook has an action, the &#8220;Purge&#8221; button and menu items are automatically added. The hook should be added on or before the <code>admin_init</code> action.</p>\n<p>See the <a href=\"#examples\" rel=\"nofollow ugc\">examples</a> for more detail.</p>\n<h4>HTTP Headers</h4>\n<p>An http request may include a header to disable the CDN&#8230;</p>\n<pre><code>x-Simple-CDN: off\n</code></pre>\n<p>{eac}SimpleCDN includes an http response header&#8230;</p>\n<pre><code>x-Simple-CDN: on\n</code></pre>\n<h4>Important Notes</h4>\n<ul>\n<li>\n<p><em>Time To First Byte (TTFB) may be slightly longer.</em> Your pages are not being served by your CDN and {eac}SimpleCDN captures and buffers the page, then rewrites the asset URLs in the page, before any content is delivered to the browser. Although {eac}SimpleCDN endevores to do this as quickly and efficiently as possible, doing it takes a little more time than not doing it.</p>\n</li>\n<li>\n<p><em>Load time may be deceiving.</em> For example, my business network and my web server are in the same zone as the closest CDN edge server (maybe in the same datacenter). Checking load times with and without the CDN from my location produces negligible difference. However, the CDN produces significant load time reduction in more distant zones.</p>\n</li>\n</ul>\n<h4>Results</h4>\n<p>You can test your results here: <a href=\"https://pagespeed.web.dev/\" rel=\"nofollow ugc\">PageSpeed Insights</a></p>\n</p>\n<h3>Examples</h3>\n<h4>All CDNs</h4>\n<pre><code>// disable CDN use\n\\add_filter('SimpleCDN_page_enabled','__return_false');\n\n\n// flush the cdn cache (if supported)\n\\do_action('SimpleCDN_flush_cache');\n// or...\nif ($cdn = $this-&gt;getExtension('Simple_CDN')) {\n    $cdn-&gt;flush_cdn_cache();\n}\n\n\n// do action whenever the cdn cache is flushed\n\\add_action('SimpleCDN_cache_flushed', 'my_cdn_flushed', 10, 2);\n\n/**\n * After purging the CDN cache\n *\n * @param   object      $cdn        provider object\n *          object      $cdn-&gt;parent    the SimpleCDN class object\n *          string      $cdn-&gt;endpoint  e.g. c2nnnn.r10.cf1.rackcdn.com/path\n *          string      $cdn-&gt;hostname  e.g. c2nnnn.r10.cf1.rackcdn.com\n *          string      $cdn-&gt;bucket    e.g. c2nnnn\n *          string      $cdn-&gt;host      e.g. r10.cf1.rackcdn.com\n *          string      $cdn-&gt;domain    e.g. rackcdn.com\n *          string      $cdn-&gt;provider  e.g. Rackspace\n * @param   string|bool $context    context ('purge_button'|'purge_menu') or false (non-interactive)\n */\nfunction my_cdn_flushed($cdn,$context)\n{\n    $cdn-&gt;admin_success($context,\"Success: The CDN purge is in progress\");\n}\n\n\n// limit the file types being cached by the CDN\n\\add_filter('SimpleCDN_file_types', function($types)\n    {\n        return '.css|.jpeg|.jpg|.js|.png|.webp';\n    }\n);\n\n\n// add plugins folder to excluded strings\n\\add_filter('SimpleCDN_exclude_strings', function($exclude)\n    {\n        return $exclude . '|/plugins/';\n    }\n);\n</code></pre>\n<h4>Universal CDNs</h4>\n<pre><code>// add additional settings fields\n\\add_filter( 'SimpleCDN_add_settings', 'my_add_cdn_fields', 10, 2 );\n\n/**\n * Add custom options/settings\n *\n * @param   array       $options    array()\n * @param   object      $cdn        provider object\n *          object      $cdn-&gt;parent    the SimpleCDN class object\n *          string      $cdn-&gt;endpoint  e.g. c2nnnn.r10.cf1.rackcdn.com/path\n *          string      $cdn-&gt;hostname  e.g. c2nnnn.r10.cf1.rackcdn.com\n *          string      $cdn-&gt;bucket    e.g. c2nnnn\n *          string      $cdn-&gt;host      e.g. r10.cf1.rackcdn.com\n *          string      $cdn-&gt;domain    e.g. rackcdn.com\n *          string      $cdn-&gt;provider  e.g. Rackspace\n */\nfunction my_add_cdn_fields($options,$cdn)\n{\n    $options['simple_cdn_universal_key'] = array(\n            'type'      =&gt;  'text',\n            'label'     =&gt;  'API Key',\n            'info'      =&gt;  'Your '.$cdn-&gt;provider.' API key',\n    );\n    return $options;\n}\n\n\n// add custom code to flush/purge the CDN\n\\add_action( 'admin_init',  function()\n{\n    \\add_action( 'SimpleCDN_purge_cdn_cache', 'my_purge_cdn_cache', 10, 2 );\n});\n\n/**\n * Purge the CDN cache (custom)\n *\n * @param   object      $cdn        provider object\n *          object      $cdn-&gt;parent    the SimpleCDN class object\n *          string      $cdn-&gt;endpoint  e.g. c2nnnn.r10.cf1.rackcdn.com/path\n *          string      $cdn-&gt;hostname  e.g. c2nnnn.r10.cf1.rackcdn.com\n *          string      $cdn-&gt;bucket    e.g. c2nnnn\n *          string      $cdn-&gt;host      e.g. r10.cf1.rackcdn.com\n *          string      $cdn-&gt;domain    e.g. rackcdn.com\n *          string      $cdn-&gt;provider  e.g. Rackspace\n * @param   string|bool $context    context ('purge_button'|'purge_menu') or false (non-interactive)\n */\nfunction my_purge_cdn_cache($cdn,$context)\n{\n    if ($apiKey = $cdn-&gt;get_option('simple_cdn_universal_key'))\n    {\n        /* code to purge the cdn cache */\n    }\n\n    if (/* error condition */)\n    {\n        $cdn-&gt;admin_error($context,\"Error: status {$status}, \" . $message);\n    }\n    else\n    {\n        $cdn-&gt;admin_success($context,\"Success: The CDN purge is in progress\");\n    }\n}= Additional Information =\n</code></pre>\n<ul>\n<li>{eac}SimpleCDN is an extension plugin to and requires installation and registration of <a href=\"https://eacDoojigger.earthasylum.com/\" rel=\"nofollow ugc\">{eac}Doojigger</a>.</li>\n</ul>\n<h3>Copyright</h3>\n<h4>Copyright © 2023-2024, EarthAsylum Consulting, distributed under the terms of the GNU GPL.</h4>\n<p>This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>\n<p>You should receive a copy of the GNU General Public License along with this program. If not, see <a href=\"https://www.gnu.org/licenses/\" rel=\"nofollow ugc\">https://www.gnu.org/licenses/</a>.</p>\n",
        "installation": "<p><strong>{eac}SimpleCDN Extension</strong> is an extension plugin to and requires installation and registration of <a href=\"https://eacDoojigger.earthasylum.com/\" rel=\"nofollow ugc\">{eac}Doojigger</a>.</p>\n<h4>Automatic Plugin Installation</h4>\n<p>This plugin is available from the <a href=\"https://wordpress.org/plugins/search/earthasylum/\" rel=\"ugc\">WordPress Plugin Repository</a> and can be installed from the WordPress Dashboard » <em>Plugins</em> » <em>Add New</em> page. Search for &#8216;EarthAsylum&#8217;, click the plugin&#8217;s [Install] button and, once installed, click [Activate].</p>\n<p>See <a href=\"https://wordpress.org/support/article/managing-plugins/#automatic-plugin-installation-1\" rel=\"ugc\">Managing Plugins -&gt; Automatic Plugin Installation</a></p>\n<h4>Upload via WordPress Dashboard</h4>\n<p>Installation of this plugin can be managed from the WordPress Dashboard » <em>Plugins</em> » <em>Add New</em> page. Click the [Upload Plugin] button, then select the eacsimplecdn.zip file from your computer.</p>\n<p>See <a href=\"https://wordpress.org/support/article/managing-plugins/#upload-via-wordpress-admin\" rel=\"ugc\">Managing Plugins -&gt; Upload via WordPress Admin</a></p>\n<h4>Manual Plugin Installation</h4>\n<p>You can install the plugin manually by extracting the eacsimplecdn.zip file and uploading the &#8216;eacsimplecdn&#8217; folder to the &#8216;wp-content/plugins&#8217; folder on your WordPress server.</p>\n<p>See <a href=\"https://wordpress.org/support/article/managing-plugins/#manual-plugin-installation-1\" rel=\"ugc\">Managing Plugins -&gt; Manual Plugin Installation</a></p>\n<h4>Settings</h4>\n<p>Once installed and activated options for this extension will show in the &#8216;Simple CDN&#8217; tab of {eac}Doojigger settings.</p>\n",
        "changelog": "<h4>Version 1.1.6 – May 25, 2024</h4>\n<ul>\n<li>Don&#8217;t display menu options when not enabled.</li>\n<li>Don&#8217;t indicate &#8216;enabled&#8217; until actually enabled (saved settings).</li>\n</ul>\n<h4>Version 1.1.5 – Apr 10, 2024</h4>\n<ul>\n<li>Added notice if activated without {eac}Doojigger.</li>\n</ul>\n<h4>Version 1.1.4 – December 10, 2023</h4>\n<ul>\n<li>Fixed array error on extra domains.\n<ul>\n<li>Rearranged hidden fields.</li>\n</ul>\n</li>\n<li>Use &#8216;validate&#8217; instead of &#8216;sanitize&#8217; callback.\n<ul>\n<li>Sanitize not called on empty field.</li>\n</ul>\n</li>\n<li>Use smaller textarea fields.</li>\n</ul>\n<h4>Version 1.1.3 – December 1, 2023</h4>\n<ul>\n<li>Fixed a critical error when a) extra options are enabled (from menu), b) options are not updated, c) options are pushed (or pulled) to other site(s) in the network.</li>\n</ul>\n<h4>Version 1.1.2 – October 3, 2023</h4>\n<ul>\n<li>Removed now redundant &#8216;admin_notices&#8217; action.</li>\n<li>Enhanced admin bar menu (using {eac}Doojigger menu if present).</li>\n<li>Allow purge filter on front-end (w/admin bar).</li>\n</ul>\n<h4>Version 1.1.1 – September 21, 2023</h4>\n<ul>\n<li>Security updates.</li>\n<li>Fixed action for purge from admin bar.</li>\n</ul>\n<h4>Version 1.1.0 – June 8, 2023</h4>\n<ul>\n<li>Removed unnecessary plugin_update_notice trait.</li>\n<li>Reworked host/endpoint loader.</li>\n<li>Changed $cdn property names.</li>\n<li>Isolated Amazon S3 and EC2.</li>\n<li>Added RocketCDN and StackPath (universal).</li>\n</ul>\n<h4>Version 1.0.0 – May 22, 2023</h4>\n<ul>\n<li>First public release.</li>\n</ul>\n"
    },
    "short_description": "{eac}SimpleCDN enables the use of Content Delivery Network assets on your WordPress site, significantly decreasing your page load times and improving  &hellip;",
    "description": "<p><em>{eac}SimpleCDN</em> is an <a href=\"https://eacDoojigger.earthasylum.com/\" rel=\"nofollow ugc\">{eac}Doojigger</a> extension which rewrites the URLs on your site&#8217;s front-end pages so that specific content is loaded from your Content Delivery Network rather than your WordPress server.</p>\n<blockquote>\n<p>What is a CDN?<br />\n  A content delivery network, or content distribution network, is a geographically distributed network of proxy servers and their data centers. The goal is to provide high availability and performance by distributing the service spatially relative to end users. <a href=\"https://en.wikipedia.org/wiki/Content_delivery_network\" rel=\"nofollow ugc\">Wikipedia</a></p>\n</blockquote>\n<p>{eac}SimpleCDN is not a content delivery network. What it does is filter your web pages replacing local http addresses with the address of your CDN so that your site assets (images, scripts, etc.) are served from your CDN rather than directly from your web server.</p>\n<p>You can specify what file types should be served from the CDN and add url string exclusions to prevent specific urls from being served from the CDN.</p>\n<p>{eac}SimpleCDN works with Amazon CloudFront, KeyCDN, Akamai ION, RocketCDN, StackPath, Rackspace, Azure CDN<br />\nand many other Content Delivery Networks as well as many cloud storage services such as Amazon S3 or Google Cloud Storage.</p>\n<p>If you&#8217;re using CloudFront and you have the <a href=\"https://dev.earthasylum.net/eacsimpleaws/\" rel=\"nofollow ugc\">{eac}SimpleAWS</a> extension enabled, you can flush the CDN cache (invalidate the distribution) by providing your CloudFront distribution id.</p>\n<p>If you&#8217;re using any other supported CDN, you can flush the CDN cache by providing your API credentials specific to the CDN you&#8217;re using.</p>\n<p>Unsupported, or <em>Universal</em> CDNs will work just as well with {eac}SimpleCDN provided that the CDN will store and serve all cacheable site content in a directory structure matching your web server. The only difference is that the API to purge the CDN cache has not been implemented (yet).</p>\n<p>If the CDN service does not automatically retrieve files from your origin server, you will need to upload all cacheable files from your web server to the CDN storage or use some other method to synchronize your files.</p>\n<h4>Extra Options</h4>\n<p>The extra options include:</p>\n<ul>\n<li><em>Additional Domains</em> treated as local domain(s), useful with multi-site and/or when your CDN has multiple origins.</li>\n<li><em>Cacheable Downloads</em> additional file type(s) to be rewitten with the CDN host.</li>\n<li><em>Page Inclusions</em> to only include specific page URIs based on string(s) in the URI.</li>\n<li><em>URL Inclusions</em> to limit URLs on the page to be rewritten by string(s) in the URL.</li>\n</ul>\n<p>To enable the extra options, first enable the <em>SimpleCDN Menu</em> option, then select <em>Enable Extra Options</em> from the <em>SimpleCDN</em> menu.</p>\n<h4>Network/Multisite</h4>\n<p>On a multi-site server, when {eac}SimpleCDN is <em>network enabled</em>, the network administrator has the option to push settings to all individual sites. The individual site administrators have the option to pull settings from the network administrator.</p>\n<h4>Available Methods</h4>\n<pre><code>flush_cdn_cache() tells {eac}SimpleCDN to flush the cdn cache (if supported).\n</code></pre>\n<h4>Available Filters</h4>\n<pre><code>SimpleCDN_page_enabled enable/disable use of cdn on current page.\n\nSimpleCDN_file_types filter string of included file types (delimited by '|').\n\nSimpleCDN_include_strings filter string of included strings (delimited by '|').\n\nSimpleCDN_exclude_strings filter string of excluded strings (delimited by '|').\n</code></pre>\n<h4>Available Actions</h4>\n<pre><code>SimpleCDN_flush_cache tells SimpleCDN to flush the cdn cache (if supported).\n\nSimpleCDN_cache_flushed triggered when SimpleCDN has flushed the cdn cache.\n</code></pre>\n<p><strong>Universal CDNs</strong></p>\n<p>A <em>Universal</em> CDN is a CDN not fully supported by {eac}SimpleCDN and is treated universally. No additional options, no purge API is included.</p>\n<p>With your custom code and the following filters, additional options and purging may be added.</p>\n<pre><code>SimpleCDN_add_settings add additional option fields to the settings page.\n\nSimpleCDN_add_help add additional contextual help.\n\nSimpleCDN_purge_cdn_cache adds support for and custom method to flush (purge) the CDN cache.\n</code></pre>\n<p>This is a special-use case for <em>Universal</em> CDNs where custom code can be added to both indicate that the cache can be purged and to provide the method for doing the purge. When this hook has an action, the &#8220;Purge&#8221; button and menu items are automatically added. The hook should be added on or before the <code>admin_init</code> action.</p>\n<p>See the <a href=\"#examples\" rel=\"nofollow ugc\">examples</a> for more detail.</p>\n<h4>HTTP Headers</h4>\n<p>An http request may include a header to disable the CDN&#8230;</p>\n<pre><code>x-Simple-CDN: off\n</code></pre>\n<p>{eac}SimpleCDN includes an http response header&#8230;</p>\n<pre><code>x-Simple-CDN: on\n</code></pre>\n<h4>Important Notes</h4>\n<ul>\n<li>\n<p><em>Time To First Byte (TTFB) may be slightly longer.</em> Your pages are not being served by your CDN and {eac}SimpleCDN captures and buffers the page, then rewrites the asset URLs in the page, before any content is delivered to the browser. Although {eac}SimpleCDN endevores to do this as quickly and efficiently as possible, doing it takes a little more time than not doing it.</p>\n</li>\n<li>\n<p><em>Load time may be deceiving.</em> For example, my business network and my web server are in the same zone as the closest CDN edge server (maybe in the same datacenter). Checking load times with and without the CDN from my location produces negligible difference. However, the CDN produces significant load time reduction in more distant zones.</p>\n</li>\n</ul>\n<h4>Results</h4>\n<p>You can test your results here: <a href=\"https://pagespeed.web.dev/\" rel=\"nofollow ugc\">PageSpeed Insights</a></p>\n</p>\n<h3>Examples</h3>\n<h4>All CDNs</h4>\n<pre><code>// disable CDN use\n\\add_filter('SimpleCDN_page_enabled','__return_false');\n\n\n// flush the cdn cache (if supported)\n\\do_action('SimpleCDN_flush_cache');\n// or...\nif ($cdn = $this-&gt;getExtension('Simple_CDN')) {\n    $cdn-&gt;flush_cdn_cache();\n}\n\n\n// do action whenever the cdn cache is flushed\n\\add_action('SimpleCDN_cache_flushed', 'my_cdn_flushed', 10, 2);\n\n/**\n * After purging the CDN cache\n *\n * @param   object      $cdn        provider object\n *          object      $cdn-&gt;parent    the SimpleCDN class object\n *          string      $cdn-&gt;endpoint  e.g. c2nnnn.r10.cf1.rackcdn.com/path\n *          string      $cdn-&gt;hostname  e.g. c2nnnn.r10.cf1.rackcdn.com\n *          string      $cdn-&gt;bucket    e.g. c2nnnn\n *          string      $cdn-&gt;host      e.g. r10.cf1.rackcdn.com\n *          string      $cdn-&gt;domain    e.g. rackcdn.com\n *          string      $cdn-&gt;provider  e.g. Rackspace\n * @param   string|bool $context    context ('purge_button'|'purge_menu') or false (non-interactive)\n */\nfunction my_cdn_flushed($cdn,$context)\n{\n    $cdn-&gt;admin_success($context,\"Success: The CDN purge is in progress\");\n}\n\n\n// limit the file types being cached by the CDN\n\\add_filter('SimpleCDN_file_types', function($types)\n    {\n        return '.css|.jpeg|.jpg|.js|.png|.webp';\n    }\n);\n\n\n// add plugins folder to excluded strings\n\\add_filter('SimpleCDN_exclude_strings', function($exclude)\n    {\n        return $exclude . '|/plugins/';\n    }\n);\n</code></pre>\n<h4>Universal CDNs</h4>\n<pre><code>// add additional settings fields\n\\add_filter( 'SimpleCDN_add_settings', 'my_add_cdn_fields', 10, 2 );\n\n/**\n * Add custom options/settings\n *\n * @param   array       $options    array()\n * @param   object      $cdn        provider object\n *          object      $cdn-&gt;parent    the SimpleCDN class object\n *          string      $cdn-&gt;endpoint  e.g. c2nnnn.r10.cf1.rackcdn.com/path\n *          string      $cdn-&gt;hostname  e.g. c2nnnn.r10.cf1.rackcdn.com\n *          string      $cdn-&gt;bucket    e.g. c2nnnn\n *          string      $cdn-&gt;host      e.g. r10.cf1.rackcdn.com\n *          string      $cdn-&gt;domain    e.g. rackcdn.com\n *          string      $cdn-&gt;provider  e.g. Rackspace\n */\nfunction my_add_cdn_fields($options,$cdn)\n{\n    $options['simple_cdn_universal_key'] = array(\n            'type'      =&gt;  'text',\n            'label'     =&gt;  'API Key',\n            'info'      =&gt;  'Your '.$cdn-&gt;provider.' API key',\n    );\n    return $options;\n}\n\n\n// add custom code to flush/purge the CDN\n\\add_action( 'admin_init',  function()\n{\n    \\add_action( 'SimpleCDN_purge_cdn_cache', 'my_purge_cdn_cache', 10, 2 );\n});\n\n/**\n * Purge the CDN cache (custom)\n *\n * @param   object      $cdn        provider object\n *          object      $cdn-&gt;parent    the SimpleCDN class object\n *          string      $cdn-&gt;endpoint  e.g. c2nnnn.r10.cf1.rackcdn.com/path\n *          string      $cdn-&gt;hostname  e.g. c2nnnn.r10.cf1.rackcdn.com\n *          string      $cdn-&gt;bucket    e.g. c2nnnn\n *          string      $cdn-&gt;host      e.g. r10.cf1.rackcdn.com\n *          string      $cdn-&gt;domain    e.g. rackcdn.com\n *          string      $cdn-&gt;provider  e.g. Rackspace\n * @param   string|bool $context    context ('purge_button'|'purge_menu') or false (non-interactive)\n */\nfunction my_purge_cdn_cache($cdn,$context)\n{\n    if ($apiKey = $cdn-&gt;get_option('simple_cdn_universal_key'))\n    {\n        /* code to purge the cdn cache */\n    }\n\n    if (/* error condition */)\n    {\n        $cdn-&gt;admin_error($context,\"Error: status {$status}, \" . $message);\n    }\n    else\n    {\n        $cdn-&gt;admin_success($context,\"Success: The CDN purge is in progress\");\n    }\n}= Additional Information =\n</code></pre>\n<ul>\n<li>{eac}SimpleCDN is an extension plugin to and requires installation and registration of <a href=\"https://eacDoojigger.earthasylum.com/\" rel=\"nofollow ugc\">{eac}Doojigger</a>.</li>\n</ul>\n<h3>Copyright</h3>\n<h4>Copyright © 2023-2024, EarthAsylum Consulting, distributed under the terms of the GNU GPL.</h4>\n<p>This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>\n<p>You should receive a copy of the GNU General Public License along with this program. If not, see <a href=\"https://www.gnu.org/licenses/\" rel=\"nofollow ugc\">https://www.gnu.org/licenses/</a>.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/eacsimplecdn.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/eacsimplecdn/assets/screenshot-1.png?rev=3092455",
            "caption": "<p>Simple CDN\n</p>"
        },
        {
            "src": "https://ps.w.org/eacsimplecdn/assets/screenshot-2.png?rev=3092507",
            "caption": "<p>Simple CDN - Network Admin\n</p>"
        },
        {
            "src": "https://ps.w.org/eacsimplecdn/assets/screenshot-3.png?rev=3092455",
            "caption": "<p>Simple CDN - Help\n</p>"
        }
    ],
    "tags": {
        "caching": "caching",
        "cdn": "cdn",
        "cloudfront": "cloudfront",
        "content-delivery-network": "content delivery network",
        "keycdn": "keycdn"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.1.1": "https://downloads.wordpress.org/plugin/eacsimplecdn.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/eacsimplecdn.1.1.2.zip",
        "1.1.3": "https://downloads.wordpress.org/plugin/eacsimplecdn.1.1.3.zip",
        "1.1.4": "https://downloads.wordpress.org/plugin/eacsimplecdn.1.1.4.zip",
        "1.1.5": "https://downloads.wordpress.org/plugin/eacsimplecdn.1.1.5.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/eacsimplecdn/assets/banner-772x250.jpg?rev=2969748",
        "high": "https://ps.w.org/eacsimplecdn/assets/banner-1544x500.jpg?rev=2969748"
    },
    "icons": {
        "1x": "https://ps.w.org/eacsimplecdn/assets/icon-128x128.png?rev=2969748",
        "2x": "https://ps.w.org/eacsimplecdn/assets/icon-256x256.png?rev=2969748"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}