{
    "name": "XLogin",
    "slug": "xlogin",
    "version": "1.1.2",
    "author": "Patrick Lai",
    "author_profile": "https://profiles.wordpress.org/scoop082110/",
    "contributors": {
        "scoop082110": {
            "profile": "https://profiles.wordpress.org/scoop082110/",
            "avatar": "https://secure.gravatar.com/avatar/07d069974f01fd873c56d05640886b6f?s=96&d=monsterid&r=g",
            "display_name": "Patrick Lai"
        }
    },
    "requires": "5.3",
    "tested": "5.7.12",
    "requires_php": "7.0",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/xlogin/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 757,
    "last_updated": "2021-06-05 12:45am GMT",
    "added": "2020-03-21",
    "homepage": "",
    "sections": {
        "description": "<p>XLogin enhances the WordPress login page (usually wp-login.php) to<br />\nallow users to authenticate with the following external services:</p>\n<ul>\n<li>Facebook Login</li>\n<li>Google Sign-In</li>\n<li>Yahoo! OAuth</li>\n</ul>\n<p>These services can be enabled or disabled individually. XLogin adds a<br />\nbutton to the WordPress login page for each enabled service. Clicking<br />\nthe button sends the browser to the corresponding external service<br />\nwhere the user can authorize the WordPress site to access their<br />\ninformation. Having been granted access to, for example, the Facebook<br />\npublic profile of a user, XLogin retrieves their email address to<br />\nfind a matching WordPress user to complete the login process.</p>\n<p>XLogin also maintains a list of external aliases. They are additional<br />\nemail addresses for mapping to WordPress users. Some scenarios where<br />\nexternal aliases can be handy include:</p>\n<ol>\n<li>\n<p>A user&#8217;s email address in his WordPress profile is not used in any<br />\nof the external services. For example, a corporate WordPress site<br />\nmay mandate the use of company email addresses in user<br />\nprofiles. If a user has for example his Gmail address in the<br />\nexternal alias list, they can still nevertheless sign in Google.</p>\n</li>\n<li>\n<p>A WordPress user account is shared by a group of actual<br />\nusers. With XLogin it is not necessary to have the users share a<br />\nsingle password. Instead just register their email addresses (as<br />\nknown by the external services) as external aliases; it becomes a<br />\nsimple matter to add and remove user.</p>\n</li>\n</ol>\n<p>XLogin has the option to restrict an external service to only users with<br />\nexternal aliases. This allows tight control on who can use external<br />\nservices to login.</p>\n<p>A user&#8217;s profile in WordPress and in the external service may be<br />\ndifferent.  Email address is one, and display name (or its component<br />\nfamily and given names) is another. XLogin offers the option to import<br />\nthe external profile information into the current session. The imported<br />\ndisplay name will be tagged with the external service name. For<br />\nexample, if a user has display name &#8216;John Doe&#8217; in WordPress, but is<br />\nknown as &#8216;Johnny D&#8217; in his Facebook account, then he would be<br />\ndisplayed as &#8216;Johnny D (Facebook)&#8217; (instead of &#8216;John Doe&#8217;) in his<br />\nWordPress session when he logs in with Facebook.</p>\n<p>Finally XLogin has the notion of &#8216;guest&#8217; user. When an email address<br />\nprovided by an external service does not correspond to a specific<br />\nWordPress user, XLogin will proceed with a guest WordPress user<br />\nconfigured for the service. There are plugins that control access to<br />\ncontent based on user roles; a site can combine such with XLogin to<br />\ncontrol what is visible to guests. Note that guest WordPress users<br />\nshould have minimal privileges. XLogin has safeguards to ensure, for<br />\nexample, that a guest cannot edit posts. It also filters out guest&#8217;s<br />\npermission to access the dashboard or to update their own profile.</p>\n",
        "installation": "<ol>\n<li>Upload the plugin files to the &#8216;&#8230;/wp-content/plugins/xlogin&#8217;<br />\ndirectory, or install the plugin through the &#8216;Plugin&#8217;s screen in<br />\nWordPress.</li>\n<li>Activate the plugin.</li>\n<li>Configure external services for login on the Settings-&gt;XLogin page.\n<ul>\n<li>Enter configuration data for the external service. For an<br />\nOAuth2 based service, that means client ID and client<br />\nsecret. Note that the redirect URI for OAuth2 is displayed here.</li>\n<li>Set per-service options:\n<ul>\n<li>Restrict to users with external aliases.</li>\n<li>Import profile information (email address and name) from<br />\nexternal service into session.</li>\n</ul>\n</li>\n<li>Enable external services.</li>\n</ul>\n</li>\n<li>Maintain external aliases on the Settings-&gt;XLogin page.\n<ul>\n<li>Aliases may be added/updated/deleted one at a time.</li>\n<li>Filters may be applied to the list of aliases displayed.</li>\n<li>Multiple aliases may be uploaded in a CSV file. Each line in the<br />\nfile contains an email address and a WordPress user name,<br />\nseparated by comma.</li>\n</ul>\n</li>\n</ol>\n<p>If WordPress permalinks are &#8216;plain&#8217;, one may need to configure the<br />\nweb server to route callbacks from external service to WordPress<br />\nindex.php script. For Apache that would mean rewrite rules in<br />\n.htaccess like theses:<br />\n    <code>RewriteEngine On<br />\n  RewriteRule wp-content/plugins/xlogin/callback/ index.php [L]</code></p>\n",
        "faq": "\n<dt id='does%20this%20work%20with%20wordpress%20version%20x%3F'>\nDoes this work with WordPress version X?\n</h4>\n<p>\n<p>This plugin was originally developed with WordPress 5.3. It has been<br />\ntested to various extent up to 5.7.</p>\n</p>\n<dt id='does%20this%20work%20with%20php%205.x%3F'>\nDoes this work with PHP 5.x?\n</h4>\n<p>\n<p>No. This plugin uses various PHP 7.x features. Backporting to PHP 5.x<br />\nshould not be difficult however.</p>\n</p>\n<dt id='how%20do%20i%20obtain%20client%20id%20and%20secret%20to%20configure%20an%20oauth2%20based%20external%20service%28%20e.g.%20facebook%29%3F'>\nHow do I obtain client ID and secret to configure an OAuth2 based external service( e.g. Facebook)?\n</h4>\n<p>\n<p>Here are some pointers:</p>\n<ul>\n<li>\n<p>Google. A project must first be set up. OAuth2 clients are<br />\nmanaged on the <a href=\"https://console.developers.google.com/apis/credentials\" rel=\"nofollow ugc\">API credentials</a> page. Use an existing or<br />\ncreate a new OAuth client, of &#8216;web application&#8217; type.</p>\n</li>\n<li>\n<p>Facebook. An &#8216;app&#8217; must first be set up. Use the &#8216;App ID&#8217; and<br />\n&#8216;App Secret&#8217; from the its basic settings page for client ID and<br />\nsecret respectively. Add Facebook Login to the product list of the<br />\napp, and configures the redirect URI there.</p>\n</li>\n<li>\n<p>Yahoo. A Yahoo app corresponds to an OAuth2 client. Make sure<br />\nyour app has email and profile permissions for OpenID Connect.</p>\n</li>\n</ul>\n</p>\n<dt id='a%20user%20tries%20to%20login%20with%20google%2C%20but%20gets%20sent%20back%20to%20the%20wordpress%20login%20page%20with%20a%20%22google%20user%20not%20recognized%22%20error.%20what%20does%20this%20mean%3F'>\nA user tries to login with Google, but gets sent back to the WordPress login page with a &#8220;Google user not recognized&#8221; error. What does this mean?\n</h4>\n<p>\n<p>XLogin uses the email address provided by Google (or whatever external<br />\nservice) to map to a WordPress user. Check the following:</p>\n<ul>\n<li>\n<p>Is the email address registered as an external alias in XLogin?</p>\n</li>\n<li>\n<p>Does email address belong to a WordPress user profile? If so,<br />\nmake sure the external service is not configured as &#8216;restricted&#8217;.</p>\n</li>\n</ul>\n</p>\n<dt id='the%20%22%2Axyz%2A%20user%20not%20recognized%22%20error%20is%20confusing.%20can%20the%20login%20page%20show%20only%20external%20login%20buttons%20that%20are%20applicable%20to%20the%20user%3F'>\nThe &#8220;*XYZ* user not recognized&#8221; error is confusing. Can the login page show only external login buttons that are applicable to the user?\n</h4>\n<p>\n<p>Generally XLogin may not know anything about the user until the end of<br />\nauthentication/authorization with the external service, so it would be<br />\na challenge.</p>\n</p>\n<dt id='how%20does%20xlogin%20override%20the%20email%20and%20display%20name%20of%20a%20user%3F'>\nHow does XLogin override the email and display name of a user?\n</h4>\n<p>\n<p>This is rather technical, but is important for ongoing maintenance of<br />\nthe plugin. This answer is intended for PHP developers working with<br />\nWordPress.</p>\n<p>WordPress keeps track of the user of the current request in various PHP<br />\nglobal variables. XLogin installs a callback for the <code>set_current_user</code><br />\naction to inject profile information from external service into them.<br />\nThe action name and the global data structures may be specific to<br />\nWordPress versions; the file <code>init.php</code> and the PHP method<br />\n    XLogin::importXUser() are expected to be modified to support more<br />\nWordPress versions.</p>\n</p>\n<dt id='can%20xlogin%20be%20used%20for%20new%20user%20registration%3F'>\nCan XLogin be used for new user registration?\n</h4>\n<p>\n<p>This is not supported currently.</p>\n</p>\n<dt id='can%20xlogin%20support%20other%20external%20services%3F'>\nCan XLogin support other external services?\n</h4>\n<p>\n<p>XLogin uses the <a href=\"https://oauth2-client.thephpleague.com/\" rel=\"nofollow ugc\">OAuth 2 Client</a> from The League of<br />\nExtraordinary Packages. It should be straightforward to add an<br />\nadditional OAuth2 based login service as long as a compatible<br />\n<em>provider</em> is available. See the <a href=\"https://oauth2-client.thephpleague.com/providers/league/\" rel=\"nofollow ugc\">list of providers</a>.</p>\n</p>\n\n",
        "changelog": "<h4>1.1.2</h4>\n<ul>\n<li>Facebook Graph API version may be specified in customization settings.</li>\n<li>Admin page built with Vue.js components that are bundled by webpack.js.</li>\n<li>Miscellaneous bug fixes.</li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>Miscellaneous bug fixes.</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Custom message to display with external login buttons.</li>\n<li>Guest user for unmatched email address.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>First version published.</li>\n</ul>\n"
    },
    "short_description": "Login to WordPress with external services like Facebook, Google, and Yahoo.",
    "description": "<p>XLogin enhances the WordPress login page (usually wp-login.php) to<br />\nallow users to authenticate with the following external services:</p>\n<ul>\n<li>Facebook Login</li>\n<li>Google Sign-In</li>\n<li>Yahoo! OAuth</li>\n</ul>\n<p>These services can be enabled or disabled individually. XLogin adds a<br />\nbutton to the WordPress login page for each enabled service. Clicking<br />\nthe button sends the browser to the corresponding external service<br />\nwhere the user can authorize the WordPress site to access their<br />\ninformation. Having been granted access to, for example, the Facebook<br />\npublic profile of a user, XLogin retrieves their email address to<br />\nfind a matching WordPress user to complete the login process.</p>\n<p>XLogin also maintains a list of external aliases. They are additional<br />\nemail addresses for mapping to WordPress users. Some scenarios where<br />\nexternal aliases can be handy include:</p>\n<ol>\n<li>\n<p>A user&#8217;s email address in his WordPress profile is not used in any<br />\nof the external services. For example, a corporate WordPress site<br />\nmay mandate the use of company email addresses in user<br />\nprofiles. If a user has for example his Gmail address in the<br />\nexternal alias list, they can still nevertheless sign in Google.</p>\n</li>\n<li>\n<p>A WordPress user account is shared by a group of actual<br />\nusers. With XLogin it is not necessary to have the users share a<br />\nsingle password. Instead just register their email addresses (as<br />\nknown by the external services) as external aliases; it becomes a<br />\nsimple matter to add and remove user.</p>\n</li>\n</ol>\n<p>XLogin has the option to restrict an external service to only users with<br />\nexternal aliases. This allows tight control on who can use external<br />\nservices to login.</p>\n<p>A user&#8217;s profile in WordPress and in the external service may be<br />\ndifferent.  Email address is one, and display name (or its component<br />\nfamily and given names) is another. XLogin offers the option to import<br />\nthe external profile information into the current session. The imported<br />\ndisplay name will be tagged with the external service name. For<br />\nexample, if a user has display name &#8216;John Doe&#8217; in WordPress, but is<br />\nknown as &#8216;Johnny D&#8217; in his Facebook account, then he would be<br />\ndisplayed as &#8216;Johnny D (Facebook)&#8217; (instead of &#8216;John Doe&#8217;) in his<br />\nWordPress session when he logs in with Facebook.</p>\n<p>Finally XLogin has the notion of &#8216;guest&#8217; user. When an email address<br />\nprovided by an external service does not correspond to a specific<br />\nWordPress user, XLogin will proceed with a guest WordPress user<br />\nconfigured for the service. There are plugins that control access to<br />\ncontent based on user roles; a site can combine such with XLogin to<br />\ncontrol what is visible to guests. Note that guest WordPress users<br />\nshould have minimal privileges. XLogin has safeguards to ensure, for<br />\nexample, that a guest cannot edit posts. It also filters out guest&#8217;s<br />\npermission to access the dashboard or to update their own profile.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/xlogin.1.1.3.zip",
    "upgrade_notice": {
        "": "<p>None yet.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/xlogin/assets/screenshot-1.png?rev=2264831",
            "caption": "WordPress login page with buttons for external logins."
        },
        {
            "src": "https://ps.w.org/xlogin/assets/screenshot-2.png?rev=2264831",
            "caption": "Display name of user imported from external service, e.g. Facebook."
        },
        {
            "src": "https://ps.w.org/xlogin/assets/screenshot-3.png?rev=2310981",
            "caption": "XLogin settings page."
        },
        {
            "src": "https://ps.w.org/xlogin/assets/screenshot-4.png?rev=2310981",
            "caption": "Configuration of OAuth2 based external service, e.g. Google.\nNote the redirect URI that should be added to the OAuth2 client\nconfiguration in the external service."
        },
        {
            "src": "https://ps.w.org/xlogin/assets/screenshot-5.png?rev=2264831",
            "caption": "Add or update an external alias."
        },
        {
            "src": "https://ps.w.org/xlogin/assets/screenshot-6.png?rev=2264831",
            "caption": "Upload CSV file of external aliases."
        }
    ],
    "tags": {
        "facebook": "facebook",
        "google": "google",
        "login": "login",
        "oauth": "oauth",
        "yahoo": "yahoo"
    },
    "stable_tag": "1.1.3",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/xlogin.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/xlogin.1.1.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/xlogin.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/xlogin.1.1.2.zip",
        "1.1.3": "https://downloads.wordpress.org/plugin/xlogin.1.1.3.zip",
        "trunk": "https://downloads.wordpress.org/plugin/xlogin.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/xlogin/assets/icon-128x128.png?rev=2266781",
        "2x": "https://ps.w.org/xlogin/assets/icon-256x256.png?rev=2266781"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}