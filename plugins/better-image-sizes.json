{
    "name": "Better image sizes",
    "slug": "better-image-sizes",
    "version": "3.6",
    "author": "<a href=\"https://kubiq.sk\">KubiQ</a>",
    "author_profile": "https://profiles.wordpress.org/kubiq/",
    "contributors": {
        "kubiq": {
            "profile": "https://profiles.wordpress.org/kubiq/",
            "avatar": "https://secure.gravatar.com/avatar/72e79356c815437b0af519be56eec8a4?s=96&d=monsterid&r=g",
            "display_name": "kubiq"
        }
    },
    "requires": "3.0.1",
    "tested": "6.5.5",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 2,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/better-image-sizes/",
    "support_threads": 2,
    "support_threads_resolved": 1,
    "active_installs": 1000,
    "downloaded": 8128,
    "last_updated": "2024-03-28 2:15pm GMT",
    "added": "2022-11-18",
    "homepage": "https://wp-speedup.eu",
    "sections": {
        "description": "<p>This plugin is ment mostly for developers. You need to use its functions in your theme or plugin to make it works.</p>\n<p>This plugin offers functionality like <strong>face detection crop</strong>, <strong>focal point selector</strong> for every image, <strong>function to output responsive &lt;picture&gt; sizes</strong> and more.</p>\n<h3>Why to use this plugin?</h3>\n<p>WordPress will automatically create a lot of smaller images for every uploaded image.<br />\nYou mostly need just 1 or 2 of them, so this is a waste of your server space and resources.<br />\nAlso cropped images are generated from the center by default, which can be a problem many times.</p>\n<p><strong>This plugin allows you to:</strong></p>\n<ul>\n<li>disable autogenerated image sizes</li>\n<li>dynamically generate only needed image sizes for only needed images</li>\n<li>delete generated image sizes from this plugin individually or all together</li>\n<li>specify different focal point that will be in the focus while creating cropped versions of the image</li>\n<li>automatically detect focal point by face detection algorithm</li>\n<li>disable big image size threshold, so image bigger than 2560x2560px will be NOT scaled down</li>\n</ul>\n<h3>How it works</h3>\n<ol>\n<li>if you disable existing autogenerated image sizes, then newly uploaded images will not create its sizes</li>\n<li>you need to specify in your code what size is needed for the image</li>\n<li>image is dynamically created on the first visit of the page and is stored in <code>uploads</code> folder</li>\n<li>every next visit of that page will just load already generated image</li>\n</ol>\n<h3>Functions</h3>\n<p><strong>bis_get_attachment_image_src( $attachment_id, $size, $crop )</strong></p>\n<p>Function inspired by default <code>wp_get_attachment_image_src</code>.<br />\nIf you used <em>Fly Dynamic Image Resizer</em> before, you don&#8217;t need to replace <code>fly_get_attachment_image_src</code> functions in your code &#8211; there is a fallback, so you can deactivate <em>Fly Dynamic Image Resizer</em> and it will still work.</p>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><strong>attachment_id</strong> (integer)(required)<br />\nThe ID of the image attachment<br />\nExample: <code>123</code> or <code>get_post_thumbnail_id()</code> or <code>get_field('my_image')</code></p>\n</li>\n<li>\n<p><strong>size</strong> (array)(required)<br />\nAn array with the width and height<br />\nExample: <code>[ 1920, 1080 ]</code></p>\n</li>\n<li>\n<p><strong>crop</strong> (boolean/integer/array/string)(optional)<br />\nSkip this or pass <code>false</code> or <code>0</code> if you don&#8217;t want to crop, just rescale,<br />\notherwise pass <code>true</code> or <code>1</code> to use focal point crop that is selected in admin media (by default center),<br />\nor pass array with string x-axis and y-axis parameters like <code>[ 'right', 'bottom' ]</code><br />\nor pass array with numeric x-axis and y-axis parameters like <code>[ 0.5, 0.8 ]</code><br />\nor pass string <code>'face'</code> to automatically detect face position (can be exhaustive on server resources)</p>\n</li>\n</ul>\n<p>Returns:</p>\n<pre><code>array(\n    'src' =&gt; (string) url of the image,\n    'width' =&gt; (integer) width in pixels,\n    'height' =&gt; (integer) height in pixels\n)\n</code></pre>\n<p>&nbsp;</p>\n<p><strong>bis_get_attachment_image( $attachment_id, $size, $crop, $attr )</strong></p>\n<p>Function inspired by default <code>wp_get_attachment_image</code>.<br />\nIf you used <em>Fly Dynamic Image Resizer</em> before, you don&#8217;t need to replace <code>fly_get_attachment_image</code> functions in your code &#8211; there is a fallback, so you can deactivate <em>Fly Dynamic Image Resizer</em> and it will still work.</p>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><strong>attachment_id</strong> (integer)(required)<br />\nThe ID of the image attachment<br />\nExample: <code>123</code> or <code>get_post_thumbnail_id()</code> or <code>get_field('my_image')</code></p>\n</li>\n<li>\n<p><strong>size</strong> (array)(required)<br />\nAn array with the width and height<br />\nExample: <code>[ 1920, 1080 ]</code></p>\n</li>\n<li>\n<p><strong>crop</strong> (boolean/integer/array/string)(optional)<br />\nSkip this or pass <code>false</code> or <code>0</code> if you don&#8217;t want to crop, just rescale,<br />\notherwise pass <code>true</code> or <code>1</code> to use focal point crop that is selected in admin media (by default center),<br />\nor pass array with string x-axis and y-axis parameters like <code>[ 'right', 'bottom' ]</code><br />\nor pass array with numeric x-axis and y-axis parameters like <code>[ 0.5, 0.8 ]</code><br />\nor pass string <code>'face'</code> to automatically detect face position (can be exhaustive on server resources)</p>\n</li>\n<li>\n<p><strong>attr</strong> (array)(optional)<br />\nAn array of attributes<br />\nSpecial attribute <code>retina</code> allows you to automatically generate srcset for <code>@2x</code> retina devices<br />\nExample: <code>array( 'retina' =&gt; true, 'alt' =&gt; 'Custom alt text', 'class' =&gt; 'my-class', 'id' =&gt; 'my-id' )</code></p>\n</li>\n</ul>\n<p>Returns:</p>\n<pre><code>&lt;img src=\"https://web.com/wp-content/uploads/bis-images/1234/your-image-500x500-f50_50.jpg\" width=\"500\" height=\"500\" alt=\"Alt text\"&gt;\n</code></pre>\n<p>&nbsp;</p>\n<p><strong>bis_get_attachment_picture( $attachment_id, $sizes, $attr )</strong></p>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><strong>attachment_id</strong> (integer)(required)<br />\nThe ID of the image attachment<br />\nExample: <code>123</code> or <code>get_post_thumbnail_id()</code> or <code>get_field('my_image')</code></p>\n</li>\n<li>\n<p><strong>sizes</strong> (array)(required)<br />\nAn array with the <code>key =&gt; value</code> pair<br />\nwhere <code>key</code> means <strong>breakpoint</strong><br />\nand <code>value</code> is array of <strong>width, height, crop and alternative_attachment_id</strong><br />\nExample: <code>[ 767 =&gt; [ 767, 400, 1, 987 ], 9999 =&gt; [ 1200, 500, 1 ] ]</code><br />\nThis will generate <code>&lt;source media=\"(max-width:767px)\" srcset=\"image987_767x400.jpg\"&gt;</code><br />\nand <code>&lt;source media=\"(max-width:9999px)\" srcset=\"image_1200x500.jpg\"&gt;</code><br />\nand <code>&lt;source media=\"(min-width:10000px)\" srcset=\"image.jpg\"&gt;</code></p>\n</li>\n<li>\n<p><strong>attr</strong> (array)(optional)<br />\nAn array of attributes<br />\nSpecial attribute <code>retina</code> allows you to automatically generate srcset for <code>@2x</code> retina devices<br />\nExample: <code>array( 'retina' =&gt; true, 'alt' =&gt; 'Custom alt text', 'class' =&gt; 'my-class', 'id' =&gt; 'my-id' )</code></p>\n</li>\n</ul>\n<p>Example:<br />\nTo generate perfect fullwidth hero image, that will looks great on 4K devices and also on small phones, but it will load only needed size, you can use:</p>\n<pre><code>echo bis_get_attachment_picture(\n    get_post_thumbnail_id(),\n    [\n        375 =&gt; [ 375, 500, 1, 987 ],\n        575 =&gt; [ 575, 500, 1, 987 ],\n        767 =&gt; [ 767, 500, 1, 987 ],\n        991 =&gt; [ 991, 500, 1 ],\n        1199 =&gt; [ 1199, 500, 1 ],\n        1399 =&gt; [ 1399, 500, 1 ],\n        1600 =&gt; [ 1600, 500, 1 ],\n        1920 =&gt; [ 1920, 500, 1 ],\n        2560 =&gt; [ 2560, 500, 1 ],\n        3440 =&gt; [ 3440, 500, 1 ],\n        3840 =&gt; [ 3840, 500, 1 ],\n    ]\n);\n</code></pre>\n<p>Returns:</p>\n<pre><code>&lt;picture&gt;\n    &lt;source media=\"(max-width:375px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/987/your-image-375x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:575px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/987/your-image-575x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:767px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/987/your-image-767x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:991px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-991x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1199px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1199x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1399px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1399x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1600px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1600x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1920px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1920x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:2560px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-2560x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:3440px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-3440x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:3840px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-3840x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(min-width:3841px)\" srcset=\"https://web.com/wp-content/uploads/2022/11/your-image.jpg\"&gt;\n    &lt;img width=\"4000\" height=\"2000\" src=\"https://web.com/wp-content/uploads/2022/11/your-image.jpg\" alt=\"Some alt\" loading=\"lazy\"&gt;\n&lt;/picture&gt;\n</code></pre>\n<p>&nbsp;</p>\n<h3>There is no fallback for <code>fly_add_image_size</code> function</h3>\n<p>If you used <em>Fly Dynamic Image Resizer</em> before, you need to remove <code>fly_add_image_size</code> functions from your code.<br />\nYou can create your own variables for sizes if you need it, like</p>\n<pre><code>define( 'MY_CUSTOM_SIZE', [ 1000, 200 ] );\n</code></pre>\n<p>and then just us it inside functions, like:</p>\n<pre><code>echo bis_get_attachment_image( get_post_thumbnail_id(), MY_CUSTOM_SIZE );\n</code></pre>\n<p>&nbsp;</p>\n<h3>Support other extensions than JPG, PNG and WEBP</h3>\n<p>This plugin works by default only with JPG, PNG and WEBP files,<br />\nbut you can easily allow any other mime types,<br />\njust use this code eg. in <code>wp-config.php</code> or in your <code>functions.php</code></p>\n<pre><code>define( 'BIS_ALLOWED_MIME_TYPES', array( 'image/jpeg', 'image/png', 'any_other/mime_type' ) );\n</code></pre>\n<p>&nbsp;</p>\n<h3>Get selected image focal point</h3>\n<p>Focal point data are stored in the attachement post metas.<br />\nThere is also custom sanitize function, that you can use.</p>\n<pre><code>$focal_point = sanitize_focal_point( get_post_meta( get_post_thumbnail_id(), 'focal_point', true ) );\n</code></pre>\n<p>Returns:</p>\n<pre><code>array( 0.5, 0.8 )\n</code></pre>\n<p>which means that focal point is 50% from left and 80% from top</p>\n",
        "installation": "<ol>\n<li>Upload the plugin files to the /wp-content/plugins/ directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the ‘Plugins’ screen in WordPress</li>\n</ol>\n",
        "faq": "\n<dt id='images%20stored%20location'>\nImages stored location\n</h4>\n<p>\n<p>/wp-content/uploads/bis-images/{IMAGE_ID}/{IMAGE_FILENAME}-{IMAGE_SIZE}-f{IMAGE_FOCAL_POINT}.{IMAGE_EXTENSION}</p>\n</p>\n\n",
        "changelog": "<h4>3.6</h4>\n<ul>\n<li>tested on WP 6.5</li>\n</ul>\n<h4>3.5</h4>\n<ul>\n<li>tested on WP 6.4</li>\n</ul>\n<h4>3.4</h4>\n<ul>\n<li>new (4th) parameter for bis_get_attachment_picture $sizes &#8211; you can specify alternative image ID, so you can easily use different image eg. on mobile and desktop</li>\n</ul>\n<h4>3.3</h4>\n<ul>\n<li>tested on WP 6.3</li>\n<li>removed deprecated lazy loading function</li>\n</ul>\n<h4>3.2</h4>\n<ul>\n<li>enable also for WebP mime type by default</li>\n</ul>\n<h4>3.1</h4>\n<ul>\n<li>enhanced face detection crop position</li>\n<li>fallback to old focal point if face not found</li>\n</ul>\n<h4>3.0</h4>\n<ul>\n<li>new Face Detection option for $crop (use &#8216;face&#8217;)</li>\n</ul>\n<h4>2.0</h4>\n<ul>\n<li>fix deleting single image sizes</li>\n</ul>\n<h4>1.9</h4>\n<ul>\n<li>make retina attribute works also with not-cropped images</li>\n</ul>\n<h4>1.8</h4>\n<ul>\n<li>add missing parameter for wp_get_attachment_image</li>\n</ul>\n<h4>1.7</h4>\n<ul>\n<li>fix for images with zero width &#8211; force crop to false in that case</li>\n</ul>\n<h4>1.6</h4>\n<ul>\n<li>fix missing PHP variable causing error on some servers</li>\n</ul>\n<h4>1.5</h4>\n<ul>\n<li>fix for images with zero height &#8211; force crop to false in that case</li>\n</ul>\n<h4>1.4</h4>\n<ul>\n<li>return empty array for _src function if image was deleted</li>\n</ul>\n<h4>1.3</h4>\n<ul>\n<li>make retina attribute works also in bis_get_attachment_picture function</li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>return correct/consistent array keys with bis_get_attachment_image_src even when wp_get_attachment_image_src is called</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>small fix for resizer when height is zero</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>First version</li>\n</ul>\n"
    },
    "short_description": "Dynamically generate only needed image sizes for only needed images, with manually selected focal point for crops",
    "description": "<p>This plugin is ment mostly for developers. You need to use its functions in your theme or plugin to make it works.</p>\n<p>This plugin offers functionality like <strong>face detection crop</strong>, <strong>focal point selector</strong> for every image, <strong>function to output responsive &lt;picture&gt; sizes</strong> and more.</p>\n<h3>Why to use this plugin?</h3>\n<p>WordPress will automatically create a lot of smaller images for every uploaded image.<br />\nYou mostly need just 1 or 2 of them, so this is a waste of your server space and resources.<br />\nAlso cropped images are generated from the center by default, which can be a problem many times.</p>\n<p><strong>This plugin allows you to:</strong></p>\n<ul>\n<li>disable autogenerated image sizes</li>\n<li>dynamically generate only needed image sizes for only needed images</li>\n<li>delete generated image sizes from this plugin individually or all together</li>\n<li>specify different focal point that will be in the focus while creating cropped versions of the image</li>\n<li>automatically detect focal point by face detection algorithm</li>\n<li>disable big image size threshold, so image bigger than 2560x2560px will be NOT scaled down</li>\n</ul>\n<h3>How it works</h3>\n<ol>\n<li>if you disable existing autogenerated image sizes, then newly uploaded images will not create its sizes</li>\n<li>you need to specify in your code what size is needed for the image</li>\n<li>image is dynamically created on the first visit of the page and is stored in <code>uploads</code> folder</li>\n<li>every next visit of that page will just load already generated image</li>\n</ol>\n<h3>Functions</h3>\n<p><strong>bis_get_attachment_image_src( $attachment_id, $size, $crop )</strong></p>\n<p>Function inspired by default <code>wp_get_attachment_image_src</code>.<br />\nIf you used <em>Fly Dynamic Image Resizer</em> before, you don&#8217;t need to replace <code>fly_get_attachment_image_src</code> functions in your code &#8211; there is a fallback, so you can deactivate <em>Fly Dynamic Image Resizer</em> and it will still work.</p>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><strong>attachment_id</strong> (integer)(required)<br />\nThe ID of the image attachment<br />\nExample: <code>123</code> or <code>get_post_thumbnail_id()</code> or <code>get_field('my_image')</code></p>\n</li>\n<li>\n<p><strong>size</strong> (array)(required)<br />\nAn array with the width and height<br />\nExample: <code>[ 1920, 1080 ]</code></p>\n</li>\n<li>\n<p><strong>crop</strong> (boolean/integer/array/string)(optional)<br />\nSkip this or pass <code>false</code> or <code>0</code> if you don&#8217;t want to crop, just rescale,<br />\notherwise pass <code>true</code> or <code>1</code> to use focal point crop that is selected in admin media (by default center),<br />\nor pass array with string x-axis and y-axis parameters like <code>[ 'right', 'bottom' ]</code><br />\nor pass array with numeric x-axis and y-axis parameters like <code>[ 0.5, 0.8 ]</code><br />\nor pass string <code>'face'</code> to automatically detect face position (can be exhaustive on server resources)</p>\n</li>\n</ul>\n<p>Returns:</p>\n<pre><code>array(\n    'src' =&gt; (string) url of the image,\n    'width' =&gt; (integer) width in pixels,\n    'height' =&gt; (integer) height in pixels\n)\n</code></pre>\n<p>&nbsp;</p>\n<p><strong>bis_get_attachment_image( $attachment_id, $size, $crop, $attr )</strong></p>\n<p>Function inspired by default <code>wp_get_attachment_image</code>.<br />\nIf you used <em>Fly Dynamic Image Resizer</em> before, you don&#8217;t need to replace <code>fly_get_attachment_image</code> functions in your code &#8211; there is a fallback, so you can deactivate <em>Fly Dynamic Image Resizer</em> and it will still work.</p>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><strong>attachment_id</strong> (integer)(required)<br />\nThe ID of the image attachment<br />\nExample: <code>123</code> or <code>get_post_thumbnail_id()</code> or <code>get_field('my_image')</code></p>\n</li>\n<li>\n<p><strong>size</strong> (array)(required)<br />\nAn array with the width and height<br />\nExample: <code>[ 1920, 1080 ]</code></p>\n</li>\n<li>\n<p><strong>crop</strong> (boolean/integer/array/string)(optional)<br />\nSkip this or pass <code>false</code> or <code>0</code> if you don&#8217;t want to crop, just rescale,<br />\notherwise pass <code>true</code> or <code>1</code> to use focal point crop that is selected in admin media (by default center),<br />\nor pass array with string x-axis and y-axis parameters like <code>[ 'right', 'bottom' ]</code><br />\nor pass array with numeric x-axis and y-axis parameters like <code>[ 0.5, 0.8 ]</code><br />\nor pass string <code>'face'</code> to automatically detect face position (can be exhaustive on server resources)</p>\n</li>\n<li>\n<p><strong>attr</strong> (array)(optional)<br />\nAn array of attributes<br />\nSpecial attribute <code>retina</code> allows you to automatically generate srcset for <code>@2x</code> retina devices<br />\nExample: <code>array( 'retina' =&gt; true, 'alt' =&gt; 'Custom alt text', 'class' =&gt; 'my-class', 'id' =&gt; 'my-id' )</code></p>\n</li>\n</ul>\n<p>Returns:</p>\n<pre><code>&lt;img src=\"https://web.com/wp-content/uploads/bis-images/1234/your-image-500x500-f50_50.jpg\" width=\"500\" height=\"500\" alt=\"Alt text\"&gt;\n</code></pre>\n<p>&nbsp;</p>\n<p><strong>bis_get_attachment_picture( $attachment_id, $sizes, $attr )</strong></p>\n<p>Parameters:</p>\n<ul>\n<li>\n<p><strong>attachment_id</strong> (integer)(required)<br />\nThe ID of the image attachment<br />\nExample: <code>123</code> or <code>get_post_thumbnail_id()</code> or <code>get_field('my_image')</code></p>\n</li>\n<li>\n<p><strong>sizes</strong> (array)(required)<br />\nAn array with the <code>key =&gt; value</code> pair<br />\nwhere <code>key</code> means <strong>breakpoint</strong><br />\nand <code>value</code> is array of <strong>width, height, crop and alternative_attachment_id</strong><br />\nExample: <code>[ 767 =&gt; [ 767, 400, 1, 987 ], 9999 =&gt; [ 1200, 500, 1 ] ]</code><br />\nThis will generate <code>&lt;source media=\"(max-width:767px)\" srcset=\"image987_767x400.jpg\"&gt;</code><br />\nand <code>&lt;source media=\"(max-width:9999px)\" srcset=\"image_1200x500.jpg\"&gt;</code><br />\nand <code>&lt;source media=\"(min-width:10000px)\" srcset=\"image.jpg\"&gt;</code></p>\n</li>\n<li>\n<p><strong>attr</strong> (array)(optional)<br />\nAn array of attributes<br />\nSpecial attribute <code>retina</code> allows you to automatically generate srcset for <code>@2x</code> retina devices<br />\nExample: <code>array( 'retina' =&gt; true, 'alt' =&gt; 'Custom alt text', 'class' =&gt; 'my-class', 'id' =&gt; 'my-id' )</code></p>\n</li>\n</ul>\n<p>Example:<br />\nTo generate perfect fullwidth hero image, that will looks great on 4K devices and also on small phones, but it will load only needed size, you can use:</p>\n<pre><code>echo bis_get_attachment_picture(\n    get_post_thumbnail_id(),\n    [\n        375 =&gt; [ 375, 500, 1, 987 ],\n        575 =&gt; [ 575, 500, 1, 987 ],\n        767 =&gt; [ 767, 500, 1, 987 ],\n        991 =&gt; [ 991, 500, 1 ],\n        1199 =&gt; [ 1199, 500, 1 ],\n        1399 =&gt; [ 1399, 500, 1 ],\n        1600 =&gt; [ 1600, 500, 1 ],\n        1920 =&gt; [ 1920, 500, 1 ],\n        2560 =&gt; [ 2560, 500, 1 ],\n        3440 =&gt; [ 3440, 500, 1 ],\n        3840 =&gt; [ 3840, 500, 1 ],\n    ]\n);\n</code></pre>\n<p>Returns:</p>\n<pre><code>&lt;picture&gt;\n    &lt;source media=\"(max-width:375px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/987/your-image-375x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:575px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/987/your-image-575x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:767px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/987/your-image-767x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:991px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-991x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1199px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1199x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1399px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1399x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1600px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1600x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:1920px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-1920x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:2560px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-2560x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:3440px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-3440x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(max-width:3840px)\" srcset=\"https://web.com/wp-content/uploads/bis-images/123/your-image-3840x500-f50_50.jpg\"&gt;\n    &lt;source media=\"(min-width:3841px)\" srcset=\"https://web.com/wp-content/uploads/2022/11/your-image.jpg\"&gt;\n    &lt;img width=\"4000\" height=\"2000\" src=\"https://web.com/wp-content/uploads/2022/11/your-image.jpg\" alt=\"Some alt\" loading=\"lazy\"&gt;\n&lt;/picture&gt;\n</code></pre>\n<p>&nbsp;</p>\n<h3>There is no fallback for <code>fly_add_image_size</code> function</h3>\n<p>If you used <em>Fly Dynamic Image Resizer</em> before, you need to remove <code>fly_add_image_size</code> functions from your code.<br />\nYou can create your own variables for sizes if you need it, like</p>\n<pre><code>define( 'MY_CUSTOM_SIZE', [ 1000, 200 ] );\n</code></pre>\n<p>and then just us it inside functions, like:</p>\n<pre><code>echo bis_get_attachment_image( get_post_thumbnail_id(), MY_CUSTOM_SIZE );\n</code></pre>\n<p>&nbsp;</p>\n<h3>Support other extensions than JPG, PNG and WEBP</h3>\n<p>This plugin works by default only with JPG, PNG and WEBP files,<br />\nbut you can easily allow any other mime types,<br />\njust use this code eg. in <code>wp-config.php</code> or in your <code>functions.php</code></p>\n<pre><code>define( 'BIS_ALLOWED_MIME_TYPES', array( 'image/jpeg', 'image/png', 'any_other/mime_type' ) );\n</code></pre>\n<p>&nbsp;</p>\n<h3>Get selected image focal point</h3>\n<p>Focal point data are stored in the attachement post metas.<br />\nThere is also custom sanitize function, that you can use.</p>\n<pre><code>$focal_point = sanitize_focal_point( get_post_meta( get_post_thumbnail_id(), 'focal_point', true ) );\n</code></pre>\n<p>Returns:</p>\n<pre><code>array( 0.5, 0.8 )\n</code></pre>\n<p>which means that focal point is 50% from left and 80% from top</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/better-image-sizes.3.6.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/better-image-sizes/assets/screenshot-1.png?rev=2820398",
            "caption": "Plugin settings"
        },
        {
            "src": "https://ps.w.org/better-image-sizes/assets/screenshot-2.png?rev=2820398",
            "caption": "Single file regenerate thumbnails"
        },
        {
            "src": "https://ps.w.org/better-image-sizes/assets/screenshot-3.png?rev=2820398",
            "caption": "Focal point picker"
        }
    ],
    "tags": {
        "images": "images",
        "media": "media",
        "retina": "retina",
        "sizes": "sizes",
        "thumbnails": "thumbnails"
    },
    "stable_tag": "3.6",
    "versions": {
        "3.2": "https://downloads.wordpress.org/plugin/better-image-sizes.3.2.zip",
        "3.3": "https://downloads.wordpress.org/plugin/better-image-sizes.3.3.zip",
        "3.4": "https://downloads.wordpress.org/plugin/better-image-sizes.3.4.zip",
        "3.5": "https://downloads.wordpress.org/plugin/better-image-sizes.3.5.zip",
        "3.6": "https://downloads.wordpress.org/plugin/better-image-sizes.3.6.zip",
        "trunk": "https://downloads.wordpress.org/plugin/better-image-sizes.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.me/jakubnovaksl",
    "banners": {
        "low": "https://ps.w.org/better-image-sizes/assets/banner-772x250.png?rev=2820398",
        "high": "https://ps.w.org/better-image-sizes/assets/banner-1544x500.png?rev=2820398"
    },
    "icons": {
        "1x": "https://ps.w.org/better-image-sizes/assets/icon-128x128.png?rev=2820398",
        "2x": "https://ps.w.org/better-image-sizes/assets/icon-256x256.png?rev=2820398"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}