{
    "name": "Speak Sound Library",
    "slug": "speak-sound-library",
    "version": "1.0.0",
    "author": "<a href=\"http://www.vincentcimo.com/\">Michael Crivello and Vince Cimo</a>",
    "author_profile": "https://profiles.wordpress.org/vincecimo/",
    "contributors": {
        "vincecimo": {
            "profile": "https://profiles.wordpress.org/vincecimo/",
            "avatar": "https://secure.gravatar.com/avatar/b269d2d03da4e9279cdd83b3fae526c9?s=96&d=monsterid&r=g",
            "display_name": "vince.cimo"
        }
    },
    "requires": "3.8.1",
    "tested": "4.1.41",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/speak-sound-library/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 2067,
    "last_updated": "2015-03-12 06:30:00",
    "added": "2015-02-17",
    "homepage": "http://www.speakstudioscoop.com",
    "sections": {
        "description": "<p>Speak Sound Library allows tight management and presentation of a music library. Users can import mp3â€™s into the system with an individual uploader or by recursively scanning a folder uploaded via ftp. Once scanned, the ID3 information is extracted out of the mp3 files and used to create a SQL entry. The resulting â€˜postsâ€™ are then organized and filterable by artist, genre, album, etc. Users can also attach additional meta-data, such as a youtube link to each song. This song data can be presented on the front-end using our pluginâ€™s short code methods, which returns PHP objects, or using an ajax hook, which returns formatted JSON data. An example implementation (still beta), can be seen at http://www.speakstudioscoop.com/music.</p>\n<h3>Wiring up a Frontend Player</h3>\n<p>This plugin is merely a backend management system and can be extended using any type of front-end player. You can either use PHP hooks to prepare html, or use a jQuery ajax method, which returns sound data formatted in JSON.</p>\n<p>This method will return a JSON string of all of the sounds in your library:</p>\n<p>var data = {<br />\n            action: &#8216;get_songs&#8217;<br />\n        };</p>\n<pre><code>    jQuery.post(ajaxurl, data, function (response) { console.log(response);\n    });\n</code></pre>\n<p>You can also filter by genre, album or artist (mutually exclusive), like this:</p>\n<p>var data = {<br />\n            action: &#8216;get_songs&#8217;,<br />\n            albumFilter: &#8216;Dark Side of the Moon&#8217;,<br />\n            artistFilter: &#8216;Pink Floyd&#8217;,<br />\n            genreFilter: &#8216;Rock&#8217;<br />\n        };</p>\n<pre><code>    jQuery.post(ajaxurl, data, function (response) { console.log(response);\n    });\n</code></pre>\n<p>Using PHP, you can retrieve sounds the same as you would any other post, just add &#8216;post_type&#8217; =&gt; &#8216;sounds&#8217; to your get_posts() query.</p>\n<p>Enjoy ðŸ™‚</p>\n",
        "installation": "<ol>\n<li>Upload the entire contents of the speak-sound-library.zip file to the wp-content/plugins/ directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Create and manage your sounds using the newly created &#8216;sounds&#8217; section.</li>\n</ol>\n",
        "faq": "\n<h4>How does this plugin grab meta-data from mp3 files?</h4>\n<p>\n<p>The plugin works with the generated meta from the WordPress Media Library, pulled from id3 tags.</p>\n</p>\n<h4>How do I create many sounds at once?</h4>\n<p>\n<p>Using the &#8220;Add sounds from folder&#8221; section, you can upload your mp3s via ftp to any subdirectory of the wp-uploads folder. Go to the &#8216;add sounds from folder&#8217; section, and enter the path you just uploaded, in URL format. After you hit &#8220;Create Sounds&#8221;, the plugin will recursively scan the specified directory and add posts for each file.</p>\n</p>\n\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Initial Release</li>\n</ul>\n"
    },
    "short_description": "Plugin for managing a library of sounds with simple frontend hooks.",
    "description": "<p>Speak Sound Library allows tight management and presentation of a music library. Users can import mp3â€™s into the system with an individual uploader or by recursively scanning a folder uploaded via ftp. Once scanned, the ID3 information is extracted out of the mp3 files and used to create a SQL entry. The resulting â€˜postsâ€™ are then organized and filterable by artist, genre, album, etc. Users can also attach additional meta-data, such as a youtube link to each song. This song data can be presented on the front-end using our pluginâ€™s short code methods, which returns PHP objects, or using an ajax hook, which returns formatted JSON data. An example implementation (still beta), can be seen at http://www.speakstudioscoop.com/music.</p>\n<h3>Wiring up a Frontend Player</h3>\n<p>This plugin is merely a backend management system and can be extended using any type of front-end player. You can either use PHP hooks to prepare html, or use a jQuery ajax method, which returns sound data formatted in JSON.</p>\n<p>This method will return a JSON string of all of the sounds in your library:</p>\n<p>var data = {<br />\n            action: &#8216;get_songs&#8217;<br />\n        };</p>\n<pre><code>    jQuery.post(ajaxurl, data, function (response) { console.log(response);\n    });\n</code></pre>\n<p>You can also filter by genre, album or artist (mutually exclusive), like this:</p>\n<p>var data = {<br />\n            action: &#8216;get_songs&#8217;,<br />\n            albumFilter: &#8216;Dark Side of the Moon&#8217;,<br />\n            artistFilter: &#8216;Pink Floyd&#8217;,<br />\n            genreFilter: &#8216;Rock&#8217;<br />\n        };</p>\n<pre><code>    jQuery.post(ajaxurl, data, function (response) { console.log(response);\n    });\n</code></pre>\n<p>Using PHP, you can retrieve sounds the same as you would any other post, just add &#8216;post_type&#8217; =&gt; &#8216;sounds&#8217; to your get_posts() query.</p>\n<p>Enjoy ðŸ™‚</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/speak-sound-library.1.2.zip",
    "upgrade_notice": {
        "": "<p>Nothing here, really.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/speak-sound-library/assets/screenshot-1.png?rev=1092843",
            "caption": "This is the primary sound management page."
        }
    ],
    "tags": {
        "itunes": "itunes",
        "library": "library",
        "mp3": "mp3",
        "music": "music",
        "player": "player"
    },
    "stable_tag": "1.2",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/speak-sound-library.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/speak-sound-library.1.1.zip",
        "1.2": "https://downloads.wordpress.org/plugin/speak-sound-library.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/speak-sound-library.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://www.speakstudioscoop.com/",
    "banners": {
        "low": "https://ps.w.org/speak-sound-library/assets/banner-772x250.jpg?rev=1092866",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/speak-sound-library/assets/icon-128x128.png?rev=1092866",
        "2x": "https://ps.w.org/speak-sound-library/assets/icon-256x256.png?rev=1092854"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}