{
    "name": "REST XML-RPC Data Checker",
    "slug": "rest-xmlrpc-data-checker",
    "version": "1.4.0",
    "author": "<a href=\"https://github.com/enrico-sorcinelli/rest-xmlrpc-data-checker/graphs/contributors\">Enrico Sorcinelli</a>",
    "author_profile": "https://profiles.wordpress.org/enricosorcinelli/",
    "contributors": {
        "enricosorcinelli": {
            "profile": "https://profiles.wordpress.org/enricosorcinelli/",
            "avatar": "https://secure.gravatar.com/avatar/867d8ef978fe5540af96e7eaa67665cc?s=96&d=monsterid&r=g",
            "display_name": "Enrico Sorcinelli"
        }
    },
    "requires": "4.4",
    "tested": "6.0.9",
    "requires_php": "5.2.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 3,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 3,
    "support_url": "https://wordpress.org/support/plugin/rest-xmlrpc-data-checker/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 1000,
    "downloaded": 8652,
    "last_updated": "2022-08-04 6:44am GMT",
    "added": "2018-11-11",
    "homepage": "https://github.com/enrico-sorcinelli/rest-xmlrpc-data-checker",
    "sections": {
        "description": "<p>JSON REST API and XML-RPC API are powerful ways to remotely interact with WordPress.</p>\n<p>If you don&#8217;t have external applications that need to communicate with your WordPress instance using JSON REST API or XML-RPC API you should disable access to them for external requests.</p>\n<p>In the standard WordPress installation JSON REST API and XML-RPC API are enabled by default.<br />\nIn particular the REST API is turned on also for unlogged users. This means that your WordPress instance is potentially leaking data, for example anyone could be able to:</p>\n<ul>\n<li>copy easily your published contents natively with the REST API (and not with a web crawler);</li>\n<li>get the list of all users (with their ID, nickname and name);</li>\n<li>retrieve other information that you didn&#8217;t want to be public (such as an unlisted published page or a saved media not yet used).</li>\n</ul>\n<p>Even if you could do the stuff by writing your own code using native filters, this plugin aims to help you to control JSON REST API and XML-RPC API accesses from the administration panel or programmatically by a simple API filter.</p>\n<h3>Basic Features</h3>\n<ul>\n<li><strong>Disable REST API</strong> interface for unlogged users.</li>\n<li><strong>Disable JSONP support</strong> on REST API.</li>\n<li><strong>Add Basic Authentication</strong> to REST API.</li>\n<li><strong>Remove</strong> REST <code>&lt;link&gt;</code> tags, REST <code>Link</code> HTTP header and REST Really Simple Discovery (RSD) informations.</li>\n<li><strong>Setup trusted users, IP/Networks and endpoints</strong> for unlogged users REST requests.</li>\n<li><strong>Change REST endpoint prefix</strong>.</li>\n<li><strong>Disable XML-RPC API</strong> interface.</li>\n<li><strong>Remove</strong> <code>&lt;link&gt;</code> to the Really Simple Discovery (RDS) informations.</li>\n<li><strong>Remove</strong> <code>X-Pingback</code> HTTP header.</li>\n<li><strong>Setup trusted users, IP/Networks and methods</strong> for XML-RPC requests.</li>\n<li><strong>Show user&#8217;s access informations</strong> in users list administration screen.</li>\n</ul>\n<h3>Usage</h3>\n<p>Once the plugin is installed you can control settings in the following ways:</p>\n<ul>\n<li>Using the <em>Settings-&gt;REST XML-RPC Data Checker</em> administration screen.</li>\n<li>Programmatically, by using <code>rest_xmlrpc_data_checker_settings</code> filter (see below).</li>\n</ul>\n<h3>API</h3>\n<h4>Hooks</h4>\n<p><strong><code>rest_xmlrpc_data_checker_settings</code></strong></p>\n<p>Filters plugin settings values.</p>\n<pre><code>apply_filters( 'rest_xmlrpc_data_checker_settings', array $settings )\n</code></pre>\n<p><strong><code>rest_xmlrpc_data_checker_admin_settings</code></strong></p>\n<p>Filter allowing to display or not the plugin settings page in the administration.</p>\n<pre><code>apply_filters( 'rest_xmlrpc_data_checker_admin_settings', boolean $display )\n</code></pre>\n<p><strong><code>rest_xmlrpc_data_checker_rest_error</code></strong></p>\n<p>Filter JSON REST authentication error after plugin checks.</p>\n<pre><code>apply_filters( 'rest_xmlrpc_data_checker_rest_error', WP_Error|boolean $result )\n</code></pre>\n<p><strong><code>xmlrpc_before_insert_post</code></strong></p>\n<p>Filter XML-RPC post data to be inserted via XML-RPC before to insert post into database.</p>\n<pre><code>apply_filters( 'xmlrpc_before_insert_post', array|IXR_Error $content_struct, WP_User $user )\n</code></pre>\n",
        "installation": "<p>This section describes how to install the plugin and get it working.</p>\n<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/rest-xmlrpc-data-checker</code> directory, or install the plugin through the WordPress <em>Plugins</em> screen directly.</li>\n<li>Activate the plugin through the <em>Plugins</em> screen in WordPress.</li>\n</ol>\n",
        "faq": "\n<dt id='does%20it%20work%20with%20gutenberg%3F'>\nDoes it work with Gutenberg?\n</h4>\n<p>\n<p>Yes</p>\n</p>\n<dt id='does%20it%20work%20on%20multisite%3F'>\nDoes it work on Multisite?\n</h4>\n<p>\n<p>Yes</p>\n</p>\n<dt id='how%20do%20i%20make%20rest%20requests%20using%20basic%20authentication%3F'>\nHow do I make REST requests using Basic Authentication?\n</h4>\n<p>\n<p>In the <em>REST</em> tab of plugin settings page you have to:</p>\n<ul>\n<li>check <strong>Disable REST API interface for unlogged users</strong> option</li>\n<li>select <strong>Use Basic Authentication</strong> in the <em>Authentication</em> section</li>\n<li>select users whom you want to grant REST access</li>\n<li>save changes</li>\n</ul>\n<p>This way, in HTTP REST external requests, users have to add <code>Authorization</code> HTTP header.</p>\n<p>In order to generate the <code>Authorization</code> HTTP header to use with Basic Authentication you simply have to base64 encode the username and password separated by a colon.</p>\n<p>Here is an example in PHP:</p>\n<pre><code>$header = 'Authorization: Basic ' . base64_encode( 'my-user:my-password' );\n</code></pre>\n<p><a href=\"https://gist.github.com/enrico-sorcinelli/d33b6889888e95f710bc50a2090a25cf\" rel=\"nofollow ugc\">Here you can see several examples</a> in a variety of language.</p>\n<p>Note that the Basic Authentication requires sending your username and password with every request, and should only be used over SSL-secured connections or for local development and testing.<br />\nWithout SSL you are strongly encouraged to to turn off Basic Authentication in production environments.</p>\n</p>\n\n",
        "changelog": "<p>For REST XML-RPC Data Checker changelog, please see <a href=\"https://github.com/enrico-sorcinelli/rest-xmlrpc-data-checker/releases\" rel=\"nofollow ugc\">the Releases page on GitHub</a>.</p>\n"
    },
    "short_description": "REST XML-RPC Data Checker allow to check JSON REST and XML-RPC API requests and grant access permissions.",
    "description": "<p>JSON REST API and XML-RPC API are powerful ways to remotely interact with WordPress.</p>\n<p>If you don&#8217;t have external applications that need to communicate with your WordPress instance using JSON REST API or XML-RPC API you should disable access to them for external requests.</p>\n<p>In the standard WordPress installation JSON REST API and XML-RPC API are enabled by default.<br />\nIn particular the REST API is turned on also for unlogged users. This means that your WordPress instance is potentially leaking data, for example anyone could be able to:</p>\n<ul>\n<li>copy easily your published contents natively with the REST API (and not with a web crawler);</li>\n<li>get the list of all users (with their ID, nickname and name);</li>\n<li>retrieve other information that you didn&#8217;t want to be public (such as an unlisted published page or a saved media not yet used).</li>\n</ul>\n<p>Even if you could do the stuff by writing your own code using native filters, this plugin aims to help you to control JSON REST API and XML-RPC API accesses from the administration panel or programmatically by a simple API filter.</p>\n<h3>Basic Features</h3>\n<ul>\n<li><strong>Disable REST API</strong> interface for unlogged users.</li>\n<li><strong>Disable JSONP support</strong> on REST API.</li>\n<li><strong>Add Basic Authentication</strong> to REST API.</li>\n<li><strong>Remove</strong> REST <code>&lt;link&gt;</code> tags, REST <code>Link</code> HTTP header and REST Really Simple Discovery (RSD) informations.</li>\n<li><strong>Setup trusted users, IP/Networks and endpoints</strong> for unlogged users REST requests.</li>\n<li><strong>Change REST endpoint prefix</strong>.</li>\n<li><strong>Disable XML-RPC API</strong> interface.</li>\n<li><strong>Remove</strong> <code>&lt;link&gt;</code> to the Really Simple Discovery (RDS) informations.</li>\n<li><strong>Remove</strong> <code>X-Pingback</code> HTTP header.</li>\n<li><strong>Setup trusted users, IP/Networks and methods</strong> for XML-RPC requests.</li>\n<li><strong>Show user&#8217;s access informations</strong> in users list administration screen.</li>\n</ul>\n<h3>Usage</h3>\n<p>Once the plugin is installed you can control settings in the following ways:</p>\n<ul>\n<li>Using the <em>Settings-&gt;REST XML-RPC Data Checker</em> administration screen.</li>\n<li>Programmatically, by using <code>rest_xmlrpc_data_checker_settings</code> filter (see below).</li>\n</ul>\n<h3>API</h3>\n<h4>Hooks</h4>\n<p><strong><code>rest_xmlrpc_data_checker_settings</code></strong></p>\n<p>Filters plugin settings values.</p>\n<pre><code>apply_filters( 'rest_xmlrpc_data_checker_settings', array $settings )\n</code></pre>\n<p><strong><code>rest_xmlrpc_data_checker_admin_settings</code></strong></p>\n<p>Filter allowing to display or not the plugin settings page in the administration.</p>\n<pre><code>apply_filters( 'rest_xmlrpc_data_checker_admin_settings', boolean $display )\n</code></pre>\n<p><strong><code>rest_xmlrpc_data_checker_rest_error</code></strong></p>\n<p>Filter JSON REST authentication error after plugin checks.</p>\n<pre><code>apply_filters( 'rest_xmlrpc_data_checker_rest_error', WP_Error|boolean $result )\n</code></pre>\n<p><strong><code>xmlrpc_before_insert_post</code></strong></p>\n<p>Filter XML-RPC post data to be inserted via XML-RPC before to insert post into database.</p>\n<pre><code>apply_filters( 'xmlrpc_before_insert_post', array|IXR_Error $content_struct, WP_User $user )\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.4.0.zip",
    "upgrade_notice": {
        "1.4.0": "<ul>\n<li>Multisite support improvement for superadmin plugin&#039;s caps.</li>\n<li>Tested to the latest WordPress release.</li>\n</ul>",
        "1.3.1": "<ul>\n<li>Allows to use PHP single line comments in trusted network option; allows to prevent to leave blocks comments in <code>post_content</code> via XML-RPC.</li>\n</ul>",
        "1.3.0": "<ul>\n<li>Trusted networks check over IP address found in HTTP headers added by proxy or load balancer is now disabled by default. It can be enabled on plugin settings page.</li>\n</ul>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/rest-xmlrpc-data-checker/assets/screenshot-1.png?rev=2096750",
            "caption": "The JSON REST settings section."
        },
        {
            "src": "https://ps.w.org/rest-xmlrpc-data-checker/assets/screenshot-2.png?rev=2096750",
            "caption": "The XML-RPC settings section."
        },
        {
            "src": "https://ps.w.org/rest-xmlrpc-data-checker/assets/screenshot-3.png?rev=2047276",
            "caption": "The Options settings section."
        },
        {
            "src": "https://ps.w.org/rest-xmlrpc-data-checker/assets/screenshot-4.png?rev=2047276",
            "caption": "Enable XML-RPC and REST interfaces on user profile/user edit pages (available only for users with <code>edit_users</code> capability)."
        },
        {
            "src": "https://ps.w.org/rest-xmlrpc-data-checker/assets/screenshot-5.png?rev=2047276",
            "caption": "User list administration screen."
        }
    ],
    "tags": {
        "api": "api",
        "json": "JSON",
        "rest": "rest",
        "security": "security",
        "xmlrpc": "xmlrpc"
    },
    "stable_tag": "1.4.0",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.0.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.0.1.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.1.0.zip",
        "1.2.1": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.2.1.zip",
        "1.2.2": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.2.2.zip",
        "1.3.0": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.3.0.zip",
        "1.3.1": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.3.1.zip",
        "1.3.2": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.3.2.zip",
        "1.4.0": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.1.4.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/rest-xmlrpc-data-checker.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/rest-xmlrpc-data-checker/assets/icon-128x128.png?rev=1973092",
        "2x": "https://ps.w.org/rest-xmlrpc-data-checker/assets/icon-256x256.png?rev=1973092"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}