{
    "name": "KL Debug",
    "slug": "kl-debug",
    "version": "1.0.5",
    "author": "<a href=\"https://www.krealab.fr\">Krea'Lab</a>",
    "author_profile": "https://profiles.wordpress.org/krealab/",
    "contributors": {
        "krealab": {
            "profile": "https://profiles.wordpress.org/krealab/",
            "avatar": "https://secure.gravatar.com/avatar/e1524c7db2e0969e04670ad8bb735170?s=96&d=monsterid&r=g",
            "display_name": "Kiwik"
        }
    },
    "requires": "5.2",
    "tested": "6.0.9",
    "requires_php": "7.2",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/kl-debug/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1113,
    "last_updated": "2022-06-24 7:18am GMT",
    "added": "2020-02-25",
    "homepage": "",
    "sections": {
        "description": "<p>Add a Debug Bar to your WordPress website to debug and develop your themes, plugins, etc&#8230;</p>\n<p>With the plugin you can find every variables you want to debug in the same place and use debug functions to display them.</p>\n<h4>Prerequisites</h4>\n<p>To fully help you to debug your website you need to add some code to your <code>wp-config.php</code> file.</p>\n<pre><code>define( 'WP_DEBUG', true ); // PHP errors, notices and warnings will be displayed\ndefine( 'SAVEQUERIES', true ); // Display queries in current page\ndefine( 'WP_DISABLE_FATAL_ERROR_HANDLER', true ); // Disable WP Fatal error handler\n</code></pre>\n<h4>Usage of the debug functions</h4>\n<p>To debug a simple variable you can use:</p>\n<pre><code>&lt;?php dump( $var ); // Dump the variable(s) ?&gt;\n</code></pre>\n<p>To debug a variable and stop the process after you can use:</p>\n<pre><code>&lt;?php dd( $var ); // This will die after dumping the variable(s) ?&gt;\n</code></pre>\n<h4>Debug a variable in the debug bar</h4>\n<p>This is one of the main aspect of the plugin, to debug variables in a separate place.</p>\n<p>The most difficult task when you debug a variable is to deal with container width, with the plugin you have a debug bar where you can add the variables of the current page.</p>\n<p>To add a variable to the debug bar you can use the function bellow:</p>\n<pre><code>&lt;?php kl_debug_add_var( $var ); ?&gt;\n</code></pre>\n<p>You can add custom tabs in the debug bar to filter you variables:</p>\n<pre><code>&lt;?php\nkl_debug_add_var(\n    $var, // The variable you want to debug\n    'Your variable title', // If you want to name the variable\n    'The section title', // The tab title\n    'the-section-slug' // The tab slug\n);\n?&gt;\n</code></pre>\n<h4>What&#8217;s Whoops in the setting panel?</h4>\n<p>Whoops is the framework that we use to display error handling. (cf. Pretty error handler with stack frames)</p>\n",
        "installation": "<h4>Requirements</h4>\n<p>This plugin requires at least PHP 7.2.</p>\n<h4>How to install the plugin</h4>\n<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/kl-debug</code> directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the \\&#8217;Plugins\\&#8217; screen in WordPress</li>\n<li>Use the Tools-&gt;KL Debug screen to configure the plugin</li>\n</ol>\n",
        "faq": "\n<dt id='how%20to%20set%20which%20php%20errors%20are%20reported%3F'>\nHow to set which PHP errors are reported?\n</h4>\n<p>\n<p>Simply add <code>error_reporting(E_ALL &amp; ~E_NOTICE);</code> to the top of your theme functions.php file. This will only display errors that are not notices.</p>\n</p>\n<dt id='how%20can%20i%20deactivate%20the%20plugin%20if%20i%20can%27t%20access%20the%20admin%20screen%20%3F'>\nHow can I deactivate the plugin if I can&#8217;t access the admin screen ?\n</h4>\n<p>\n<p>Go to your FTP explorer and navigate to the plugin: wp-content&gt;plugins. Rename the folder by adding an _ in the beginning of the folder name.</p>\n</p>\n\n",
        "changelog": "<h4>1.0.5</h4>\n<ul>\n<li>[Added] Tested up to WordPress 6.0</li>\n<li>[Updated] Composer dependencies</li>\n</ul>\n<h4>1.0.4</h4>\n<ul>\n<li>[Added] Tested up to WordPress 5.8.2</li>\n</ul>\n<h4>1.0.3</h4>\n<ul>\n<li>[Added] Tested up to WordPress 5.7.2</li>\n</ul>\n<h4>1.0.2</h4>\n<ul>\n<li>[Added] Optimize autoload.php</li>\n<li>[Fixed] autoload.php require path that can cause error 500</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>[Fixed] jQuery error when plugin installed on WordPress 5.5</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>[Added] Initial release</li>\n</ul>\n"
    },
    "short_description": "Friendly debug bar for developer, debug variables helpers and pretty error handler interface(powered by Whoops).",
    "description": "<p>Add a Debug Bar to your WordPress website to debug and develop your themes, plugins, etc&#8230;</p>\n<p>With the plugin you can find every variables you want to debug in the same place and use debug functions to display them.</p>\n<h4>Prerequisites</h4>\n<p>To fully help you to debug your website you need to add some code to your <code>wp-config.php</code> file.</p>\n<pre><code>define( 'WP_DEBUG', true ); // PHP errors, notices and warnings will be displayed\ndefine( 'SAVEQUERIES', true ); // Display queries in current page\ndefine( 'WP_DISABLE_FATAL_ERROR_HANDLER', true ); // Disable WP Fatal error handler\n</code></pre>\n<h4>Usage of the debug functions</h4>\n<p>To debug a simple variable you can use:</p>\n<pre><code>&lt;?php dump( $var ); // Dump the variable(s) ?&gt;\n</code></pre>\n<p>To debug a variable and stop the process after you can use:</p>\n<pre><code>&lt;?php dd( $var ); // This will die after dumping the variable(s) ?&gt;\n</code></pre>\n<h4>Debug a variable in the debug bar</h4>\n<p>This is one of the main aspect of the plugin, to debug variables in a separate place.</p>\n<p>The most difficult task when you debug a variable is to deal with container width, with the plugin you have a debug bar where you can add the variables of the current page.</p>\n<p>To add a variable to the debug bar you can use the function bellow:</p>\n<pre><code>&lt;?php kl_debug_add_var( $var ); ?&gt;\n</code></pre>\n<p>You can add custom tabs in the debug bar to filter you variables:</p>\n<pre><code>&lt;?php\nkl_debug_add_var(\n    $var, // The variable you want to debug\n    'Your variable title', // If you want to name the variable\n    'The section title', // The tab title\n    'the-section-slug' // The tab slug\n);\n?&gt;\n</code></pre>\n<h4>What&#8217;s Whoops in the setting panel?</h4>\n<p>Whoops is the framework that we use to display error handling. (cf. Pretty error handler with stack frames)</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/kl-debug.1.0.5.zip",
    "upgrade_notice": {
        "1.0": "<p>Initial release</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/kl-debug/assets/screenshot-1.png?rev=2249773",
            "caption": "Debug bar open"
        },
        {
            "src": "https://ps.w.org/kl-debug/assets/screenshot-2.png?rev=2249773",
            "caption": "Settings interface"
        },
        {
            "src": "https://ps.w.org/kl-debug/assets/screenshot-3.png?rev=2249773",
            "caption": "Pretty error handler with stack frames(powered by Whoops)"
        }
    ],
    "tags": {
        "debug": "debug",
        "developer": "developer",
        "toolbar": "toolbar"
    },
    "stable_tag": "1.0.5",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/kl-debug.1.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/kl-debug.1.0.1.zip",
        "1.0.2": "https://downloads.wordpress.org/plugin/kl-debug.1.0.2.zip",
        "1.0.3": "https://downloads.wordpress.org/plugin/kl-debug.1.0.3.zip",
        "1.0.4": "https://downloads.wordpress.org/plugin/kl-debug.1.0.4.zip",
        "1.0.5": "https://downloads.wordpress.org/plugin/kl-debug.1.0.5.zip",
        "trunk": "https://downloads.wordpress.org/plugin/kl-debug.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.krealab.fr/",
    "banners": {
        "low": "https://ps.w.org/kl-debug/assets/banner-772x250.png?rev=2249773",
        "high": "https://ps.w.org/kl-debug/assets/banner-1544x500.png?rev=2249773"
    },
    "icons": {
        "1x": "https://ps.w.org/kl-debug/assets/icon.svg?rev=2249773",
        "svg": "https://ps.w.org/kl-debug/assets/icon.svg?rev=2249773"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "kl-debug",
            "language": "fr_FR",
            "version": "1.0.4",
            "updated": "2020-09-04 15:36:11",
            "package": "http://downloads.wordpress.org/translation/plugin/kl-debug/1.0.4/fr_FR.zip"
        }
    ]
}