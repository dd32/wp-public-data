{
    "name": "AlertWire",
    "slug": "alertwire",
    "version": "1.2.2",
    "author": "<a href=\"https://www.alertwire.com/\">AlertWire</a>",
    "author_profile": "https://profiles.wordpress.org/alertwire/",
    "contributors": {
        "alertwire": {
            "profile": "https://profiles.wordpress.org/alertwire/",
            "avatar": "https://secure.gravatar.com/avatar/b6dc896b06909b7fb5d660286989794a?s=96&d=monsterid&r=g",
            "display_name": "AlertWire"
        }
    },
    "requires": "3.0",
    "tested": "4.7.29",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/alertwire/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 970,
    "last_updated": "2017-01-05 23:44:00",
    "added": "2014-12-16",
    "homepage": "https://www.alertwire.com/plugin/WordPress/AlertWire.zip",
    "sections": {
        "description": "<p><strong>AlertWire</strong> is a system for centralized administration of alert/messaging for multiple sites.</p>\n<p>Once your site has been configured in the AlertWire system, you can add this plug-in and set the data-token to enabled the checking of alerts.  When the<br />\npage is rendered, a <code>&lt;script&gt;</code> tag will be inserted into the document being rendered.</p>\n<p><em>How AlertWire Works</em></p>\n<ol>\n<li>The page is generated with the correct API server and <code>data-token</code> configured, typically added to the bottom of the page <code>body</code> tag.</li>\n<li>An async script tag is executed (late as possible) which loads a small (&lt;4K) javascript plug-in. This plug-in has no dependancies and will<br />\nnot interfere with any existing frameworks like jQuery</li>\n<li>A cross-domain JSON request is made to the AlertWire API service to determine if there are any active alerts for the <code>data-token</code> specified.</li>\n<li>If there are one or more alerts to view, a CSS style-sheet will also be loaded from the API server.</li>\n<li>The alerts are then generated dynamically into the document and styled automatically. There are several formats that are rendered<br />\ndifferently (e.g. page-top, lightbox, etc.).</li>\n<li>Tracking pixels are generated to record when a check-in for alerts cccurs and when a view or close or click-through of an alert occurs.</li>\n</ol>\n<p><em>Notes</em></p>\n<ul>\n<li>The javascript plug-in and CSS style-sheet are publically cached from a CDN and are very small, the impact on load times should be tiny.</li>\n<li>The CSS file is only loaded if there are alerts to be rendered.</li>\n<li>The javascript plug-in only introduces one symbol into the global scope, the <em>AlertWire</em> module. All other functionality is behind that scope.</li>\n<li>The plug-in will set a cookie when a user closes an alert to ensure it isn&#8217;t displayed again. Depending on the alert type, this cookie may be a<br />\nsession cookie or a durable cookie with a 1 year expiration.</li>\n<li>A very small font file will be downloaded for the alert icons the first time an alert is displayed to an end user.</li>\n</ul>\n",
        "installation": "<h4>Automatic Installation</h4>\n<ol>\n<li>Log into your WordPress admin</li>\n<li>Click &#8216;Plugins&#8217;</li>\n<li>Click &#8216;Add New&#8217;</li>\n<li>Search for <em>AlertWire</em></li>\n<li>Click &#8216;Install Now&#8217; under <em>AlertWire</em></li>\n<li>Activate the plugin through the <em>Plugins</em> menu in WordPress.</li>\n<li>Navigate to the <em>Settings/AlertWire</em> page</li>\n<li>Enter the <code>data-token</code> value provided on the site-setup page from the <em>AlertWire</em> system.</li>\n<li>Optionally enter the ID (or other valid CSS selector) for the container element alerts should be inserted into.</li>\n<li>Select if alerts should be shown on the Home/Front Page and/or the Single Post pages.</li>\n</ol>\n<h4>Manual Installation</h4>\n<ol>\n<li>Download from <a href=\"https://www.alertwire.com/plugin/WordPress/AlertWire.zip\" rel=\"nofollow ugc\">here</a> and unzip the plugin.</li>\n<li>Upload the entire <em>AlertWire</em> directory to <code>/wp-content/plugins/</code>.</li>\n<li>Activate the plugin through the <em>Plugins</em> menu in WordPress.</li>\n<li>Navigate to the <em>Settings/AlertWire</em> page</li>\n<li>Enter the <code>data-token</code> value provided on the site-setup page from the <em>AlertWire</em> system.</li>\n<li>Optionally enter the ID (or other valid CSS selector) for the container element alerts should be inserted into.</li>\n<li>Select if alerts should be shown on the Home/Front Page and/or the Single Post pages.</li>\n</ol>\n",
        "faq": "\n<h4>Will this slow down my pages?</h4>\n<p>\n<ul>\n<li>\n<p>The javascript plug-in is very small, is loaded from a global CDN (content delivery network) and is publically cacheable for years. Once a<br />\nend-user has visited your site it will be in their cache.</p>\n</li>\n<li>\n<p>The javascript snippet does a very fast JSON call that is publically cachable for 5 minutes (default), so even if your site is very heavily loaded it will be<br />\navailable long before any images are finished loading.</p>\n</li>\n<li>\n<p>The CSS file is only loaded <em>if</em> there are alerts to be rendered (not normally the case) and is also served from a CDN as a public long-cacheable file.<br />\nThis CSS file is under 2K and will only be downloaded one per end-user.</p>\n</li>\n<li>\n<p>The font file for the alert icons is downloaded only if there are alerts to be rendered and is also served from a CDN as a public long-cacheable file.<br />\nThis font file is under 10K and will only be downloaded once per end-user.</p>\n</li>\n<li>\n<p>The actual script execution is very fast and will not block on any downloads.</p>\n</li>\n</ul>\n</p>\n<h4>Will this break my pages?</h4>\n<p>\n<ul>\n<li>\n<p>All alerts are injected into the page in a <code>div</code> tag and the CSS generated is scoped via a nonce-based id. It should never interact with any styling on your page<br />\nbut you might need to provide a placement anchor-element to ensure your site CSS doesn&#8217;t hide the alert. The script snippet allows you to specify a container <code>div</code><br />\nto act as the parent for the injected alerts in case you need to adjust them around header or navigation elements.</p>\n</li>\n<li>\n<p>The alerts are deleted from the page DOM when closed so nothing remains on screen if the end-user closes the alert. The lightbox-style alert acts as a complete<br />\npage take-over and thus might have z-index issues, by default the alerts will be z-index of at least 10000.</p>\n</li>\n<li>\n<p>If the javascript snippet has an error, nothing will be displayed so nothing will need to be hidden.</p>\n</li>\n</ul>\n</p>\n<h4>What about updates?</h4>\n<p>\n<p>Since the <em>AlertWire</em> javascript client-side plug-in is long-cached, it has built-in ability to update itself to a new version. This is triggered by a<br />\nversion-requirement declared in the JSON response and is completely automatic.</p>\n</p>\n<h4>How much does this cost?</h4>\n<p>\n<p>The plug-in is free and use is included in the cost of an <em>AlertWire</em> system. For <a href=\"https://www.alertwire.com\" rel=\"nofollow ugc\">more information about AlertWire</a>.</p>\n</p>\n<h4>What if I stop using AlertWire?</h4>\n<p>\n<p>Since the script does essentially nothing if there are no alerts configured for the site, your script will just silently keep working and display nothing.</p>\n</p>\n<h4>Is this secure?</h4>\n<p>\n<ul>\n<li>Yes, everything is <em>only</em> loaded over HTTPS with OSCP stapling, Strict Transport Security (HSTS) required and preloaded in all browsers.</li>\n<li>No admin defined assets other than <em>pure text</em> are ever served to the end-user&#8217;s browser.</li>\n<li>No CSS, JS, HTML or image assets are available for hacking/injecting.</li>\n<li>All <em>AlertWire</em>-supplied content is served via the <a href=\"https://www.cloudflare.com\" rel=\"nofollow ugc\">CloudFlare CDN</a> with<br />\nQualsys SSL Labs <a href=\"https://www.ssllabs.com/ssltest/analyze.html?d=alertwire.com\" rel=\"nofollow ugc\">A+ SSL rating</a>.</li>\n<li>The administration application is fully tested against the OWASP best-practice criteria.</li>\n</ul>\n</p>\n\n",
        "changelog": "<h4>1.2.2</h4>\n<p>Resaved all files in UTF8 <em>without</em> BOM so we don&#8217;t bust headers</p>\n<h4>1.2.1</h4>\n<p>Removed unneeded markup in setting page.</p>\n<h4>1.2</h4>\n<p>Change default endpoint to https and note version compatibility to 4.7 and update notes.</p>\n<h4>1.1.1</h4>\n<p>Bump revision in the plug-in itself.</p>\n<h4>1.1</h4>\n<p>Cleanup now that we&#8217;re in the WordPress plug-in repo.</p>\n<h4>1.0</h4>\n<ul>\n<li>Initial release.</li>\n</ul>\n"
    },
    "short_description": "AlertWire plug-in to easily insert script tag for AlertWire client sites.",
    "description": "<p><strong>AlertWire</strong> is a system for centralized administration of alert/messaging for multiple sites.</p>\n<p>Once your site has been configured in the AlertWire system, you can add this plug-in and set the data-token to enabled the checking of alerts.  When the<br />\npage is rendered, a <code>&lt;script&gt;</code> tag will be inserted into the document being rendered.</p>\n<p><em>How AlertWire Works</em></p>\n<ol>\n<li>The page is generated with the correct API server and <code>data-token</code> configured, typically added to the bottom of the page <code>body</code> tag.</li>\n<li>An async script tag is executed (late as possible) which loads a small (&lt;4K) javascript plug-in. This plug-in has no dependancies and will<br />\nnot interfere with any existing frameworks like jQuery</li>\n<li>A cross-domain JSON request is made to the AlertWire API service to determine if there are any active alerts for the <code>data-token</code> specified.</li>\n<li>If there are one or more alerts to view, a CSS style-sheet will also be loaded from the API server.</li>\n<li>The alerts are then generated dynamically into the document and styled automatically. There are several formats that are rendered<br />\ndifferently (e.g. page-top, lightbox, etc.).</li>\n<li>Tracking pixels are generated to record when a check-in for alerts cccurs and when a view or close or click-through of an alert occurs.</li>\n</ol>\n<p><em>Notes</em></p>\n<ul>\n<li>The javascript plug-in and CSS style-sheet are publically cached from a CDN and are very small, the impact on load times should be tiny.</li>\n<li>The CSS file is only loaded if there are alerts to be rendered.</li>\n<li>The javascript plug-in only introduces one symbol into the global scope, the <em>AlertWire</em> module. All other functionality is behind that scope.</li>\n<li>The plug-in will set a cookie when a user closes an alert to ensure it isn&#8217;t displayed again. Depending on the alert type, this cookie may be a<br />\nsession cookie or a durable cookie with a 1 year expiration.</li>\n<li>A very small font file will be downloaded for the alert icons the first time an alert is displayed to an end user.</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/alertwire.zip",
    "upgrade_notice": {
        "1.2": "<p>Nothing to do, but you might want to explicitly point at https: for the .js file to save a redirection.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/alertwire/assets/screenshot-1.png?rev=1046376",
            "caption": "The plug-in settings screen, where you enter the <code>data-token</code> and select into what pages the script is injected."
        },
        {
            "src": "https://ps.w.org/alertwire/assets/screenshot-2.png?rev=1046376",
            "caption": "The script that is injected at the bottom of the page."
        }
    ],
    "tags": {
        "alert": "alert",
        "messaging": "messaging",
        "notice": "notice",
        "notification": "notification",
        "recall": "recall"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.1": "https://downloads.wordpress.org/plugin/alertwire.1.1.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/alertwire.1.1.1.zip",
        "1.2.2": "https://downloads.wordpress.org/plugin/alertwire.1.2.2.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.alertwire.com",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/alertwire.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}