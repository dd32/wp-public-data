{
    "name": "Curlest",
    "slug": "curlest",
    "version": "1.3",
    "author": "<a href=\"https://fulfillment.global/\">Fulfillment Global Corporation</a>",
    "author_profile": "https://profiles.wordpress.org/fulfillmentglobal/",
    "contributors": {
        "fulfillmentglobal": {
            "profile": "https://profiles.wordpress.org/fulfillmentglobal/",
            "avatar": "https://secure.gravatar.com/avatar/33df638c707ce941312d25bd41f07a2e?s=96&d=monsterid&r=g",
            "display_name": "Fulfillment.Global"
        }
    },
    "requires": "6.2",
    "tested": "6.6.1",
    "requires_php": "7.2",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/curlest/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 555,
    "last_updated": "2024-07-19 11:36am GMT",
    "added": "2024-04-17",
    "homepage": "https://curlest.com/",
    "sections": {
        "description": "<p>This plugin provides a shortcode (called &#8220;curlest&#8221;) that fetches and displays the raw content of a given HTTP URL as the shortcode&#8217;s output.</p>\n<h3>Third party service description</h3>\n<p>This plugin does not make use of any third party services. No data is collected or submitted by this plugin.</p>\n<p>This plugin&#8217;s source code may be verified for confirmation.</p>\n<h3>Usage</h3>\n<p>Install and activate the plugin.</p>\n<p>Use the Curlest shortcode inside a WordPress post or page:</p>\n<pre><code>[curlest url=\"\" cache=\"\" timeout=\"\" selector=\"\"]\n</code></pre>\n<ul>\n<li>\n<p>Valid values for <code>url</code>:</p>\n<ul>\n<li>e.g. <code>https://example.com/index.html</code></li>\n</ul>\n</li>\n<li>\n<p>Valid values for <code>cache</code>:</p>\n<ul>\n<li><code>nocache</code>: No caching, i.e. always fetch new URL contents fresh during each shortcode request</li>\n<li>The following will always respond with cached URL contents if available, and only fetches new URL data asynchronously, if the cached data has expired based on the given interval, where <code>N</code> is a number:</li>\n<li><code>N s</code> or <code>N seconds</code></li>\n<li><code>N m</code> or <code>N minutes</code></li>\n<li><code>N h</code> or <code>N hours</code></li>\n<li><code>N d</code> or <code>N days</code></li>\n<li>The following may respond with cached URL contents, if the cached data has not expired yet based on the given interval. The difference with the above is that, in the above, if the cached data is stale (expired), it will still be responded, but with the below (the added <code>fresh</code> option), stale data will never be responded, new data will first be fetched during the shortcode request before it is responded, where <code>N</code> is a number:</li>\n<li><code>N s fresh</code> or <code>N seconds fresh</code></li>\n<li><code>N m fresh</code> or <code>N minutes fresh</code></li>\n<li><code>N h fresh</code> or <code>N hours fresh</code></li>\n<li><code>N d fresh</code> or <code>N days fresh</code></li>\n</ul>\n</li>\n<li>\n<p>Valid values for <code>timeout</code>:</p>\n<ul>\n<li>Any number, e.g. <code>30</code> for 30 seconds. This parameter indicates how long to wait for a response when fetching the URL, before responding with an empty string.</li>\n</ul>\n</li>\n<li>\n<p>Valud values for <code>selector</code>:</p>\n<ul>\n<li>Any CSS selector, for example <code>div.a div.b.c .d-e</code> to return the inner HTML, as per a given CSS selector, from the contents of a fetched HTML document. This assumes that the fetched URL contents is valid HTML, otherwise, the shortcode&#8217;s output will be blank.</li>\n</ul>\n</li>\n</ul>\n",
        "faq": "<p>Is this plugin free to use?</p>\n<p>Yes, this plugin is free to use. The source code is available for you to examine what the plugin does and how it works.</p>\n"
    },
    "short_description": "Curlest",
    "description": "<p>This plugin provides a shortcode (called &#8220;curlest&#8221;) that fetches and displays the raw content of a given HTTP URL as the shortcode&#8217;s output.</p>\n<h3>Third party service description</h3>\n<p>This plugin does not make use of any third party services. No data is collected or submitted by this plugin.</p>\n<p>This plugin&#8217;s source code may be verified for confirmation.</p>\n<h3>Usage</h3>\n<p>Install and activate the plugin.</p>\n<p>Use the Curlest shortcode inside a WordPress post or page:</p>\n<pre><code>[curlest url=\"\" cache=\"\" timeout=\"\" selector=\"\"]\n</code></pre>\n<ul>\n<li>\n<p>Valid values for <code>url</code>:</p>\n<ul>\n<li>e.g. <code>https://example.com/index.html</code></li>\n</ul>\n</li>\n<li>\n<p>Valid values for <code>cache</code>:</p>\n<ul>\n<li><code>nocache</code>: No caching, i.e. always fetch new URL contents fresh during each shortcode request</li>\n<li>The following will always respond with cached URL contents if available, and only fetches new URL data asynchronously, if the cached data has expired based on the given interval, where <code>N</code> is a number:</li>\n<li><code>N s</code> or <code>N seconds</code></li>\n<li><code>N m</code> or <code>N minutes</code></li>\n<li><code>N h</code> or <code>N hours</code></li>\n<li><code>N d</code> or <code>N days</code></li>\n<li>The following may respond with cached URL contents, if the cached data has not expired yet based on the given interval. The difference with the above is that, in the above, if the cached data is stale (expired), it will still be responded, but with the below (the added <code>fresh</code> option), stale data will never be responded, new data will first be fetched during the shortcode request before it is responded, where <code>N</code> is a number:</li>\n<li><code>N s fresh</code> or <code>N seconds fresh</code></li>\n<li><code>N m fresh</code> or <code>N minutes fresh</code></li>\n<li><code>N h fresh</code> or <code>N hours fresh</code></li>\n<li><code>N d fresh</code> or <code>N days fresh</code></li>\n</ul>\n</li>\n<li>\n<p>Valid values for <code>timeout</code>:</p>\n<ul>\n<li>Any number, e.g. <code>30</code> for 30 seconds. This parameter indicates how long to wait for a response when fetching the URL, before responding with an empty string.</li>\n</ul>\n</li>\n<li>\n<p>Valud values for <code>selector</code>:</p>\n<ul>\n<li>Any CSS selector, for example <code>div.a div.b.c .d-e</code> to return the inner HTML, as per a given CSS selector, from the contents of a fetched HTML document. This assumes that the fetched URL contents is valid HTML, otherwise, the shortcode&#8217;s output will be blank.</li>\n</ul>\n</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/curlest.1.3.zip",
    "upgrade_notice": {
        "": "<p>No upgrade notice at present.</p>"
    },
    "screenshots": [],
    "tags": {
        "curlest": "curlest"
    },
    "stable_tag": "1.3",
    "versions": {
        "1.3": "https://downloads.wordpress.org/plugin/curlest.1.3.zip",
        "trunk": "https://downloads.wordpress.org/plugin/curlest.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/curlest/assets/banner-772x250.jpg?rev=3103026",
        "high": "https://ps.w.org/curlest/assets/banner-1544x500.jpg?rev=3103026"
    },
    "icons": {
        "1x": "https://ps.w.org/curlest/assets/icon.svg?rev=3103026",
        "svg": "https://ps.w.org/curlest/assets/icon.svg?rev=3103026"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}