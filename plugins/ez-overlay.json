{
    "name": "Ez Overlay",
    "slug": "ez-overlay",
    "version": "1.0",
    "author": "<a href=\"http://hyperspatial.com\">Adam J Nowak</a>",
    "author_profile": "https://profiles.wordpress.org/adam320/",
    "contributors": {
        "adam320": {
            "profile": "https://profiles.wordpress.org/adam320/",
            "avatar": "https://secure.gravatar.com/avatar/e04467ca1a08725637172dab53b52f9e?s=96&d=monsterid&r=g",
            "display_name": "Adam Nowak"
        }
    },
    "requires": "2.8",
    "tested": "3.0.5",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/ez-overlay/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3924,
    "last_updated": "2010-11-05 2:20am GMT",
    "added": "2010-11-05",
    "homepage": "http://hyperspatial.com/ez_overlay",
    "sections": {
        "description": "<p>This plugin is an alternative to the jQuery based lightbox systems.  It was created using pure Javascript and has no dependencies on any other libraries.  I created this simple lightbox after weeks of dealing with jQuery conflicts within Buddypress and WordPress.  Many of the existing jQuery type lightboxes do not stop audio playback for flash/.swf playback when closing the lightbox.  This plugin completely removes the overlay content from the dom to make absolutely sure your .swf file playback is stopped in all browsers.</p>\n<h3>Help</h3>\n<p><strong>How to implement the Ez Overlay lightbox:</strong></p>\n<ol>\n<li>Copy the code for this example into the WordPress editor in the HTML window or start from scratch and go to step 2.</li>\n<li>Create an Ez Overlay Div element by assigning it a with the class=&#8221;ez-overlay&#8221;, to avoid css conflicts  add your target div to the body of your html and not within a sidebar or another div.</li>\n<li>Assign the new Div a unique CSS Id so it can be activated by the trigger.  Ie: id=&#8221;my-overlay&#8221;.</li>\n<li>Put whatever Html content within the Ez Overlay Div.</li>\n<li>Create a trigger for the overlay, it can be just about any Html element but needs an &#8216;onlclick&#8217; attribute to activate the lightbox.  See the ezFade() function below.</li>\n</ol>\n<p><strong>Tips:</strong></p>\n<ol>\n<li>Ie7 will render text elements within this overlay at a different size than Ie8. If this is an issue, just assign a width and height to your Ez Overlay target div using an inline style.</li>\n<li>Avoid padding or adding margins to the Ez Overlay target div. Padding adds to a div&#8217;s width and height and will throw your overlay off-center. Just add a margin to the elements within the target div instead.</li>\n<li>In the folder named &#8216;uncompressed-js&#8217;, there is a file named &#8216;ez-overlay.js&#8217; which is a readable copy of the compressed code for tinkering.</li>\n<li>The plugin removes the overlay div&#8217;s from the dom when you exit out of them, this is so that .swf playback will be halted on all browsers. Don&#8217;t panic, the plugin immediately returns them to the body of your html document at the very end.</li>\n</ol>\n<p><strong>ezFade Function:</strong></p>\n<pre><code>onclick=\"ezFade('my-overlay4',800,true,100,100);\"\n</code></pre>\n<p>The ezFade() function accepts five arguments, the first being the target lightbox to be triggered, the second is the fade time. The third argument is to activate &quot;fixed mode&quot;, and finally the x/y coordinates if you want you overlay to be fixed in a certain position.</p>\n",
        "installation": "<ol>\n<li>Upload the entire &#8216;ez-overlay&#8217; folder to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Create your overlay&#8217;s and triggers with html using the examples included in the plugin folder.</li>\n<li>Example overlay div to be put in the body of your html: <code>&lt;div id=\"my-overlay1\" class=\"ez-overlay\"&gt;&lt;h2&gt;Ez Overlay&lt;/h2&gt;&lt;/div&gt;</code></li>\n<li>Example trigger to be put anywhere in your html code: <code>&lt;span style=\"cursor:pointer; color:#036;\" onclick=\"ezFade('my-overlay1');\"&gt;Open Overlay1&lt;/span&gt;</code></li>\n</ol>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Hello WordPress World!</li>\n</ul>\n"
    },
    "short_description": "A simple lightbox plugin designed to enable you to display html content within a popup window using just about any html element as a trigger.",
    "description": "<p>This plugin is an alternative to the jQuery based lightbox systems.  It was created using pure Javascript and has no dependencies on any other libraries.  I created this simple lightbox after weeks of dealing with jQuery conflicts within Buddypress and WordPress.  Many of the existing jQuery type lightboxes do not stop audio playback for flash/.swf playback when closing the lightbox.  This plugin completely removes the overlay content from the dom to make absolutely sure your .swf file playback is stopped in all browsers.</p>\n<h3>Help</h3>\n<p><strong>How to implement the Ez Overlay lightbox:</strong></p>\n<ol>\n<li>Copy the code for this example into the WordPress editor in the HTML window or start from scratch and go to step 2.</li>\n<li>Create an Ez Overlay Div element by assigning it a with the class=&#8221;ez-overlay&#8221;, to avoid css conflicts  add your target div to the body of your html and not within a sidebar or another div.</li>\n<li>Assign the new Div a unique CSS Id so it can be activated by the trigger.  Ie: id=&#8221;my-overlay&#8221;.</li>\n<li>Put whatever Html content within the Ez Overlay Div.</li>\n<li>Create a trigger for the overlay, it can be just about any Html element but needs an &#8216;onlclick&#8217; attribute to activate the lightbox.  See the ezFade() function below.</li>\n</ol>\n<p><strong>Tips:</strong></p>\n<ol>\n<li>Ie7 will render text elements within this overlay at a different size than Ie8. If this is an issue, just assign a width and height to your Ez Overlay target div using an inline style.</li>\n<li>Avoid padding or adding margins to the Ez Overlay target div. Padding adds to a div&#8217;s width and height and will throw your overlay off-center. Just add a margin to the elements within the target div instead.</li>\n<li>In the folder named &#8216;uncompressed-js&#8217;, there is a file named &#8216;ez-overlay.js&#8217; which is a readable copy of the compressed code for tinkering.</li>\n<li>The plugin removes the overlay div&#8217;s from the dom when you exit out of them, this is so that .swf playback will be halted on all browsers. Don&#8217;t panic, the plugin immediately returns them to the body of your html document at the very end.</li>\n</ol>\n<p><strong>ezFade Function:</strong></p>\n<pre><code>onclick=\"ezFade('my-overlay4',800,true,100,100);\"\n</code></pre>\n<p>The ezFade() function accepts five arguments, the first being the target lightbox to be triggered, the second is the fade time. The third argument is to activate &quot;fixed mode&quot;, and finally the x/y coordinates if you want you overlay to be fixed in a certain position.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/ez-overlay.1.0.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/ez-overlay/trunk/screenshot-1.png?rev=1566863",
            "caption": "A Swf overlay in action"
        }
    ],
    "tags": {
        "buddypress": "buddypress",
        "lightbox": "lightbox",
        "overlay": "overlay",
        "popup": "popup",
        "shadowbox": "shadowbox"
    },
    "stable_tag": "1.0",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/ez-overlay.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/ez-overlay.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://hyperspatial.com/donate",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/ez-overlay.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}