{
    "name": "CSV Importer Improved",
    "slug": "csv-importer-improved",
    "version": "0.6.1",
    "author": "Jason judge, Denis Kobozev",
    "author_profile": "https://profiles.wordpress.org/judgej/",
    "contributors": {
        "judgej": {
            "profile": "https://profiles.wordpress.org/judgej/",
            "avatar": "https://secure.gravatar.com/avatar/eae410d9ee092f30485000d6bd6f4d00?s=96&d=monsterid&r=g",
            "display_name": "Jason Judge"
        }
    },
    "requires": "3.0.0",
    "tested": "4.6.29",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 64,
    "ratings": {
        "5": 2,
        "4": 1,
        "3": 0,
        "2": 0,
        "1": 2
    },
    "num_ratings": 5,
    "support_url": "https://wordpress.org/support/plugin/csv-importer-improved/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 300,
    "downloaded": 10654,
    "last_updated": "2016-10-10 12:25am GMT",
    "added": "2015-12-17",
    "homepage": "",
    "sections": {
        "description": "<p>This WordPress plugin imports posts from CSV (Comma Separated Value) files into your<br />\nWordPress blog. It can prove extremely useful when you want to import a bunch<br />\nof posts from an Excel document or the like &#8211; simply export your document into<br />\na CSV file and the plugin will take care of the rest.</p>\n<p>https://wordpress.org/plugins/csv-importer-improved/</p>\n<h4>Features</h4>\n<ul>\n<li>Imports post title, body, excerpt, tags, date, categories etc.</li>\n<li>Supports custom fields, custom taxonomies and comments</li>\n<li>Deals with Word-style quotes and other non-standard characters using<br />\nWordPress&#8217; built-in mechanism (same one that normalizes your input when you<br />\nwrite your posts)</li>\n<li>Columns in the CSV file can be in any order, provided that they have correct<br />\nheadings</li>\n<li>Multi-language support</li>\n</ul>\n<p>This plugin is forked from https://wordpress.org/plugins/csv-importer/ by dvkob<br />\nin order to keep up with changes to the core WordPress.</p>\n<p>This importer writes directly to the database. It does not go through the internal<br />\nWordPress objects for creating posts etc. That may be an advantage to you (it will<br />\nbe faster for large imports) but do be aware of any data integrity issues that may arrise.</p>\n<p>Only UTF-8 encoding is supported, both with and without Byte Order Marks (BOM).</p>\n<p>The development repository for this plugin can be found here:</p>\n<p>https://github.com/academe/csv-importer-improved</p>\n<p>Please feel free to raise issues there, and submit pull requests, as well as through<br />\nthe normal WordPress channels.</p>\n<h3>Usage</h3>\n<p>Click on the CSV Importer link on your WordPress admin page, choose the<br />\nfile you would like to import and click Import. The <code>examples</code> directory<br />\ninside the plugin&#8217;s directory contains several files that demonstrate<br />\nhow to use the plugin. The best way to get started is to import one of<br />\nthese files and look at the results.</p>\n<p>CSV is a tabular format that consists of rows and columns. Each row in<br />\na CSV file represents a post; each column identifies a piece of information<br />\nthat comprises a post.</p>\n<p>You can create new posts, or update existing posts by supplying the csv_post_id<br />\nfield pointing to an existing post. When updating, all field names you provide<br />\nin the CSV file will be updated &#8211; even if blank &#8211; but fields you don&#8217;t list at<br />\nthe head of the CSV file will be left intact.</p>\n<h4>Basic post information</h4>\n<ul>\n<li><code>csv_post_id</code> &#8211; optional, used to update an existing post.</li>\n<li><code>csv_post_title</code> &#8211; title of the post</li>\n<li><code>csv_post_post</code> &#8211; body of the post</li>\n<li><code>csv_post_type</code> &#8211; <code>post</code>, <code>page</code> or a custom post type.<br />\nFrom 0.3.2, <code>csv_post_type</code> column supports custom post types.<br />\nRefer to the WordPress<br />\n<a href=\"https://codex.wordpress.org/Custom_Post_Types\" rel=\"nofollow ugc\">documentation on custom post types</a> for more info<br />\non how to set up custom post types.</li>\n<li><code>csv_post_excerpt</code> &#8211; post excerpt</li>\n<li><code>csv_post_categories</code> &#8211; a comma separated list of category names or ids.<br />\nThe list must be enclosed in quotes, e.g. &#8220;EC &gt; UK, Island&#8221;.<br />\nIf a chain of subcategories does not exist, e.g. <code>Animalia &gt; Chordata &gt; Mammalia</code><br />\nthen they will all be created and the post assigned to the end of the chain.<br />\nThe parent category can also be defined using its id, e.g.<br />\n    42 &gt; Primates &gt; Callitrichidae, where <code>42</code> is an<br />\nexisting category id.</li>\n<li><code>csv_post_tags</code> &#8211; a &#8220;quoted&#8221; comma separated list of tags.</li>\n<li><code>csv_post_date</code> &#8211; most standard formats are supported.<br />\nFor example, <code>now</code>, <code>11/16/2009 0:00</code>, <code>1999-12-31 23:55:00</code>, <code>+1 week</code>,<br />\n    next Thursday, <code>last year</code> are all valid. For technical<br />\ndetails, consult PHP&#8217;s <code>strtotime()</code> function <a href=\"http://php.net/manual/en/function.strtotime.php\" rel=\"nofollow ugc\">documentation</a>.</li>\n</ul>\n<h4>Custom fields</h4>\n<p>Any column that doesn&#8217;t start with <code>csv_</code> is considered to be a custom field<br />\nname. The data in that column will be imported as the custom fields value.</p>\n<p>All custom fields must be unique. Multiple fields with the same name will be<br />\nupdated to the same value if updating an existing post.<br />\nPrior to version 0.6.0 loading the same field name multiple times to an existing<br />\npost would create multiple custom fields.</p>\n<h4>General remarks</h4>\n<ul>\n<li>WordPress pages <a href=\"https://codex.wordpress.org/Pages\" rel=\"nofollow ugc\">don&#8217;t have categories or tags</a>.</li>\n<li>Most columns are optional. Either <code>csv_post_title</code>, <code>csv_post_post</code> or<br />\n    csv_post_excerpt are sufficient to create a post. If all of these<br />\ncolumns are empty in a row, the plugin will skip that row.</li>\n<li>The plugin will attempt to reuse existing categories or tags; if an<br />\nexisting category or tag cannot be found, the plugin will create it.</li>\n<li>To specify a category that has a greater than sign (&gt;) in the name, use<br />\nthe HTML entity <code>&amp;gt;</code></li>\n</ul>\n<h4>Advanced usage</h4>\n<ul>\n<li><code>csv_post_author</code> &#8211; numeric user id or login name. If not specified or<br />\nuser does not exist, the plugin will assign the posts to the user<br />\nperforming the import.</li>\n<li><code>csv_post_slug</code> &#8211; post slug used in permalinks.</li>\n<li><code>csv_post_parent</code> &#8211; post parent id.</li>\n</ul>\n<h3>Custom taxonomies</h3>\n<p><strong>New in version 0.3.0</strong></p>\n<p>Once custom taxonomies are set up in your theme&#8217;s functions.php file or<br />\nby using a 3rd party plugin, <code>csv_ctax_(taxonomy name)</code> columns can be<br />\nused to assign imported data to the taxonomies.</p>\n<p><strong>Non-hierarchical taxonomies</strong></p>\n<p>The syntax for non-hierarchical taxonomies is straightforward and is essentially<br />\nthe same as the <code>csv_post_tags</code> syntax.</p>\n<p><strong>Hierarchical taxonomies</strong></p>\n<p>The syntax for hierarchical taxonomies is more complicated. Each hierarchical<br />\ntaxonomy field is a tiny two-column CSV file, where <em>the order of columns<br />\nmatters</em>. The first column contains the name of the parent term and the second<br />\ncolumn contains the name of the child term. Top level terms have to be preceded<br />\neither by an empty string or a 0 (zero).</p>\n<p>Sample <code>examples/custom-taxonomies.csv</code> file included with the plugin<br />\nillustrates custom taxonomy support. To see how it works, make sure to set up<br />\ncustom taxonomies from <code>functions.inc.php</code>.</p>\n<p>Make sure that the quotation marks used as text delimiters in <code>csv_ctax_</code><br />\ncolumns are regular ASCII double quotes, not typographical quotes like “<br />\n(U+201C) and ” (U+201D).</p>\n<h3>Comments</h3>\n<p><strong>New in version 0.3.1</strong></p>\n<p>An example file with comments is included in the <code>examples</code> directory.<br />\nIn short, comments can be imported along with posts by specifying columns<br />\nsuch as <code>csv_comment_*_author</code>, <code>csv_comment_*_content</code> etc, where * is<br />\na comment ID number. This ID doesn&#8217;t go into WordPress. It is only there<br />\nto have the connection information in the CSV file.</p>\n<h3>Credits</h3>\n<p>This plugin uses <a href=\"http://code.google.com/p/php-csv-parser/\" rel=\"nofollow ugc\">php-csv-parser</a> by Kazuyoshi Tlacaelel.<br />\nIt was inspired by JayBlogger&#8217;s <a href=\"http://www.jayblogger.com/the-birth-of-my-first-plugin-import-csv/\" rel=\"nofollow ugc\">CSV Import</a> plugin.</p>\n<p>Contributors:</p>\n<ul>\n<li>Kevin Hagerty (post_author support)</li>\n<li>Edir Pedro (root category option and tableless HTML markup)</li>\n<li>Frank Loeffler (comments support)</li>\n<li>Micah Gates (subcategory syntax)</li>\n<li>David Hollander (deprecation warnings, linebreak handling)</li>\n</ul>\n",
        "installation": "<p>Installing the plugin:</p>\n<ol>\n<li>Unzip the plugin&#8217;s directory into <code>wp-content/plugins</code>.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n<li>The plugin will be available under Tools -&gt; CSV Importer on<br />\nWordPress administration page.</li>\n</ol>\n",
        "faq": "<blockquote>\n<p>I have quotation marks and commas as values in my CSV file. How do I tell CSV<br />\n  Importer to use a different separator?</p>\n</blockquote>\n<p>It doesn&#8217;t really matter what kind of separator you use if your file is<br />\nproperly escaped. To see what I mean by proper escaping, take a look at<br />\n    examples/sample.csv file which has cells with quotation marks and commas.</p>\n<p>If the software you use for exporting to CSV is unable to escape quotation<br />\nmarks and commas, you might want to give <a href=\"http://www.openoffice.org/\" rel=\"nofollow ugc\">OpenOffice Calc</a> a try.</p>\n<blockquote>\n<p>How can I import characters with diacritics, Cyrillic or Han characters?</p>\n</blockquote>\n<p>Make sure to save your CSV file with utf-8 encoding.</p>\n<p>Prior to version 6.0.4, MySQL <a href=\"http://dev.mysql.com/doc/refman/5.1/en/faqs-cjk.html#qandaitem-24-11-1-13\" rel=\"nofollow ugc\">did not support</a> some rare Han characters. As<br />\na workaround, you can insert characters such as &#x2028e; (U+2028E) by<br />\nconverting them to HTML entities &#8211; &amp;&#035;x2028e;</p>\n<blockquote>\n<p>I cannot import anything &#8211; the plugin displays &#8220;Imported 0 posts in 0.01<br />\n  seconds.&#8221;</p>\n</blockquote>\n<p>Update to version 0.3.1 or greater. Previous versions required write access to<br />\nthe /tmp directory and the plugin failed if access was denied by PHP&#8217;s safe<br />\nmode or other settings.</p>\n<blockquote>\n<p>I&#8217;m importing a file, but not all rows in it are imported and I don&#8217;t see<br />\n  a confirmation message. Why?</p>\n</blockquote>\n<p>WordPress can be many things, but one thing it&#8217;s not is blazing fast. The<br />\nreason why not all rows are imported and there&#8217;s no confirmation message is<br />\nthat the plugin times out during execution &#8211; PHP decides that it has been<br />\nrunning too long and terminates it.</p>\n<p>There are a number of solutions you can try. First, make sure that you&#8217;re not<br />\nusing any plugins that may slow down post insertion. For example, a Twitter<br />\nplugin might attempt to tweet every post you import &#8211; not a very good idea<br />\nif you have 200 posts. Second, you can break up a file into smaller chunks that<br />\ntake less time to import and therefore will not cause the plugin to time out.<br />\nThird, you can try adjusting PHP&#8217;s <code>max_execution_time</code> option that sets how<br />\nlong scripts are allowed to run. Description of how to do it is beyond the<br />\nscope of this FAQ &#8211; you should search the web and/or use your web host&#8217;s help<br />\nto find out how. However, putting the following line in <code>.htaccess</code> file inside<br />\npublic_html directory works for some people:</p>\n\n<h4>Sets max execution time to 2 minutes. Adjust as necessary.</h4>\n<p>\n<p>php_value max_execution_time 120</p>\n<p>The problem can be approached from another angle, namely instead of giving<br />\nscripts more time to run making them run faster. There&#8217;s not much I can do to<br />\nspeed up the plugin (you can contact me at dvkobozev at gmail.com if you like<br />\nto prove me wrong), so you can try to speed up WordPress. It is a pretty broad<br />\ntopic, ranging from database optimizations to PHP accelerators such as APC,<br />\neAccelerator or XCache, so I&#8217;m afraid you&#8217;re on your own here.</p>\n<blockquote>\n<p>I receive the following error when I try to import my CSV file: &#8220;Invalid CSV<br />\n  file: header length and/or row lengths do not match&#8221;. What&#8217;s wrong with your<br />\n  plugin/my file?</p>\n</blockquote>\n<p>Short answer: update to version 0.2.0 or later. Longer answer: the number of<br />\nfields (values) in rows in your file does not match the number of columns.<br />\nVersion 0.2.0 pads such rows with empty values (if there are more columns than<br />\ncells in a row) or discards extra fields (if there are less columns than cells<br />\nin a row).</p>\n<blockquote>\n<p>I&#8217;m getting the following error: <code>Parse error: syntax error, unexpected<br />\n  T_STRING, expecting T_OLD_FUNCTION or T_FUNCTION or T_VAR or '}' in .../public_html/wp-content/plugins/csv-importer/File_CSV_DataSource/DataSource.php<br />\n  on line 61</code>. What gives?</p>\n</blockquote>\n<p>This plugin requires PHP5, while you probably have PHP4 or older. Update your<br />\nPHP installation or ask your hosting provider to do it for you.</p>\n</p>\n\n",
        "changelog": "<h4>0.6.0</h4>\n<ul>\n<li>Change behaviour of custom fields; treat all fields as unique and don&#8217;t create duplicates.</li>\n</ul>\n<h4>0.5.4</h4>\n<ul>\n<li>No functional changes; just a forced update after fixing some SVN issues.</li>\n</ul>\n<h4>0.5.1</h4>\n<ul>\n<li>Fix incorrect intitial status.</li>\n<li>Started making strings translatable.</li>\n</ul>\n<h4>0.5.0</h4>\n<ul>\n<li>Update PHP version to 5.3+</li>\n<li>Support updating existing posts.</li>\n</ul>\n<h4>0.4.2</h4>\n<ul>\n<li>Renamed from &#8220;CSV Importer 2&#8221; to &#8220;CSV Importer Improved&#8221;.</li>\n</ul>\n<h4>0.4.1</h4>\n<ul>\n<li>Fix some function name clashes with other CSV import plugins.</li>\n</ul>\n<h4>0.4.0</h4>\n<ul>\n<li>Fixes to support WordPress 4.4</li>\n</ul>\n<h4>0.3.8</h4>\n<ul>\n<li>Minor bug and security fixes</li>\n</ul>\n<h4>0.3.7</h4>\n<ul>\n<li>Make hierarchical custom taxonomy line splitting more robust</li>\n<li>Fix deprecation warnings</li>\n</ul>\n<h4>0.3.6</h4>\n<ul>\n<li>Fix category cleanup bug</li>\n</ul>\n<h4>0.3.5</h4>\n<ul>\n<li>Added &#8216;greater-than&#8217; category syntax</li>\n<li>Updated the docs</li>\n</ul>\n<h4>0.3.4</h4>\n<ul>\n<li>Added csv_post_parent column</li>\n<li>Updated the docs</li>\n<li>Got rid of a deprecation warning</li>\n</ul>\n<h4>0.3.3</h4>\n<ul>\n<li>Fixes incompatibility with versions of WordPress prior to 3.0 introduced<br />\nin previous release.</li>\n</ul>\n<h4>0.3.2</h4>\n<ul>\n<li>Added ability to specify custom post type.</li>\n</ul>\n<h4>0.3.1</h4>\n<ul>\n<li>Import comments.</li>\n<li>Updated php-csv-parser &#8211; the plugin should no longer create files in /tmp.</li>\n</ul>\n<h4>0.3.0</h4>\n<ul>\n<li>Custom taxonomies.</li>\n</ul>\n<h4>0.2.4</h4>\n<ul>\n<li>Root category selection, cleaner HTML.</li>\n</ul>\n<h4>0.2.3</h4>\n<ul>\n<li>Slight speed increase, support for post_author and post_name.</li>\n</ul>\n<h4>0.2.2</h4>\n<ul>\n<li>Bugfix release to deal with BOM that may occur in UTF-8 encoded files.</li>\n</ul>\n<h4>0.2.1</h4>\n<ul>\n<li>Ability to import rows as pages, not posts.</li>\n<li>Starting with this version, you can also specify category ids instead of<br />\nnames.</li>\n</ul>\n<h4>0.2.0</h4>\n<ul>\n<li>Ability to handle CSV files where the number of cells in rows does not<br />\nmatch the number of columns</li>\n<li>Smart date parsing</li>\n<li>Code cleanup.</li>\n</ul>\n<h4>0.1.3</h4>\n<ul>\n<li>New option to import posts with published status.</li>\n</ul>\n<h4>0.1.2</h4>\n<ul>\n<li>Added support for post excerpts.</li>\n</ul>\n<h4>0.1.1</h4>\n<ul>\n<li>Code cleanup</li>\n<li>Changed column names for CSV input. Sorry if it breaks anything for you,<br />\nfolks, but it had to be done in order to allow for custom fields such as<br />\n    title (<a href=\"https://wordpress.org/extend/plugins/all-in-one-seo-pack/\" rel=\"ugc\">All in One SEO Pack</a> uses those, for example).</li>\n</ul>\n<h4>v0.1.0</h4>\n<ul>\n<li>Initial version of the plugin</li>\n</ul>\n"
    },
    "short_description": "Import posts from CSV files into WordPress.",
    "description": "<p>This WordPress plugin imports posts from CSV (Comma Separated Value) files into your<br />\nWordPress blog. It can prove extremely useful when you want to import a bunch<br />\nof posts from an Excel document or the like &#8211; simply export your document into<br />\na CSV file and the plugin will take care of the rest.</p>\n<p>https://wordpress.org/plugins/csv-importer-improved/</p>\n<h4>Features</h4>\n<ul>\n<li>Imports post title, body, excerpt, tags, date, categories etc.</li>\n<li>Supports custom fields, custom taxonomies and comments</li>\n<li>Deals with Word-style quotes and other non-standard characters using<br />\nWordPress&#8217; built-in mechanism (same one that normalizes your input when you<br />\nwrite your posts)</li>\n<li>Columns in the CSV file can be in any order, provided that they have correct<br />\nheadings</li>\n<li>Multi-language support</li>\n</ul>\n<p>This plugin is forked from https://wordpress.org/plugins/csv-importer/ by dvkob<br />\nin order to keep up with changes to the core WordPress.</p>\n<p>This importer writes directly to the database. It does not go through the internal<br />\nWordPress objects for creating posts etc. That may be an advantage to you (it will<br />\nbe faster for large imports) but do be aware of any data integrity issues that may arrise.</p>\n<p>Only UTF-8 encoding is supported, both with and without Byte Order Marks (BOM).</p>\n<p>The development repository for this plugin can be found here:</p>\n<p>https://github.com/academe/csv-importer-improved</p>\n<p>Please feel free to raise issues there, and submit pull requests, as well as through<br />\nthe normal WordPress channels.</p>\n<h3>Usage</h3>\n<p>Click on the CSV Importer link on your WordPress admin page, choose the<br />\nfile you would like to import and click Import. The <code>examples</code> directory<br />\ninside the plugin&#8217;s directory contains several files that demonstrate<br />\nhow to use the plugin. The best way to get started is to import one of<br />\nthese files and look at the results.</p>\n<p>CSV is a tabular format that consists of rows and columns. Each row in<br />\na CSV file represents a post; each column identifies a piece of information<br />\nthat comprises a post.</p>\n<p>You can create new posts, or update existing posts by supplying the csv_post_id<br />\nfield pointing to an existing post. When updating, all field names you provide<br />\nin the CSV file will be updated &#8211; even if blank &#8211; but fields you don&#8217;t list at<br />\nthe head of the CSV file will be left intact.</p>\n<h4>Basic post information</h4>\n<ul>\n<li><code>csv_post_id</code> &#8211; optional, used to update an existing post.</li>\n<li><code>csv_post_title</code> &#8211; title of the post</li>\n<li><code>csv_post_post</code> &#8211; body of the post</li>\n<li><code>csv_post_type</code> &#8211; <code>post</code>, <code>page</code> or a custom post type.<br />\nFrom 0.3.2, <code>csv_post_type</code> column supports custom post types.<br />\nRefer to the WordPress<br />\n<a href=\"https://codex.wordpress.org/Custom_Post_Types\" rel=\"nofollow ugc\">documentation on custom post types</a> for more info<br />\non how to set up custom post types.</li>\n<li><code>csv_post_excerpt</code> &#8211; post excerpt</li>\n<li><code>csv_post_categories</code> &#8211; a comma separated list of category names or ids.<br />\nThe list must be enclosed in quotes, e.g. &#8220;EC &gt; UK, Island&#8221;.<br />\nIf a chain of subcategories does not exist, e.g. <code>Animalia &gt; Chordata &gt; Mammalia</code><br />\nthen they will all be created and the post assigned to the end of the chain.<br />\nThe parent category can also be defined using its id, e.g.<br />\n    42 &gt; Primates &gt; Callitrichidae, where <code>42</code> is an<br />\nexisting category id.</li>\n<li><code>csv_post_tags</code> &#8211; a &#8220;quoted&#8221; comma separated list of tags.</li>\n<li><code>csv_post_date</code> &#8211; most standard formats are supported.<br />\nFor example, <code>now</code>, <code>11/16/2009 0:00</code>, <code>1999-12-31 23:55:00</code>, <code>+1 week</code>,<br />\n    next Thursday, <code>last year</code> are all valid. For technical<br />\ndetails, consult PHP&#8217;s <code>strtotime()</code> function <a href=\"http://php.net/manual/en/function.strtotime.php\" rel=\"nofollow ugc\">documentation</a>.</li>\n</ul>\n<h4>Custom fields</h4>\n<p>Any column that doesn&#8217;t start with <code>csv_</code> is considered to be a custom field<br />\nname. The data in that column will be imported as the custom fields value.</p>\n<p>All custom fields must be unique. Multiple fields with the same name will be<br />\nupdated to the same value if updating an existing post.<br />\nPrior to version 0.6.0 loading the same field name multiple times to an existing<br />\npost would create multiple custom fields.</p>\n<h4>General remarks</h4>\n<ul>\n<li>WordPress pages <a href=\"https://codex.wordpress.org/Pages\" rel=\"nofollow ugc\">don&#8217;t have categories or tags</a>.</li>\n<li>Most columns are optional. Either <code>csv_post_title</code>, <code>csv_post_post</code> or<br />\n    csv_post_excerpt are sufficient to create a post. If all of these<br />\ncolumns are empty in a row, the plugin will skip that row.</li>\n<li>The plugin will attempt to reuse existing categories or tags; if an<br />\nexisting category or tag cannot be found, the plugin will create it.</li>\n<li>To specify a category that has a greater than sign (&gt;) in the name, use<br />\nthe HTML entity <code>&amp;gt;</code></li>\n</ul>\n<h4>Advanced usage</h4>\n<ul>\n<li><code>csv_post_author</code> &#8211; numeric user id or login name. If not specified or<br />\nuser does not exist, the plugin will assign the posts to the user<br />\nperforming the import.</li>\n<li><code>csv_post_slug</code> &#8211; post slug used in permalinks.</li>\n<li><code>csv_post_parent</code> &#8211; post parent id.</li>\n</ul>\n<h3>Custom taxonomies</h3>\n<p><strong>New in version 0.3.0</strong></p>\n<p>Once custom taxonomies are set up in your theme&#8217;s functions.php file or<br />\nby using a 3rd party plugin, <code>csv_ctax_(taxonomy name)</code> columns can be<br />\nused to assign imported data to the taxonomies.</p>\n<p><strong>Non-hierarchical taxonomies</strong></p>\n<p>The syntax for non-hierarchical taxonomies is straightforward and is essentially<br />\nthe same as the <code>csv_post_tags</code> syntax.</p>\n<p><strong>Hierarchical taxonomies</strong></p>\n<p>The syntax for hierarchical taxonomies is more complicated. Each hierarchical<br />\ntaxonomy field is a tiny two-column CSV file, where <em>the order of columns<br />\nmatters</em>. The first column contains the name of the parent term and the second<br />\ncolumn contains the name of the child term. Top level terms have to be preceded<br />\neither by an empty string or a 0 (zero).</p>\n<p>Sample <code>examples/custom-taxonomies.csv</code> file included with the plugin<br />\nillustrates custom taxonomy support. To see how it works, make sure to set up<br />\ncustom taxonomies from <code>functions.inc.php</code>.</p>\n<p>Make sure that the quotation marks used as text delimiters in <code>csv_ctax_</code><br />\ncolumns are regular ASCII double quotes, not typographical quotes like “<br />\n(U+201C) and ” (U+201D).</p>\n<h3>Comments</h3>\n<p><strong>New in version 0.3.1</strong></p>\n<p>An example file with comments is included in the <code>examples</code> directory.<br />\nIn short, comments can be imported along with posts by specifying columns<br />\nsuch as <code>csv_comment_*_author</code>, <code>csv_comment_*_content</code> etc, where * is<br />\na comment ID number. This ID doesn&#8217;t go into WordPress. It is only there<br />\nto have the connection information in the CSV file.</p>\n<h3>Credits</h3>\n<p>This plugin uses <a href=\"http://code.google.com/p/php-csv-parser/\" rel=\"nofollow ugc\">php-csv-parser</a> by Kazuyoshi Tlacaelel.<br />\nIt was inspired by JayBlogger&#8217;s <a href=\"http://www.jayblogger.com/the-birth-of-my-first-plugin-import-csv/\" rel=\"nofollow ugc\">CSV Import</a> plugin.</p>\n<p>Contributors:</p>\n<ul>\n<li>Kevin Hagerty (post_author support)</li>\n<li>Edir Pedro (root category option and tableless HTML markup)</li>\n<li>Frank Loeffler (comments support)</li>\n<li>Micah Gates (subcategory syntax)</li>\n<li>David Hollander (deprecation warnings, linebreak handling)</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.6.1.zip",
    "upgrade_notice": {
        "0.3.8": "<p>Added a check to see if the user is allowed to create posts and pages prior\nto importing.</p>",
        "0.3.7": "<p>More robust handling of hierarchical custom taxonomies; removed deprecation\nwarnings.</p>",
        "0.3.6": "<p>Fix for &#039;Invalid argument supplied for foreach() on line 268&#039; error message</p>",
        "0.3.5": "<p>Subcategory creation support. Documentation update.</p>",
        "0.3.4": "<p>Post parent support. Documentation update.</p>",
        "0.3.3": "<p>Fixes &quot;Call to undefined function post_type_exists()&quot; error for versions of\nWordpress prior to 3.0</p>",
        "0.3.2": "<p>Adds support for custom post types. Option to import pages has been removed from\nthe interface. To import a page, add csv_post_type column to your csv file and\nset it to &quot;page&quot;.</p>",
        "0.3.1": "<p>Adds support for comments</p>",
        "0.3.0": "<p>Adds support for custom taxonomies</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/csv-importer-improved/trunk/screenshot-1.png?rev=1567386",
            "caption": "Plugin interface"
        }
    ],
    "tags": {
        "batch": "batch",
        "csv": "csv",
        "excel": "excel",
        "import": "import",
        "spreadsheet": "spreadsheet"
    },
    "stable_tag": "0.6.1",
    "versions": {
        "0.4.2": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.4.2.zip",
        "0.5.0": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.5.0.zip",
        "0.5.2": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.5.2.zip",
        "0.5.4": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.5.4.zip",
        "0.6.0": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.6.0.zip",
        "0.6.1": "https://downloads.wordpress.org/plugin/csv-importer-improved.0.6.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/csv-importer-improved.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/csv-importer-improved/assets/banner-772x250.jpg?rev=1356049",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/csv-importer-improved/assets/icon-128x128.png?rev=1311249",
        "2x": "https://ps.w.org/csv-importer-improved/assets/icon-256x256.png?rev=1311249"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 64,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}