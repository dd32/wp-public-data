{
    "name": "User Object Framework",
    "slug": "user-object-framework",
    "version": "0.1",
    "author": "<a href=\"http://uncommoncontent.com/\">Jennifer M. Dodd</a>",
    "author_profile": "https://profiles.wordpress.org/jmdodd/",
    "contributors": {
        "jmdodd": {
            "profile": "https://profiles.wordpress.org/jmdodd/",
            "avatar": "https://secure.gravatar.com/avatar/6a7c997edea340616bcc6d0fe03f65dd?s=96&d=monsterid&r=g",
            "display_name": "Jennifer M. Dodd"
        }
    },
    "requires": "3.4",
    "tested": "3.4.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/user-object-framework/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 3192,
    "last_updated": "2012-10-01 14:42:00",
    "added": "2012-10-01",
    "homepage": "",
    "sections": {
        "description": "<p>This plugin creates a user-object relationship table and a user-object relationship metadata<br />\ntable. Relationships between a user (logged-in or IP) are created and added to the relationship<br />\ntable; metadata (ex. votes, flags, and ratings) is attached to that particular relationship<br />\nvia the metadata table. This is a framework; it is intended for use in voting, flagging,<br />\nand similar user applications where a user-affiliated metadata is attached to an object.<br />\nSupported object tables include wp_posts, wp_comments, wp_users, and wp_bp_activity.</p>\n<p>Functions are provided to add/get/delete relationships; metadata is added via the native WordPress<br />\nmetadata-handling functions.<br />\nFunctions provided by this framework include:</p>\n<ul>\n<li><code>ucc_uof_object_reference()</code> returns an array of object-integer assignments. Use this to look up the<br />\nappropriate value for $object_ref based on the object table (wp_posts, wp_comments, wp_users,<br />\nwp_bp_activity are currently supported) to which you are attaching a user relationship.</li>\n<li><code>ucc_uof_add_relationship( $user_id = 0, $user_ip = 0, $object_id, $object_ref )</code> adds a relationship<br />\nto the relationship table if none exists and returns the relationship id for that user/object pairing.</li>\n<li><code>ucc_uof_delete_relationship( $user_id = 0, $user_ip = 0, $object_id, $object_ref )</code> will delete a<br />\nrelationship if there are no metadata entries left for that relationship.</li>\n<li><code>ucc_uof_get_relationship()</code> returns the relationship id for that user/object pairing.</li>\n<li><code>ucc_uof_get_user_id()</code> returns the current user id or 0 if not logged in.</li>\n<li><code>ucc_uof_get_user_ip()</code> returns 0 if the current user is logged in, or an ip2long() if anonymous.</li>\n</ul>\n<p>Example code:</p>\n<pre><code>// Create or get the user-object relationship.\n$relationship = ucc_uof_get_relationship( $user_id, $user_ip, $object_id, $object_ref );\nif ( empty( $relationship ) )\n    $relationship = ucc_uof_add_relationship( $user_id, $user_ip, $object_id, $object_ref );\n\n// Add user_object_meta.\nif ( $mode == 'delete' )\n    delete_metadata( 'uof_user_object', $relationship, '_your_meta_key' );\nelse\n    update_metadata( 'uof_user_object', $relationship, '_your_meta_key', 'your meta key value' );\n</code></pre>\n",
        "installation": "<ol>\n<li>Upload the directory <code>user-object-framework</code> and its contents to the <code>/wp-content/plugins/</code> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n</ol>\n",
        "changelog": "<h4>0.1</h4>\n<ul>\n<li>Initial release.</li>\n</ul>\n"
    },
    "short_description": "Provide a framework for assignment of user-object relationship metadata.",
    "description": "<p>This plugin creates a user-object relationship table and a user-object relationship metadata<br />\ntable. Relationships between a user (logged-in or IP) are created and added to the relationship<br />\ntable; metadata (ex. votes, flags, and ratings) is attached to that particular relationship<br />\nvia the metadata table. This is a framework; it is intended for use in voting, flagging,<br />\nand similar user applications where a user-affiliated metadata is attached to an object.<br />\nSupported object tables include wp_posts, wp_comments, wp_users, and wp_bp_activity.</p>\n<p>Functions are provided to add/get/delete relationships; metadata is added via the native WordPress<br />\nmetadata-handling functions.<br />\nFunctions provided by this framework include:</p>\n<ul>\n<li><code>ucc_uof_object_reference()</code> returns an array of object-integer assignments. Use this to look up the<br />\nappropriate value for $object_ref based on the object table (wp_posts, wp_comments, wp_users,<br />\nwp_bp_activity are currently supported) to which you are attaching a user relationship.</li>\n<li><code>ucc_uof_add_relationship( $user_id = 0, $user_ip = 0, $object_id, $object_ref )</code> adds a relationship<br />\nto the relationship table if none exists and returns the relationship id for that user/object pairing.</li>\n<li><code>ucc_uof_delete_relationship( $user_id = 0, $user_ip = 0, $object_id, $object_ref )</code> will delete a<br />\nrelationship if there are no metadata entries left for that relationship.</li>\n<li><code>ucc_uof_get_relationship()</code> returns the relationship id for that user/object pairing.</li>\n<li><code>ucc_uof_get_user_id()</code> returns the current user id or 0 if not logged in.</li>\n<li><code>ucc_uof_get_user_ip()</code> returns 0 if the current user is logged in, or an ip2long() if anonymous.</li>\n</ul>\n<p>Example code:</p>\n<pre><code>// Create or get the user-object relationship.\n$relationship = ucc_uof_get_relationship( $user_id, $user_ip, $object_id, $object_ref );\nif ( empty( $relationship ) )\n    $relationship = ucc_uof_add_relationship( $user_id, $user_ip, $object_id, $object_ref );\n\n// Add user_object_meta.\nif ( $mode == 'delete' )\n    delete_metadata( 'uof_user_object', $relationship, '_your_meta_key' );\nelse\n    update_metadata( 'uof_user_object', $relationship, '_your_meta_key', 'your meta key value' );\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/user-object-framework.0.1.zip",
    "upgrade_notice": {
        "0.1": "<ul>\n<li>Initial release.</li>\n</ul>"
    },
    "screenshots": [],
    "tags": {
        "framework": "framework",
        "metadata": "metadata",
        "object": "object",
        "relationship": "relationship",
        "user": "user"
    },
    "stable_tag": "0.1",
    "versions": {
        "0.1": "https://downloads.wordpress.org/plugin/user-object-framework.0.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/user-object-framework.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/user-object-framework.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}