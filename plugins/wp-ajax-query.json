{
    "name": "WP Ajax Query",
    "slug": "wp-ajax-query",
    "version": "0.1",
    "author": "<a href=\"http://aizatto.com\">Ezwan Aizat Bin Abdullah Faiz</a>",
    "author_profile": "https://profiles.wordpress.org/aizatto/",
    "contributors": {
        "aizatto": {
            "profile": "https://profiles.wordpress.org/aizatto/",
            "avatar": "https://secure.gravatar.com/avatar/d2e08ac56f7a99d46d0f3bc14e94124e?s=96&d=monsterid&r=g",
            "display_name": "aizatto"
        }
    },
    "requires": "3",
    "tested": "3",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wp-ajax-query/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3097,
    "last_updated": "2010-05-27 11:25am GMT",
    "added": "2010-05-27",
    "homepage": "http://blog.aizatto.com/wp-ajax-query/",
    "sections": {
        "description": "<p>WP Ajax Query allows you to query your WordPress database using the same query paramaters you would use for WP_Query, and return a JSON respresentation of the query results. This allows developers to easily interface with WordPress without having to relearn a new API.</p>\n<h3>How It Works</h3>\n<p>The Ajax Query interface would be available at http://example.com/wp-admin/admin-ajax.php?action=query</p>\n<p>A sample jQuery request would be like:<br />\n    $.get(ajaxurl, { action: &#8216;query&#8217; }, function () { }, &#8216;json&#8217;);</p>\n<p>Querying for a post:<br />\n    $.get(ajaxurl, { action: &#8216;query&#8217;, p: 1 }, function () { }, &#8216;json&#8217;);</p>\n<p>JSON results:<br />\n    {<br />\n      &#8220;id&#8221;: 1,<br />\n      &#8220;type&#8221;: &#8216;post&#8217;,<br />\n      &#8220;title&#8221;: &#8220;Hello World&#8221;,<br />\n      &#8220;permalink&#8221;: &#8220;http:\\/\\/example.com\\/?p=1&#8221;<br />\n    }</p>\n<p>Query a category:<br />\n    $.get(ajaxurl, { action: &#8216;query&#8217;, cat: 1 }, function () { }, &#8216;json&#8217;);</p>\n<p>JSON results:<br />\n    {<br />\n      &#8220;id&#8221;: 1<br />\n      &#8220;type&#8221;: &#8220;category&#8221;,<br />\n      &#8220;permalink&#8221;: &#8220;http:\\/\\/example.com\\/?cat=1&#8221;,<br />\n      &#8220;terms&#8221;: [],<br />\n      &#8220;posts&#8221;: []<br />\n    }</p>\n<pre><code>terms and `posts` represents an array of either terms that are sub categories of the category, or posts belonging to the category.&lt;h3&gt;Why I Created It&lt;/h3&gt;\n</code></pre>\n<p>Needed a common way to query the database for posts and taxonomies across multiple plugins, and didn&#8217;t find a suitable replacement.</p>\n",
        "installation": "<ol>\n<li>Upload the <code>wp-ajax-query</code> folder into your plugin directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n"
    },
    "short_description": "WP Ajax Query allows you to query your WordPress database using the same query paramaters you would use for WP_Query, and return a JSON respresentatio &hellip;",
    "description": "<p>WP Ajax Query allows you to query your WordPress database using the same query paramaters you would use for WP_Query, and return a JSON respresentation of the query results. This allows developers to easily interface with WordPress without having to relearn a new API.</p>\n<h3>How It Works</h3>\n<p>The Ajax Query interface would be available at http://example.com/wp-admin/admin-ajax.php?action=query</p>\n<p>A sample jQuery request would be like:<br />\n    $.get(ajaxurl, { action: &#8216;query&#8217; }, function () { }, &#8216;json&#8217;);</p>\n<p>Querying for a post:<br />\n    $.get(ajaxurl, { action: &#8216;query&#8217;, p: 1 }, function () { }, &#8216;json&#8217;);</p>\n<p>JSON results:<br />\n    {<br />\n      &#8220;id&#8221;: 1,<br />\n      &#8220;type&#8221;: &#8216;post&#8217;,<br />\n      &#8220;title&#8221;: &#8220;Hello World&#8221;,<br />\n      &#8220;permalink&#8221;: &#8220;http:\\/\\/example.com\\/?p=1&#8221;<br />\n    }</p>\n<p>Query a category:<br />\n    $.get(ajaxurl, { action: &#8216;query&#8217;, cat: 1 }, function () { }, &#8216;json&#8217;);</p>\n<p>JSON results:<br />\n    {<br />\n      &#8220;id&#8221;: 1<br />\n      &#8220;type&#8221;: &#8220;category&#8221;,<br />\n      &#8220;permalink&#8221;: &#8220;http:\\/\\/example.com\\/?cat=1&#8221;,<br />\n      &#8220;terms&#8221;: [],<br />\n      &#8220;posts&#8221;: []<br />\n    }</p>\n<pre><code>terms and `posts` represents an array of either terms that are sub categories of the category, or posts belonging to the category.&lt;h3&gt;Why I Created It&lt;/h3&gt;\n</code></pre>\n<p>Needed a common way to query the database for posts and taxonomies across multiple plugins, and didn&#8217;t find a suitable replacement.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-ajax-query.0.1.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "ajax": "ajax",
        "json": "JSON",
        "query": "query",
        "wp_query": "wp_query"
    },
    "stable_tag": "0.1",
    "versions": {
        "0.1": "https://downloads.wordpress.org/plugin/wp-ajax-query.0.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-ajax-query.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=aizat%2efaiz%40gmail%2ecom&lc=MY&item_name=Ezwan%20Aizat%20Bin%20Abdullah%20Faiz&item_number=WP%20Ajax%20Query&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wp-ajax-query.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}