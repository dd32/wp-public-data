{
    "name": "XMPP Authentication",
    "slug": "xmpp-auth",
    "version": "0.6",
    "author": "<a href=\"http://girinstud.io\">Jehan Hysseo</a>",
    "author_profile": "https://profiles.wordpress.org/jehan/",
    "contributors": {
        "jehan": {
            "profile": "https://profiles.wordpress.org/jehan/",
            "avatar": "https://secure.gravatar.com/avatar/90a5cdac0e854b0f07ed713906658f56?s=96&d=monsterid&r=g",
            "display_name": "Jehan"
        }
    },
    "requires": "3.2.0",
    "tested": "4.4.33",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/xmpp-auth/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2310,
    "last_updated": "2016-01-15 2:33pm GMT",
    "added": "2011-08-06",
    "homepage": "https://wordpress.org/plugins/xmpp-auth/",
    "sections": {
        "description": "<p>This plugin has two main features:</p>\n<ul>\n<li>any reader on your website can comment if one has an Instant Messaging<br />\naddress (XMPP protocol, otherwise called Jabber. A Gmail or a LiveJournal<br />\naccount for instance are such standard IM identifiers as well);</li>\n<li>a subscribed user (whatever its role) can authenticate with one&#8217;s IM<br />\naddress if they set their IM address.</li>\n</ul>\n<p>This plugin is still in experimental state but is usable.</p>\n<h4>Detailed Process</h4>\n<p>The authentication part is something like openID, except that it uses your<br />\nexisting IM address: you ask for authentication on a website, and it pops-up a<br />\nconfirmation via IM (that you can accept, or refuse).</p>\n<p>Considering that the IM protocol (XMPP) is very secure,<br />\nall the infrastructure to securely exchange an authentication request is<br />\nthere. No need to make any new account, no need a special client, nor a<br />\nidentity third party provider, and that&#8217;s really instantaneous (as <em>instant</em><br />\nmessaging) and more secure than HTTP or SMTP protocols.</p>\n<h4>Spam Protection</h4>\n<p>It adds an additional layer to protect against Spam by verifying an<br />\nidentity using a very secure and modern protocol (XMPP), which also is instant,<br />\nhence much more reliable in any way than email for instance.</p>\n<h4>Secure and Easy Login</h4>\n<p>Many reasons to use such a plugin for login:</p>\n<ul>\n<li>not to have to remember a new password (password-login can be disabled in<br />\nyour profile, on a per-user choice);</li>\n<li>you are in a very insecure environment (for instance a cybercafe) and consider<br />\nonly your IM account to be a minimum securized. Or better, you run an IM<br />\nclient on your smartphone (or a similar tool), so you would receive the query<br />\non this personal item while never typing any kind of password on the insecure<br />\nplatform where you log.</li>\n<li>And so on.</li>\n</ul>\n<h3>Configuration</h3>\n<h4>Publishing Account</h4>\n<p>This section contains the connection parameters of the account which will be<br />\nused as a wordpress bot. I would personnaly advice to create a dedicated account<br />\njust for it (you may also use your personal account of course, as the plugin&#8217;s<br />\nbot will create a resource identifier unique for every connection) and to<br />\nconfigure it to refuse any contact and communication (as noone will have to<br />\nadd it to one&#8217;s roster, except you maybe for test or debugging purpose?).<br />\nThe fields are:</p>\n<ul>\n<li>The bot address (bare jid form: mybotname@myserveraddress);</li>\n<li>the password.</li>\n</ul>\n<h4>Advanced Connection Parameters</h4>\n<p>By default xmpp-auth can use SRV records which is a recommended way to<br />\nadvertize server and port from a domain name (see for instance<br />\nhttp://dns.vanrein.org/srv/ for details).</p>\n<p>This is an advanced section in case your server does not use SRV AND uses a server<br />\nwhich is not the same as the domain from the jid or a port different from the<br />\ndefault one (5222).</p>\n<p>Hence there will be very very few cases where you will have to fill this<br />\nsection and if you don&#8217;t understand all what I say here, just don&#8217;t fill<br />\nanything there (if you fill even only one field, then it will be used instead<br />\nof SRV and default values).</p>\n<p>The default values will be used if the fields are empty and no SRV is configured on<br />\nthe Jabber server:</p>\n<ul>\n<li>the XMPP server (often the same as &#8216;myseveraddress&#8217; of the jid);</li>\n<li>the XMPP port (usually 5222).</li>\n</ul>\n<h3>TODO</h3>\n<p>Features I am considering:</p>\n<ul>\n<li>check quickstart (http://xmpp.org/extensions/inbox/quickstart.html). In<br />\nparticular, I should at least cache DNS lookups now.</li>\n<li>deactivate IM features when plugin not configured.</li>\n<li>For comments, use the IM avatar of the commenter instead of gravatar;</li>\n<li>Make various notifications usually done by email be done by IM instead (if<br />\nadequate);</li>\n<li>Display the comment&#8217;s JID on the admin page (as we display the email<br />\naddress, obviously only for administrators);</li>\n<li>Add Scram-* to SASL package;</li>\n<li>Make the generic XMPP part a PEAR package.</li>\n<li>Subscribe with XMPP JID.</li>\n<li>Login with JID or username (both possible).</li>\n<li>If password is disabled, it also cannot be resetted.</li>\n<li>Make user choose to receive password reset or other notification through IM<br />\ninstead of email.</li>\n</ul>\n<h3>XMPP Features</h3>\n<p>Full Secure XML Stream with:</p>\n<ul>\n<li>TLS (with real certificate verification, so confidentiality and<br />\nauthentication);</li>\n<li>SASL (Digest-MD5, CRAM-MD5 and PLAIN only for now);</li>\n<li>SRV records &#8220;randomization&#8221; algorithm.</li>\n</ul>\n<h3>Contacts</h3>\n<p>You can have some news about this plugin on <a href=\"http://jehan.zemarmot.net\" title=\"my public diary\" rel=\"nofollow ugc\">my freedom<br />\nhaven</a>.<br />\nYou can also drop me an instant message on &#8220;hysseo&#8221; at zemarmot.net.</p>\n<p>Have a nice life!</p>\n",
        "installation": "<p><strong>The easy way</strong> is via your installed WordPress&#8217;s administration pages:</p>\n<ol>\n<li>Click <code>Plugins</code> &gt; <code>Add New</code>;</li>\n<li>Search for <code>xmpp-auth</code>;</li>\n<li>Find it in the displayed list;</li>\n<li>Click <code>Install Now</code>.</li>\n</ol>\n<p><strong>Alternatively</strong>, here is the old &#8220;manual&#8221; version:</p>\n<ol>\n<li>Upload the plugin archive to <em>wp-content/plugins/</em> directory on your WordPress installation;</li>\n<li>Uncompress it by keeping it in its own sub-directory called <em>xmpp-auth/</em>;</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress;</li>\n<li>Configure the plugin through the appearing sub-menu <code>XMPP Authentication</code><br />\nunder the <code>Plugins</code> menu;</li>\n<li>When aknowledging the configuration by pressing the <code>Update</code> button, login<br />\nwill be tested (a connection will be attempted). If anything is wrong with<br />\nyour configuration, you will be immediately informed.</li>\n</ol>\n<p><strong>Once installed</strong>, I would suggest to modify the configuration in <em>Settings</em> &gt;<br />\n<em>Discussion</em> &gt; uncheck <em>Comment author must fill out name and e-mail</em> as they<br />\nwill be verified by XMPP (but the fields will stay if the user wants to add<br />\nthem in).</p>\n<p>Also the new comment field (for JID) is automatically displayed if you use a<br />\nrecent theme (because it uses a function newly added since 3.0). If you don&#8217;t<br />\nsee the new field after activating, don&#8217;t panick. 4 solutions:</p>\n<ol>\n<li>the simpler: use a more recent theme. The default <em>twentyten</em> and<br />\n<em>twentyeleven</em> will work perfectly without doing anything;</li>\n<li>if you don&#8217;t want to change your theme, try to contact the theme writers<br />\nand ask them if they could not support the generic (and now &#8220;adviced&#8221;)<br />\ncomment_form() feature (they will understand);</li>\n<li>you know PHP/HTML and want to do it fast: simply check the file<br />\ncomments.php of your theme. and either replace the whole form by this<br />\nsimpler function: <code>&lt;?php comment_form(); ?&gt;</code> yourself;</li>\n<li>or if you want to do it manually, add the following code (can be modified,<br />\nbut what matters obviously is the id of the input field):</li>\n</ol>\n<p>*</p>\n<p>My advice is <strong>obviously</strong> to go for the first and the second solutions. The<br />\nthird one is really when you want to do this fast (but still you should report<br />\nthis to the theme writers for them to update upstream) and the fourth is a<br />\nlast resort if you have some very atypical comment form.</p>\n<h4>dependencies</h4>\n<ul>\n<li>\n<p>PHP &gt; 5.1.0 (for function <em>stream_socket_enable_crypto</em>).</p>\n</li>\n<li>\n<p><strong>expat</strong> library to parse XML (enabled with the <code>--with-xml</code><br />\noption of the php compilation).</p>\n</li>\n</ul>\n<p><em>Note for gentoo users</em>: you must set the &#8216;xml&#8217; USE flag.</p>\n<ul>\n<li>\n<p><strong>OpenSSL</strong> (&gt; 0.9.6) must be installed on the server and PHP must be built<br />\nwith <code>--with-openssl</code>.</p>\n</li>\n<li>\n<p><em>OPTIONAL</em>: if the plugin is installed on a BSD (Mac included),<br />\nin order to use the SRV records on the admin JID, which is the correct way of<br />\nresolving the server and port addresses for a domain, the <em>PEAR</em> extension<br />\n<strong>NET_DNS</strong> must be installed: <code>pear install NET_DNS</code> (Note that it will ask<br />\nto have php compiled with <code>mhash</code> option).<br />\nIf it is installed on Windows, it is not anymore useful if you have PHP<br />\n5.3.0 or later installed (under this version of PHP, you should also install<br />\nthe NET_DNS extension to benefit SRV records).<br />\nLinux servers do not need this extension to have SRV.</p>\n</li>\n</ul>\n<p><em>Note for gentoo users</em>: you must set the &#8216;mhash&#8217; USE flag.</p>\n<h4>Working Platforms</h4>\n<p>This script has been tested only currently on WordPress 3.2.1 up to WordPress<br />\n3.2.1 with PHP 5.3.5 up to PHP 5.3.8, running on a GNU/Linux 64 bits (Gentoo<br />\nLinux).<br />\nHopefully it should work with other software versions (not for PHP4, because<br />\nof the TLS feature which is PHP5 specific. Yet if you are really interested<br />\ninto PHP4 compatibility and if TLS is not required for your connection, just<br />\nask me, I will try to make a compatibility layer), but I cannot guarantee.<br />\nTell me please if you tried this successfully with another configuration so<br />\nthat I update the known working platforms list.</p>\n<p>At the opposite, if you find a bug or encounter an issue on some<br />\nconfiguration, don&#8217;t hesitate to tell me, and I will try and fix it.</p>\n",
        "faq": "\n<h4>Will it work with any web browser and any IM client?</h4>\n<p>\n<p>On the web side, the XEP-0070 uses RFC-2617, which is a common way to<br />\nauthenticate to websites. On the XMPP-side, RFC-6120 and XEP-0070 have a nice<br />\nway for clients which do not understand a given feature for falling back into<br />\na message to answer, as though it was a discussion.</p>\n<p>So hopefully it &#8220;should&#8221; work in most case with not-too broken web browser or<br />\nIM client.<br />\nFor IM clients, it should work (tested or reported by someone) with Psi,<br />\nGajim, OneTeam… In particular, it is known not to work with Pidgin, Adium,<br />\nSwift, and the GoogleMail web interface.</p>\n</p>\n<h4>I get &#8220;Warning: require_once(Auth/SASL/DigestMD5.php)&#8221; or another similar warning</h4>\n<p>\n<p>You should check the Installation/dependencies section. Some PHP modules are<br />\nnecessary. If you are administrator or have flexible administrators, this will<br />\nbe very easily fixable (follow my instructions in the &#8220;dependencies&#8221; section).<br />\nIf you use a public service, which did not install these dependencies by<br />\ndefault, and where you cannot have anything installed, then I am sorry but my<br />\nplugin unfortunately won&#8217;t work for you (actually for PEAR modules, you may<br />\nadd them by hand, as they are pure PHP. But you would need to be developers<br />\nfor the manipulation).</p>\n</p>\n<h4>When configuring, I get: &#8220;Authentication failure: TLS negotiation failed.&#8221;</h4>\n<p>\n<p>This means that your server uses TLS (and that&#8217;s good!) but simply I did not<br />\npackage the certificate of their CA into my plugin. Please just tell me (see<br />\n&#8220;Contacts&#8221; section) your server, I will check the CA and if it is an<br />\nacceptable one, I will add its certificate.</p>\n<p>It may also mean that the server certificate is self-signed, which is really not<br />\nsecure. If many servers are this way, I may consider adding an option to<br />\nforce such connection, but I would prefer not. If this happens to you, I<br />\nwould rather suggest you to change the server of your bot for one where<br />\nsecurity matters.</p>\n</p>\n<h4>The new &#8220;JID&#8221; field does not appear in the comment form!</h4>\n<p>\n<p>You most probably use an outdated theme which does not use recent WordPress<br />\nfeatures about commenting (since 3.0). This is not a blocker. See the bottom<br />\nof the &#8220;Installation&#8221; tab. I provide the solutions to this issue.</p>\n</p>\n\n",
        "changelog": "<h4>0.6</h4>\n<ul>\n<li>Fix comment validation.</li>\n<li>Comment validation through XMPP is now marked as &#8220;experimental&#8221;.<br />\nThough still functional, I find the user experience crappy. I will want to<br />\nreview this deeply before considering it in release state.</li>\n<li>Comment validation times out at 50 sec (was 30).</li>\n<li>Transaction IDs are 6 characters. This makes them easier to copy, even on<br />\nsmaller virtual keyboard (for instance to validate on your personal smartphone<br />\na login made on a third-party untrusted machine).</li>\n</ul>\n<h4>0.5</h4>\n<ul>\n<li>Update SASL lib to Auth_SASL2 0.1.0.</li>\n<li>Fix Cacert root certificate.</li>\n<li>Add Let&#8217;s Encrypt root certificate.</li>\n<li>Improving/experimenting the protocole from XEP-0070. It should be more<br />\nuser-friendly, while still staying secure.</li>\n</ul>\n<h4>0.4</h4>\n<ul>\n<li>When login is disabled, login page look is not modified.</li>\n<li>When comments is disabled, I still display the JID field, but simply don&#8217;t<br />\nprocess anything and without the &#8216;*&#8217; of mandatory fields.</li>\n<li>Localization prepared and French localization available.</li>\n<li>DNS results are now cached. I use the ttl of records (maximum 1 week, as<br />\nproposed in RFC-1035) and reorder cached data using failure and success<br />\nknowledge.</li>\n<li>PEAR Auth_SASL coded is included in the plugin, hence the dependency is no more.</li>\n<li>\n<p>A patch has been sent upstream for SCRAM support.</p>\n</li>\n<li>\n<p>After many years of inactivity, I fixed all the code and tested it against<br />\nWordpress 4.4.1.</p>\n</li>\n<li>Root certificates were also updated.</li>\n</ul>\n<h4>0.3</h4>\n<ul>\n<li>Profile page configuration: per-user choice to disable password, IM<br />\nauthentication, or use both.</li>\n<li>IPv6 support and better DNS integration.</li>\n<li>The core XMPP library has been rewritten in a much more robust, hence secure<br />\nAPI. The current version had been started in 2008. My first XMPP experiment<br />\nthat I used for the plugin Jabber Feed (that I will probably soon merge with<br />\nthe current plugin) and the API was not very nice and could break more<br />\neasily on some unexpected outputs.</li>\n</ul>\n<h4>0.2</h4>\n<ul>\n<li>Admins have now possibility to deactivate the plugin on a per-feature basis.</li>\n<li>Experimental component support.</li>\n<li>&#8220;Jabber / Google Talk&#8221; in profile renamed to &#8220;Standard IM&#8221;.</li>\n</ul>\n<h4>0.1.5</h4>\n<ul>\n<li>TLS certificates were not properly configured.</li>\n<li>Various fixes.</li>\n</ul>\n<h4>0.1</h4>\n<p>Initial Release.<br />\nThe plugin can be used to login as a user, or post comments as an unsubscribed<br />\nvisitor.</p>\n"
    },
    "short_description": "Allows users to authenticate without password via XMPP and for visitors to be filtered by XMPP verification.",
    "description": "<p>This plugin has two main features:</p>\n<ul>\n<li>any reader on your website can comment if one has an Instant Messaging<br />\naddress (XMPP protocol, otherwise called Jabber. A Gmail or a LiveJournal<br />\naccount for instance are such standard IM identifiers as well);</li>\n<li>a subscribed user (whatever its role) can authenticate with one&#8217;s IM<br />\naddress if they set their IM address.</li>\n</ul>\n<p>This plugin is still in experimental state but is usable.</p>\n<h4>Detailed Process</h4>\n<p>The authentication part is something like openID, except that it uses your<br />\nexisting IM address: you ask for authentication on a website, and it pops-up a<br />\nconfirmation via IM (that you can accept, or refuse).</p>\n<p>Considering that the IM protocol (XMPP) is very secure,<br />\nall the infrastructure to securely exchange an authentication request is<br />\nthere. No need to make any new account, no need a special client, nor a<br />\nidentity third party provider, and that&#8217;s really instantaneous (as <em>instant</em><br />\nmessaging) and more secure than HTTP or SMTP protocols.</p>\n<h4>Spam Protection</h4>\n<p>It adds an additional layer to protect against Spam by verifying an<br />\nidentity using a very secure and modern protocol (XMPP), which also is instant,<br />\nhence much more reliable in any way than email for instance.</p>\n<h4>Secure and Easy Login</h4>\n<p>Many reasons to use such a plugin for login:</p>\n<ul>\n<li>not to have to remember a new password (password-login can be disabled in<br />\nyour profile, on a per-user choice);</li>\n<li>you are in a very insecure environment (for instance a cybercafe) and consider<br />\nonly your IM account to be a minimum securized. Or better, you run an IM<br />\nclient on your smartphone (or a similar tool), so you would receive the query<br />\non this personal item while never typing any kind of password on the insecure<br />\nplatform where you log.</li>\n<li>And so on.</li>\n</ul>\n<h3>Configuration</h3>\n<h4>Publishing Account</h4>\n<p>This section contains the connection parameters of the account which will be<br />\nused as a wordpress bot. I would personnaly advice to create a dedicated account<br />\njust for it (you may also use your personal account of course, as the plugin&#8217;s<br />\nbot will create a resource identifier unique for every connection) and to<br />\nconfigure it to refuse any contact and communication (as noone will have to<br />\nadd it to one&#8217;s roster, except you maybe for test or debugging purpose?).<br />\nThe fields are:</p>\n<ul>\n<li>The bot address (bare jid form: mybotname@myserveraddress);</li>\n<li>the password.</li>\n</ul>\n<h4>Advanced Connection Parameters</h4>\n<p>By default xmpp-auth can use SRV records which is a recommended way to<br />\nadvertize server and port from a domain name (see for instance<br />\nhttp://dns.vanrein.org/srv/ for details).</p>\n<p>This is an advanced section in case your server does not use SRV AND uses a server<br />\nwhich is not the same as the domain from the jid or a port different from the<br />\ndefault one (5222).</p>\n<p>Hence there will be very very few cases where you will have to fill this<br />\nsection and if you don&#8217;t understand all what I say here, just don&#8217;t fill<br />\nanything there (if you fill even only one field, then it will be used instead<br />\nof SRV and default values).</p>\n<p>The default values will be used if the fields are empty and no SRV is configured on<br />\nthe Jabber server:</p>\n<ul>\n<li>the XMPP server (often the same as &#8216;myseveraddress&#8217; of the jid);</li>\n<li>the XMPP port (usually 5222).</li>\n</ul>\n<h3>TODO</h3>\n<p>Features I am considering:</p>\n<ul>\n<li>check quickstart (http://xmpp.org/extensions/inbox/quickstart.html). In<br />\nparticular, I should at least cache DNS lookups now.</li>\n<li>deactivate IM features when plugin not configured.</li>\n<li>For comments, use the IM avatar of the commenter instead of gravatar;</li>\n<li>Make various notifications usually done by email be done by IM instead (if<br />\nadequate);</li>\n<li>Display the comment&#8217;s JID on the admin page (as we display the email<br />\naddress, obviously only for administrators);</li>\n<li>Add Scram-* to SASL package;</li>\n<li>Make the generic XMPP part a PEAR package.</li>\n<li>Subscribe with XMPP JID.</li>\n<li>Login with JID or username (both possible).</li>\n<li>If password is disabled, it also cannot be resetted.</li>\n<li>Make user choose to receive password reset or other notification through IM<br />\ninstead of email.</li>\n</ul>\n<h3>XMPP Features</h3>\n<p>Full Secure XML Stream with:</p>\n<ul>\n<li>TLS (with real certificate verification, so confidentiality and<br />\nauthentication);</li>\n<li>SASL (Digest-MD5, CRAM-MD5 and PLAIN only for now);</li>\n<li>SRV records &#8220;randomization&#8221; algorithm.</li>\n</ul>\n<h3>Contacts</h3>\n<p>You can have some news about this plugin on <a href=\"http://jehan.zemarmot.net\" title=\"my public diary\" rel=\"nofollow ugc\">my freedom<br />\nhaven</a>.<br />\nYou can also drop me an instant message on &#8220;hysseo&#8221; at zemarmot.net.</p>\n<p>Have a nice life!</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/xmpp-auth.0.6.zip",
    "upgrade_notice": {
        "0.4": "<p>French localization available. DNS cached for improved performance. SCRAM-* support added.</p>",
        "0.3": "<p>Users can now customize IM integration in their profiles. IPv6 support. Core\nrewritten.</p>",
        "0.2": "<p>Per-feature deactivation allowed and experimental component support.</p>",
        "0.1.5": "<p>This version fixes TLS certificates (for encryption).\nThe previous version was likely failing to validate your server certificate,\nhence connect.</p>",
        "0.1": "<p>Initial Release. Experimental version.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/xmpp-auth/trunk/screenshot-1.jpg?rev=1567238",
            "caption": "Visitor posts a comment and receive a confirmation request by pop-up through\none's IM client (here Psi+)."
        },
        {
            "src": "https://ps.w.org/xmpp-auth/trunk/screenshot-2.png?rev=1567238",
            "caption": "Configuration page."
        }
    ],
    "tags": {
        "authentication": "authentication",
        "comments": "comments",
        "jabber": "jabber",
        "xep-0070": "xep-0070",
        "xmpp": "xmpp"
    },
    "stable_tag": "0.6",
    "versions": {
        "0.1": "https://downloads.wordpress.org/plugin/xmpp-auth.0.1.zip",
        "0.1.5": "https://downloads.wordpress.org/plugin/xmpp-auth.0.1.5.zip",
        "0.2": "https://downloads.wordpress.org/plugin/xmpp-auth.0.2.zip",
        "0.3": "https://downloads.wordpress.org/plugin/xmpp-auth.0.3.zip",
        "0.4": "https://downloads.wordpress.org/plugin/xmpp-auth.0.4.zip",
        "0.6": "https://downloads.wordpress.org/plugin/xmpp-auth.0.6.zip",
        "trunk": "https://downloads.wordpress.org/plugin/xmpp-auth.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://libreart.info/en/donate",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/xmpp-auth.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}