{
    "name": "Somatic Framework",
    "slug": "somatic-framework",
    "version": "1.8.14",
    "author": "<a href=\"mailto:israel@somaticstudios.com\">Israel Curtis</a>",
    "author_profile": "https://profiles.wordpress.org/somatic/",
    "contributors": {
        "somatic": {
            "profile": "https://profiles.wordpress.org/somatic/",
            "avatar": "https://secure.gravatar.com/avatar/1b764e4cc1296b40abd71d6deffd1861?s=96&d=monsterid&r=g",
            "display_name": "Israel Curtis"
        }
    },
    "requires": "4.0",
    "tested": "5.6.14",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/somatic-framework/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 5432,
    "last_updated": "2020-12-17 7:32pm GMT",
    "added": "2011-12-10",
    "homepage": "http://wordpress.org/extend/plugins/somatic-framework/",
    "sections": {
        "description": "<p>This framework is a collection of classes and functions for handling advanced custom post types cases. With just a few defined arrays, it can create custom post types, taxonomies, their labels, menus, metaboxes, and save routines.</p>\n<p>NOTE: this began life as an internal development tool, and as such, does not have much (if any documentation) just yet. It&#8217;s not really end-user friendly in its current state. So if you&#8217;re not running a site I have built for you personally, you probably don&#8217;t need it ðŸ˜‰</p>\n",
        "installation": "<p>Upload, activate, have a drink&#8230; but first, install and activate Scribu&#8217;s excellent Posts 2 Posts plugin, which this framework requires!</p>\n",
        "faq": "\n<h4>\nDo I need this plugin?\n</h4>\n<p>\n<p>If you&#8217;re using a theme or setting up a site I built for you, then very likely, yes&#8230;</p>\n</p>\n<h4>\nI updated my call to soma_init_taxonomy() and added new terms, but why aren&#8217;t they appearing?\n</h4>\n<p>\n<p>deactivate and reactivate your theme/plugin that contains the function call, as term generation only happens upon activation&#8230;</p>\n</p>\n\n",
        "changelog": "<h4>1.8.14</h4>\n<ul>\n<li>colorbox update to fix JS errors</li>\n</ul>\n<h4>1.8.13</h4>\n<ul>\n<li>tweaks for PHP 7.2 compatibility</li>\n<li>changed parsing and storage of user-provided URLS for media to protocol-relative URL, to avoid mixed HTTP/HTTPS issues</li>\n</ul>\n<h4>1.8.12</h4>\n<ul>\n<li>no longer using custom menu icons, but the built-in dashicons set, so the custom post type argument &#8220;icon_set&#8221; is deprecated. Simply provide the argument &#8220;menu_icon&#8221; in the post type declaration. Documentation https://developer.wordpress.org/resource/dashicons/</li>\n<li>removed hacks for injecting custom post type archives into the Nav Menu editor (not needed anymore, and was breaking editor)</li>\n</ul>\n<h4>1.8.11</h4>\n<ul>\n<li>FIX: parse_query action hook repaired, had stopped working oddly</li>\n<li>added demographics tracking line to google analytics code</li>\n<li>NEW: option to enable built-in page excerpts</li>\n<li>NEW: option to disable attachment pages (redirecting to parent post)</li>\n<li>NEW: option to prevent WP from automatically titling new image uploads with the filename</li>\n<li>more metabox disabling for themeblvd stuff</li>\n</ul>\n<h4>1.8.10</h4>\n<ul>\n<li>NEW: metabox button &#8220;save-back&#8221; outputs a save button which immediately redirects back to referring page after saving</li>\n<li>FIX: upload boxes work again with the new plUpload 2.1 that is bundled with wordpress 3.9</li>\n</ul>\n<h4>1.8.9</h4>\n<ul>\n<li>NEW: api functions soma_queue_notice() and soma_completion_notice(). stores and displays admin notices in the core wp &#8220;message box&#8221; format.</li>\n<li>FIX: saving framework options from the advanced tab was clearing all options. now all such options are on the same tab. renamed declarations tab &gt; reports</li>\n<li>cleaned up various css issues with metabox attachment items</li>\n<li>added &#8220;uploaded X ago&#8221; to file attachment display</li>\n<li>added google analytics tracking ID option field and javascript code output</li>\n</ul>\n<h4>1.8.8</h4>\n<ul>\n<li>NEW: action hook soma_metabox_data_init, provides better location to hook all usage of soma_metabox_data() when declaring metabox field arrays. * soma_metabox_data_init passes $post as an argument, so can finally use functions to provide data to field arguments!</li>\n<li>NOTE: you should never use &#8220;admin_init&#8221; as the hook for soma_metabox_data() anymore. Fires too early, no $post data possible</li>\n<li>NEW: field type &#8220;button&#8221;, outputs clicker buttons in the field row, can pass label and URL (or show a submit button)</li>\n<li>audio shortcodes in fields now include ID of the attachment for more data than just the file src</li>\n<li>radio field types now show emphasis on the selected radio label</li>\n</ul>\n<h4>1.8.7</h4>\n<ul>\n<li>NEW: option field for TypeKit ID, sets up javascript for you</li>\n<li>FIX: finally solved the issue with post titles and slugs not getting saved when custom post type doesn&#8217;t &#8220;support&#8221; title</li>\n<li>FIX: deleting content from core data fields actually clears the saved field now</li>\n<li>when using custom post title fields (not wp&#8217;s title field), and field is left blank, title is changed to &#8220;Untitled&#8221;</li>\n<li>new CPT icons</li>\n<li>NEW: filter for custom metabox field data, &#8220;soma_field_data_[id]&#8221;. Allows manipulation of $meta right before fields get rendered</li>\n<li>readonly field type text gets run thru the_content filter, so formatting actually works</li>\n</ul>\n<h4>1.8.6</h4>\n<ul>\n<li>Multi-Site support. Activation hook accomodates network-wide scenario.</li>\n<li>fully private site option. forces login on front-end to view anything at all.</li>\n<li>disable RSS feeds option</li>\n<li>NEW: filter &#8216;soma_js_vars&#8217; allows changes/additions to the variables passed to javascript</li>\n<li>NEW: when debug active, current template path is shown in admin bar</li>\n</ul>\n<h4>1.8.5</h4>\n<ul>\n<li>NEW: somaRequest class and soma_request_[*] dynamic action hook &#8212; works much like wp_ajax_ hooks, but without the ajax. Triggered with the &#8216;soma_request&#8217; query_var or as simple URL query params via $_GET. Very handy for export/download functions to fire without leaving current page!</li>\n<li>NEW: somaFunctions::build_request_link() creates link to trigger soma_request_[*] action hook and pass along data (string or array)</li>\n<li>all functionality of the old somaDownload class is now incorporated in an soma_request_legacy-download action hook (though the old &#8220;download&#8221; query var remains for backwards compatibility)</li>\n</ul>\n<h4>1.8.4</h4>\n<ul>\n<li>NEW: api function soma_fetch_file() returns bunch of really handy info about an attachment&#8217;s file, including download link</li>\n<li>swapped order of params on soma_select_number_generator() to make including &#8216;zero&#8217; second</li>\n</ul>\n<h4>1.8.3</h4>\n<ul>\n<li>NEW: custom post type icons integrated &#8211; can now be picked with the arg &#8220;icon_set&#8221; (makes it easier to place soma-config.php in mu-plugins folder, as no additional images have to be included)</li>\n<li>CHANGE: soma_init_type arg &#8220;icons&#8221; is now &#8220;custom_icon_path&#8221;, to differentiate from built-in icon sets (all old configs will need to be updated, or use the new integrated sets)</li>\n<li>gallery field items now show less attachment meta fields for filetypes other than images</li>\n<li>sanitizing form field values less, allowing for decimals</li>\n<li>better handling of mime-type file icons</li>\n</ul>\n<h4>1.8.2</h4>\n<ul>\n<li>FIX: action and filter hooks in somaSave class with same name resulted in nuked data upon save</li>\n<li>NEW: filter hook to construct save data in special field cases: &#8220;soma_field_new_save_data&#8221;</li>\n<li>FIX: finally cracked the issue of custom fields saving core column data and dealing with the quirks of tinymce ID limitations</li>\n<li>cleaned up undefined indexes and variables</li>\n</ul>\n<h4>1.8.1</h4>\n<ul>\n<li>FIX: severe bug that prevented saving any changes from a wp_editor() richtext field or core post data columns</li>\n<li>NOTE: when you spawn a richtext or html field type, the ID you give should only consist of lowercase letters, nothing else. A function has been included to provide backwards compatibility with older configs where underscores or dashes were used in the ID.</li>\n</ul>\n<h4>1.8</h4>\n<ul>\n<li>FIX: finally using wp_update_post() instead of $wpdb-&gt;update for core data, so now text gets sanitized and filtered as normal before saving.</li>\n<li>FIX: major bugs in metabox text saving, resulting in escaped backslash quotes and more issues.</li>\n<li>FIX: safe ID&#8217;s now generated when using wp_editor(), as it&#8217;s pretty fussy about ID&#8217;s. You can use anything you want now without setting it off</li>\n<li>FIX: finally isolated saving of core metabox data types thru custom ID&#8217;s, so they don&#8217;t get hijacked by core save routines</li>\n</ul>\n<h4>1.7.10</h4>\n<ul>\n<li>NEW: gallery field of attachments now supports editing of each attachment&#8217;s title, caption, description and changing sort order!</li>\n<li>FIX: colorbox overlays in admin have maxheight and maxwidth set</li>\n<li>FIX: soma-public-jquery.js was failing and halting js when front-end colorbox was not enabled</li>\n<li>NEW: sort_group_type -&gt; ancestors allows Sort Order page via post_parent grouping (only deals with top-level parents)</li>\n<li>FIX: saving post_title fields now also updates the post slug to match</li>\n<li>FIX: more accurate use of wp_localize_script</li>\n</ul>\n<h4>1.7.9</h4>\n<ul>\n<li>FIX: soma_fetch_image was failing to return image sizes if none were generated because original was too small</li>\n</ul>\n<h4>1.7.8</h4>\n<ul>\n<li>FIX: errors using wp_register_style</li>\n<li>FIX: broken styling of save-changes buttons</li>\n<li>UPDATE: jquery UI smoothness theme updated to 1.9.2, removed local jQuery UI datepicker, as it&#8217;s in wp-core</li>\n<li>UPDATE: jquery UI timepicker addon to 1.2.1</li>\n<li>NOTE: for &#8216;upload-files&#8217; field types, the ID string for that field cannot contain a dash, or it breaks plupload js</li>\n<li>added more filetype icons</li>\n<li>metabox css tweaks</li>\n<li>finally defined default args for metabox data and field arrays</li>\n<li>more undefined index cleanup&#8230;</li>\n<li>NEW: each metabox field can have &#8220;restrict&#8221; parameter to hide from non-staff level users</li>\n<li>FIX: metabox jquery errors</li>\n<li>started moving soma_metabox_generator() to be useful outside of post editor</li>\n<li>modified soma_plupload.js to be useful outside of the post editor</li>\n<li>metabox field data type &#8220;user&#8221; is gone. Use &#8220;core&#8221; instead and &#8220;post_author&#8221; as the field ID</li>\n<li>metabox select fields now don&#8217;t consider 0 to be &#8220;empty&#8221; if referring to post_parent</li>\n<li>framework option for enabling Colorbox on front-end posts now automatically makes image links lightboxed</li>\n<li>page-attributes metabox is no longer forced to show when post type is hierarchical (might want to use custom fields instead)</li>\n<li>FIX: soma_singular_term() parameters fixed, can also fetch term_id</li>\n<li>NEW: metabox field type &#8220;radio-horizontal&#8221; displays radio buttons&#8230; horizontally</li>\n<li>NEW: can specify (per customposttype args or via post_meta key) &#8220;delete_attachments_upon_deletion&#8221; &#8211; to have all media attachments (and their files) specifically attached to a post deleted when that post gets deleted. I call it the &#8220;ritual suicide&#8221; option&#8230;</li>\n</ul>\n<h4>1.7.7</h4>\n<ul>\n<li>NEW action hook: soma_init &#8211; allows hooking init but only after Somatic Framework loads. Otherwise other plugins trying to register custom types would fail if they loaded before this one.</li>\n<li>FIX: major bug with hierarchical post types not supporting anything</li>\n<li>NEW functions fetch_sub_pages() and fetch_root_pages() for dealing with hierarchical post types</li>\n<li>fixed stray undefined indexes&#8230;</li>\n<li>FIX: deep bug that caused hierarchical CPTs to return 404 on child pages</li>\n</ul>\n<h4>1.7.6</h4>\n<ul>\n<li>NEW: option to enable custom link redirects via /go/[slug]. Use the filter &#8216;soma_go_redirect_codes&#8217; to add a new slug/url pair. remember to flush rewrite rules</li>\n<li>NEW: api soma_go_link(), returns HTML link code for an existing go code and link text</li>\n<li>NEW: system for dynamically showing/hiding certain metabox field rows based on a list selection</li>\n<li>field argument &#8216;reveal-control&#8217; &#8211; should be assigned only to a &#8216;radio&#8217; or &#8216;select&#8217; field type (and only one per page)</li>\n<li>field argument &#8216;reveal-group&#8217; &#8211; array of names corresponding with the possible values of the reveal-control selector. If the current value is in the array, that field is shown, otherwise hidden</li>\n<li>changes to table structure for metabox field rows &#8211; now descriptions and extra options are all within the main field row, so they can all be hidden together</li>\n<li>FIX: taxonomy dropdown selectors can finally use &#8220;Create New&#8221; and have a new term created upon save! just use soma_select_taxonomy_terms(&#8216;mytaxonomy&#8217;, true) to generate the field &#8216;options&#8217; array</li>\n</ul>\n<h4>1.7.5</h4>\n<ul>\n<li>FIX: metabox field type &#8216;checkbox-single&#8217; (now known as &#8216;toggle&#8217;) finally works as expected! You can uncheck things now ðŸ˜›</li>\n<li>NEW: soma_fetch_image(), soma_asset_meta(), soma_attachments(), soma_fetch_image(), soma_singular_term() now accept either a post object or post ID (integer or string)</li>\n<li>improved the save hooks to fire only when dealing with our custom fields</li>\n<li>thumbnail columns now automatically adjust width according to thumbnail options (max width 200px)</li>\n<li>FIX: finally overhauled somaSave and somaMetaboxes classes to more accurately handle saving and retrieving multiple items vs. single items</li>\n<li>NOTE: when checkboxes are desired (one or more), use the new field type &#8220;checkbox&#8221; and pass options array. the old &#8216;checkbox-single&#8217; type is deprecated in favor of &#8216;toggle&#8217; &#8211; but to be used only with meta data (not taxonomy, etc)</li>\n</ul>\n<h4>1.7.4</h4>\n<ul>\n<li>NEW api soma_attachments(), wrapper for get_posts() returns array of attached post objects, minus the featured image (unless specified)</li>\n<li>NEW api soma_fetch_image(), basically just renamed soma_featured_image() [still around for backwards compatibility] &#8211; reflects its ability to retrieve image data for any attachment, not just featured images</li>\n<li>somaFunctions::fetch_attached_media() now takes mime-type argument and an optional argument to exclude the featured image</li>\n<li>metabox field type &#8220;attachment&#8221; is now &#8220;gallery&#8221; (still with data of &#8220;attachment&#8221;). Shows all attached images or audio or video (via mediaelement)</li>\n<li>metabox &#8220;gallery&#8221; field type now excludes the featured image automatically, allowing fully independent featured image and gallery attachment uploaders</li>\n<li>metabox field argument for data of &#8220;attachment&#8221; can also include &#8220;mime-type&#8221; for filtering retrieved attachments by media type</li>\n<li>NOTE: metabox field &#8220;upload-images&#8221; has been folded into &#8220;upload-files&#8221;, which has abandoned the old html file selector input model, and now uses the hot new plUpload system.</li>\n<li>NEW: metabox field &#8220;upload-files&#8221; can now handle audio as well as images!</li>\n<li>old field type for featured image plUpload boxes, &#8220;upload-featured&#8221;, is now deprecated: use &#8220;upload-files&#8221;, with &#8216;data&#8217; arg set to &#8220;featured&#8221;</li>\n<li>FIX: multiple plUpload boxes on the same page now behave!</li>\n<li>FIX: soma_fetch_image() was failing certain specific requests, now returns original full file URL if the requested size is not available (eg: original pic was smaller than site&#8217;s &#8220;large&#8221; setting)</li>\n<li>FIX: soma_fetch_image() now includes custom image sizes when available</li>\n<li>NEW: soma_fetch_image() now returns title, description, caption, and alt text</li>\n<li>NOTE: this means the key for the thumbnail image is now &#8220;thumbnail&#8221; (as returned by wp), and not &#8220;thumb&#8221;, as it had been hardcoded before. Your old calls to soma_featured_image() for thumbs are likely broken now</li>\n<li>NOTE: the missing image placeholder is now one single size image, so make sure you manually indicate the width and height in your image tags (or else they&#8217;ll all display at 512px)</li>\n<li>options to hide new Thesis 2.0 metaboxes</li>\n<li>cleaned up all undefined index warnings</li>\n<li>FIX: custom post type update messages were not being produced properly&#8230;</li>\n<li>FIX: media uploader metabox field type works again</li>\n<li>improvements to the styling and behavior of the sorting pages</li>\n<li>improvements to the somaUploadField class</li>\n<li>NOTE: any old metabox fields dealing with attachments should probably be revisited&#8230;</li>\n</ul>\n<h4>1.7.3</h4>\n<ul>\n<li>FIX save routines on external media and images don&#8217;t die anymore if empty</li>\n<li>NEW metabox field: &#8220;link&#8221;</li>\n<li>metabox CSS tweaks</li>\n<li>cleaned up some deprecated junk in manage_posts_columns calls</li>\n<li>NEW api function soma_get_excerpt() for fetching existing post_excerpt or manually creating one from post_content via post ID or object</li>\n<li>fixed warning with lack of metabox definitions. Now, in soma_init_type args, you can declare blank_slate = true to remove all core wp metaboxes (in effect, declaring no post_type_support for title, editor, author, etc.). This replaces the old behavior of passing an empty array to the &#8220;supports&#8221; arg, which didn&#8217;t work well when parsing default args. It also means the missing metabox warning will <em>only</em> appear if the post type doesn&#8217;t support any core wp boxes.</li>\n</ul>\n<h4>1.7.2</h4>\n<ul>\n<li>FIX default behavior to not always show the toolbar on the front end [facepalm]</li>\n<li>NEW users have toolbar off by default</li>\n<li>NEW option to force toolbar to show for everyone, everywhere</li>\n<li>NEW soma_option for setting the Login page logo</li>\n<li>custom login logos should be transparent PNG of 320&#215;70 exactly, with content aligned bottom center for best results</li>\n<li>stopped hiding user profile fields</li>\n<li>now using transients with soma_set_option(), allowing caching, reducing DB load when calling soma_set_option() on every page load</li>\n<li>option to force admin bar only applies to logged in users</li>\n<li>$_GET and $_POST are now passed to JS via soma_vars</li>\n</ul>\n<h4>1.7.1</h4>\n<ul>\n<li>fixed stripslashes problem with quotes in text fields</li>\n<li>kint debug aborts if output buffering not on</li>\n<li>login page indicator if WPEngine</li>\n</ul>\n<h4>1.7</h4>\n<ul>\n<li>NEW image uploader metabox field type. Uses WP included plUpload for drag-n-drop, queued uploads, creates attachments upon saving. Can also be used for featured images.</li>\n<li>new option to disable screen options tab</li>\n</ul>\n<h4>1.6.9</h4>\n<ul>\n<li>disabled privileges check in save_asset() that conflicted with paypal digital goods checkout</li>\n<li>fixed bug that output junk to the login screen</li>\n<li>fixed column listing error when no columns are defined in a CPT</li>\n<li>changed save_asset() to not fire when quickedit is used</li>\n<li>changed save_asset() to not wipe out our custom defined metadata and taxonomies when other forms/plugins call save_post</li>\n<li>fixed problem where quickedit would fail to complete because of jQuery error (when custom columns were in use) &#8211; NOTE: after quickedit save updates, it won&#8217;t show the custom columns &#8211; refresh the list page to see custom columns again</li>\n</ul>\n<h4>1.6.8</h4>\n<ul>\n<li>removed hook that fired on user profile update, as it got stuck in a fatal infinite loop with any other plugin that tried to update a user&#8230;</li>\n<li>changed SOMA_URL constant (and all others built on it) to use https:// scheme when in use</li>\n</ul>\n<h4>1.6.7</h4>\n<ul>\n<li>fixed error in disabling paging for custom taxonomies defined elsewhere&#8230;</li>\n<li>updated placeholder images</li>\n<li>added flag to custom post type definitions to identify which CPT&#8217;s have been defined through this framework</li>\n<li>Admin CSS improvements</li>\n</ul>\n<h4>1.6.6</h4>\n<ul>\n<li>FIX: removed undefined metabox errors for built-in post types</li>\n<li>NOTE: for soma_debug output, php.ini must be configured with &#8220;output_buffering&#8221; set to ON (not a number like 4096), or you will see a bunch of &#8220;Cannot modify header information&#8221; warnings coming from Kint&#8230;.</li>\n<li>NEW: option to enable Colorbox JS on front-end</li>\n<li>metabox field save button can now be set to always change post status to &#8220;publish&#8221;</li>\n<li>FIX: fatal SQL error in the posts_orderby filter when order_by wasn&#8217;t defined (default was set to date instead of post_date)</li>\n<li>NOTE: when defining sort_by values for CPT&#8217;s, do not use the WP_Query values for &#8216;orderby&#8217; &#8211; must use actual wp_posts column names (like post_title instead of just title)</li>\n</ul>\n<h4>1.6.5</h4>\n<ul>\n<li>NEW: soma_init_type() arguments &#8220;sort_by&#8221; (post_date, post_title, post_author, menu_order, meta_value) and &#8220;sort_order&#8221; (asc, desc) to override the default query filters</li>\n<li>REMOVED: soma_init_type() argument &#8220;sortable&#8221; is gone &#8211; replace with new &#8220;sort_by&#8221;</li>\n<li>NOTE: must modify all calls to soma_init_type()!</li>\n<li>moved all filtering of parse_query into somaTypes class</li>\n<li>fixed various &#8220;missing index&#8221; errors</li>\n<li>CHANGE: soma_select_items() second argument is now an array of any arguments you would pass to get_posts()</li>\n</ul>\n<h4>1.6.4</h4>\n<ul>\n<li>soma_featured_image now handles custom image size labels (from add_image_size) via the $specific argument</li>\n<li>new metabox field: p2p-select &#8211; allows assigning single p2p relationship via dropdown (warning: must hide the core p2p admin box if you use these fields! there&#8217;s a conflict in the save routines)</li>\n<li>new metabox field: p2p-multi &#8211; allows assigning multiple p2p relationships via checkboxes</li>\n<li>can now use soma_metabox_data() with core post and page types</li>\n<li>updated jqueryUI timepicker to 0.9.9</li>\n<li>timepicker metabox type now actually works&#8230;</li>\n</ul>\n<h4>1.6.3</h4>\n<ul>\n<li>new Sort Order grouping: p2p, give it a P2P connection type name (ex: sortable = true, sort_group_type = p2p, sort_group_slug = albums-tracks)</li>\n<li>new save action hook: soma_save_asset</li>\n<li>admin css tweaks</li>\n<li>metabox field type p2p-thumbs is now p2p-objects</li>\n</ul>\n<h4>1.6.2</h4>\n<ul>\n<li>expanded list of metaboxes to disable to include core WP ones</li>\n<li>new ability to specify grouping of cpt objects on the Sort Order page, if sorting is enabled (ex: sortable = true, sort_group_type = taxonomy, sort_group_slug = genres)</li>\n<li>fixed css bug in clicker buttons</li>\n<li>fixed query parsing on sortable post types &#8211; now the query is always filtered to sort the query output by menu_order ASC (as was intended) &#8211; so now admin and front-end post listings reflect the proper order!</li>\n<li>new option to disable paging (list all items instead) per post type</li>\n<li>moved all custom somatic framework arguments for register_post_type within the core arguments array, so they&#8217;re stored as part of the post type object and can be retrieved with get_queried_object()</li>\n<li>NOTE: make sure you&#8217;ve updated any calls to soma_init_type, so that the &#8220;sortable&#8221;, &#8220;create_nav_item&#8221;, etc args are passed in the main &#8220;args&#8221; array!</li>\n</ul>\n<h4>1.6.1</h4>\n<ul>\n<li>disabling admin menus also gets rid of the +New admin bar item</li>\n<li>using checked() on html forms now</li>\n<li>better handling of missing metabox config data&#8230;</li>\n<li>tabs on the option page</li>\n<li>subtle tweaks to login page</li>\n<li>using wp_enqueue_scripts() globally now</li>\n<li>favicon set and display on options page</li>\n<li>options page is now top-level, with subpages</li>\n<li>import/export of framework options</li>\n<li>fixed menu detection with soma_init_type argument &#8220;create_nav_item&#8221;</li>\n<li>custom post types and taxonomies now actually display list metaboxes in Appearance-&gt;Menus if &#8220;show_in_nav_menus&#8221; arg is true (rather than simply being available to show via Screen Options, but unchecked by default)</li>\n</ul>\n<h4>1.6</h4>\n<ul>\n<li>NEW somatic_framework_options settings container (serialized array of default options)</li>\n<li>NEW api function: soma_set_option() &#8211; allows easy manipulation of somatic_framework_options in wp_options table</li>\n<li>NEW global var: $soma_options &#8211; quick checking of current options with DB query</li>\n<li>NEW settings page to toggle debug mode, plugin dependencies, dashboard widgets, bottom admin bar, editor metaboxes, admin menus, and more</li>\n<li>NEW daily cron task, use action hook &#8216;soma_daily_event&#8217;</li>\n<li>NEW csv export class, included in trunk but not ready for prime time</li>\n<li>NEW plugin checks for minimum wordpress version, aborts otherwise&#8230;</li>\n<li>NEW for CPT&#8217;s with show_in_nav_menu = true, an item will be available at the top of the &#8220;view all&#8221; tab in the CPT panel of Appearance-&gt;Menus. Adding that to the menu will create a custom nav menu item configured to display CPT archives</li>\n<li>NEW arg &#8216;create_nav_item&#8217; for soma_init_type() &#8211; replaces the &#8216;navbar&#8217; arg</li>\n<li>CHANGE: custom post type nav items &#8211; instead of filtering the nav menu output and tacking our CPT&#8217;s on, we&#8217;re actually creating real nav menu items in the DB. Then you can go to Appearance-&gt;Menus and re-order that item like any other</li>\n<li>REMOVED filter: soma_custom_type_nav_position, as the CPT nav items aren&#8217;t being generated by somaTypes::custom_type_nav() anymore</li>\n<li>DEPRECATED: old options soma_meta_prefix, soma_meta_serialize, soma_debug &#8211; store your values in the new somatic_framework_options settings container. ex: update_option(&#8216;somatic_framework_options&#8217;, array(&#8216;meta_prefix&#8217;, &#8216;_foo&#8217;));</li>\n<li>CHANGE: keycommand for showing/hiding the debug bar panels is now &#8220;\\&#8221; for minimized and alt+&#8221;\\&#8221; for maximized view</li>\n<li>sexy settings link right on the plugins page!</li>\n<li>improved the example php config templates</li>\n<li>better handling of missing metabox config data in add_boxes()</li>\n<li>independent handling of current nav menu item classes with fix_nav_classes()</li>\n</ul>\n<h4>1.5.1</h4>\n<ul>\n<li>fixed fatal error in checking for Kint when debug mode is enabled&#8230;</li>\n</ul>\n<h4>1.5</h4>\n<ul>\n<li>included the awesome Kint PHP debugger v.32 (http://code.google.com/p/kint/)</li>\n<li>integration with the Debug Bar plugin for maximum awesomeness (https://wordpress.org/extend/plugins/debug-bar/)</li>\n<li>when Debug Bar is installed, hit the &#8220;;&#8221; or &#8220;&#8216;&#8221; keys to toggle the debug panel in maximized or partial view</li>\n<li>NEW API function: soma_dump() &#8211; outputs data to screen (or to the Debug Bar panel, much nicer!)</li>\n<li>re-enabled admin bar on front-end (had been disabled globally, overriding user options)</li>\n<li>NEW option: soma_debug &#8211; controls inclusion of Kint classes, Debug Bar hooks, and various debugging things. Defaults to off.</li>\n<li>NEW js and css for injection on the public side of wordpress</li>\n<li>cleaned up all PHP Notice warnings! go ahead and turn on WP_DEBUG&#8230;</li>\n</ul>\n<h4>1.4.4</h4>\n<ul>\n<li>corrected critical bug introduced by 1.4.3 fixes &#8211; save routines now work again&#8230;</li>\n</ul>\n<h4>1.4.3</h4>\n<ul>\n<li>fixed unnecessary suicide when trying to save a post/page if no custom metabox definitions exist yet&#8230;</li>\n<li>now fully compliant with WP guidelines! ðŸ˜‰</li>\n</ul>\n<h4>1.4.2</h4>\n<ul>\n<li>fixed unreliable usage of isset() for array keys in soma_init_type. Wasn&#8217;t registering user parameters for navbar and sortable properly [facepalm]</li>\n<li>NEW somaFunctions::is_blank() for checking whether variable/array key is actually blank or just set to &#8220;0&#8221; or false</li>\n</ul>\n<h4>1.4.1</h4>\n<ul>\n<li>soma_external_media() now supports SoundCloud URLs!</li>\n<li>fixed inconsistencies with metabox handling of media types. Make sure data=attachment and type=media</li>\n<li>fixed problem with external media metabox colorbox iframes (no dimensions were given)</li>\n<li>fixed colorbox trigger play icon to be more reliable</li>\n<li>mediaelement.js replaces jPlayer when displaying media attachments in admin metaboxes (though at the moment requires wp plugin https://wordpress.org/extend/plugins/media-element-html5-video-and-audio-player/)</li>\n</ul>\n<h4>1.4</h4>\n<ul>\n<li>NEW metabox field type: external_media &#8211; Text field that accepts vimeo or youtube URLs, and fetches that video&#8217;s metadata via each site&#8217;s public API. Also saves that response in post_meta for quicker retrieval.</li>\n<li>NEW metabox field type: external_image &#8211; Text field that accepts image URL, and can import the image as an attachment, also setting imported image as Featured Image</li>\n<li>NEW API function: soma_external_media() &#8211; parses URL from either youtube or vimeo, returns an array with basic metadata, including ID, title, thumbnails &#8211; optionally imports source image to local library and sets the post_thumbnail!. NOTE: desired video must not be private, password-protected, or have embedding disabled by the owner!</li>\n<li>NEW internal function: somaFunctions::attach_external_image() &#8211; sideloads an external image URL into the wordpress media library and attaches to a post</li>\n<li>updated colorbox.js to 1.3.19</li>\n<li>fixed broken url for jquery UI smoothness css</li>\n<li>fixed link output in custom_type_nav() for when the custom post type slug includes variables for taxonomy permalinks</li>\n<li>NEW filter: soma_custom_type_nav_position, for determining with the nav items that are automatically generated for custom post types are placed before or after the existing menu items. Defaults to &#8220;after&#8221; (return &#8220;before&#8221; via filter to change)</li>\n<li>fixed soma_init_type ignoring navbar=false and inserting menu item anyway</li>\n<li>fixed broken css on Sort Order pages</li>\n<li>consolidated metabox description row code (too much duplication)</li>\n<li>a smattering of other tweaks, enhancements, and bugfixes..</li>\n</ul>\n<h4>1.3.2</h4>\n<ul>\n<li>admin footer text output</li>\n<li>fixed numeric field input to allow colon (:)</li>\n</ul>\n<h4>1.3.1</h4>\n<ul>\n<li>fixed problem with setting the option soma_meta_serialize, which needs to be passed 0 or 1, not boolean true or false (false resulted in empty option_value, which broke everything)</li>\n<li>NOTE: when using soma_asset_meta(), don&#8217;t include the prefix when specifying the post_meta key! it gets added automatically. Just use the exact ID you gave when declaring the field in  soma_metabox_data()</li>\n<li>NEW API function: soma_singular_term() for retrieving the term of a taxonomy that is meant to have only one value at a time.</li>\n<li>NEW documentation &#8211; example PHP code in the doc folder, to help demonstrate how to use the somatic framework</li>\n</ul>\n<h4>1.3</h4>\n<ul>\n<li>added &#8216;navbar&#8217; argument to soma_init_type to choose whether to display a nav menu item to the primary navbar for custom post types [default: true]</li>\n<li>added &#8216;sortable&#8217; argument to soma_init_type to choose whether to make items manually sortable (instead of automatically sorting by date) [default: false]</li>\n<li>post meta keys are now stored individually by default. If you want to store all metadata per post as a serialized array in a single key, you need to set the option &#8216;soma_meta_serialize&#8217; to true</li>\n<li>the default post meta key name prefix is &#8220;_soma&#8221; (what you give as the ID for a metabox field is added to it). If you want a custom prefix, you need to set the option &#8216;soma_meta_prefix&#8217; to &#8220;_YOUR_PREFIX&#8221;</li>\n<li>admin type sorting page rows fit content better</li>\n<li>NEW API function: soma_asset_meta() for manipulating post_meta (abstracts the core functions to better handle serialization cases)</li>\n<li>NEW API function: soma_featured_image() for retrieving everything you could possibly need to know about the featured image (post thumbnail)</li>\n<li>in edit listing columns, the checkbox column is always included now, so don&#8217;t need to pass it in soma_init_type column array</li>\n<li>fixed a query parsing filter that was forcing everything to order by menu_order ASC, no matter what&#8230;</li>\n<li>had forgotten to actually enqueue jquery UI datepicker and slider js and css this whole time </li>\n<li>added button to clear date values when using datepicker</li>\n</ul>\n<h4>1.2.1</h4>\n<ul>\n<li>revised somaFunctions::fetch_connected_items() to handle p2p plugin evolution</li>\n<li>note: must pass the p2p type ID and <em>not</em> the post_type anymore! Please revise all calls to fetch_connected_items()!</li>\n<li>When passing &#8220;p2p&#8221; field data with soma_metabox_data(), you must also pass &#8220;p2pname&#8221; for the unique registered p2p connection ID and &#8220;type&#8221; (p2p-list or p2p-thumb) for output</li>\n<li>cleaned up save routines, stripslashes bugs</li>\n<li>metabox type &#8220;richtext&#8221; now uses the new WP3.3 wp_editor() function (multiple rich editors possible, yay!)</li>\n<li>NEW metabox type &#8220;html&#8221; uses the new WP3.3 wp_editor() function, but without the visual editor</li>\n<li>metabox type &#8220;editor&#8221; removed &#8211; use &#8220;richtext&#8221; instead with ID of &#8220;post_content&#8221; and data of &#8220;core&#8221; if you&#8217;re trying to replace the core post editor (just make sure to NOT include &#8220;editor&#8221; in the post type support!)</li>\n<li>some css tweaks in the editor to keep up with WP3.3</li>\n<li>added action hook &#8220;soma_column_data&#8221; to inject custom post type column data output</li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>added listings for public custom post types and taxonomies to the Right Now dashboard widget</li>\n<li>added ability to pick future years (+10) in the basic date picker</li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>bugfix: soma_metabox_data was expecting unecessary array keys</li>\n<li>bugfix: legacy date selectors couldn&#8217;t handle mysqldate format</li>\n<li>bugfix: somaFunctions::fetch_featured_image() couldn&#8217;t handle when wp uploads were organized in year-month folders. Also couldn&#8217;t handle when all the sizes (thumb, medium, full) didn&#8217;t exist&#8230; ugh&#8230;</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>created public functions in api.php to initialize things like custom post type, taxonomy, terms, and custom metabox data</li>\n<li>added flush_rewrite_rules to plugin activation</li>\n<li>added contextual help customization per CPT</li>\n<li>generate custom icon paths automatically based on CPT slug, just provide URL to directory where they&#8217;re located, image name scheme &#8220;slug-menu-icon.png&#8221;</li>\n<li>limit taxonomy term insertion to plugin or theme activation (two scenarios where soma_init_taxonomy could be called)</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>first public release on wordpress.org</li>\n</ul>\n<h4>0.6</h4>\n<ul>\n<li>added jPlayer for metaboxes &#8211; meta type Audio or Video</li>\n<li>asset_meta() can be set to serialize or not post_meta via somaMetaboxes::$meta_serialize var (default true), can also be overridden via function params</li>\n<li>somaMetaboxes::$meta_prefix var for themes to override</li>\n<li>added arg to init_taxonomy to automatically hide metaboxes on custom taxonomies</li>\n</ul>\n<h4>0.5</h4>\n<ul>\n<li>added file upload field type</li>\n<li>added attachment gallery display field type</li>\n<li>added colorbox lightbox viewing for images, pdf, doc, xls, ppt (with google doc iframe viewer)</li>\n<li>added somaDownload class for creating links to download attachments directly</li>\n<li>added jqueryUI datepicker and timepicker</li>\n</ul>\n<h4>0.4</h4>\n<ul>\n<li>added &#8220;help&#8221; metabox field type, displaying the text across both table columns</li>\n<li>fixed ridiculous metabox field table layout issues</li>\n<li>fixed saving of incomplete &#8220;date&#8221; fields</li>\n<li>included soma-admin-jquery.js</li>\n<li>NEW fetch_index function for dealing with $_GET and $_POST</li>\n</ul>\n<h4>0.3</h4>\n<ul>\n<li>purged tons of outdated/unused code from other projects</li>\n<li>changed save_asset() for core data types to use wp_update_post instead of $wpdb-&gt;update</li>\n<li>NEW metabox field type: richtext (with tinymce)</li>\n<li>NEW functions for fetching userdata</li>\n<li>individual metabox save buttons</li>\n</ul>\n<h4>0.2</h4>\n<ul>\n<li>First release</li>\n<li>added somaTypes class, handling generation of custom post types, taxonomies, and terms</li>\n</ul>\n<h4>0.1</h4>\n<ul>\n<li>Code documentation is crude, with comments everywhere. Will standardize docs soon&#8230;</li>\n<li>includes somaFunctions, somaMetaboxes, somaSave, and somaSorter classes</li>\n</ul>\n"
    },
    "short_description": "Adds useful classes for getting the most out of Wordpress&#039; advanced CMS features",
    "description": "<p>This framework is a collection of classes and functions for handling advanced custom post types cases. With just a few defined arrays, it can create custom post types, taxonomies, their labels, menus, metaboxes, and save routines.</p>\n<p>NOTE: this began life as an internal development tool, and as such, does not have much (if any documentation) just yet. It&#8217;s not really end-user friendly in its current state. So if you&#8217;re not running a site I have built for you personally, you probably don&#8217;t need it ðŸ˜‰</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.14.zip",
    "upgrade_notice": {
        "1.7.4": "<p>Any metaboxes dealing with attachments should be revisited...</p>",
        "1.1.1": "<p>Nasty bugs squashed!</p>",
        "1.1": "<p>A bit more user-friendly with new public api calls...</p>",
        "1.0": "<p>Want to stay in sync? Install this version!</p>"
    },
    "screenshots": [],
    "tags": {
        "cms": "cms",
        "custom-post-type": "custom post type",
        "custom-taxonomy": "custom taxonomy",
        "metabox": "metabox"
    },
    "stable_tag": "1.8.14",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/somatic-framework.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.1.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.1.1.zip",
        "1.2": "https://downloads.wordpress.org/plugin/somatic-framework.1.2.zip",
        "1.2.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.2.1.zip",
        "1.3": "https://downloads.wordpress.org/plugin/somatic-framework.1.3.zip",
        "1.3.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.3.1.zip",
        "1.3.2": "https://downloads.wordpress.org/plugin/somatic-framework.1.3.2.zip",
        "1.4": "https://downloads.wordpress.org/plugin/somatic-framework.1.4.zip",
        "1.4.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.4.1.zip",
        "1.4.2": "https://downloads.wordpress.org/plugin/somatic-framework.1.4.2.zip",
        "1.4.3": "https://downloads.wordpress.org/plugin/somatic-framework.1.4.3.zip",
        "1.4.4": "https://downloads.wordpress.org/plugin/somatic-framework.1.4.4.zip",
        "1.5": "https://downloads.wordpress.org/plugin/somatic-framework.1.5.zip",
        "1.5.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.5.1.zip",
        "1.6": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.zip",
        "1.6.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.1.zip",
        "1.6.2": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.2.zip",
        "1.6.3": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.3.zip",
        "1.6.4": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.4.zip",
        "1.6.5": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.5.zip",
        "1.6.6": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.6.zip",
        "1.6.7": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.7.zip",
        "1.6.8": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.8.zip",
        "1.6.9": "https://downloads.wordpress.org/plugin/somatic-framework.1.6.9.zip",
        "1.7": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.zip",
        "1.7.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.1.zip",
        "1.7.10": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.10.zip",
        "1.7.2": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.2.zip",
        "1.7.3": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.3.zip",
        "1.7.4": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.4.zip",
        "1.7.5": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.5.zip",
        "1.7.6": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.6.zip",
        "1.7.7": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.7.zip",
        "1.7.8.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.8.1.zip",
        "1.7.9": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.9.zip",
        "1.7.9.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.7.9.1.zip",
        "1.8": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.zip",
        "1.8.1": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.1.zip",
        "1.8.10": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.10.zip",
        "1.8.11": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.11.zip",
        "1.8.12": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.12.zip",
        "1.8.13": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.13.zip",
        "1.8.14": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.14.zip",
        "1.8.2": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.2.zip",
        "1.8.3": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.3.zip",
        "1.8.4": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.4.zip",
        "1.8.5": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.5.zip",
        "1.8.6": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.6.zip",
        "1.8.7": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.7.zip",
        "1.8.8": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.8.zip",
        "1.8.9": "https://downloads.wordpress.org/plugin/somatic-framework.1.8.9.zip",
        "trunk": "https://downloads.wordpress.org/plugin/somatic-framework.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://somaticstudios.com/code",
    "banners": {
        "low": "https://ps.w.org/somatic-framework/assets/banner-772x250.jpg?rev=533800",
        "high": false
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/somatic-framework_696a66.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}