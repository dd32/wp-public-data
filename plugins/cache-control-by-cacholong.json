{
    "name": "Cache control by Cacholong",
    "slug": "cache-control-by-cacholong",
    "version": "5.4.1",
    "author": "<a href=\"http://www.cacholong.nl\">Cacholong</a>",
    "author_profile": "https://profiles.wordpress.org/preliot/",
    "contributors": {
        "cacholong": {
            "profile": "https://profiles.wordpress.org/cacholong/",
            "avatar": "https://secure.gravatar.com/avatar/2ea757f3125d8311ac91b4b76d5a2865?s=96&d=monsterid&r=g",
            "display_name": "Cacholong"
        },
        "preliot": {
            "profile": "https://profiles.wordpress.org/preliot/",
            "avatar": "https://secure.gravatar.com/avatar/608ad82c09e4d8a74441e40136d03400?s=96&d=monsterid&r=g",
            "display_name": "Preliot"
        }
    },
    "requires": "4.3.1",
    "tested": "5.7.12",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/cache-control-by-cacholong/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 500,
    "downloaded": 3705,
    "last_updated": "2021-07-20 12:01pm GMT",
    "added": "2018-03-06",
    "homepage": "",
    "sections": {
        "description": "<p>“Cache control by Cacholong” plugin automates purging of Nginx Pagespeed cache and Nginx FastCGI cache on your Nginx server(s). It is a backend plugin that is able to:</p>\n<ul>\n<li>Purge Nginx Pagespeed cache and/or Nginx FastCGI cache.</li>\n<li>Purge cache automatically, manually, with WordPress cronjobs and WP-CLI.</li>\n<li>Purge caches on one or more servers (See hosts.json section for more details).</li>\n<li>Use commandline (WP-CLI) to purge caches or reset to factory settings.</li>\n<li>Remove id tag from stylesheet link tags, in order to allow Nginx Pagespeed to combine stylesheets.</li>\n<li>Allow purging of other cached items (see Settings &gt; Cache control).</li>\n<li>Inform user of purge status.</li>\n<li>Support for single site and network sites</li>\n<li>Support for WP-CLI</li>\n<li>Support for WPML (including language negotiation type domain)</li>\n</ul>\n<h4>When will it purge?</h4>\n<p>This plugin will work with default and custom post types. It will purge on a save, regular update, quick edit update, slug change, delete and undelete. The user is informed with one or more messages.<br />\nThere are a few caveats:</p>\n<ul>\n<li>When a user is using the Gutenberg editor, purge messages will not be displayed.</li>\n<li>When the user uses “Quick edit” and “Updates” the post, no messages will be displayed, because there&#8217;s no page refresh. Those messages will be shown on the next request. </li>\n</ul>\n<p>It is possible to purge with WordPress cronjobs. Adjust the &#8216;Cronjob settings&#8217; to perform a daily purge of caches.</p>\n<p>You can also purge items manually. Go to the WordPress dashboard and navigate to:</p>\n<ul>\n<li>Settings &gt; Cache control &gt; purge single item</li>\n<li>Settings &gt; Cache control &gt; purge all caches</li>\n<li>Admin Toolbar &gt; purge all caches</li>\n</ul>\n<h4>Settings</h4>\n<ul>\n<li>File with hosts (JSON):                 File with information about one or more hosts for this WordPress installation. See hosts.json section for more details. </li>\n<li>Pagespeed optimized CSS:                Remove ID tag from all WordPress stylesheet link tags to improve Nginx Pagespeed caching. Will only work on frontend.</li>\n<li>Purge settings default post types:      Select one or more options when purging a default post type. Possible to purge post url (default), home page, all connected WordPress categories or all caches.</li>\n<li>Purge settings default custom type(s):  Select one or more options when purging a custom post type. Possible to purge post url (default), home page, all connected WordPress categories or all caches.</li>\n</ul>\n<h4>Cronjob Settings</h4>\n<ul>\n<li>Cronjob purging:                        Enable or disable cronjob purging. </li>\n<li>Cronjob time of each day:               Enter HH:MM in 24 hour notation for cronjob time of day. Will fallback to 00:00 when wrong format is given.</li>\n<li>Purge caches                            Select caches to purge on given cronjob time. </li>\n</ul>\n<h4>hosts.json</h4>\n<p>Hosts.json is a JSON file with information about one or more servers for this WordPress installation. Remember that this file must contain information about all servers, including the<br />\none with this plugin. Default path is: wp-content/uploads/cacholong-cache-control/hosts.json.</p>\n<p>Here is an example of a hosts.json file:</p>\n<pre><code>{\"servers\":\n    [\n        {\"name\": \"server1\", \"ip\": \"127.0.0.1\", \"pagespeed\": true, \"fastcgi\": false},\n        {\"name\": \"server2\", \"ip\": \"127.0.0.2\", \"pagespeed\": false, \"fastcgi\": true},\n    ]\n}\n</code></pre>\n<p>Each line contains information about one server. Parameters:</p>\n<ul>\n<li>\n<p>name (string)<br />\nName of host, something to identify this server.</p>\n</li>\n<li>\n<p>ip (string)<br />\nIP address of server or full url. Format: scheme://host:port/path</p>\n</li>\n<li>\n<p>pagespeed (bool)<br />\nServer uses Nginx Pagespeed (true) or not (false)</p>\n</li>\n<li>\n<p>fastcgi (bool)<br />\nServer user Nginx FastCGI (true) or not (false)</p>\n</li>\n</ul>\n<p>When there is no hosts.json or the path is invalid, this plugin assumes the following:</p>\n<pre><code>{\"servers\":\n    [\n        {\"name\": \"localhost\", \"ip\": \"127.0.0.1\", \"pagespeed\": true, \"fastcgi\": true}\n    ]\n}\n</code></pre>\n<h4>How does it work</h4>\n<p>“Cache control by Cacholong” empties partial or full cache for Nginx Pagespeed and FastCGI cache. WordPress HTTP API is used to make (post) request to<br />\nspecific urls to trigger purges. Based on the http header responses this plugin determines if a purge is successful or not. The user is informed with messages, which are loaded after a purge and page refresh.</p>\n<p>There are several settings to tweak purging, see Settings &gt; Cache control.</p>\n<h4>WP-CLI</h4>\n<p>There are several commands available for the commandline with wp-cli. Commands generate text output which can be suppressed with &#8211;quiet. When an error occurs, text will always be displayed.</p>\n<h4>WP-CLI exit codes</h4>\n<p>Exit codes are 0 (no errors) or 1 (generic error).</p>\n<h4>WP-CLI examples</h4>\n<p>Purge command with all arguments:</p>\n<pre><code>wp cacholong_cc purge [--cache=&lt;cache&gt;] [--ips=&lt;ips&gt;]\n</code></pre>\n<p>Purge Nginx FastCGI:</p>\n<pre><code>wp cacholong_cc purge --cache=fastcgi\n</code></pre>\n<p>Purge Nginx Pagespeed:</p>\n<pre><code>wp cacholong_cc purge --cache=pagespeed\n</code></pre>\n<p>Purge all caches:</p>\n<pre><code>wp cacholong_cc purge --cache=all\nwp cacholong_cc purge\n</code></pre>\n<p>Purge Nginx Pagespeed cache for ip address 127.0.0.1 and 127.0.0.2:</p>\n<pre><code>wp cacholong_cc purge --cache=pagespeed --ips=127.0.0.1,127.0.0.2\n</code></pre>\n<p>Purge all caches for ip address 127.0.0.1 and 127.0.0.2:</p>\n<pre><code>wp cacholong_cc purge --ips=127.0.0.1,127.0.0.2\n</code></pre>\n<p>Factory reset options for given site_id or current blog if no site_id is given:</p>\n<pre><code>wp cacholong_cc factory_reset [--site_id=site_id]\n</code></pre>\n<h4>Debug</h4>\n<p>Plugin will log basic purge information when WP_DEBUG is true (can be set in wp-config.php). Logs information in file wp-content/cacholong-cache-control.log.<br />\nPlugin will log wp_remote_request details when CACHOLONG_CACHE_DEBUG_HTTP_API_REQUEST is true (can be set in wp-config.php). Logs information in file wp-content/cacholong-cache-control.log.</p>\n",
        "installation": "<h4>Minimum Requirements</h4>\n<ul>\n<li>WordPress 4.3.1+</li>\n<li>Nginx server with fastcgi_cache enabled</li>\n</ul>\n<h4>Optional Requirements</h4>\n<ul>\n<li>hosts.json file. File contains information about hosts and which caches are active. See hosts.json section for more details. When not available, plugin assumes localhost with all caches active. </li>\n</ul>\n<h4>Automatic installation</h4>\n<ol>\n<li>Log in to your WordPress dashboard and navigate to the plugins menu.</li>\n<li>Click “Add New”.</li>\n<li>Search for “Cache control by Cacholong”.</li>\n<li>Once you find this plugin, click “Install Now”.</li>\n<li>Activate the plugin</li>\n<li>Configure the plugin at Settings &gt; Cache control</li>\n</ol>\n<h4>Manual installation</h4>\n<ol>\n<li>Log in to your WordPress dashboard and navigate to the plugins menu.</li>\n<li>Click “Add New”.</li>\n<li>Click “Upload Plugin”.</li>\n<li>Locate zip file on your computer and click “Install Now”.</li>\n<li>Activate the plugin</li>\n<li>Configure the plugin at Settings &gt; Cache control</li>\n</ol>\n<h4>Updating</h4>\n<p>Although updates are thoroughly tested, make a backup of your website (files and database) before you install an update.</p>\n",
        "faq": "\n<dt id='why%20doesn%27t%20this%20plugin%20work%3F'>\nWhy doesn&#8217;t this plugin work?\n</h4>\n<p>\n<p>This plugin has several requirements. Please check the minimum and optional requirements, before installing this plugin. Open a support topic if you<br />\nrequire additional help.</p>\n</p>\n<dt id='when%20i%20use%20%E2%80%9Cquick%20edit%E2%80%9D%20to%20edit%20a%20post%2C%20nothing%20is%20happening%21'>\nWhen i use “Quick edit” to edit a post, nothing is happening!\n</h4>\n<p>\n<p>Although no message is displayed, the purge was activated! You can see the purge message when you refresh the page. This is a technical limitation.</p>\n</p>\n<dt id='why%20do%20my%20cronjobs%20execute%20later%20then%20i%20expect%3F'>\nWhy do my cronjobs execute later then I expect?\n</h4>\n<p>\n<p>WordPress cronjobs are not the same as real cronjobs. WordPress cronjobs will start if someone visits your website after (or on the) scheduled time. This might be later then expected.<br />\nIt is possible to disable WordPress cronjobs and use a real cronjob that polls wp-cron.php on a regular base.</p>\n</p>\n<dt id='why%20does%20my%20cronjob%20execute%20immediately%3F'>\nWhy does my cronjob execute immediately?\n</h4>\n<p>\n<p>If you enter a time of day that has already passed, the first cronjob is set to this time of day and is executed the first time the site is loaded (or wp-cron.php is called).</p>\n</p>\n<dt id='what%20should%20i%20do%20when%20wordpress%20cronjobs%20are%20disabled%3F'>\nWhat should I do when WordPress cronjobs are disabled?\n</h4>\n<p>\n<p>WordPress cronjobs are disabled (&#8216;DISABLE_WP_CRON&#8217; = true). Please use a different type of cronjob to poll wp-cron.php on a regular base.<br />\nIf cronjob cache purging fails make sure the hosts.json file is in place with the proper settings. See hosts.json section on the plugins page for more details.</p>\n</p>\n\n",
        "changelog": "<h4>5.4.1 &#8211; 2021-07-16</h4>\n<ul>\n<li>Changed &#8211; Fastcgi purge works with HTTP method GET + prefixed &#8216;purge&#8217; in url</li>\n</ul>\n<h4>5.4.0 &#8211; 2021-06-18</h4>\n<ul>\n<li>Added &#8211; Additional debug information (wp_remote_request details) when CACHOLONG_CACHE_DEBUG_HTTP_API_REQUEST is set in wp-config.php</li>\n<li>Changed &#8211; Now fastcgi purge works similar to pagespeed purge (without custom unlink code)</li>\n<li>Removed &#8211; Required server variable ‘CC_NGINX_FASTCGI_CACHE_PATH’</li>\n<li>Removed &#8211; Message: required $_SERVER[‘CC_NGINX_FASTCGI_CACHE_PATH’] is not set</li>\n<li>Changed &#8211; Code base maintenance</li>\n</ul>\n<h4>5.3.2 &#8211; 2021-04-15</h4>\n<ul>\n<li>Changed &#8211; Fixed error in docs for WP-CLI commands</li>\n</ul>\n<h4>5.3.1 &#8211; 2021-04-15</h4>\n<ul>\n<li>Changed &#8211; Improved readability readme.txt</li>\n</ul>\n<h4>5.3.0 &#8211; 2021-04-15</h4>\n<ul>\n<li>Added &#8211; Support for one or more ip addresses in WP CLI commands purge to override hosts.json</li>\n<li>Added &#8211; WP CLI commands now have aliases</li>\n<li>Changed &#8211; Updated and tweaked readme.txt</li>\n<li>Changed &#8211; WP CLI commands purge and purge all now only work with arguments</li>\n<li>Changed &#8211; Removed WP CLI purge_all command (this is now handled with purge all)</li>\n<li>Changed &#8211; Updated copyright from 2015-2020 to 2015-2021</li>\n<li>Changed &#8211; Removed register_deactivation_hook hook and empty method</li>\n<li>Fixed &#8211; Trashing a post or page didn&#8217;t purge</li>\n</ul>\n<h4>5.2.0 &#8211; 2021-03-10</h4>\n<ul>\n<li>Fixed &#8211; Purge old and new slug when slug changes</li>\n<li>Fixed &#8211; Trash and untrash work again</li>\n<li>Added &#8211; Support for WPML (including language negotiation type domain)</li>\n<li>Added &#8211; Plugin is tested with WordPress 5.7 (RC 2)</li>\n</ul>\n<h4>5.1.1 &#8211; 2020-12-14</h4>\n<ul>\n<li>Fixed &#8211; Editing home page did not purge home page. Issue with WordPress method url_to_postid() which does return post id for home page.</li>\n</ul>\n<h4>5.1.0 &#8211; 2020-11-18</h4>\n<ul>\n<li>Added &#8211; WP CLI commands: purge, purge_all, factory_reset. For details see readme.txt</li>\n<li>Added &#8211; New admin bar commands: purge pagespeed, purge fastcgi</li>\n<li>Added &#8211; link to settings page on plugin index page</li>\n<li>Added &#8211; Plugin is tested for usage with WordPress 5.6 RC (and 5.5.1)</li>\n<li>Changed &#8211; Updated copyright from 2015-2019 to 2015-2020</li>\n<li>Changed &#8211; Moved logging to cacholong-cache-control.log</li>\n<li>Fixed &#8211; Checkbox &#8216;all caches&#8217; on settings page &gt; Purge settings default/custom post types did not empty other checkboxes anymore. Fixed.</li>\n<li>Fixed &#8211; Trashing an item in Gutenberg didn&#8217;t trigger purge.</li>\n<li>Fixed &#8211; Stripping id tags now only works on frontend and if a user is not seeing an admin page or admin_bar.</li>\n</ul>\n<h4>5.0.1 &#8211; 2020-09-30</h4>\n<ul>\n<li>Fixed &#8211; Removing id tag for pagespeed optimizing of css, caused issues with some backend plugins. Stripping id tags now only works on frontend.</li>\n</ul>\n<h4>5.0.0 &#8211; 2019-11-13</h4>\n<ul>\n<li>Added &#8211; Multisite support</li>\n<li>Added &#8211; WP CLI support</li>\n<li>Added &#8211; Factory reset</li>\n<li>Added &#8211; Message when required $_SERVER[‘CC_NGINX_FASTCGI_CACHE_PATH’] is not set</li>\n<li>Added &#8211; Message when all caches are disabled in hosts.json</li>\n<li>Added &#8211; Plugin is tested for usage with WordPress 5.3.</li>\n</ul>\n<p>See changelog.txt for all versions.</p>\n"
    },
    "short_description": "“Cache control by Cacholong” is a cache control plugin for one or more Nginx servers.",
    "description": "<p>“Cache control by Cacholong” plugin automates purging of Nginx Pagespeed cache and Nginx FastCGI cache on your Nginx server(s). It is a backend plugin that is able to:</p>\n<ul>\n<li>Purge Nginx Pagespeed cache and/or Nginx FastCGI cache.</li>\n<li>Purge cache automatically, manually, with WordPress cronjobs and WP-CLI.</li>\n<li>Purge caches on one or more servers (See hosts.json section for more details).</li>\n<li>Use commandline (WP-CLI) to purge caches or reset to factory settings.</li>\n<li>Remove id tag from stylesheet link tags, in order to allow Nginx Pagespeed to combine stylesheets.</li>\n<li>Allow purging of other cached items (see Settings &gt; Cache control).</li>\n<li>Inform user of purge status.</li>\n<li>Support for single site and network sites</li>\n<li>Support for WP-CLI</li>\n<li>Support for WPML (including language negotiation type domain)</li>\n</ul>\n<h4>When will it purge?</h4>\n<p>This plugin will work with default and custom post types. It will purge on a save, regular update, quick edit update, slug change, delete and undelete. The user is informed with one or more messages.<br />\nThere are a few caveats:</p>\n<ul>\n<li>When a user is using the Gutenberg editor, purge messages will not be displayed.</li>\n<li>When the user uses “Quick edit” and “Updates” the post, no messages will be displayed, because there&#8217;s no page refresh. Those messages will be shown on the next request. </li>\n</ul>\n<p>It is possible to purge with WordPress cronjobs. Adjust the &#8216;Cronjob settings&#8217; to perform a daily purge of caches.</p>\n<p>You can also purge items manually. Go to the WordPress dashboard and navigate to:</p>\n<ul>\n<li>Settings &gt; Cache control &gt; purge single item</li>\n<li>Settings &gt; Cache control &gt; purge all caches</li>\n<li>Admin Toolbar &gt; purge all caches</li>\n</ul>\n<h4>Settings</h4>\n<ul>\n<li>File with hosts (JSON):                 File with information about one or more hosts for this WordPress installation. See hosts.json section for more details. </li>\n<li>Pagespeed optimized CSS:                Remove ID tag from all WordPress stylesheet link tags to improve Nginx Pagespeed caching. Will only work on frontend.</li>\n<li>Purge settings default post types:      Select one or more options when purging a default post type. Possible to purge post url (default), home page, all connected WordPress categories or all caches.</li>\n<li>Purge settings default custom type(s):  Select one or more options when purging a custom post type. Possible to purge post url (default), home page, all connected WordPress categories or all caches.</li>\n</ul>\n<h4>Cronjob Settings</h4>\n<ul>\n<li>Cronjob purging:                        Enable or disable cronjob purging. </li>\n<li>Cronjob time of each day:               Enter HH:MM in 24 hour notation for cronjob time of day. Will fallback to 00:00 when wrong format is given.</li>\n<li>Purge caches                            Select caches to purge on given cronjob time. </li>\n</ul>\n<h4>hosts.json</h4>\n<p>Hosts.json is a JSON file with information about one or more servers for this WordPress installation. Remember that this file must contain information about all servers, including the<br />\none with this plugin. Default path is: wp-content/uploads/cacholong-cache-control/hosts.json.</p>\n<p>Here is an example of a hosts.json file:</p>\n<pre><code>{\"servers\":\n    [\n        {\"name\": \"server1\", \"ip\": \"127.0.0.1\", \"pagespeed\": true, \"fastcgi\": false},\n        {\"name\": \"server2\", \"ip\": \"127.0.0.2\", \"pagespeed\": false, \"fastcgi\": true},\n    ]\n}\n</code></pre>\n<p>Each line contains information about one server. Parameters:</p>\n<ul>\n<li>\n<p>name (string)<br />\nName of host, something to identify this server.</p>\n</li>\n<li>\n<p>ip (string)<br />\nIP address of server or full url. Format: scheme://host:port/path</p>\n</li>\n<li>\n<p>pagespeed (bool)<br />\nServer uses Nginx Pagespeed (true) or not (false)</p>\n</li>\n<li>\n<p>fastcgi (bool)<br />\nServer user Nginx FastCGI (true) or not (false)</p>\n</li>\n</ul>\n<p>When there is no hosts.json or the path is invalid, this plugin assumes the following:</p>\n<pre><code>{\"servers\":\n    [\n        {\"name\": \"localhost\", \"ip\": \"127.0.0.1\", \"pagespeed\": true, \"fastcgi\": true}\n    ]\n}\n</code></pre>\n<h4>How does it work</h4>\n<p>“Cache control by Cacholong” empties partial or full cache for Nginx Pagespeed and FastCGI cache. WordPress HTTP API is used to make (post) request to<br />\nspecific urls to trigger purges. Based on the http header responses this plugin determines if a purge is successful or not. The user is informed with messages, which are loaded after a purge and page refresh.</p>\n<p>There are several settings to tweak purging, see Settings &gt; Cache control.</p>\n<h4>WP-CLI</h4>\n<p>There are several commands available for the commandline with wp-cli. Commands generate text output which can be suppressed with &#8211;quiet. When an error occurs, text will always be displayed.</p>\n<h4>WP-CLI exit codes</h4>\n<p>Exit codes are 0 (no errors) or 1 (generic error).</p>\n<h4>WP-CLI examples</h4>\n<p>Purge command with all arguments:</p>\n<pre><code>wp cacholong_cc purge [--cache=&lt;cache&gt;] [--ips=&lt;ips&gt;]\n</code></pre>\n<p>Purge Nginx FastCGI:</p>\n<pre><code>wp cacholong_cc purge --cache=fastcgi\n</code></pre>\n<p>Purge Nginx Pagespeed:</p>\n<pre><code>wp cacholong_cc purge --cache=pagespeed\n</code></pre>\n<p>Purge all caches:</p>\n<pre><code>wp cacholong_cc purge --cache=all\nwp cacholong_cc purge\n</code></pre>\n<p>Purge Nginx Pagespeed cache for ip address 127.0.0.1 and 127.0.0.2:</p>\n<pre><code>wp cacholong_cc purge --cache=pagespeed --ips=127.0.0.1,127.0.0.2\n</code></pre>\n<p>Purge all caches for ip address 127.0.0.1 and 127.0.0.2:</p>\n<pre><code>wp cacholong_cc purge --ips=127.0.0.1,127.0.0.2\n</code></pre>\n<p>Factory reset options for given site_id or current blog if no site_id is given:</p>\n<pre><code>wp cacholong_cc factory_reset [--site_id=site_id]\n</code></pre>\n<h4>Debug</h4>\n<p>Plugin will log basic purge information when WP_DEBUG is true (can be set in wp-config.php). Logs information in file wp-content/cacholong-cache-control.log.<br />\nPlugin will log wp_remote_request details when CACHOLONG_CACHE_DEBUG_HTTP_API_REQUEST is true (can be set in wp-config.php). Logs information in file wp-content/cacholong-cache-control.log.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.zip",
    "upgrade_notice": {
        "4.0.0 - 2018-01-26": "<ul>\n<li>Must deinstall older version when installing version 4.0.0, because of breaking changes. Make sure you make backups of your files and database before you proceed.</li>\n</ul>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/cache-control-by-cacholong/assets/screenshot-1.jpg?rev=1834268",
            "caption": "“Cache control by Cacholong\" settings panel."
        }
    ],
    "tags": {
        "cache": "cache",
        "cache-control": "cache-control",
        "caching": "caching",
        "cacholong": "cacholong",
        "pagespeed": "pagespeed"
    },
    "stable_tag": "trunk",
    "versions": {
        "4.0.0": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.4.0.0.zip",
        "4.0.1": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.4.0.1.zip",
        "4.0.2": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.4.0.2.zip",
        "4.1.1": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.4.1.1.zip",
        "5.0.0": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.5.0.0.zip",
        "5.1.0": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.5.1.0.zip",
        "5.3.2": "https://downloads.wordpress.org/plugin/cache-control-by-cacholong.5.3.2.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.cacholong.nl/",
    "banners": {
        "low": "https://ps.w.org/cache-control-by-cacholong/assets/banner-772x250.jpg?rev=1834268",
        "high": "https://ps.w.org/cache-control-by-cacholong/assets/banner-1544x500.jpg?rev=1834268"
    },
    "icons": {
        "1x": "https://ps.w.org/cache-control-by-cacholong/assets/icon-128x128.png?rev=1834268",
        "2x": "https://ps.w.org/cache-control-by-cacholong/assets/icon-256x256.png?rev=1834268"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}