{
    "name": "Shortcode Directives",
    "slug": "shortcode-directives",
    "version": "1.0.0",
    "author": "<a href=\"http://en.michaeluno.jp\">Michael Uno</a>",
    "author_profile": "https://profiles.wordpress.org/miunosoft/",
    "contributors": {
        "michael-uno": {
            "profile": "https://profiles.wordpress.org/michael-uno/",
            "avatar": "https://secure.gravatar.com/avatar/e9f515fb5ab3e0415cb317850db3bc78?s=96&d=monsterid&r=g",
            "display_name": "Michael Uno"
        },
        "miunosoft": {
            "profile": "https://profiles.wordpress.org/miunosoft/",
            "avatar": "https://secure.gravatar.com/avatar/6efc08d78ed3d7ef6c8093361b6a704c?s=96&d=monsterid&r=g",
            "display_name": "miunosoft"
        }
    },
    "requires": "4.5",
    "tested": "5.3.18",
    "requires_php": "5.2.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/shortcode-directives/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 556,
    "last_updated": "2020-01-09 09:01:00",
    "added": "2020-01-09",
    "homepage": "http://en.michaeluno.jp/shortcode-directivies",
    "sections": {
        "description": "<h4>Quickly manage posts/comments in front-end with command-like-shortcodes</h4>\n<p>Say, you find a comment that should be hidden or deleted on your site. Usually, you click on the Edit link of the comment and manage it back-end.</p>\n<p>What if you could delete/hide it by commenting on it?</p>\n<p>This plugin lets you manage posts and comments with command-like-shortcodes.</p>\n<p>In this case, you reply to the <em>comment</em> you want to hide by typing <code>[$comment hold]</code>.</p>\n<h4>Bulk actions on certain posts/comments</h4>\n<p>If you want to bulk-delte comments that belong to a certain post, comment on the <em>post</em> by typing <code>[$comment delete]</code>.</p>\n<p>If you have a hierarchical post type and want to add the same tag to all direct children of a certain post plus the post itself, then comment on the post by typing <code>[$tag mytag --to=\"siblings,self\"]</code>.</p>\n<p>Like this, a bit complex operations can be achived with the shortcode directives.</p>\n<h4>Getting Started</h4>\n<p>To experience what this plugin does, follow these steps.<br />\n1. After activating the plugin, pick a test post which has been published already.<br />\n2. Go to the page of the post in front-end.<br />\n3. Submit a comment to the post with the shortcode <code>[$post_status private]</code>.</p>\n<p>Now it should be hidden for normal site visitors.</p>\n<ol>\n<li>To revert the change, submit a comment to the post with the shortcode <code>[$post_status publish]</code>.</li>\n</ol>\n<p>It should be visible to normal site visitors.</p>\n<p>By default, the plugin enables the features for the buil-in <code>post</code> and <code>page</code> post types. If you like to support different post types, go to Dashboard -&gt; Tools -&gt; Shortcode Directives. There, you can pick which post types to have the ability of shortcode directives.</p>\n<p>For usage details, please see the <strong>Other Notes</strong> seciton.</p>\n<p>You should have grapsed the idea of how this plugin works by now. Hope you find it useful!</p>\n<h4>Supported Languages</h4>\n<ul>\n<li>English</li>\n</ul>\n<h3>Usage</h3>\n<h4>$post_status</h4>\n<p>Sets a specified post status.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_status {status}]\n</code></pre>\n<p><strong>Examples</strong><br />\nChanges the post status to <code>pending</code>.</p>\n<pre><code>[$post_status pending]\n</code></pre>\n<p>Changes the post status to <code>draft</code>.</p>\n<pre><code>[$post_status draft]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nSpecifies which post to apply the directive operation. This <code>--to</code> option is avialble for all the directives except <code>$comment</code>. Use <code>children</code>, <code>siblings</code>, and <code>descendants</code> for builk actions.<br />\n&#8211; self (default): the comment/post iteself. When a comment with a directive is submitted to a post, that post will be the subject post and it is considered the one denoted by the option value, <code>self</code>.<br />\n&#8211; parent: the parent post of the subject post.<br />\n&#8211; {post ID}: the post ID.<br />\n&#8211; children: the direct child posts of the subjec post if the post type supports the <code>hierarchical</code> option.<br />\n&#8211; siblings: the sibling posts of the subject post in hierarchical relationships if the post type supports the <code>hierarchical</code> option.<br />\n&#8211; decendants: all the decendants which belong to the subject post if the post type supports the <code>hierarchical</code> option.</p>\n<p>This moves all the descendant posts to trash.</p>\n<pre><code>[$post_status trash --to=descendants]\n</code></pre>\n<h4>$post_parent</h4>\n<p>Sets a post parent ID.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_parent {post ID}]\n</code></pre>\n<p>Sets a post parent of a post ID of 1451.</p>\n<pre><code>[$post_parent 1451]\n</code></pre>\n<p>This removes a post parent.</p>\n<pre><code>[$post_parent 0]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$post_column</h4>\n<p>Sets a value with a specified post column name to an existent post column.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_column --column={colum name} {value}]\n[$post_column --column={colum name} --value=\"some value\"]\n</code></pre>\n<p>Setting the value <code>3</code> to the <code>menu_order</code> column.</p>\n<pre><code>[$post_column column=menu_order 3]\n</code></pre>\n<p>When a value must have a white space, use the <code>--value</code> option.</p>\n<pre><code>[$post_column --column=post_title --value=\"This is a title\"]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$post_meta</h4>\n<p>Sets a post meta value.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_meta {key} {value}]\n[$post_meta {key1}=\"{some value1}\" {key2}=\"{some value2}\" {key3}=\"{some value3}\"...]\n</code></pre>\n<p>This sets the post meta value <code>bar</code> to the <code>_foo</code> meta key.</p>\n<pre><code>[$post_meta _foo bar]\n</code></pre>\n<p>For values containing white-spaces and multiple key-value pairs, use the attribute style format.</p>\n<pre><code>[$post_meta _question=\"Why did the chicken cross the road?\" _answer=\"To get to the other side\"]\n</code></pre>\n<p>To delete meta keys, use the <code>--action</code> option by passing <code>delete</code>. This deletes the <code>_question</code> and <code>_answer</code> meta keys and their values from the database.</p>\n<pre><code>[$post_meta _question _answer --action=\"delete\"]\n</code></pre>\n<p>Note: the <code>--to</code> and <code>--action</code> option names are reserved by the plugin so you cannot specify them with the option name like <code>[$post_meta --action=\"my value\" --to=\"another value\"]</code>.</p>\n<p>If you have to set them, use the command-line style format introduced above.</p>\n<pre><code>[$post_meta --action \"Some value here.\"]\n[$post_meta --to \"Another value here.\"]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$taxonomy</h4>\n<p>Sets taxonomy terms with a specified taxonomy slug.<br />\n<strong>Format</strong></p>\n<pre><code>[$taxonomy --slug={taxonomy slug} {term1} {term2} {term3}...]\n</code></pre>\n<p>This adds the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms of the <code>post_tag</code> taxonomy to the post.</p>\n<pre><code>[$taxonomy --slug=post_tag Apple Banana \"Apple Pie\"]\n</code></pre>\n<p><strong>Option: &#8211;action</strong><br />\n&#8211; add (default) : adds the specified terms<br />\n&#8211; remove : removes the specified terms<br />\n&#8211; remove_all/remove_all : removes all the associated terms<br />\n&#8211; delete : deletes the specified terms from the database if they are assigned to the post<br />\n&#8211; delete_all/delete-all : deletes all the associated terms from the database</p>\n<p>This removes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms of the <code>post_tag</code> taxonomy from the post.</p>\n<pre><code>[$taxonomy --slug=post_tag Apple Banana \"Apple Pie\" --action=remove]\n</code></pre>\n<p>This deletes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms of the <code>post_tag</code> taxonomy from the database if they are assigned to the post.</p>\n<pre><code>[$taxonomy --slug=post_tag Apple Banana \"Apple Pie\" --action=delete]\n</code></pre>\n<p>This removes all the assigned terms of the <code>post_tag</code> taxonomy from the post.</p>\n<pre><code>[$taxonomy --slug=post_tag --action=remove_all]\n</code></pre>\n<p>This deletes all the assigned terms of the <code>post_tag</code> taxonomy from the database.</p>\n<pre><code>[$taxonomy --slug=post_tag --action=delete_all]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$tag</h4>\n<p>Sets non-hierarchical taxonomy terms.<br />\n<strong>Format</strong></p>\n<pre><code>[$tag {tag1} {tag2} {tag3}...]\n</code></pre>\n<p>When the <code>$tag</code> directive is given, the plugin searches for a non-hierarchical taxonomy associated with the post type of the post and sets the given terms to the post. If a non-hierarchical taxonomy is not found, no action will be taken. If you have multiple non-hierarchical taxonomies for a particular post type which supports shortcode directives, use the <code>$taxonomy</code> directive. See the <code>$taxonomy</code> section above.</p>\n<p>This adds the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> tags to the post.</p>\n<pre><code>[$tag Apple Banana \"Apple Pie\"]\n</code></pre>\n<p><strong>Option: &#8211;action</strong><br />\nThe same action values with the <code>$taxonomy</code> directive are supported.</p>\n<p>This removes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> tags from the post.</p>\n<pre><code>[$tag --action=remove Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This deletes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms from the database if they are assigned to the post.</p>\n<pre><code>[$tag --action=delete Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This removes all the tags associated with the post.</p>\n<pre><code>[$tag --action=remove_all]\n</code></pre>\n<p>This deletes all the tags associated with the post from the database.</p>\n<pre><code>[$tag --action=delete_all]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$category</h4>\n<p>Sets hierarchical taxonomy terms.<br />\n<strong>Format</strong></p>\n<pre><code>[$category {category1} {category2} {category3}...]\n</code></pre>\n<p>When the <code>$category</code> directive is given, the plugin searches for a hierarchical taxonomy associated with the post type of the post and sets the given terms to the post. If a hierarchical taxonomy is not found, no action will be taken. If you have multiple hierarchical taxonomies for a particular post type which supports shortcode directives, use the <code>$taxonomy</code> directive. See the <code>$taxonomy</code> section above.</p>\n<p>This adds the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> categories to the post.</p>\n<pre><code>[$category Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This removes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> categories from the post.</p>\n<pre><code>[$category Apple Banana \"Apple Pie\" --action=remove]\n</code></pre>\n<p>This deletes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> categories from the database if they are assigned to the post.</p>\n<pre><code>[$category --action=delete Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This removes all the categories associated with the post.</p>\n<pre><code>[$category --action=remove_all]\n</code></pre>\n<p>This deletes all the categories associated with the post from the database.</p>\n<pre><code>[$category --action=delete_all]\n</code></pre>\n<p><strong>Option: &#8211;action</strong><br />\nThe same action values with the <code>$taxonomy</code> directive are supported.</p>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<p>$comment</p>\n<p>Performs certain actions againt a replying comment. If commented on a post, the action applied to <em>all</em> the comments which belong to the post. So be careful not to do that when you want to do someting on a single comment.</p>\n<p><strong>Format</strong></p>\n<pre><code>[$comment {sub-command}]\n</code></pre>\n<p><strong>Sub-commands</strong><br />\n&#8211; delete|remove: deletes the comment<br />\n&#8211; hold|disapprove: changes the comment status to <code>hold</code>.<br />\n&#8211; trash: moves the comment to trash<br />\n&#8211; spam: mark the commet as spam<br />\n&#8211; convert: converts the comment to a child post.</p>\n<p>Replying to an existent comment with the following deletes the comment.</p>\n<pre><code>[$comment delete]\n</code></pre>\n<p>For hierarchical post types, the <code>convert</code> sub-command can help bulk-convert comments in to posts.</p>\n<p>Commenting on a <em>post</em> (not an existent comment) converts all the comments belonging to the post into posts by keeping the hirarchical relationships.</p>\n<pre><code>[$comment convert]\n</code></pre>\n",
        "installation": "<ol>\n<li>Upload <strong><code>shortcode-directives.php</code></strong> and other files compressed in the zip folder to the <strong><code>/wp-content/plugins/</code></strong> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n<li>Go to <strong>Dashboard</strong> -&gt; <strong>Tools</strong> -&gt; <strong>Shortcode Directives</strong>.</li>\n<li>Configure the options by enabling post types to support.</li>\n</ol>\n",
        "changelog": "<h4>1.0.0</h4>\n<ul>\n<li>Released.</li>\n</ul>\n"
    },
    "short_description": "Allows you to perform certain actions on posts and comments with shortcode directives.",
    "description": "<h4>Quickly manage posts/comments in front-end with command-like-shortcodes</h4>\n<p>Say, you find a comment that should be hidden or deleted on your site. Usually, you click on the Edit link of the comment and manage it back-end.</p>\n<p>What if you could delete/hide it by commenting on it?</p>\n<p>This plugin lets you manage posts and comments with command-like-shortcodes.</p>\n<p>In this case, you reply to the <em>comment</em> you want to hide by typing <code>[$comment hold]</code>.</p>\n<h4>Bulk actions on certain posts/comments</h4>\n<p>If you want to bulk-delte comments that belong to a certain post, comment on the <em>post</em> by typing <code>[$comment delete]</code>.</p>\n<p>If you have a hierarchical post type and want to add the same tag to all direct children of a certain post plus the post itself, then comment on the post by typing <code>[$tag mytag --to=\"siblings,self\"]</code>.</p>\n<p>Like this, a bit complex operations can be achived with the shortcode directives.</p>\n<h4>Getting Started</h4>\n<p>To experience what this plugin does, follow these steps.<br />\n1. After activating the plugin, pick a test post which has been published already.<br />\n2. Go to the page of the post in front-end.<br />\n3. Submit a comment to the post with the shortcode <code>[$post_status private]</code>.</p>\n<p>Now it should be hidden for normal site visitors.</p>\n<ol>\n<li>To revert the change, submit a comment to the post with the shortcode <code>[$post_status publish]</code>.</li>\n</ol>\n<p>It should be visible to normal site visitors.</p>\n<p>By default, the plugin enables the features for the buil-in <code>post</code> and <code>page</code> post types. If you like to support different post types, go to Dashboard -&gt; Tools -&gt; Shortcode Directives. There, you can pick which post types to have the ability of shortcode directives.</p>\n<p>For usage details, please see the <strong>Other Notes</strong> seciton.</p>\n<p>You should have grapsed the idea of how this plugin works by now. Hope you find it useful!</p>\n<h4>Supported Languages</h4>\n<ul>\n<li>English</li>\n</ul>\n<h3>Usage</h3>\n<h4>$post_status</h4>\n<p>Sets a specified post status.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_status {status}]\n</code></pre>\n<p><strong>Examples</strong><br />\nChanges the post status to <code>pending</code>.</p>\n<pre><code>[$post_status pending]\n</code></pre>\n<p>Changes the post status to <code>draft</code>.</p>\n<pre><code>[$post_status draft]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nSpecifies which post to apply the directive operation. This <code>--to</code> option is avialble for all the directives except <code>$comment</code>. Use <code>children</code>, <code>siblings</code>, and <code>descendants</code> for builk actions.<br />\n&#8211; self (default): the comment/post iteself. When a comment with a directive is submitted to a post, that post will be the subject post and it is considered the one denoted by the option value, <code>self</code>.<br />\n&#8211; parent: the parent post of the subject post.<br />\n&#8211; {post ID}: the post ID.<br />\n&#8211; children: the direct child posts of the subjec post if the post type supports the <code>hierarchical</code> option.<br />\n&#8211; siblings: the sibling posts of the subject post in hierarchical relationships if the post type supports the <code>hierarchical</code> option.<br />\n&#8211; decendants: all the decendants which belong to the subject post if the post type supports the <code>hierarchical</code> option.</p>\n<p>This moves all the descendant posts to trash.</p>\n<pre><code>[$post_status trash --to=descendants]\n</code></pre>\n<h4>$post_parent</h4>\n<p>Sets a post parent ID.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_parent {post ID}]\n</code></pre>\n<p>Sets a post parent of a post ID of 1451.</p>\n<pre><code>[$post_parent 1451]\n</code></pre>\n<p>This removes a post parent.</p>\n<pre><code>[$post_parent 0]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$post_column</h4>\n<p>Sets a value with a specified post column name to an existent post column.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_column --column={colum name} {value}]\n[$post_column --column={colum name} --value=\"some value\"]\n</code></pre>\n<p>Setting the value <code>3</code> to the <code>menu_order</code> column.</p>\n<pre><code>[$post_column column=menu_order 3]\n</code></pre>\n<p>When a value must have a white space, use the <code>--value</code> option.</p>\n<pre><code>[$post_column --column=post_title --value=\"This is a title\"]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$post_meta</h4>\n<p>Sets a post meta value.<br />\n<strong>Format</strong></p>\n<pre><code>[$post_meta {key} {value}]\n[$post_meta {key1}=\"{some value1}\" {key2}=\"{some value2}\" {key3}=\"{some value3}\"...]\n</code></pre>\n<p>This sets the post meta value <code>bar</code> to the <code>_foo</code> meta key.</p>\n<pre><code>[$post_meta _foo bar]\n</code></pre>\n<p>For values containing white-spaces and multiple key-value pairs, use the attribute style format.</p>\n<pre><code>[$post_meta _question=\"Why did the chicken cross the road?\" _answer=\"To get to the other side\"]\n</code></pre>\n<p>To delete meta keys, use the <code>--action</code> option by passing <code>delete</code>. This deletes the <code>_question</code> and <code>_answer</code> meta keys and their values from the database.</p>\n<pre><code>[$post_meta _question _answer --action=\"delete\"]\n</code></pre>\n<p>Note: the <code>--to</code> and <code>--action</code> option names are reserved by the plugin so you cannot specify them with the option name like <code>[$post_meta --action=\"my value\" --to=\"another value\"]</code>.</p>\n<p>If you have to set them, use the command-line style format introduced above.</p>\n<pre><code>[$post_meta --action \"Some value here.\"]\n[$post_meta --to \"Another value here.\"]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$taxonomy</h4>\n<p>Sets taxonomy terms with a specified taxonomy slug.<br />\n<strong>Format</strong></p>\n<pre><code>[$taxonomy --slug={taxonomy slug} {term1} {term2} {term3}...]\n</code></pre>\n<p>This adds the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms of the <code>post_tag</code> taxonomy to the post.</p>\n<pre><code>[$taxonomy --slug=post_tag Apple Banana \"Apple Pie\"]\n</code></pre>\n<p><strong>Option: &#8211;action</strong><br />\n&#8211; add (default) : adds the specified terms<br />\n&#8211; remove : removes the specified terms<br />\n&#8211; remove_all/remove_all : removes all the associated terms<br />\n&#8211; delete : deletes the specified terms from the database if they are assigned to the post<br />\n&#8211; delete_all/delete-all : deletes all the associated terms from the database</p>\n<p>This removes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms of the <code>post_tag</code> taxonomy from the post.</p>\n<pre><code>[$taxonomy --slug=post_tag Apple Banana \"Apple Pie\" --action=remove]\n</code></pre>\n<p>This deletes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms of the <code>post_tag</code> taxonomy from the database if they are assigned to the post.</p>\n<pre><code>[$taxonomy --slug=post_tag Apple Banana \"Apple Pie\" --action=delete]\n</code></pre>\n<p>This removes all the assigned terms of the <code>post_tag</code> taxonomy from the post.</p>\n<pre><code>[$taxonomy --slug=post_tag --action=remove_all]\n</code></pre>\n<p>This deletes all the assigned terms of the <code>post_tag</code> taxonomy from the database.</p>\n<pre><code>[$taxonomy --slug=post_tag --action=delete_all]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$tag</h4>\n<p>Sets non-hierarchical taxonomy terms.<br />\n<strong>Format</strong></p>\n<pre><code>[$tag {tag1} {tag2} {tag3}...]\n</code></pre>\n<p>When the <code>$tag</code> directive is given, the plugin searches for a non-hierarchical taxonomy associated with the post type of the post and sets the given terms to the post. If a non-hierarchical taxonomy is not found, no action will be taken. If you have multiple non-hierarchical taxonomies for a particular post type which supports shortcode directives, use the <code>$taxonomy</code> directive. See the <code>$taxonomy</code> section above.</p>\n<p>This adds the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> tags to the post.</p>\n<pre><code>[$tag Apple Banana \"Apple Pie\"]\n</code></pre>\n<p><strong>Option: &#8211;action</strong><br />\nThe same action values with the <code>$taxonomy</code> directive are supported.</p>\n<p>This removes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> tags from the post.</p>\n<pre><code>[$tag --action=remove Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This deletes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> terms from the database if they are assigned to the post.</p>\n<pre><code>[$tag --action=delete Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This removes all the tags associated with the post.</p>\n<pre><code>[$tag --action=remove_all]\n</code></pre>\n<p>This deletes all the tags associated with the post from the database.</p>\n<pre><code>[$tag --action=delete_all]\n</code></pre>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<h4>$category</h4>\n<p>Sets hierarchical taxonomy terms.<br />\n<strong>Format</strong></p>\n<pre><code>[$category {category1} {category2} {category3}...]\n</code></pre>\n<p>When the <code>$category</code> directive is given, the plugin searches for a hierarchical taxonomy associated with the post type of the post and sets the given terms to the post. If a hierarchical taxonomy is not found, no action will be taken. If you have multiple hierarchical taxonomies for a particular post type which supports shortcode directives, use the <code>$taxonomy</code> directive. See the <code>$taxonomy</code> section above.</p>\n<p>This adds the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> categories to the post.</p>\n<pre><code>[$category Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This removes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> categories from the post.</p>\n<pre><code>[$category Apple Banana \"Apple Pie\" --action=remove]\n</code></pre>\n<p>This deletes the <code>Apple</code>, <code>Banana</code>, <code>Apple Pie</code> categories from the database if they are assigned to the post.</p>\n<pre><code>[$category --action=delete Apple Banana \"Apple Pie\"]\n</code></pre>\n<p>This removes all the categories associated with the post.</p>\n<pre><code>[$category --action=remove_all]\n</code></pre>\n<p>This deletes all the categories associated with the post from the database.</p>\n<pre><code>[$category --action=delete_all]\n</code></pre>\n<p><strong>Option: &#8211;action</strong><br />\nThe same action values with the <code>$taxonomy</code> directive are supported.</p>\n<p><strong>Option: &#8211;to</strong><br />\nThe same option values are supported described in the <code>$post_status</code> section above.</p>\n<p>$comment</p>\n<p>Performs certain actions againt a replying comment. If commented on a post, the action applied to <em>all</em> the comments which belong to the post. So be careful not to do that when you want to do someting on a single comment.</p>\n<p><strong>Format</strong></p>\n<pre><code>[$comment {sub-command}]\n</code></pre>\n<p><strong>Sub-commands</strong><br />\n&#8211; delete|remove: deletes the comment<br />\n&#8211; hold|disapprove: changes the comment status to <code>hold</code>.<br />\n&#8211; trash: moves the comment to trash<br />\n&#8211; spam: mark the commet as spam<br />\n&#8211; convert: converts the comment to a child post.</p>\n<p>Replying to an existent comment with the following deletes the comment.</p>\n<pre><code>[$comment delete]\n</code></pre>\n<p>For hierarchical post types, the <code>convert</code> sub-command can help bulk-convert comments in to posts.</p>\n<p>Commenting on a <em>post</em> (not an existent comment) converts all the comments belonging to the post into posts by keeping the hirarchical relationships.</p>\n<pre><code>[$comment convert]\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/shortcode-directives.1.0.0.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/shortcode-directives/assets/screenshot-1.jpg?rev=2224680",
            "caption": "<strong>Some Image</strong>"
        },
        {
            "src": "https://ps.w.org/shortcode-directives/assets/screenshot-2.jpg?rev=2224680",
            "caption": "<strong>Another Image</strong>"
        }
    ],
    "tags": {
        "command": "command",
        "commands": "commands",
        "comments": "comments",
        "posts": "posts",
        "shortcode": "shortcode"
    },
    "stable_tag": "1.0.0",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/shortcode-directives.1.0.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/shortcode-directives.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://en.michaeluno.jp/donate",
    "banners": {
        "low": "https://ps.w.org/shortcode-directives/assets/banner-772x250.jpg?rev=2224680",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/shortcode-directives/assets/icon-128x128.jpg?rev=2224680",
        "2x": "https://ps.w.org/shortcode-directives/assets/icon-256x256.jpg?rev=2224680"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}