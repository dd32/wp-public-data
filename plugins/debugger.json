{
    "name": "Debugger",
    "slug": "debugger",
    "version": "1.4",
    "author": "<a href=\"http://tri.be/\">Modern Tribe, Inc.</a>",
    "author_profile": "https://profiles.wordpress.org/moderntribe/",
    "contributors": {
        "moderntribe": {
            "profile": "https://profiles.wordpress.org/moderntribe/",
            "avatar": "https://secure.gravatar.com/avatar/05163e5d4f03b4115fb5f770194e2dd5?s=96&d=monsterid&r=g",
            "display_name": "Modern Tribe, Inc."
        },
        "peterchester": {
            "profile": "https://profiles.wordpress.org/peterchester/",
            "avatar": "https://secure.gravatar.com/avatar/651c904bff2b7ba2365a3c9a798360d3?s=96&d=monsterid&r=g",
            "display_name": "Peter Chester"
        },
        "jbrinley": {
            "profile": "https://profiles.wordpress.org/jbrinley/",
            "avatar": "https://secure.gravatar.com/avatar/8398939a88a8ac7bb49e36a4ed0001f5?s=96&d=monsterid&r=g",
            "display_name": "Jonathan Brinley"
        }
    },
    "requires": "3.0",
    "tested": "3.6.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 90,
    "ratings": {
        "5": 1,
        "4": 1,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/debugger/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3734,
    "last_updated": "2013-05-05 23:08:00",
    "added": "2013-02-15",
    "homepage": "",
    "sections": {
        "description": "<p>You can use this plugin to manually log data or to capture logging on WordPress actions. You can capture load time, memory, backrace, data dumps, urls, and server IPs.</p>\n<p>This is designed to either be managed using wp-config.php and logging OR using the admin and debugbar plugin ( https://wordpress.org/extend/plugins/debug-bar/ ). Most of the following documentation applies equally to the settings panel or the wp-config.php vars.  Either one works fine. The only exception is the DEBUG_LOG configuration which is only supported as a wp-config var.</p>\n<p>Firstly, you can manually log things using the following function:</p>\n<pre><code>do_action( 'log', $message, $group, $data );\n</code></pre>\n<p>The $group allows you to selectively output logging based on groups of log messages. The $message is the string you want to see in the log. $data is an optional parameter for the data that you want to display in the log (objects, arrays, or any other sort of data really).</p>\n<p>To render messages to the log, you must configure wp-config.php as follows:</p>\n<p>Run debug on only these groups. Use &#8216;ALL&#8217; to debug everything. The group &#8216;ACTIONS&#8217; is reserved for WordPress actions.</p>\n<pre><code>define( 'DEBUG_GROUPS', 'ACTIONS,default,myspecialgroup' );\n</code></pre>\n<p>Display these outputs in the log for each log message.</p>\n<pre><code>define( 'DEBUG_PARAMS', 'time,timedelta,memory,memorydelta,data,backtrace,url,server' );\n</code></pre>\n<p>WordPress actions that you wish to log.</p>\n<pre><code>define( 'DEBUG_ACTIONS', 'wp_head,switch_theme,wp_footer' );\n</code></pre>\n<p>Optional restriction by URL (useful on MU installs).</p>\n<pre><code>define( 'DEBUG_URLS', 'myurl.com' );\n</code></pre>\n<p>Minimum time in milliseconds required to register a log entry as being slow. Default 0 for no minumum.</p>\n<pre><code>define( 'DEBUG_MIN_TIME', 500 );\n</code></pre>\n<p>Minimum memory in killobytes required to register a log entry as being heavy. Default 0 for no minumum.</p>\n<pre><code>define( 'DEBUG_MIN_MEM', 1024 );\n</code></pre>\n<p>Path to log file or set to TRUE to use php error log. Default FALSE for no logging.</p>\n<pre><code>define( 'DEBUG_LOG', '/path/to/writable/log/file' );\n</code></pre>\n<p>or</p>\n<pre><code>define( 'DEBUG_LOG', TRUE );\n</code></pre>\n<h4>Todo</h4>\n<ul>\n<li>Add variable for sample rate so that this could run randomly on production installs</li>\n<li>Admin panel per site</li>\n<li>Admin panel globally</li>\n<li>WordPress error logging</li>\n<li>Mysql query logging</li>\n<li>WP_Error integration</li>\n<li>Alerts ex: if this takes more than this much memory then log it&#8230;</li>\n</ul>\n",
        "changelog": "<h4>1.4</h4>\n<ul>\n<li>Bug fixes</li>\n<li>Add screenshots</li>\n<li>Tune CSS performance in debug bar</li>\n</ul>\n<h4>1.3</h4>\n<ul>\n<li>Add settings panel and options based configuration.</li>\n<li>Log the specific url when http curl hook is logged.</li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>Rename &#8216;delta&#8217; to &#8216;timedelta&#8217; and add &#8216;memorydelta&#8217;</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Improve loading order to ensure that production sites aren&#8217;t adversely effected when no debugging is needed.</li>\n<li>Update logging display.</li>\n<li>Add initializer message so that it&#8217;s clear when a new load has started.</li>\n<li>Clean up debug bar UI a bit.</li>\n</ul>\n<h4>1.0</h4>\n<p>Initial Release.</p>\n"
    },
    "short_description": "You can use this plugin to manually log data or to capture logging on WordPress actions. You can capture load time, memory, backrace, data dumps, urls &hellip;",
    "description": "<p>You can use this plugin to manually log data or to capture logging on WordPress actions. You can capture load time, memory, backrace, data dumps, urls, and server IPs.</p>\n<p>This is designed to either be managed using wp-config.php and logging OR using the admin and debugbar plugin ( https://wordpress.org/extend/plugins/debug-bar/ ). Most of the following documentation applies equally to the settings panel or the wp-config.php vars.  Either one works fine. The only exception is the DEBUG_LOG configuration which is only supported as a wp-config var.</p>\n<p>Firstly, you can manually log things using the following function:</p>\n<pre><code>do_action( 'log', $message, $group, $data );\n</code></pre>\n<p>The $group allows you to selectively output logging based on groups of log messages. The $message is the string you want to see in the log. $data is an optional parameter for the data that you want to display in the log (objects, arrays, or any other sort of data really).</p>\n<p>To render messages to the log, you must configure wp-config.php as follows:</p>\n<p>Run debug on only these groups. Use &#8216;ALL&#8217; to debug everything. The group &#8216;ACTIONS&#8217; is reserved for WordPress actions.</p>\n<pre><code>define( 'DEBUG_GROUPS', 'ACTIONS,default,myspecialgroup' );\n</code></pre>\n<p>Display these outputs in the log for each log message.</p>\n<pre><code>define( 'DEBUG_PARAMS', 'time,timedelta,memory,memorydelta,data,backtrace,url,server' );\n</code></pre>\n<p>WordPress actions that you wish to log.</p>\n<pre><code>define( 'DEBUG_ACTIONS', 'wp_head,switch_theme,wp_footer' );\n</code></pre>\n<p>Optional restriction by URL (useful on MU installs).</p>\n<pre><code>define( 'DEBUG_URLS', 'myurl.com' );\n</code></pre>\n<p>Minimum time in milliseconds required to register a log entry as being slow. Default 0 for no minumum.</p>\n<pre><code>define( 'DEBUG_MIN_TIME', 500 );\n</code></pre>\n<p>Minimum memory in killobytes required to register a log entry as being heavy. Default 0 for no minumum.</p>\n<pre><code>define( 'DEBUG_MIN_MEM', 1024 );\n</code></pre>\n<p>Path to log file or set to TRUE to use php error log. Default FALSE for no logging.</p>\n<pre><code>define( 'DEBUG_LOG', '/path/to/writable/log/file' );\n</code></pre>\n<p>or</p>\n<pre><code>define( 'DEBUG_LOG', TRUE );\n</code></pre>\n<h4>Todo</h4>\n<ul>\n<li>Add variable for sample rate so that this could run randomly on production installs</li>\n<li>Admin panel per site</li>\n<li>Admin panel globally</li>\n<li>WordPress error logging</li>\n<li>Mysql query logging</li>\n<li>WP_Error integration</li>\n<li>Alerts ex: if this takes more than this much memory then log it&#8230;</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/debugger.1.4.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/debugger/trunk/screenshot-1.png?rev=1573780",
            "caption": "Use the debugger to track how much time or memory hooks or benchmarked parts of code take to execute."
        },
        {
            "src": "https://ps.w.org/debugger/trunk/screenshot-2.png?rev=1573780",
            "caption": "Configure your test parameters in wp-config.php or right in the admin."
        },
        {
            "src": "https://ps.w.org/debugger/trunk/screenshot-3.png?rev=1573780",
            "caption": "Use the debugger to dump stack traces or pass data to see what the data looks like."
        }
    ],
    "tags": {
        "debug": "debug",
        "debugger": "debugger",
        "modern-tribe": "modern tribe",
        "profiling": "profiling",
        "tribe": "tribe"
    },
    "stable_tag": "1.4",
    "versions": {
        "1.1": "https://downloads.wordpress.org/plugin/debugger.1.1.zip",
        "1.3": "https://downloads.wordpress.org/plugin/debugger.1.3.zip",
        "1.4": "https://downloads.wordpress.org/plugin/debugger.1.4.zip",
        "trunk": "https://downloads.wordpress.org/plugin/debugger.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/debugger/assets/banner-772x250.png?rev=703944",
        "high": "https://ps.w.org/debugger/assets/banner-1544x500.png?rev=703944"
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/debugger_a6dbea.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 90,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}