{
    "name": "Dexs.Counter",
    "slug": "dexs-counter",
    "version": "0.1.3",
    "author": "<a href=\"http://www.pytes.net\">SamBrishes@pytesNET</a>",
    "author_profile": "https://profiles.wordpress.org/sambrishes/",
    "contributors": {
        "sambrishes": {
            "profile": "https://profiles.wordpress.org/sambrishes/",
            "avatar": "https://secure.gravatar.com/avatar/b3c525f5d8c62021ebfe9683b58374f9?s=96&d=monsterid&r=g",
            "display_name": "pytesNET"
        }
    },
    "requires": "4.0",
    "tested": "4.7.29",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/dexs-counter/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1091,
    "last_updated": "2016-12-15 01:36:00",
    "added": "2016-12-11",
    "homepage": "https://www.wordpress.org/plugins/dexs-counter",
    "sections": {
        "description": "<p>The Dexs.Counter plugin detects each (unique) view and stores the collected data into the own<br />\ndatabase table as well as own post_meta, which can be used to configure WP_Query loops depending on<br />\nthe counter. This informations are already used in the 2 frontend and in the small dashboard widget.<br />\nThe plugin contains also an extended statistic, which shows the daily views (of all posts) as<br />\ndiagram within the dashboard widget. Last but not Least: The plugin offers also a small rating system.</p>\n<h4>Alpha</h4>\n<p>This plugin is still Alpha and will be expanded in the future. However, it should not contain<br />\ncritical bugs, but if you found one or if you even have general suggestions for improvement then<br />\nwrite us on our <a href=\"https://wordpress.org/support/plugin/dexs-counter\" rel=\"ugc\">WordPress Plugin Support Page</a>.</p>\n<p>Thank You!</p>\n<h4>Features</h4>\n<ul>\n<li>Post Types: En/Disable the view and rating counter on each single (costum) post type.</li>\n<li>Exclude Roles: In/Exclude user roles from the view- and rating system.</li>\n<li>Rating Layout: Choose between a single (Like), double (Like, Dislike), 3-level and 5-level rating layout.</li>\n<li>Frontend Widgets: 2 Frontend widgets which allows you to display post lists depending on the view and rate counter.</li>\n<li>Extended Statistics: Logs each day-counter and displays this informations within the dashboard widget.</li>\n</ul>\n",
        "installation": "<ol>\n<li>Upload the <code>dexs-counter</code> folder to your <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Configure the plugin through the own &#8216;Dexs Counter&#8217; Admin Page.</li>\n<li>Use It and rate our plugin on the official <a href=\"https://plugins.wordpress.org/dexs-counter\" rel=\"nofollow ugc\">WordPress Plugin Directory</a> ;3!</li>\n</ol>\n",
        "faq": "<p>You can use the dexs counter environment easily within your own WordPress theme. This is useful, if<br />\nyou want to adapt the dexs counter design seamless to your theme. Please Note: You should always<br />\ncheck, if the respective function exists with the php <code>function_exists(function_name)</code> method!</p>\n\n<h4>dexs_cr_get_views ($post_id, $type)</h4>\n<p>\n<p>Get one of the four view counter numbers for the respective post.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><strong>$post_id</strong> <em>(Required)</em><br />\nThe respective post id. Use the <code>get_the_ID()</code> WordPress function within a loop. </li>\n<li><strong>$type</strong> <em>(Optional)</em><br />\nSet the view counter type by using one of the following strings</li>\n<li>\n<ul>\n<li><code>\"total\"</code> returns all registered clicks. (Default)</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><code>\"daily\"</code> returns all registered clicks for the current day.</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><code>\"unique\"</code> returns all unique clicks (one click / user).</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><code>\"daily_unique\"</code> returns all unique clicks (one click / user) for the current day. </li>\n</ul>\n</li>\n</ul>\n<p><strong>Return Values</strong></p>\n<p>Returns the view counter number as <strong>integer</strong> or <strong>false</strong> if the $post_id parameter in invalid.</p>\n</p>\n<h4>dexs_cr_has_viewed ($post_id)</h4>\n<p>\n<p>Checks if the current user has already clicked on the respective post.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><strong>$post_id</strong> <em>(Required)</em><br />\nThe respective post id. Use the <code>get_the_ID()</code> WordPress function within a loop. </li>\n</ul>\n<p><strong>Return Values</strong></p>\n<p>Returns <strong>true</strong> if the user has already clicked on the post, and <strong>false</strong> if not or if the<br />\n$post_id parameter is invalid!</p>\n</p>\n<h4>dexs_cr_get_rating ($post_id)</h4>\n<p>\n<p>Get the rating data for the respective post.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><strong>$post_id</strong> <em>(Required)</em><br />\nThe respective post id. Use the <code>get_the_ID()</code> WordPress function within a loop. </li>\n</ul>\n<p><strong>Return Values</strong></p>\n<p>Returns an <strong>array</strong> with the rating data or <strong>false</strong> on failure. Note: The rating data (or rather<br />\nthe array keys) depends on your rating layout setting (see below), but the values are always<br />\n<strong>integers</strong> an represents the number of ratings / clicks on the respective rating value.</p>\n<ul>\n<li>On <strong>&#8220;Single&#8221;</strong>: <code>array(\"like\" =&gt; [int])</code></li>\n<li>On <strong>&#8220;Double&#8221;</strong>: <code>array(\"like\" =&gt; [int], \"dislike\" =&gt; [int])</code></li>\n<li>On <strong>&#8220;3-Level&#8221;</strong>: <code>array(\"1\" =&gt; [int], \"2\" =&gt; [int], \"3\" =&gt; [int])</code></li>\n<li>On <strong>&#8220;5-Level&#8221;</strong>: <code>array(\"1\" =&gt; [int], \"2\" =&gt; [int], \"3\" =&gt; [int], \"4\" =&gt; [int], \"5\" =&gt; [int])</code></li>\n</ul>\n</p>\n<h4>dexs_cr_has_rated ($post_id, $value)</h4>\n<p>\n<p>Checks if the current user has already rated yet and returns perhaps his rating value.</p>\n<p><strong>Parameters</strong></p>\n<ul>\n<li><strong>$post_id</strong> <em>(Required)</em><br />\nThe respective post id. Use the <code>get_the_ID()</code> WordPress function within a loop. </li>\n<li><strong>$value</strong> <em>(Optional)</em><br />\nChange the returning value:</li>\n<li>\n<ul>\n<li><code>false</code> checks only if the user has already rated. (Default)</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><code>true</code> checks if the user has already rated and returns the rate value. </li>\n</ul>\n</li>\n</ul>\n<p><strong>Return Values</strong></p>\n<pre><code>($value == false):&lt;br /&gt;\n</code></pre>\n<p>Returns <strong>true</strong> if the user has already rated yet or <strong>false</strong> if not or if the $post_id is invalid.<br />\nNote: Returns <strong>NULL</strong> if the current user is within an excluded role!</p>\n<pre><code>($value == true):&lt;br /&gt;\n</code></pre>\n<p>Returns the respective rating value as <strong>string</strong> or an empty <strong>string</strong> if the current user hasn&#8217;t<br />\nrated yet. Note: Returns <strong>false</strong> if the $post_id is invalid and <strong>NULL</strong> if the current user is<br />\nwithin an excluded role</p>\n</p>\n<h4>dexs_cr_rating_link ($post_id, $value)</h4>\n<p>\n<p><strong>Parameters</strong><br />\nCreates one or more rating links with an WordPress nonce. Example:<br />\nhttp://www.example.com/post_permalink/?dexs-nonce=<em>nonce</em>&amp;dexs=rating_value</p>\n<ul>\n<li><strong>$post_id</strong> <em>(Required)</em><br />\nThe respective post id. Use the <code>get_the_ID()</code> WordPress function within a loop. </li>\n<li><strong>$value</strong> <em>(Optional)</em><br />\nConfigure the returning value:</li>\n<li>\n<ul>\n<li><code>NULL</code> all rating values, depending on the rating layout. (Default)</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><code>*value*</code> checks if the user has already rated and returns the rate value. </li>\n</ul>\n</li>\n</ul>\n<p><strong>Return Values</strong></p>\n<pre><code>($value == NULL):&lt;br /&gt;\n</code></pre>\n<p>Returns all rating links as <strong>array</strong> or **false* on failure. Note: The array keys are the<br />\nrespective rating values, depending on the rating layout setting!</p>\n<pre><code>($value == value):&lt;br /&gt;\n</code></pre>\n<p>Returns the respective rating link as <strong>string</strong> or <strong>false</strong> on failure. Note: Returns also false<br />\nif the given value doesn&#8217;t match to the rating layout setting!</p>\n</p>\n<h4>WP_Query</h4>\n<p>\n<p>You can use the following settings to change the post order, of your costum WP_Query requests,<br />\ndepending to view counter OR rating counter. Note: You may return an empty post list, if you use the<br />\ndaily or daily_unique counter and if nobody has viewed a single post item on the day yet. Note also:<br />\nThe Dexs.Counter plugin doesn&#8217;t automatically add the counter meta data to all of your posts. So<br />\neach post that havn&#8217;t been clicked / rated yet are therefore not considered!</p>\n<pre><code>&amp;lt;?php\n    // The Most-Viewed Posts (Total)\n    $query = array(\n        \"order\"     =&gt; \"DESC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_views_total\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Most-Viewed Posts (Unique)\n    $query = array(\n        \"order\"     =&gt; \"DESC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_views_unique\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Most-Viewed Posts (Total / Today)\n    $query = array(\n        \"order\"     =&gt; \"DESC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_views_today\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Most-Viewed Posts (Unique / Today)\n    $query = array(\n        \"order\"     =&gt; \"DESC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_views_today_unique\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Best-Rated Posts\n    $query = array(\n        \"order\"     =&gt; \"DESC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_ratings\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Worst-Rated Posts\n    $query = array(\n        \"order\"     =&gt; \"ASC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_ratings\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Most-Rated Posts\n    $query = array(\n        \"order\"     =&gt; \"DESC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_ratings_num\"\n    );\n    $posts = new WP_Query($query);\n\n    // The Fewest-Rated Posts\n    $query = array(\n        \"order\"     =&gt; \"ASC\",\n        \"orderby\"   =&gt; \"meta_value_num\",\n        \"meta_key\"  =&gt; \"dexs_ratings_num\"\n    );\n    $posts = new WP_Query($query);\n?&amp;gt;\n</code></pre>\n</p>\n\n",
        "changelog": "<h4>Version 0.1.3 (Alpha)</h4>\n<ul>\n<li>[FIX] Error on an empty counter diagram within the dashboard widget.</li>\n</ul>\n<h4>Version 0.1.2 (Alpha)</h4>\n<ul>\n<li>[UPD] The design and data within the counter diagram.</li>\n<li>[FIX] The counter diagram datasets had the wrong direction.</li>\n</ul>\n<h4>Version 0.1.1 (Alpha)</h4>\n<ul>\n<li>[ADD] Trivial &#8220;Humanity Test&#8221; for the view counter.</li>\n<li>[ADD] The <code>dexs-counter-verify</code> option as part of the new &#8220;Humanity Test&#8221;.</li>\n<li>[FIX] The <code>_ip()</code> function has hashed the wrong value.</li>\n</ul>\n<h4>Version 0.1.0 (Alpha)</h4>\n<ul>\n<li>First Release</li>\n</ul>\n"
    },
    "short_description": "A simple but powerful view counter and rating system, with own (dashboard) widgets, for your awesome WordPress website.",
    "description": "<p>The Dexs.Counter plugin detects each (unique) view and stores the collected data into the own<br />\ndatabase table as well as own post_meta, which can be used to configure WP_Query loops depending on<br />\nthe counter. This informations are already used in the 2 frontend and in the small dashboard widget.<br />\nThe plugin contains also an extended statistic, which shows the daily views (of all posts) as<br />\ndiagram within the dashboard widget. Last but not Least: The plugin offers also a small rating system.</p>\n<h4>Alpha</h4>\n<p>This plugin is still Alpha and will be expanded in the future. However, it should not contain<br />\ncritical bugs, but if you found one or if you even have general suggestions for improvement then<br />\nwrite us on our <a href=\"https://wordpress.org/support/plugin/dexs-counter\" rel=\"ugc\">WordPress Plugin Support Page</a>.</p>\n<p>Thank You!</p>\n<h4>Features</h4>\n<ul>\n<li>Post Types: En/Disable the view and rating counter on each single (costum) post type.</li>\n<li>Exclude Roles: In/Exclude user roles from the view- and rating system.</li>\n<li>Rating Layout: Choose between a single (Like), double (Like, Dislike), 3-level and 5-level rating layout.</li>\n<li>Frontend Widgets: 2 Frontend widgets which allows you to display post lists depending on the view and rate counter.</li>\n<li>Extended Statistics: Logs each day-counter and displays this informations within the dashboard widget.</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/dexs-counter.0.1.3.zip",
    "upgrade_notice": {
        "": "<p>None</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/dexs-counter/assets/screenshot-1.png?rev=1555071",
            "caption": "The settings page."
        },
        {
            "src": "https://ps.w.org/dexs-counter/assets/screenshot-2.png?rev=1555071",
            "caption": "The dashboard widget."
        }
    ],
    "tags": {
        "count": "count",
        "counter": "Counter",
        "rating": "rating",
        "view": "view",
        "views": "views"
    },
    "stable_tag": "0.1.3",
    "versions": {
        "0.1.0": "https://downloads.wordpress.org/plugin/dexs-counter.0.1.0.zip",
        "0.1.1": "https://downloads.wordpress.org/plugin/dexs-counter.0.1.1.zip",
        "0.1.2": "https://downloads.wordpress.org/plugin/dexs-counter.0.1.2.zip",
        "0.1.3": "https://downloads.wordpress.org/plugin/dexs-counter.0.1.3.zip",
        "trunk": "https://downloads.wordpress.org/plugin/dexs-counter.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/dexs-counter/assets/banner-772x250.png?rev=1555071",
        "high": "https://ps.w.org/dexs-counter/assets/banner-1544x500.png?rev=1555071"
    },
    "icons": {
        "1x": "https://ps.w.org/dexs-counter/assets/icon-128x128.png?rev=1555071",
        "2x": "https://ps.w.org/dexs-counter/assets/icon-256x256.png?rev=1555071"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "dexs-counter",
            "language": "de_DE",
            "version": "0.1.3",
            "updated": "2022-06-19 17:13:04",
            "package": "https://downloads.wordpress.org/translation/plugin/dexs-counter/0.1.3/de_DE.zip"
        }
    ]
}