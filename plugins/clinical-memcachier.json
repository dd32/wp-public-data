{
    "name": "Clinical Memcachier",
    "slug": "clinical-memcachier",
    "version": "0.4",
    "author": "<a href=\"http://www.codeclinic.de\">Code Clinic KreativAgentur</a>",
    "author_profile": "https://profiles.wordpress.org/munklefish/",
    "contributors": {
        "munklefish": {
            "profile": "https://profiles.wordpress.org/munklefish/",
            "avatar": "https://secure.gravatar.com/avatar/319beaef8e81a997729d2e4f407e67a4?s=96&d=monsterid&r=g",
            "display_name": "Phill Healey"
        }
    },
    "requires": "3.0",
    "tested": "4.9.26",
    "requires_php": "5.0",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/clinical-memcachier/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 776,
    "last_updated": "2017-11-28 10:52:00",
    "added": "2017-11-27",
    "homepage": "http://www.codeclinic.de/plugins",
    "sections": {
        "installation": "<ol>\n<li>\n<p>Make sure you have <a href=\"http://libmemcached.org/libMemcached.html\" rel=\"nofollow ugc\">libmemcached</a> installed, built with SASL. See the <a href=\"http://il1.php.net/manual/en/memcached.requirements.php\" rel=\"nofollow ugc\">Memcached Requirements</a>.</p>\n</li>\n<li>\n<p>Install the <a href=\"http://il1.php.net/manual/en/memcached.installation.php\" rel=\"nofollow ugc\">Memcached ver. 2.2.0 PECL package</a>.</p>\n</li>\n<li>\n<p>Define the Memcached servers and SASL credentials in your wp-config.php, as follows:</p>\n<pre><code>global $memcached_servers;\n$memcached_servers = array( array( 'host', port ) );\n\nglobal $memcached_username;\n$memcached_username = 'sasl_username';\n\nglobal $memcached_password;\n$memcached_password = 'sasl_password';\n</code></pre>\n</li>\n<li>\n<p>Alternatively, set the environment variables, <code>MEMCACHE_SERVERS</code>, <code>MEMCACHE_USERNAME</code> and <code>MEMCACHE_PASSWORD</code>. The expected format for <code>MEMCACHE_SERVERS</code> is <code>'server1:port1,server2:port2,server3:port3'</code>.</p>\n</li>\n</ol>\n<p><strong>Note:</strong> If running on Heroku or AppFog, just install the MemCachier add-on and your conifguration environment variables will be set.</p>\n<ol>\n<li>\n<p>Move object-cache.php to wp-content/object-cache.php</p>\n</li>\n<li>\n<p>To test the WordPress object cache setup, add the following code as an MU plugin:</p>\n<pre><code>`php\n</code></pre>\n<p>&lt;?php<br />\n$key   = &#8216;dummy&#8217;;<br />\n$value = &#8216;100&#8217;;</p>\n<p>$dummy_value = wp_cache_get( $key );</p>\n<p>if ( $value !== $dummy_value ) {<br />\n    echo &#8220;The dummy value is not in cache. Adding the value now.&#8221;;<br />\n    wp_cache_set( $key, $value );<br />\n} else {<br />\n    echo &#8220;Value is &#8221; . $dummy_value . &#8220;. The WordPress Memcached Backend is working!&#8221;;<br />\n}<br />\n    `</p>\n<p>After adding the code, reload your WordPress site twice. On the second load, you should see a success message printed at the top of the page. Remove the MU plugin after you&#8217;ve verified the setup.</p>\n</li>\n</ol>\n",
        "changelog": "<p>0.4 Packaged for release on WP repo</p>\n",
        "description": "<p>This is a WordPress object cache backend that supports the MemCachier caching service. It requires <a href=\"http://pecl.php.net/package/memcached\" rel=\"nofollow ugc\">Memcached ver. 2.2.0 PECL package</a> or greater for SASL support.</p>\n<p>This is a fork of <a href=\"https://github.com/tollmanz/wordpress-pecl-memcached-object-cache\" rel=\"nofollow ugc\">tollmanz</a> object cache, adding SASL and binary protocol support for cloud based caches.</p>\n<h3>Credits</h3>\n<ul>\n<li><a href=\"https://github.com/tollmanz/wordpress-memcached-backend\" rel=\"nofollow ugc\">wordpress-memcached-backend</a></li>\n<li><a href=\"https://github.com/RedisLabs/wordpress-memcached-backend\" rel=\"nofollow ugc\">RedisLabs SASL support</a></li>\n</ul>\n",
        "faq": "\n<h4>Installation Instructions</h4>\n<p>\n<ol>\n<li>\n<p>Make sure you have <a href=\"http://libmemcached.org/libMemcached.html\" rel=\"nofollow ugc\">libmemcached</a> installed, built with SASL. See the <a href=\"http://il1.php.net/manual/en/memcached.requirements.php\" rel=\"nofollow ugc\">Memcached Requirements</a>.</p>\n</li>\n<li>\n<p>Install the <a href=\"http://il1.php.net/manual/en/memcached.installation.php\" rel=\"nofollow ugc\">Memcached ver. 2.2.0 PECL package</a>.</p>\n</li>\n<li>\n<p>Define the Memcached servers and SASL credentials in your wp-config.php, as follows:</p>\n<pre><code>global $memcached_servers;\n$memcached_servers = array( array( 'host', port ) );\n\nglobal $memcached_username;\n$memcached_username = 'sasl_username';\n\nglobal $memcached_password;\n$memcached_password = 'sasl_password';\n</code></pre>\n</li>\n<li>\n<p>Alternatively, set the environment variables, <code>MEMCACHE_SERVERS</code>, <code>MEMCACHE_USERNAME</code> and <code>MEMCACHE_PASSWORD</code>. The expected format for <code>MEMCACHE_SERVERS</code> is <code>'server1:port1,server2:port2,server3:port3'</code>.</p>\n</li>\n</ol>\n<p><strong>Note:</strong> If running on Heroku or AppFog, just install the MemCachier add-on and your conifguration environment variables will be set.</p>\n<ol>\n<li>\n<p>Move object-cache.php to wp-content/object-cache.php</p>\n</li>\n<li>\n<p>To test the WordPress object cache setup, add the following code as an MU plugin:</p>\n<pre><code>`php\n</code></pre>\n<p>&lt;?php<br />\n$key   = &#8216;dummy&#8217;;<br />\n$value = &#8216;100&#8217;;</p>\n<p>$dummy_value = wp_cache_get( $key );</p>\n<p>if ( $value !== $dummy_value ) {<br />\n    echo &#8220;The dummy value is not in cache. Adding the value now.&#8221;;<br />\n    wp_cache_set( $key, $value );<br />\n} else {<br />\n    echo &#8220;Value is &#8221; . $dummy_value . &#8220;. The WordPress Memcached Backend is working!&#8221;;<br />\n}<br />\n    `</p>\n<p>After adding the code, reload your WordPress site twice. On the second load, you should see a success message printed at the top of the page. Remove the MU plugin after you&#8217;ve verified the setup.</p>\n</li>\n</ol>\n</p>\n\n"
    },
    "short_description": "This is a WordPress object cache backend that supports the MemCachier caching service. It requires Memcached ver. 2.2.0 PECL package or greater for SA &hellip;",
    "description": "<p>This is a WordPress object cache backend that supports the MemCachier caching service. It requires <a href=\"http://pecl.php.net/package/memcached\" rel=\"nofollow ugc\">Memcached ver. 2.2.0 PECL package</a> or greater for SASL support.</p>\n<p>This is a fork of <a href=\"https://github.com/tollmanz/wordpress-pecl-memcached-object-cache\" rel=\"nofollow ugc\">tollmanz</a> object cache, adding SASL and binary protocol support for cloud based caches.</p>\n<h3>Credits</h3>\n<ul>\n<li><a href=\"https://github.com/tollmanz/wordpress-memcached-backend\" rel=\"nofollow ugc\">wordpress-memcached-backend</a></li>\n<li><a href=\"https://github.com/RedisLabs/wordpress-memcached-backend\" rel=\"nofollow ugc\">RedisLabs SASL support</a></li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/clinical-memcachier.zip",
    "upgrade_notice": {
        "": "<p>Replace object-cache.php in wp-config base, after updating plugin</p>"
    },
    "screenshots": [],
    "tags": {
        "clinical": "clinical",
        "memcached": "memcached",
        "memcachier": "Memcachier",
        "remote": "remote",
        "service": "service"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://codeclinic.de",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/clinical-memcachier.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}