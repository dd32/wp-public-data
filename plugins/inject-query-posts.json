{
    "name": "Inject Query Posts",
    "slug": "inject-query-posts",
    "version": "3.0.4",
    "author": "<a href=\"https://coffee2code.com/\">Scott Reilly</a>",
    "author_profile": "https://profiles.wordpress.org/coffee2code/",
    "contributors": {
        "coffee2code": {
            "profile": "https://profiles.wordpress.org/coffee2code/",
            "avatar": "https://secure.gravatar.com/avatar/5af525fba95b93c4e0c8a03b639c9486?s=96&d=monsterid&r=g",
            "display_name": "Scott Reilly"
        }
    },
    "requires": "3.6",
    "tested": "6.6.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/inject-query-posts/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 4664,
    "last_updated": "2024-08-11 05:20:00",
    "added": "2010-09-27",
    "homepage": "https://coffee2code.com/wp-plugins/inject-query-posts/",
    "sections": {
        "description": "<p>This plugin provides a function for use by developers who have their own code for fetching posts according to a given criteria and now want to make use of loop-aware template tags to display those posts.</p>\n<p>WordPress&#8217;s template tags are intended to be used within &#8216;the loop&#8217;. The loop is managed by a WP_Query object which sets up various global variables and its own object variables for use by the various template tags. The primary purpose of a WP_Query object is to actually query the database for the posts that match the currently specified criteria. However, if you don&#8217;t need to query for posts since you already have them by some other means, you can still take advantage of the template tags by injecting those posts into the WP_Query via this plugin.</p>\n<p>Depending on the template tags you are looking to use, or the logic you are hoping to employ within a loop, you may need to manually configure some of the query object&#8217;s variables.</p>\n<p>Example:</p>\n<pre><code>&lt;?php // Say we're in the sidebar\n\n// We've gotten some post objects on our own.\n$posts = c2c_get_random_posts( 5, '' );\n\n// Inject the posts\nc2c_inject_query_posts( $posts );\n\n// Now let's display them via template tags:\nif ( have_posts() ) :\n    while ( have_posts() ) : the_post(); ?&gt;\n\n        &lt;li&gt;&lt;a href=\"&lt;?php the_permalink() ?&gt;\" rel=\"bookmark\" title=\"Permanent Link to &lt;?php the_title_attribute(); ?&gt;\"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/li&gt;\n\n    &lt;?php endwhile;?&gt;\n&lt;?php endif; ?&gt;\n</code></pre>\n<p>Links: <a href=\"https://coffee2code.com/wp-plugins/inject-query-posts/\" rel=\"nofollow ugc\">Plugin Homepage</a> | <a href=\"https://wordpress.org/plugins/inject-query-posts/\" rel=\"ugc\">Plugin Directory Page</a> | <a href=\"https://github.com/coffee2code/inject-query-posts/\" rel=\"nofollow ugc\">GitHub</a> | <a href=\"https://coffee2code.com\" rel=\"nofollow ugc\">Author Homepage</a></p>\n<h3>Developer Documentation</h3>\n<p>Developer documentation can be found in <a href=\"https://github.com/coffee2code/inject-query-posts/blob/master/DEVELOPER-DOCS.md\" rel=\"nofollow ugc\">DEVELOPER-DOCS.md</a>. That documentation covers the template tag and hooks provided by the plugin.</p>\n<p>As an overview, this is the template tag provided by the plugin:</p>\n<ul>\n<li><code>c2c_inject_query_posts()</code> : Template tag to inject an array of posts into a query object as if that query object had obtained those posts via a query.</li>\n</ul>\n<p>Theses are the hooks provided by the plugin:</p>\n<ul>\n<li><code>inject_query_posts_preserve_query_obj</code> : Overrides the value of the <code>$preserve_query_obj</code> argument passed to the function. This is not typical usage for most users.</li>\n<li><code>c2c_inject_query_posts</code> : Allows use of an alternative approach to safely invoke <code>c2c_inject_query_posts()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</li>\n</ul>\n",
        "installation": "<ol>\n<li>Install via the built-in WordPress plugin installer. Or install the plugin code inside the plugins directory for your site (typically <code>/wp-content/plugins/</code>).</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; admin menu in WordPress</li>\n<li>Use the <code>c2c_inject_query_posts()</code> function to inject an array of posts into a WP query object. Specify the posts array as the first argument. Configure the query object by passing an array as the second argument. If specifying a WP query object, pass it as the third object; if not specified then the global wp_query object will be assumed.</li>\n</ol>\n",
        "changelog": "<h4>3.0.4 (2024-08-02)</h4>\n<ul>\n<li>Change: Note compatibility through WP 6.6+</li>\n<li>Change: Update copyright date (2024)</li>\n<li>New: Add <code>.gitignore</code> file</li>\n<li>Change: Reduce number of &#8216;Tags&#8217; from <code>readme.txt</code></li>\n<li>Change: Remove development and testing-related files from release packaging</li>\n<li>Unit tests:\n<ul>\n<li>Hardening: Prevent direct web access to <code>bootstrap.php</code></li>\n<li>Allow tests to run against current versions of WordPress</li>\n<li>New: Add <code>composer.json</code> for PHPUnit Polyfill dependency</li>\n<li>Change: In bootstrap, store path to plugin directory in a constant</li>\n</ul>\n</li>\n</ul>\n<h4>3.0.3 (2023-05-18)</h4>\n<ul>\n<li>Change: Add link to DEVELOPER-DOCS.md to README.md</li>\n<li>Change: Tweak installation instruction</li>\n<li>Change: Tweak some documentation text spacing and fix a typo</li>\n<li>Change: Note compatibility through WP 6.3+</li>\n<li>Change: Update copyright date (2023)</li>\n<li>New: Add a potential TODO feature</li>\n</ul>\n<h4>3.0.2 (2021-10-01)</h4>\n<ul>\n<li>New: Add DEVELOPER-DOCS.md and move template tag and hooks documentation into it</li>\n<li>Change: Note compatibility through WP 5.8+</li>\n<li>Unit tests:\n<ul>\n<li>Change: Restructure unit test directories\n<ul>\n<li>Change: Move <code>phpunit/</code> into <code>tests/phpunit/</code></li>\n<li>Change: Move <code>phpunit/bin/</code> into <code>tests/</code></li>\n</ul>\n</li>\n<li>Change: Remove &#8216;test-&#8216; prefix from unit test file</li>\n<li>Change: In bootstrap, store path to plugin file constant</li>\n<li>Change: In bootstrap, add backcompat for PHPUnit pre-v6.0</li>\n</ul>\n</li>\n</ul>\n<p><em>Full changelog is available in <a href=\"https://github.com/coffee2code/inject-query-posts/blob/master/CHANGELOG.md\" rel=\"nofollow ugc\">CHANGELOG.md</a>.</em></p>\n"
    },
    "short_description": "Facilitates injecting an array of posts into a WP query object as if queried. Particularly useful to allow use of standard template tags.",
    "description": "<p>This plugin provides a function for use by developers who have their own code for fetching posts according to a given criteria and now want to make use of loop-aware template tags to display those posts.</p>\n<p>WordPress&#8217;s template tags are intended to be used within &#8216;the loop&#8217;. The loop is managed by a WP_Query object which sets up various global variables and its own object variables for use by the various template tags. The primary purpose of a WP_Query object is to actually query the database for the posts that match the currently specified criteria. However, if you don&#8217;t need to query for posts since you already have them by some other means, you can still take advantage of the template tags by injecting those posts into the WP_Query via this plugin.</p>\n<p>Depending on the template tags you are looking to use, or the logic you are hoping to employ within a loop, you may need to manually configure some of the query object&#8217;s variables.</p>\n<p>Example:</p>\n<pre><code>&lt;?php // Say we're in the sidebar\n\n// We've gotten some post objects on our own.\n$posts = c2c_get_random_posts( 5, '' );\n\n// Inject the posts\nc2c_inject_query_posts( $posts );\n\n// Now let's display them via template tags:\nif ( have_posts() ) :\n    while ( have_posts() ) : the_post(); ?&gt;\n\n        &lt;li&gt;&lt;a href=\"&lt;?php the_permalink() ?&gt;\" rel=\"bookmark\" title=\"Permanent Link to &lt;?php the_title_attribute(); ?&gt;\"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/li&gt;\n\n    &lt;?php endwhile;?&gt;\n&lt;?php endif; ?&gt;\n</code></pre>\n<p>Links: <a href=\"https://coffee2code.com/wp-plugins/inject-query-posts/\" rel=\"nofollow ugc\">Plugin Homepage</a> | <a href=\"https://wordpress.org/plugins/inject-query-posts/\" rel=\"ugc\">Plugin Directory Page</a> | <a href=\"https://github.com/coffee2code/inject-query-posts/\" rel=\"nofollow ugc\">GitHub</a> | <a href=\"https://coffee2code.com\" rel=\"nofollow ugc\">Author Homepage</a></p>\n<h3>Developer Documentation</h3>\n<p>Developer documentation can be found in <a href=\"https://github.com/coffee2code/inject-query-posts/blob/master/DEVELOPER-DOCS.md\" rel=\"nofollow ugc\">DEVELOPER-DOCS.md</a>. That documentation covers the template tag and hooks provided by the plugin.</p>\n<p>As an overview, this is the template tag provided by the plugin:</p>\n<ul>\n<li><code>c2c_inject_query_posts()</code> : Template tag to inject an array of posts into a query object as if that query object had obtained those posts via a query.</li>\n</ul>\n<p>Theses are the hooks provided by the plugin:</p>\n<ul>\n<li><code>inject_query_posts_preserve_query_obj</code> : Overrides the value of the <code>$preserve_query_obj</code> argument passed to the function. This is not typical usage for most users.</li>\n<li><code>c2c_inject_query_posts</code> : Allows use of an alternative approach to safely invoke <code>c2c_inject_query_posts()</code> in such a way that if the plugin were deactivated or deleted, then your calls to the function won&#8217;t cause errors in your site.</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/inject-query-posts.3.0.4.zip",
    "upgrade_notice": {
        "3.0.4": "<p>Trivial update: noted compatibility through WP 6.6+, removed unit tests from release packaging, and updated copyright date (2024)</p>",
        "3.0.3": "<p>Trivial update: noted compatibility through WP 6.3+, made minor documentation tweaks, and updated copyright date (2023)</p>",
        "3.0.2": "<p>Trivial update: added DEVELOPER-DOCS.md, noted compatibility through WP 5.8+, and minor reorganization and tweaks to unit tests</p>",
        "3.0.1": "<p>Trivial update: noted compatibility through WP 5.7+ and updated copyright date (2021)</p>",
        "3.0": "<p>Notable update: Changed argument handling, removed long-deprecated <code>inject_query_posts()</code>, changed unit test file structure, improved inline documentation, added TODO.md file, and noted compatibility through WP 5.5+.</p>",
        "2.2.9": "<p>Trivial update: Updated a few URLs to be HTTPS and noted compatibility through WP 5.4+.</p>",
        "2.2.8": "<p>Trivial update: noted compatibility through WP 5.3+ and updated copyright date (2020).</p>",
        "2.2.7": "<p>Trivial update: created CHANGELOG.md to store historical changelog outside of readme.txt, updated unit test initialization, noted compatibility through WP 5.1+, and updated copyright date (2019)</p>",
        "2.2.6": "<p>Trivial update: fixed broken unit test, added README.md, noted compatibility through WP 4.9+, and updated copyright date (2018)</p>",
        "2.2.5": "<p>Trivial update: noted compatibility through WP 4.7+, updated unit test bootstrap, minor documentation tweaks, updated copyright date</p>",
        "2.2.4": "<p>Trivial update: minor unit test tweaks; verified compatibility through WP 4.4+; and updated copyright date (2016)</p>",
        "2.2.3": "<p>Trivial update: bugfix for very rare usage technique; noted compatibility through WP 4.3+</p>",
        "2.2.2": "<p>Trivial update: noted compatibility through WP 4.1+ and updated copyright date</p>",
        "2.2.1": "<p>Trivial update: noted compatibility through WP 4.0+; added plugin icon.</p>",
        "2.2": "<p>Moderate update: changed default value of $preserve_query_obj arg to false; added unit tests; noted compatibility through WP 3.8+; dropped compatibility with WP older than 3.6</p>",
        "2.1": "<p>Recommended major update: added argument and better handling for post caching; added filter; added arguments to existing filter; renamed and deprecated all existing functions; noted compatibility through WP 3.5+; and more.</p>",
        "2.0.5": "<p>Trivial update: noted compatibility through WP 3.4+; explicitly stated license</p>",
        "2.0.4": "<p>Trivial update: noted compatibility through WP 3.3+ and minor readme.txt tweaks</p>",
        "2.0.3": "<p>Trivial update: removed unnecessary resetting of query object variables</p>",
        "2.0.2": "<p>Trivial update: noted compatibility through WP 3.2+</p>",
        "2.0.1": "<p>Trivial update: noted compatibility with WP 3.1+ and updated copyright date.</p>",
        "2.0": "<p>Recommended major update! Highlights: now use global WP_Query object by default; added ability to preserve state of existing query object; misc non-functionality changes; expanded readme.txt text; verified WP 3.0 compatibility.</p>"
    },
    "screenshots": [],
    "tags": {
        "loop": "loop",
        "posts": "posts",
        "query": "query",
        "template-tags": "template tags",
        "wp_query": "wp_query"
    },
    "stable_tag": "3.0.4",
    "versions": {
        "2.0": "https://downloads.wordpress.org/plugin/inject-query-posts.2.0.zip",
        "2.0.1": "https://downloads.wordpress.org/plugin/inject-query-posts.2.0.1.zip",
        "2.0.2": "https://downloads.wordpress.org/plugin/inject-query-posts.2.0.2.zip",
        "2.0.3": "https://downloads.wordpress.org/plugin/inject-query-posts.2.0.3.zip",
        "2.0.4": "https://downloads.wordpress.org/plugin/inject-query-posts.2.0.4.zip",
        "2.0.5": "https://downloads.wordpress.org/plugin/inject-query-posts.2.0.5.zip",
        "2.1": "https://downloads.wordpress.org/plugin/inject-query-posts.2.1.zip",
        "2.2": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.zip",
        "2.2.1": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.1.zip",
        "2.2.2": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.2.zip",
        "2.2.3": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.3.zip",
        "2.2.4": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.4.zip",
        "2.2.5": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.5.zip",
        "2.2.6": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.6.zip",
        "2.2.7": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.7.zip",
        "2.2.8": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.8.zip",
        "2.2.9": "https://downloads.wordpress.org/plugin/inject-query-posts.2.2.9.zip",
        "3.0": "https://downloads.wordpress.org/plugin/inject-query-posts.3.0.zip",
        "3.0.1": "https://downloads.wordpress.org/plugin/inject-query-posts.3.0.1.zip",
        "3.0.2": "https://downloads.wordpress.org/plugin/inject-query-posts.3.0.2.zip",
        "3.0.3": "https://downloads.wordpress.org/plugin/inject-query-posts.3.0.3.zip",
        "3.0.4": "https://downloads.wordpress.org/plugin/inject-query-posts.3.0.4.zip",
        "trunk": "https://downloads.wordpress.org/plugin/inject-query-posts.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=6ARCFJ9TX3522",
    "banners": {
        "low": "https://ps.w.org/inject-query-posts/assets/banner-772x250.png?rev=824148",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/inject-query-posts/assets/icon-128x128.png?rev=972934"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}