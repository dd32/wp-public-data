{
    "name": "Filename based asset cache busting",
    "slug": "filename-based-asset-cache-busting",
    "version": "1.4",
    "author": "<a href=\"https://www.interokedigital.co.uk/\">Ben Lumley | Interoke Digital</a>",
    "author_profile": "https://profiles.wordpress.org/benlumley/",
    "contributors": {
        "benlumley": {
            "profile": "https://profiles.wordpress.org/benlumley/",
            "avatar": "https://secure.gravatar.com/avatar/97fd695f2843e74355ed065489179417?s=96&d=monsterid&r=g",
            "display_name": "benlumley"
        },
        "ocean90": {
            "profile": "https://profiles.wordpress.org/ocean90/",
            "avatar": "https://secure.gravatar.com/avatar/616b56a9c5898a427304425af0966c07?s=96&d=monsterid&r=g",
            "display_name": "Dominik Schilling"
        }
    },
    "requires": "3.0.1",
    "tested": "5.4.16",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 5,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 5,
    "support_url": "https://wordpress.org/support/plugin/filename-based-asset-cache-busting/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 200,
    "downloaded": 8748,
    "last_updated": "2020-04-27 21:47:00",
    "added": "2016-03-24",
    "homepage": "https://wordpress.org/plugins/filename-based-asset-cache-busting/",
    "sections": {
        "description": "<p>Filename based cache busting for WordPress scripts/styles using last modified date.</p>\n<p>Stop telling clients or users to hard refresh / shift refresh. The url to all of the css/js files on your site will change automatically whenever the files are modified. You can set proper long cache lifetimes to help get top scores on Google Pagespeed without running into cached css/javascript problems.</p>\n<p>Based on this gist https://gist.github.com/ocean90/1966227 from Dominik Schilling, I&#8217;ve enhanced it by automatically replacing the asset version with the files modification time and automatically editing htaccess &#8211; making it install + forget.</p>\n<p>Includes querystring option as a fallback &#8211; which works in more scenarios.</p>\n<h3>Webservers</h3>\n<h4>Apache</h4>\n<p>The plugin should add what it needs to your .htaccess file jsut like WP itself. But if for any reason that doesn&#8217;t work for you &#8211; here&#8217;s what it adds:</p>\n<pre><code># FBACB\n&lt;IfModule mod_rewrite.c&gt;\n  RewriteEngine On\n  RewriteBase /\n\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteRule ^(.+)\\.([0-9\\.]+)\\.(js|css)$ $1.$3 [L]\n&lt;/IfModule&gt;\n\n# still fbacb\n&lt;IfModule mod_expires.c&gt;\n    ExpiresActive on\n    ExpiresByType text/css                            \"access plus 1 year\"\n    ExpiresByType application/javascript              \"access plus 1 year\"\n&lt;/IfModule&gt;\n# END FBACB\n</code></pre>\n<h4>NGINX</h4>\n<pre><code> location ~* ^(.+)\\.(?:\\d+)\\.(min.js|min.css|js|css)($|\\?.*$) {\n   try_files $uri $1.$2;\n }\n</code></pre>\n<h3>Host specific notes</h3>\n<p>Some webhosts need a bit of custom config to get the filename based urls working.</p>\n<h4>WP Engine</h4>\n<p>To work on WP-Engine, you&#8217;ll need the following redirect added via my.wpengine -&gt; installname -&gt; Redirect rules</p>\n<pre><code> Source: ^(.+)\\.([0-9\\.]+)\\.(js|css)$\n Dest: $1.$3\n Type: break (this is under advanced)\n</code></pre>\n<h4>CloudWays</h4>\n<p>Just works.</p>\n<h4>Flywheel</h4>\n<p>Just works.</p>\n<h4>PHP Fallback</h4>\n<p>If your webserver is failing to serve assets using url rewriting, the plugin attempts to serve them itsef (ie: via PHP). Obviously this is slow/less than ideal in production (it&#8217;ll be much slower) &#8211; so you should configure your web server correctly to serve the files. If you see this HTTP header &#8220;FBACB-Php-Fallback: yes&#8221; on your assets, this applies to you.</p>\n<p>Note that hosts are increasingly configured to serve css/js directly from disk and won&#8217;t fall back to PHP + WordPress error handling &#8211; this fallback then won&#8217;t work.</p>\n"
    },
    "short_description": "Filename based cache busting for WordPress scripts/styles using last modified date.",
    "description": "<p>Filename based cache busting for WordPress scripts/styles using last modified date.</p>\n<p>Stop telling clients or users to hard refresh / shift refresh. The url to all of the css/js files on your site will change automatically whenever the files are modified. You can set proper long cache lifetimes to help get top scores on Google Pagespeed without running into cached css/javascript problems.</p>\n<p>Based on this gist https://gist.github.com/ocean90/1966227 from Dominik Schilling, I&#8217;ve enhanced it by automatically replacing the asset version with the files modification time and automatically editing htaccess &#8211; making it install + forget.</p>\n<p>Includes querystring option as a fallback &#8211; which works in more scenarios.</p>\n<h3>Webservers</h3>\n<h4>Apache</h4>\n<p>The plugin should add what it needs to your .htaccess file jsut like WP itself. But if for any reason that doesn&#8217;t work for you &#8211; here&#8217;s what it adds:</p>\n<pre><code># FBACB\n&lt;IfModule mod_rewrite.c&gt;\n  RewriteEngine On\n  RewriteBase /\n\n  RewriteCond %{REQUEST_FILENAME} !-f\n  RewriteCond %{REQUEST_FILENAME} !-d\n  RewriteRule ^(.+)\\.([0-9\\.]+)\\.(js|css)$ $1.$3 [L]\n&lt;/IfModule&gt;\n\n# still fbacb\n&lt;IfModule mod_expires.c&gt;\n    ExpiresActive on\n    ExpiresByType text/css                            \"access plus 1 year\"\n    ExpiresByType application/javascript              \"access plus 1 year\"\n&lt;/IfModule&gt;\n# END FBACB\n</code></pre>\n<h4>NGINX</h4>\n<pre><code> location ~* ^(.+)\\.(?:\\d+)\\.(min.js|min.css|js|css)($|\\?.*$) {\n   try_files $uri $1.$2;\n }\n</code></pre>\n<h3>Host specific notes</h3>\n<p>Some webhosts need a bit of custom config to get the filename based urls working.</p>\n<h4>WP Engine</h4>\n<p>To work on WP-Engine, you&#8217;ll need the following redirect added via my.wpengine -&gt; installname -&gt; Redirect rules</p>\n<pre><code> Source: ^(.+)\\.([0-9\\.]+)\\.(js|css)$\n Dest: $1.$3\n Type: break (this is under advanced)\n</code></pre>\n<h4>CloudWays</h4>\n<p>Just works.</p>\n<h4>Flywheel</h4>\n<p>Just works.</p>\n<h4>PHP Fallback</h4>\n<p>If your webserver is failing to serve assets using url rewriting, the plugin attempts to serve them itsef (ie: via PHP). Obviously this is slow/less than ideal in production (it&#8217;ll be much slower) &#8211; so you should configure your web server correctly to serve the files. If you see this HTTP header &#8220;FBACB-Php-Fallback: yes&#8221; on your assets, this applies to you.</p>\n<p>Note that hosts are increasingly configured to serve css/js directly from disk and won&#8217;t fall back to PHP + WordPress error handling &#8211; this fallback then won&#8217;t work.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/filename-based-asset-cache-busting.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "asset": "asset",
        "assets": "assets",
        "css": "css",
        "js": "JS",
        "version": "version"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.1": "https://downloads.wordpress.org/plugin/filename-based-asset-cache-busting.1.1.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/filename-based-asset-cache-busting/assets/banner-772x250.png?rev=2292252",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/filename-based-asset-cache-busting/assets/icon-128x128.png?rev=2292252",
        "2x": "https://ps.w.org/filename-based-asset-cache-busting/assets/icon-256x256.png?rev=2292252"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}