{
    "name": "WordPress Web Service",
    "slug": "wordpress-web-service",
    "version": "0.2.1",
    "author": "<a href=\"http://bkahlert.com/\">Bj&ouml;rn Kahlert</a>",
    "author_profile": "https://profiles.wordpress.org/bkahlert/",
    "contributors": {
        "bkahlert": {
            "profile": "https://profiles.wordpress.org/bkahlert/",
            "avatar": "https://secure.gravatar.com/avatar/67231e1d9fd1940036d14cf37c796a2c?s=96&d=monsterid&r=g",
            "display_name": "bkahlert"
        }
    },
    "requires": "2.8",
    "tested": "3.6.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wordpress-web-service/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 90,
    "downloaded": 12340,
    "last_updated": "2013-10-24 4:08am GMT",
    "added": "2010-01-25",
    "homepage": "http://code.google.com/p/wordpress-web-service/",
    "sections": {
        "description": "<p>WordPress Web Service (WPWS) is used to access WordPress resources via WSDL and SOAP.<br />\nIt allows you to connect WSDL enabled software like Adobe Flex / Flash Builder,<br />\nMicrosoft Visual Studio, PHP, J2EE, etc. to WordPress resources like posts<br />\nand pages.</p>\n<p>WPWS gives you also the opportunity to program alternative (graphical) interfaces<br />\nfor your WordPress installation.</p>\n<p>Furthermore alternative interpretations of WordPress resources are possible.<br />\nFor example you can interpret a post/page as a gallery; a datatype consisting of<br />\nall included images with the corresponding attributes.</p>\n<p>After installation simply open http://yoursite.com/blog/index.php/wpws to test your plugin.<br />\nThat is to add &#8220;/wpws&#8221; to the index.php part in your WordPress&#8217; url.</p>\n<p>For more information visit:<br />\n<a href=\"http://code.google.com/p/wordpress-web-service/\" rel=\"nofollow ugc\">WordPress Web Service</a></p>\n<p>Developers willing to help development on WPWS are greatly welcomed.</p>\n",
        "installation": "<ol>\n<li>Upload <code>wordpress-web-service</code> directory to the <code>/wp-content/plugins/</code> folder</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Open http://yoursite.com/blog/index.php/wpws in your webbrowser to test the plugin.</li>\n</ol>\n",
        "changelog": "<h4>0.2.3</h4>\n<ul>\n<li>[FEATURE] You may now also query for categories (patch provided by Arman Safikhani &#8211; armansafikhani@hotmail.com)</li>\n<li>[FIX] The integrated online SOAP client is replaced by http://wsdlbrowser.com</li>\n<li>[FIX] Resolved Bug 16 (&#8220;strlen() expects parameter 1 to be string&#8221;)</li>\n<li>[BUG] getImages &amp; getGalleries seem to be broken</li>\n</ul>\n<h4>0.2.2</h4>\n<ul>\n<li>Resolves potential security vulnerabilities in resize-image.php</li>\n<li>Resolves potential security vulnerabilities in the web service (wpws-soap.php)</li>\n</ul>\n<h4>0.2.1</h4>\n<ul>\n<li>Change of namespace from *.wpws.bkahlert.com to *.wpws.develop.bkahlert.com</li>\n<li>Issues with pages/posts that contain html entities and are processed by getGallery/getImages resolved</li>\n<li>Issue with some WordPress installation that couldn&#8217;t retrieve any SOAP response resolved (changed SOAP address from &#8230;/index.php/wpws to &#8230;/index.php?/wpws</li>\n</ul>\n<h4>0.2.0</h4>\n<ul>\n<li>Incompatibility with Flash Builder resolved</li>\n<li>Compatibility with WordPress 3.x</li>\n</ul>\n<h4>0.1.4</h4>\n<ul>\n<li>A writeable cache directory is no more needed in order to dynamically resize images and to return the correct content length to the caller.</li>\n<li>The <code>resizeableUrl</code> attribute of the <code>Image</code> datatype contains now 3 placeholders, namely <code>%{WIDTH}</code>, <code>%{HEIGHT}</code> and <code>%{QUALITY}</code>.</li>\n<li>The <code>Image</code> type now contains the property <code>parentId</code></li>\n<li>Method <code>getImages</code> now allows to return not only images of one resource but also of all child resources</li>\n</ul>\n<h4>0.1.3</h4>\n<ul>\n<li>Properties <code>width</code>, <code>height</code>, <code>maxResizeableWidth</code> and <code>maxResizeableHeight</code> added to Image type</li>\n<li>Minor bugs removed</li>\n</ul>\n<h4>0.1.2</h4>\n<ul>\n<li>Improved instructions on http://yoursite.com/blog/index.php<strong>/wpws</strong></li>\n<li>Cleaner directory structure</li>\n</ul>\n<h4>0.1.1</h4>\n<ul>\n<li>Improved WSDL1.1 compability</li>\n<li>WSDL file size optimization</li>\n</ul>\n<h4>0.1.0</h4>\n<ul>\n<li>Initial version</li>\n</ul>\n"
    },
    "short_description": "WordPress Web Service is used to access WordPress resources via WSDL and SOAP.",
    "description": "<p>WordPress Web Service (WPWS) is used to access WordPress resources via WSDL and SOAP.<br />\nIt allows you to connect WSDL enabled software like Adobe Flex / Flash Builder,<br />\nMicrosoft Visual Studio, PHP, J2EE, etc. to WordPress resources like posts<br />\nand pages.</p>\n<p>WPWS gives you also the opportunity to program alternative (graphical) interfaces<br />\nfor your WordPress installation.</p>\n<p>Furthermore alternative interpretations of WordPress resources are possible.<br />\nFor example you can interpret a post/page as a gallery; a datatype consisting of<br />\nall included images with the corresponding attributes.</p>\n<p>After installation simply open http://yoursite.com/blog/index.php/wpws to test your plugin.<br />\nThat is to add &#8220;/wpws&#8221; to the index.php part in your WordPress&#8217; url.</p>\n<p>For more information visit:<br />\n<a href=\"http://code.google.com/p/wordpress-web-service/\" rel=\"nofollow ugc\">WordPress Web Service</a></p>\n<p>Developers willing to help development on WPWS are greatly welcomed.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wordpress-web-service.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wordpress-web-service/trunk/screenshot-1.png?rev=1538954",
            "caption": "Page http://yoursite.com/blog/index.php/wpws opened in a webbrowser"
        },
        {
            "src": "https://ps.w.org/wordpress-web-service/trunk/screenshot-2.png?rev=1538954",
            "caption": "Data Connection Wizard with WSDL selected"
        },
        {
            "src": "https://ps.w.org/wordpress-web-service/trunk/screenshot-3.png?rev=1538954",
            "caption": "Entering the site's WSDL url as shown on the first screenshot"
        },
        {
            "src": "https://ps.w.org/wordpress-web-service/trunk/screenshot-4.png?rev=1538954",
            "caption": "Successfully parsed WSDL file with all currently supported methods and datatypes"
        },
        {
            "src": "https://ps.w.org/wordpress-web-service/trunk/screenshot-5.png?rev=1538954",
            "caption": "Successfully generated proxy classes for easy access of WordPress resources"
        }
    ],
    "tags": {
        "web": "web",
        "webservices": "Webservices",
        "wpws": "wpws",
        "wsdl": "wsdl"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wordpress-web-service.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}