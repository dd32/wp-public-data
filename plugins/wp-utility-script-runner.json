{
    "name": "WP Utility Script Runner",
    "slug": "wp-utility-script-runner",
    "version": "1.1.0",
    "author": "<a href=\"https://www.burlingtonbytes.com\">Burlington Bytes</a>",
    "author_profile": "https://profiles.wordpress.org/burlingtonbytes/",
    "contributors": {
        "burlingtonbytes": {
            "profile": "https://profiles.wordpress.org/burlingtonbytes/",
            "avatar": "https://secure.gravatar.com/avatar/187df203cb9646892d1dcfd850f0e8eb?s=96&d=monsterid&r=g",
            "display_name": "Bytes.co"
        },
        "gschoppe": {
            "profile": "https://profiles.wordpress.org/gschoppe/",
            "avatar": "https://secure.gravatar.com/avatar/c18398e7bbfb86efd1a8abbe151c03b6?s=96&d=monsterid&r=g",
            "display_name": "gschoppe"
        }
    },
    "requires": "4.6",
    "tested": "5.0.22",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/wp-utility-script-runner/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 2789,
    "last_updated": "2018-10-22 8:34pm GMT",
    "added": "2017-08-19",
    "homepage": "",
    "sections": {
        "description": "<p>Sometimes, you run into a situation where you just need to manually run a script. The actual logic might be as simple as generating a csv from a query, or changing a user&#8217;s settings, or even just running a single line of SQL. WordPress makes this difficult.</p>\n<p>There are many hacky solutions to the problem, but most of them lack security or are too difficult for anyone but a developer to run or just take too long to build. That&#8217;s where we come in.</p>\n<p>WP Utility Script Runner lets you start with a simple 17 line template, add in your custom code, save to the server, and in minutes you have a secure, fully featured utility, that you can safely run from the WordPress dashboard.</p>\n<p>But that&#8217;s not all! With a few extra lines of code, your utility can:</p>\n<ul>\n<li>Accept user input</li>\n<li>Accept file input</li>\n<li>Run at a future date and time</li>\n<li>Run on a recurring schedule</li>\n<li>Run large tasks by breaking them up into several smaller tasks, and saving state.</li>\n<li>Create reports and other output files</li>\n</ul>\n",
        "installation": "<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/plugin-name</code> directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress</li>\n<li>Use the Settings-&gt;Utility Scripts screen to manage and run utility scripts</li>\n</ol>\n",
        "faq": "\n<h4>Why would I ever need to run a script on-demand, rather than on page load?</h4>\n<p>\n<p>There are many times running on page load is not the best option:</p>\n<ul>\n<li>You may want to ensure that a task only happens once, when many people may be visiting the page</li>\n<li>You may need to capture some form of output from the script, without showing it to all users</li>\n<li>You may have multiple team members working on the site, and not want to harm their workflow with your debugging output</li>\n<li>You may need to be able to have non-developers run the script periodically, for tasks like report generation</li>\n</ul>\n<p>There are too many other use cases to count. If you don&#8217;t see a use case, you probably don&#8217;t need this tool, and that&#8217;s ok.</p>\n</p>\n<h4>Why not just write some custom PHP and tuck it in a subfolder?</h4>\n<p>\n<p>There are many caveats to taking this approach, but mostly it just leaves you writing a lot of (probably insecure) code.</p>\n<p>To build a custom script properly, you need to:</p>\n<ul>\n<li>Handle security on your own.</li>\n<li>Either duplicate or side-load any WordPress functions you need</li>\n<li>Build an interface and form handler</li>\n<li>Handle downloads</li>\n<li>Handle cron</li>\n<li>Get around PHP_MAX_EXECUTION_TIME</li>\n</ul>\n<p>That can be a massive amount of code, for a script that could be as simple as a single SQL query.</p>\n</p>\n<h4>Why not WP-CLI?</h4>\n<p>\n<p>We love WP-CLI, but sometimes the command line is just not the right tool for the job. Often you can&#8217;t get WP-CLI on shared hosts, and users who may need to use the utilities may not be comfortable with the command line. But stay tuned, WP-CLI integration is on our roadmap.</p>\n</p>\n<h4>Why not (Insert Solution Here)?</h4>\n<p>\n<p>The most common answer is feature completion and ease of access. A utility script can contain as little as 17 lines of overhead, before you are free and clear to write whatever you need. We dare you to find a lighter-weight, more feature-complete option. We wrote WP Utility Script Runner because there wasn&#8217;t one.</p>\n</p>\n<h4>Is it possible to get down to under 17 lines of boilerplate?</h4>\n<p>\n<p>Technically? Yes. But you&#8217;ll be sacrificing a lot of features. You can write your utility in &#8220;legacy mode&#8221;, where it can be written as simply as:</p>\n<blockquote>\n<p>&lt;?php<br />\n  // Utility Name: My Legacy Utility<br />\n  // Description: An example of a legacy utility<br />\n  echo &#8220;Hello World&#8221;; // your custom code goes here</p>\n</blockquote>\n<p>You will not get native handling for inputs, files, state, downloads, or error output, but it is pretty darn short.</p>\n</p>\n<h4>Why aren&#8217;t there any useful utilities bundled in?</h4>\n<p>\n<p>Most of the time, we find that Utility Scripts are very custom to the specific site and hosting environment. We have plans to build a library of useful scripts, but for now, we just included a couple examples to help you get started writing your own.</p>\n</p>\n<h4>Your plugin is bad, and You should feel bad!</h4>\n<p>\n<p>While that&#8217;s not exactly a question, we do take bug reports and reviews very seriously. In addition, you can always contact us directly with your thoughts, at support@burlingtonbytes.com.</p>\n</p>\n\n",
        "changelog": "<h4>08/29/2018 &#8211; 1.1.0</h4>\n<ul>\n<li>Bugfix for form fields with hyphens in name improperly serializing</li>\n</ul>\n<h4>11/16/2017 &#8211; 1.0.1</h4>\n<ul>\n<li>Bugfix for sample Comment2Post utility</li>\n</ul>\n<h4>08/19/2017 &#8211; 1.0.0</h4>\n<ul>\n<li>Initial Release!</li>\n</ul>\n"
    },
    "short_description": "Create custom scripts and manage them directly from the WordPress Dashboard. Schedule scripts, handle user input, download reports, and more.",
    "description": "<p>Sometimes, you run into a situation where you just need to manually run a script. The actual logic might be as simple as generating a csv from a query, or changing a user&#8217;s settings, or even just running a single line of SQL. WordPress makes this difficult.</p>\n<p>There are many hacky solutions to the problem, but most of them lack security or are too difficult for anyone but a developer to run or just take too long to build. That&#8217;s where we come in.</p>\n<p>WP Utility Script Runner lets you start with a simple 17 line template, add in your custom code, save to the server, and in minutes you have a secure, fully featured utility, that you can safely run from the WordPress dashboard.</p>\n<p>But that&#8217;s not all! With a few extra lines of code, your utility can:</p>\n<ul>\n<li>Accept user input</li>\n<li>Accept file input</li>\n<li>Run at a future date and time</li>\n<li>Run on a recurring schedule</li>\n<li>Run large tasks by breaking them up into several smaller tasks, and saving state.</li>\n<li>Create reports and other output files</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-utility-script-runner.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-utility-script-runner/assets/screenshot-1.png?rev=1716167",
            "caption": "The simplest version of a utility only has 17 lines of required code."
        },
        {
            "src": "https://ps.w.org/wp-utility-script-runner/assets/screenshot-2.png?rev=1716167",
            "caption": "Utilities can be enabled and disabled from the manage tab"
        },
        {
            "src": "https://ps.w.org/wp-utility-script-runner/assets/screenshot-3.png?rev=1716167",
            "caption": "Scripts are tucked away behind accordions, to prevent accidentally running them."
        },
        {
            "src": "https://ps.w.org/wp-utility-script-runner/assets/screenshot-4.png?rev=1716167",
            "caption": "Output is presented in real-time, without refreshing the page"
        }
    ],
    "tags": {
        "cron": "cron",
        "developers": "developers",
        "run-once": "run-once",
        "task": "task",
        "utilities": "utilities"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/wp-utility-script-runner.1.0.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/wp-utility-script-runner.1.0.1.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/wp-utility-script-runner/assets/banner-772x250.jpg?rev=1960906",
        "high": "https://ps.w.org/wp-utility-script-runner/assets/banner-1544x500.jpg?rev=1960906"
    },
    "icons": {
        "1x": "https://ps.w.org/wp-utility-script-runner/assets/icon-128x128.jpg?rev=1960906",
        "2x": "https://ps.w.org/wp-utility-script-runner/assets/icon-256x256.jpg?rev=1960906"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}