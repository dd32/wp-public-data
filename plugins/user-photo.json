{
    "name": "User Photo",
    "slug": "user-photo",
    "version": "0.9.10",
    "author": "Weston Ruter",
    "author_profile": "https://profiles.wordpress.org/westonruter/",
    "contributors": {
        "westonruter": {
            "profile": "https://profiles.wordpress.org/westonruter/",
            "avatar": "https://secure.gravatar.com/avatar/22ed378fbf1d918ef43a45b2a1f34634?s=96&d=monsterid&r=g",
            "display_name": "Weston Ruter"
        },
        "ryanhellyer": {
            "profile": "https://profiles.wordpress.org/ryanhellyer/",
            "avatar": "https://secure.gravatar.com/avatar/c822828d07eb9ea433404cb27f84c4d6?s=96&d=monsterid&r=g",
            "display_name": "Ryan Hellyer"
        },
        "glen_scott": {
            "profile": "https://profiles.wordpress.org/glen_scott/",
            "avatar": "https://secure.gravatar.com/avatar/def3b8f269f2b1816331897fdde84b0f?s=96&d=monsterid&r=g",
            "display_name": "Glen Scott"
        }
    },
    "requires": "3.0.5",
    "tested": "4.6.29",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 86,
    "ratings": {
        "5": 13,
        "4": 3,
        "3": 2,
        "2": 0,
        "1": 2
    },
    "num_ratings": 20,
    "support_url": "https://wordpress.org/support/plugin/user-photo/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 5000,
    "downloaded": 484094,
    "last_updated": "2017-05-31 20:39:00",
    "added": "2007-12-17",
    "homepage": "http://wordpress.org/extend/plugins/user-photo/",
    "sections": {
        "description": "<p>Allows a user to associate a profile photo with their account through their &#8220;Your Profile&#8221; page. Admins may<br />\nadd a user profile photo by accessing the &#8220;Edit User&#8221; page. Uploaded images are resized to fit the dimensions specified<br />\non the options page; a thumbnail image correspondingly is also generated.<br />\nUser photos may be displayed within a post or a comment to<br />\nhelp identify the author. New template tags introduced are:</p>\n<ul>\n<li><code>userphoto_the_author_photo()</code></li>\n<li><code>userphoto_the_author_thumbnail()</code></li>\n<li><code>userphoto_comment_author_photo()</code></li>\n<li><code>userphoto_comment_author_thumbnail()</code></li>\n</ul>\n<p><em>Important: all of these &#8220;template tags&#8221; must appear inside of PHP script blocks (see examples below).</em><br />\nThe first two should be placed in the posts loop near <code>the_author()</code>, and the second two in the comments<br />\nloop near <code>comment_author()</code> (or their respective equivalents). Furthermore, <code>userphoto_the_author_photo()</code><br />\nand <code>userphoto_the_author_thumbnail()</code> may be called anywhere (i.e. sidebar) if <code>$authordata</code> is set.</p>\n<p>The output of these template tags may be modified by passing four parameters: <code>$before</code>, <code>$after</code>, <code>$attributes</code>, and <code>$default_src</code>,<br />\nas in: <code>userphoto_the_author_photo($before, $after, $attributes, $default_src)</code>.<br />\nIf the user photo exists (or <code>$default_src</code> is supplied), then the text provided in the <code>$before</code> and <code>$after</code> parameters is respectively<br />\nprefixed and suffixed to the generated <code>img</code> tag (a common pattern in WordPress). If attributes are provided in the <code>$attributes</code><br />\nparameter, then they are returned as attributes of the generated <code>img</code> element. For example: <code>userphoto_the_author_photo('', '', array(style =&gt; 'border:0'))</code><br />\nJust added in 0.8.1 release are these two new template tags:</p>\n<ul>\n<li><code>userphoto($user, $before = '', $after = '', $attributes = array(), $default_src = '')</code></li>\n<li><code>userphoto_thumbnail($user, $before = '', $after = '', $attributes = array(), $default_src = '')</code></li>\n</ul>\n<p>By using these, it is uneccessary to set the global <code>$authordata</code> to display a photo. Just pass <code>$authordata</code>, <code>$curauth</code> or<br />\nwhatever variable you have which contains the user object, or (as of version 0.9), pass in a user ID or a user login name.</p>\n<p>Here&#8217;s an example that shows a few ways of inserting a user&#8217;s photo into the post loop:<br />\n    //this will display the user&#8217;s avatar if they don&#8217;t have a user photo,</p>\n<pre><code>&lt;?php while (have_posts()) : the_post(); ?&gt;\n    &lt;div class=\"post\" id=\"post-&lt;?php the_ID(); ?&gt;\"&gt;\n        &lt;h2&gt;&lt;a href=\"&lt;?php the_permalink() ?&gt;\"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h2&gt;\n        &lt;div class=\"meta\"&gt;\n            &lt;?php the_time('F jS, Y') ?&gt;\n            by &lt;?php the_author() ?&gt;\n\n            &lt;!-- displays the user's photo and then thumbnail --&gt;\n            &lt;?php userphoto_the_author_photo() ?&gt;\n            &lt;?php userphoto_the_author_thumbnail() ?&gt;\n\n            &lt;!-- the following two do the same since $authordata populated --&gt;\n            &lt;?php userphoto($authordata) ?&gt;\n            &lt;?php userphoto_thumbnail($authordata) ?&gt;\n\n            &lt;!-- and this is how to customize the output --&gt;\n            &lt;?php userphoto_the_author_photo(\n                '&lt;b&gt;Photo of me: ',\n                '&lt;/b&gt;',\n                array('class' =&gt; 'photo'),\n                get_template_directory_uri() . '/nophoto.jpg'\n            ) ?&gt;\n        &lt;/div&gt;\n        &lt;?php the_content('Read the rest of this entry &amp;raquo;'); ?&gt;\n    &lt;/div&gt;\n&lt;?php endwhile; ?&gt;\n</code></pre>\n<p>If you want to display the user&#8217;s photo in the sidebar, just get the user ID or object and pass it into <code>userphoto()</code> or <code>userphoto_thumbnail()</code> like this:</p>\n<pre><code>&lt;?php userphoto($posts[0]-&gt;post_author); ?&gt;\n</code></pre>\n<p>If you want to display a user&#8217;s photo their author page, you may do this:</p>\n<pre><code>&lt;?php userphoto($wp_query-&gt;get_queried_object()) ?&gt;\n</code></pre>\n<p>In version 0.9 the boolean function <code>userphoto_exists($user)</code> has been introduced which returns true if the user has a photo and false if they do not.<br />\nArgument <code>$user</code> may be user object, ID, or login name. This function can be used along with avatars:</p>\n<pre><code>&lt;?php\nif(userphoto_exists($user))\n    userphoto($user);\nelse\n    echo get_avatar($user-&gt;ID, 96);\n?&gt;\n</code></pre>\n<p>Or if the new &#8220;Serve Avatar as Fallback&#8221; option is turned on, then the avatar will be served by any of the regular calls to display the user photo:</p>\n<pre><code>&lt;?php\n//this will display the user's avatar if they don't have a user photo,\n//  and if \"Serve Avatar as Fallback\" is turned on\nuserphoto($user);\n?&gt;\n</code></pre>\n<p>Additionally, all of the regular function calls to display the user photo may be done away with alltogether if the new &#8220;Override Avatar with User Photo&#8221;<br />\noption is enabled:</p>\n<pre><code>&lt;?php\n//both will display the user photo if it exists\n//  and if \"Override Avatar with User Photo\" is turned on\necho get_avatar($user_id);\necho get_avatar($user-&gt;user_email);\n?&gt;\n</code></pre>\n<p>Both options &#8220;Serve Avatar as Fallback&#8221; and &#8220;Override Avatar with User Photo&#8221; require that the &#8216;Avatar Display&#8217; setting under Discussion be set to &#8220;Show&#8221;.</p>\n<p>Uploaded images may be moderated by administrators via the &#8220;Edit User&#8221; page.</p>\n<p>Localizations included for Spanish, German, Dutch, Polish, Russian, French, Hungarian, Brazilian Portuguese, Italian, and Catalan.</p>\n<p>If you value this plugin, <em>please donate</em> to ensure that it may continue to be maintained and improved.</p>\n",
        "changelog": "<h4>0.9.10</h4>\n<ul>\n<li>Added recommendation to upgrade in wp-admin/plugins.php</li>\n<li>Provided option to never see the upgrade notice again</li>\n</ul>\n<h4>0.9.9</h4>\n<ul>\n<li>Removed deprecated mysql_ function</li>\n</ul>\n<h4>0.9.8</h4>\n<ul>\n<li>Optimised retrieval of administrators for settings page</li>\n</ul>\n<h4>0.9.7</h4>\n<ul>\n<li>Fixed WordPress deprecated notices</li>\n</ul>\n<h4>0.9.6</h4>\n<ul>\n<li>Fixed PHP notice about deprecated argument</li>\n<li>Use semantic versioning for plugin files</li>\n</ul>\n<h4>2012-05-08: 0.9.5.2</h4>\n<ul>\n<li>Security issue (credit Ryan Hellyer).</li>\n</ul>\n<h4>2011-02-17: 0.9.5</h4>\n<ul>\n<li>Fixing major security issue (credit ADVtools SARL).</li>\n</ul>\n<h4>2009-7-28</h4>\n<ul>\n<li>Fixed a small bug relating to line 453 changing &#8220;home&#8221; to &#8220;siteurl&#8221;. Thanks Piotr!</li>\n</ul>\n<h4>2009-02-13</h4>\n<ul>\n<li>\n<p>Added Catalan localization. Thanks Robert!</p>\n</li>\n<li>\n<p>2009-02-28 =</p>\n</li>\n<li>\n<p>Added Italian localization. Thanks Federico!</p>\n</li>\n</ul>\n<h4>2009-02-17</h4>\n<ul>\n<li>Added Brazilian Portuguese localization. Thanks gui!</li>\n</ul>\n<h4>2009-01-07</h4>\n<ul>\n<li>Added Hungarian localization. Thanks Csaba!</li>\n</ul>\n<h4>2008-12-11</h4>\n<ul>\n<li>Added French localization. Thanks Jean-Pierre!</li>\n</ul>\n<h4>2008-11-14: 0.9.4</h4>\n<ul>\n<li>Now displaying error message if <code>wp_upload_dir()</code> fails when trying to display a user photo.</li>\n</ul>\n<h4>2008-11-14: 0.9.3</h4>\n<ul>\n<li>Forcing the uploaded filename to lower-case</li>\n</ul>\n<h4>2008-11-03: 0.9.2</h4>\n<ul>\n<li>Updated error message to include results for <code>wp_upload_dir()</code></li>\n</ul>\n<h4>2008-09-22: 0.9.1</h4>\n<ul>\n<li>Updated error messages to be more helpful (includes the paths in question). This will help debug some of the issues that have been raised on the forums lately.</li>\n</ul>\n<h4>2008-09-22: 0.9</h4>\n<ul>\n<li>First argument to <code>userphoto()</code> and <code>userphoto_thumbnail()</code> may now just be a user ID or user login name in addition to a user object.</li>\n<li>New &#8220;Serve Avatar as Fallback&#8221; option; this is disabled by default.</li>\n<li>New boolean function <code>userphoto_exists($user)</code> which returns true if the user has a photo and false if they do not. Argument <code>$user</code> may be user object, ID, or login name.</li>\n<li>New option &#8220;Override Avatar with User Photo&#8221;; disabled by default.</li>\n<li>Adding <code>class=\"photo\"</code> by default if no class attribute is supplied</li>\n<li>Fixed issue where thumbnail (and associated usermeta) wasn&#8217;t being deleted along with the full-size photo (thanks Oliver).</li>\n<li>Now using <code>wp_upload_dir()</code> to get the basedir for where the userphoto directory will be located. </li>\n</ul>\n<h4>2008-08-01: 0.8.2</h4>\n<ul>\n<li>Verified that works in WP 2.6; added note explaining what the error message regarding what &#8220;image resizing not available&#8221; means&#8230; namely that the GD module is not installed.</li>\n</ul>\n<h4>2008-05-29: 0.8.1</h4>\n<ul>\n<li>Added localization for Russian (thanks Kyr!)</li>\n</ul>\n<h4>2008-05-17: 0.8.1</h4>\n<ul>\n<li>Finally updated the plugin for WP 2.5. Note that it still worked for 2.5, it&#8217;s just the admin interfaces needed to be updated. Also added <code>userphoto()</code> and <code>userphoto_thumbnail()</code> template tags.</li>\n</ul>\n<h4>2008-04-23: 0.8.0.5</h4>\n<ul>\n<li>Added localization for Polish (thanks Maciej!)</li>\n</ul>\n<h4>2008-04-04: 0.8.0.4</h4>\n<ul>\n<li>Fixed issue where incorrect path was being generated for default photo.</li>\n</ul>\n<h4>2008-04-04: 0.8.0.3</h4>\n<ul>\n<li>Using <code>wp_mail</code> instead of <code>mail</code> (Thanks again, Kyle.)</li>\n</ul>\n<h4>2008-03-28: 0.8.0.2b</h4>\n<ul>\n<li>Ensured that &#8220;unapproved&#8221; photos are not displayed. (Thanks Kyle.)</li>\n</ul>\n<h4>2008-02-24: 0.8.0.2</h4>\n<ul>\n<li>Made minor improvement to security.</li>\n</ul>\n<h4>2008-02-13: 0.8.0.1</h4>\n<ul>\n<li>Removed <code>print_r()</code> from being called when using <code>$default_src</code> (thanks David!)</li>\n</ul>\n<h4>2008-02-04: 0.8</h4>\n<ul>\n<li>Allow before and after text to be outputted when there is a user photo.</li>\n<li>Allow attributes to be passed into template tags, including a default SRC value to be used when there is no user photo.</li>\n<li>Added Dutch localization translated by Joep Stender (thanks!)</li>\n</ul>\n<h4>2008-01-07: 0.7.4b</h4>\n<ul>\n<li>Added German localization translated by Robert Harm (thanks!)</li>\n</ul>\n<h4>2008-01-06: 0.7.4</h4>\n<ul>\n<li>Added support for localization and added Spanish localization translated by Pakus (thanks!)</li>\n</ul>\n<h4>2008-01-02: 0.7.3</h4>\n<ul>\n<li>Fixed issue where the post author photo was inadvertently used for non-registered comment author photos.</li>\n</ul>\n<h4>2007-12-28: 0.7.2</h4>\n<ul>\n<li>Improved error message raised when unable to create &#8216;userphoto&#8217; directory under /wp-content/uploads/. It now asks about whether write-permissions are set for the directory.</li>\n<li>Improved the plugin activation handler.</li>\n<li>All uploaded images are now explicitly set to chmod 666.</li>\n</ul>\n<h4>2007-12-22: 0.7.1</h4>\n<ul>\n<li>All functions (and template tags) now are prefixed with &#8220;userphoto_&#8221;</li>\n</ul>\n<h4>2007-12-18: 0.7.0.1</h4>\n<ul>\n<li>Now using <code>siteurl</code> option instead of <code>home</code> option</li>\n<li>Fixed the inclusion of the stylesheet for the options page</li>\n</ul>\n<h4>Todo</h4>\n<ol>\n<li>When changing the authorization level, all previous users&#8217; photos should be automatically approved if they meet the minimum user level</li>\n<li>Include a get_userphoto() and get_userphoto_thumbnail() ?</li>\n<li>Add a management page to allow admins to quickly approve/reject user photos.</li>\n<li>Add option so that when a photo is rejected, the user is notified.</li>\n<li>Restrict image types acceptable?</li>\n<li>Add an option to indicate a default photo to be used when none supplied.</li>\n</ol>\n"
    },
    "short_description": "Allows a user to associate a photo with their account and for this photo to be displayed in their posts and comments.",
    "description": "<p>Allows a user to associate a profile photo with their account through their &#8220;Your Profile&#8221; page. Admins may<br />\nadd a user profile photo by accessing the &#8220;Edit User&#8221; page. Uploaded images are resized to fit the dimensions specified<br />\non the options page; a thumbnail image correspondingly is also generated.<br />\nUser photos may be displayed within a post or a comment to<br />\nhelp identify the author. New template tags introduced are:</p>\n<ul>\n<li><code>userphoto_the_author_photo()</code></li>\n<li><code>userphoto_the_author_thumbnail()</code></li>\n<li><code>userphoto_comment_author_photo()</code></li>\n<li><code>userphoto_comment_author_thumbnail()</code></li>\n</ul>\n<p><em>Important: all of these &#8220;template tags&#8221; must appear inside of PHP script blocks (see examples below).</em><br />\nThe first two should be placed in the posts loop near <code>the_author()</code>, and the second two in the comments<br />\nloop near <code>comment_author()</code> (or their respective equivalents). Furthermore, <code>userphoto_the_author_photo()</code><br />\nand <code>userphoto_the_author_thumbnail()</code> may be called anywhere (i.e. sidebar) if <code>$authordata</code> is set.</p>\n<p>The output of these template tags may be modified by passing four parameters: <code>$before</code>, <code>$after</code>, <code>$attributes</code>, and <code>$default_src</code>,<br />\nas in: <code>userphoto_the_author_photo($before, $after, $attributes, $default_src)</code>.<br />\nIf the user photo exists (or <code>$default_src</code> is supplied), then the text provided in the <code>$before</code> and <code>$after</code> parameters is respectively<br />\nprefixed and suffixed to the generated <code>img</code> tag (a common pattern in WordPress). If attributes are provided in the <code>$attributes</code><br />\nparameter, then they are returned as attributes of the generated <code>img</code> element. For example: <code>userphoto_the_author_photo('', '', array(style =&gt; 'border:0'))</code><br />\nJust added in 0.8.1 release are these two new template tags:</p>\n<ul>\n<li><code>userphoto($user, $before = '', $after = '', $attributes = array(), $default_src = '')</code></li>\n<li><code>userphoto_thumbnail($user, $before = '', $after = '', $attributes = array(), $default_src = '')</code></li>\n</ul>\n<p>By using these, it is uneccessary to set the global <code>$authordata</code> to display a photo. Just pass <code>$authordata</code>, <code>$curauth</code> or<br />\nwhatever variable you have which contains the user object, or (as of version 0.9), pass in a user ID or a user login name.</p>\n<p>Here&#8217;s an example that shows a few ways of inserting a user&#8217;s photo into the post loop:<br />\n    //this will display the user&#8217;s avatar if they don&#8217;t have a user photo,</p>\n<pre><code>&lt;?php while (have_posts()) : the_post(); ?&gt;\n    &lt;div class=\"post\" id=\"post-&lt;?php the_ID(); ?&gt;\"&gt;\n        &lt;h2&gt;&lt;a href=\"&lt;?php the_permalink() ?&gt;\"&gt;&lt;?php the_title(); ?&gt;&lt;/a&gt;&lt;/h2&gt;\n        &lt;div class=\"meta\"&gt;\n            &lt;?php the_time('F jS, Y') ?&gt;\n            by &lt;?php the_author() ?&gt;\n\n            &lt;!-- displays the user's photo and then thumbnail --&gt;\n            &lt;?php userphoto_the_author_photo() ?&gt;\n            &lt;?php userphoto_the_author_thumbnail() ?&gt;\n\n            &lt;!-- the following two do the same since $authordata populated --&gt;\n            &lt;?php userphoto($authordata) ?&gt;\n            &lt;?php userphoto_thumbnail($authordata) ?&gt;\n\n            &lt;!-- and this is how to customize the output --&gt;\n            &lt;?php userphoto_the_author_photo(\n                '&lt;b&gt;Photo of me: ',\n                '&lt;/b&gt;',\n                array('class' =&gt; 'photo'),\n                get_template_directory_uri() . '/nophoto.jpg'\n            ) ?&gt;\n        &lt;/div&gt;\n        &lt;?php the_content('Read the rest of this entry &amp;raquo;'); ?&gt;\n    &lt;/div&gt;\n&lt;?php endwhile; ?&gt;\n</code></pre>\n<p>If you want to display the user&#8217;s photo in the sidebar, just get the user ID or object and pass it into <code>userphoto()</code> or <code>userphoto_thumbnail()</code> like this:</p>\n<pre><code>&lt;?php userphoto($posts[0]-&gt;post_author); ?&gt;\n</code></pre>\n<p>If you want to display a user&#8217;s photo their author page, you may do this:</p>\n<pre><code>&lt;?php userphoto($wp_query-&gt;get_queried_object()) ?&gt;\n</code></pre>\n<p>In version 0.9 the boolean function <code>userphoto_exists($user)</code> has been introduced which returns true if the user has a photo and false if they do not.<br />\nArgument <code>$user</code> may be user object, ID, or login name. This function can be used along with avatars:</p>\n<pre><code>&lt;?php\nif(userphoto_exists($user))\n    userphoto($user);\nelse\n    echo get_avatar($user-&gt;ID, 96);\n?&gt;\n</code></pre>\n<p>Or if the new &#8220;Serve Avatar as Fallback&#8221; option is turned on, then the avatar will be served by any of the regular calls to display the user photo:</p>\n<pre><code>&lt;?php\n//this will display the user's avatar if they don't have a user photo,\n//  and if \"Serve Avatar as Fallback\" is turned on\nuserphoto($user);\n?&gt;\n</code></pre>\n<p>Additionally, all of the regular function calls to display the user photo may be done away with alltogether if the new &#8220;Override Avatar with User Photo&#8221;<br />\noption is enabled:</p>\n<pre><code>&lt;?php\n//both will display the user photo if it exists\n//  and if \"Override Avatar with User Photo\" is turned on\necho get_avatar($user_id);\necho get_avatar($user-&gt;user_email);\n?&gt;\n</code></pre>\n<p>Both options &#8220;Serve Avatar as Fallback&#8221; and &#8220;Override Avatar with User Photo&#8221; require that the &#8216;Avatar Display&#8217; setting under Discussion be set to &#8220;Show&#8221;.</p>\n<p>Uploaded images may be moderated by administrators via the &#8220;Edit User&#8221; page.</p>\n<p>Localizations included for Spanish, German, Dutch, Polish, Russian, French, Hungarian, Brazilian Portuguese, Italian, and Catalan.</p>\n<p>If you value this plugin, <em>please donate</em> to ensure that it may continue to be maintained and improved.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/user-photo.0.9.10.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/user-photo/trunk/screenshot-1.jpg?rev=1776705",
            "caption": "Admin section in User Profile page"
        }
    ],
    "tags": {
        "images": "images",
        "photos": "photos",
        "users": "users"
    },
    "stable_tag": "0.9.10",
    "versions": {
        "0.7": "https://downloads.wordpress.org/plugin/user-photo.0.7.zip",
        "0.9.10": "https://downloads.wordpress.org/plugin/user-photo.0.9.10.zip",
        "0.9.4": "https://downloads.wordpress.org/plugin/user-photo.0.9.4.zip",
        "0.9.5": "https://downloads.wordpress.org/plugin/user-photo.0.9.5.zip",
        "0.9.5.1": "https://downloads.wordpress.org/plugin/user-photo.0.9.5.1.zip",
        "0.9.5.2": "https://downloads.wordpress.org/plugin/user-photo.0.9.5.2.zip",
        "0.9.6": "https://downloads.wordpress.org/plugin/user-photo.0.9.6.zip",
        "0.9.7": "https://downloads.wordpress.org/plugin/user-photo.0.9.7.zip",
        "0.9.8": "https://downloads.wordpress.org/plugin/user-photo.0.9.8.zip",
        "0.9.9": "https://downloads.wordpress.org/plugin/user-photo.0.9.9.zip",
        "trunk": "https://downloads.wordpress.org/plugin/user-photo.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/user-photo.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 86,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "user-photo",
            "language": "fr_FR",
            "version": "0.9.10",
            "updated": "2018-04-04 08:09:26",
            "package": "http://downloads.wordpress.org/translation/plugin/user-photo/0.9.10/fr_FR.zip"
        }
    ]
}