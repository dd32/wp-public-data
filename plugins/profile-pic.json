{
    "name": "Profile Pic",
    "slug": "profile-pic",
    "version": "0.9.2",
    "author": "<a href=\"http://geekgrl.net\">Hannah Gray</a>",
    "author_profile": "https://profiles.wordpress.org/latitudes/",
    "contributors": {
        "latitudes": {
            "profile": "https://profiles.wordpress.org/latitudes/",
            "avatar": "https://secure.gravatar.com/avatar/333f6f464b9f7978295956b09662af87?s=96&d=monsterid&r=g",
            "display_name": "latitudes"
        }
    },
    "requires": "2.0",
    "tested": "2.7",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 20,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 1
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/profile-pic/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 200,
    "downloaded": 65025,
    "last_updated": "2009-01-24 7:18pm GMT",
    "added": "2008-10-18",
    "homepage": "http://geekgrl.net/wordpress/wordpress-profile-pic-plugin/",
    "sections": {
        "description": "<p>This plugin allows authors to add a picture to their profile and helps automate the process of displaying author profiles</p>\n<p>Features:</p>\n<ul>\n<li>Automatic setup &#8211; no template/code modification needed</li>\n<li>Widget to display profile in the side bar &#8211; fully configurable</li>\n<li>Easy profile display with shortcodes &#8211; within a page or post simply add &#091;printprofile&#093; to display your author profile and picture, or &#091;printprofilepic&#093; to display your profile picture</li>\n<li>Optional template override setting will make author links go to the author&#8217;s profile</li>\n<li>Work in tandem with <a href=\"http://blog.jodies.de/\" rel=\"nofollow ugc\">Krischan Jodies&#8217;</a> <a href=\"https://wordpress.org/extend/plugins/get-recent-comments/\" rel=\"ugc\">Get Recent Comments</a> plugin (ie. displays your profile pic next to your comments)</li>\n<li>For multi-author blogs, administrators can edit (read: moderate) other authors&#8217; pictures</li>\n<li>For those old-school WordPress folks, the plugin supports a full set of template tags to enable template integration</li>\n</ul>\n<h3>Template Tags</h3>\n<p>(Note that the plug still supports legacy v.1 tags as well)</p>\n<h4>Template Tag 1:</h4>\n<p><strong>Get Author Image Tag</strong> &#8211; makes a pretty <code>&lt;img&gt;</code> tag for author&#8217;s picture.</p>\n<p>USAGE: profilepic&#095;internal&#095;imagetag(&#8216;authorID&#8217;, &#8216;tags&#8217;, &#8216;display&#8217;)</p>\n<p>FUNCTION: returns image for author wrapped in image tag, style accessable via id=&#8221;authorpic&#8221;</p>\n<p>OPTIONS:</p>\n<ul>\n<li>authorID: id number of author </li>\n<li>tags: attributes to include in img tag (optional, defaults to no tags) </li>\n<li>display: display results in html (ie. echo) or reuse in php? true or false  (optional, defaults to true)  </li>\n</ul>\n<p>EXAMPLE:<br />\nCode:</p>\n<pre><code>&lt;?php \n    profilepic_internal_imagetag($authid, 'align=left'); \n?&gt;\n</code></pre>\n<p>Result (ex.):</p>\n<pre><code>    &lt;img src=\"http://blog.com/wp-content/uploads/authors/default.jpg\" width=200 height=199 align=left  id=\"authorpic\" /&gt;  \n</code></pre>\n<h4>Template Tag 2:</h4>\n<p><strong>Get Author Image Path</strong> &#8211; useful if you need to do something else with the path or url (link to it, stuff it into another function, make your own image tag, etc)</p>\n<p>USAGE: profilepic&#095;internal&#095;picpath(&#8216;authorID&#8217;, &#8216;display&#8217;, &#8216;type&#8217;)</p>\n<p>FUNCTION: returns url or absolute path to author&#8217;s picture</p>\n<p>OPTIONS:</p>\n<ul>\n<li>authorID: id number of author  </li>\n<li>display: display results in html (ie. echo) or reuse in php? (optional, defaults to false)  </li>\n<li>type: specify what kind of path requested: &#8216;url&#8217; or &#8216;absolute&#8217; (optional, defaults to url)  </li>\n</ul>\n<p>EXAMPLE:<br />\nCode:</p>\n<pre><code>&lt;?php \n    profilepic_internal_picpath($authid, true, 'absolute'); \n?&gt;  \n</code></pre>\n<p>Result: <code>/home/jdoe/public_html/blog/wp-content/uploads/authors/1.jpg</code></p>\n<h4>Template Tag 3:</h4>\n<p><strong>Get Author&#8217;s Image&#8217;s Dimension</strong> &#8211; useful if you are making your own <code>&lt;img&gt;</code> tag, or a div container for the img</p>\n<p>USAGE: profilepic&#095;internal&#095;fingerdimensions(&#8216;path&#8217;, &#8216;dimension&#8217;, &#8216;display&#8217;)</p>\n<p>FUNCTION: returns requested dimension of author&#8217;s picture</p>\n<p>OPTIONS:</p>\n<ul>\n<li>path: absolute path to author&#8217;s picture from server root&#8217;, </li>\n<li>dimension: the dimension you want, can be either &#8216;height&#8217; or width&#8217;</li>\n<li>display: display results in html (ie. echo) or reuse in php? true or false</li>\n</ul>\n<p>EXAMPLES:</p>\n<ol>\n<li>\n<p>to get picture width&#8230; (using profilepic&#095;internal&#095;picpath to get path to picture)</p>\n<p>Code:</p>\n<pre><code>&lt;?php \n    profilepic_internal_fingerdimensions(profilepic_internal_picpath($authid, false, 'absolute'), 'width', true); \n?&gt;\n</code></pre>\n<p>Result (Ex.): 200</p>\n</li>\n<li>\n<p>to get picture height&#8230; (using profilepic&#095;internal&#095;picpath to get path to picture)</p>\n<p>Code:</p>\n<pre><code>&lt;?php \n\n    profilepic_internal_fingerdimensions(profilepic_internal_picpath($authid, false, 'absolute'), 'height', true); \n?&gt;\n</code></pre>\n<p>Result (Ex.): 199</p>\n</li>\n</ol>\n<h4>Template Tag 4:</h4>\n<p><strong>Get Author&#8217;s Avatar</strong> &#8211; intended for use in the comments loop</p>\n<p>USAGE:  profilepic&#095;internal&#095;gravatar($authorID, $tags = &#8221;)</p>\n<p>FUNCTION: returns image tag if authorID is a registered user of your blog, false if author is not</p>\n<p>OPTIONS:</p>\n<ul>\n<li>authorID: id number of author</li>\n<li>tags: attributes to include in img tag (optional, defaults to no tags)</li>\n</ul>\n<p>EXAMPLES:</p>\n<p>Code:</p>\n<pre><code>&lt;?php\n    if (function_exists('profilepic_internal_gravatar')) { \n        $author_gravatar = profilepic_internal_gravatar($comment-&gt;user_id, \"class='gravatar'\"); \n    } else { \n        $author_gravatar = false;\n    }\n    if ($author_gravatar != false) {\n        echo $author_gravatar;\n    } \n?&gt;  \n</code></pre>\n<p>Result (Ex.):</p>\n<pre><code>    &lt;img src=\"http://blog.com/wp-content/uploads/authors/default.jpg\" width=80 height=80 class='gravatar' /&gt;\n</code></pre>\n",
        "installation": "<ol>\n<li>Upload the entire <code>profile-pic</code> directory to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Add your picture by editing your profile in WordPress (in WP 2.5+, get to your profile by clicking on your name in the top right corner of the admin panel)</li>\n<li>Decide where you want your profile to be displayed\n<ul>\n<li><strong>Widget:</strong> simply activate and configure the Profile Pic widget</li>\n<li><strong>Plunk it into a page or post:</strong> anywhere you type  &#091;printprofile&#093;, your author profile and picture will be displayed.  If you only want your picture displayed, use &#091;printprofilepic&#093; instead. Configure what profile info you want made public using the checkboxes at the bottom of your profile editor within the WP admin panel</li>\n<li><strong>Author Link:</strong> most templates will link the Author Name on posts/pages to a page listing with all the author&#8217;s posts.  By default, Profile Pic hiyjacks this listing page and replaces it with a page which will display the author&#8217;s profile.  You can disable this behaviour via the plugin settings page (Settings -&gt; Profile Pic, in the WP Admin Panel).</li>\n<li><strong>Static Author Page:</strong> (easy to do but best for single-user blogs) create a new page, title it &#8220;About&#8221; (or whatever you want), and put &#091;printprofile&#093; in the content.  </li>\n<li><strong>Dynamic Author Page:</strong> (best for multiuser blogs) if the page generated by the &#8220;author link&#8221; method above isn&#8217;t good enough for you, or looks funky, deactivate it via the Profile Pic plugin options and generate your own author template.  Use the included /wp-content/plugins/profile-pic/author.php file as a model, and refer to the official <a href=\"https://codex.wordpress.org/Author_Templates\" rel=\"nofollow ugc\">WordPress Author Templates Codex Page</a> for more information on how dynamic author pages work</li>\n<li><strong>Template Tag Fun:</strong> See the template tag section for full documentation of the template tags</li>\n</ul>\n</li>\n</ol>\n",
        "faq": "\n<h4>I have an older version of the plugin &#8211; will it upgrade nicely?</h4>\n<p>\n<p>I&#8217;ve done my best to ensure that the plugin upgrades seamlessly, but there are a lot of changes between this version and the last.  See the bug report tab for how to go about reporting bugs.</p>\n</p>\n<h4>When I click on an author link, things look funky&#8230;</h4>\n<p>\n<p>The author link is using a very basic Kubric style theme, and is bound to fail if you&#8217;re using a highly modified theme.  You&#8217;ll need to deactivate  author template hijacking via the plugin settings page (Settings -&gt; Profile Pic, in the WP Admin Panel), and generate your own author template.  Use the included /wp-content/plugins/profile-pic/author.php file as a model, and refer to the official <a href=\"https://codex.wordpress.org/Author_Templates\" rel=\"nofollow ugc\">WordPress Author Templates Codex Page</a> for more information on how dynamic author pages work</p>\n</p>\n<h4>Something is wonky and I think its your fault</h4>\n<p>\n<p>Use this link to post on the WordPress forum (your post will be autmagically tagged as a Profile Pic plugin question): <a href=\"https://wordpress.org/tags/profile-pic#postform\" rel=\"ugc\">https://wordpress.org/tags/profile-pic#postform</a></p>\n<p>Alternatively, email me at bugs (at) geekgrl.net</p>\n</p>\n<h4>I&#8217;m Stuck!</h4>\n<p>\n<p>For general help and questions, again, post in the WP forums: <a href=\"https://wordpress.org/tags/profile-pic#postform\" rel=\"ugc\">https://wordpress.org/tags/profile-pic#postform</a></p>\n<p>If you&#8217;re developing a commercial multi-author blog and want help with advanced integration of this plugin into your theme, I&#8217;m available for hire.  email me at: me (at) geekgrl.net</p>\n</p>\n\n"
    },
    "short_description": "Allows authors to add a picture to their profile and automates the process of displaying profiles. Highly configurable via plugin and widget settings.",
    "description": "<p>This plugin allows authors to add a picture to their profile and helps automate the process of displaying author profiles</p>\n<p>Features:</p>\n<ul>\n<li>Automatic setup &#8211; no template/code modification needed</li>\n<li>Widget to display profile in the side bar &#8211; fully configurable</li>\n<li>Easy profile display with shortcodes &#8211; within a page or post simply add &#091;printprofile&#093; to display your author profile and picture, or &#091;printprofilepic&#093; to display your profile picture</li>\n<li>Optional template override setting will make author links go to the author&#8217;s profile</li>\n<li>Work in tandem with <a href=\"http://blog.jodies.de/\" rel=\"nofollow ugc\">Krischan Jodies&#8217;</a> <a href=\"https://wordpress.org/extend/plugins/get-recent-comments/\" rel=\"ugc\">Get Recent Comments</a> plugin (ie. displays your profile pic next to your comments)</li>\n<li>For multi-author blogs, administrators can edit (read: moderate) other authors&#8217; pictures</li>\n<li>For those old-school WordPress folks, the plugin supports a full set of template tags to enable template integration</li>\n</ul>\n<h3>Template Tags</h3>\n<p>(Note that the plug still supports legacy v.1 tags as well)</p>\n<h4>Template Tag 1:</h4>\n<p><strong>Get Author Image Tag</strong> &#8211; makes a pretty <code>&lt;img&gt;</code> tag for author&#8217;s picture.</p>\n<p>USAGE: profilepic&#095;internal&#095;imagetag(&#8216;authorID&#8217;, &#8216;tags&#8217;, &#8216;display&#8217;)</p>\n<p>FUNCTION: returns image for author wrapped in image tag, style accessable via id=&#8221;authorpic&#8221;</p>\n<p>OPTIONS:</p>\n<ul>\n<li>authorID: id number of author </li>\n<li>tags: attributes to include in img tag (optional, defaults to no tags) </li>\n<li>display: display results in html (ie. echo) or reuse in php? true or false  (optional, defaults to true)  </li>\n</ul>\n<p>EXAMPLE:<br />\nCode:</p>\n<pre><code>&lt;?php \n    profilepic_internal_imagetag($authid, 'align=left'); \n?&gt;\n</code></pre>\n<p>Result (ex.):</p>\n<pre><code>    &lt;img src=\"http://blog.com/wp-content/uploads/authors/default.jpg\" width=200 height=199 align=left  id=\"authorpic\" /&gt;  \n</code></pre>\n<h4>Template Tag 2:</h4>\n<p><strong>Get Author Image Path</strong> &#8211; useful if you need to do something else with the path or url (link to it, stuff it into another function, make your own image tag, etc)</p>\n<p>USAGE: profilepic&#095;internal&#095;picpath(&#8216;authorID&#8217;, &#8216;display&#8217;, &#8216;type&#8217;)</p>\n<p>FUNCTION: returns url or absolute path to author&#8217;s picture</p>\n<p>OPTIONS:</p>\n<ul>\n<li>authorID: id number of author  </li>\n<li>display: display results in html (ie. echo) or reuse in php? (optional, defaults to false)  </li>\n<li>type: specify what kind of path requested: &#8216;url&#8217; or &#8216;absolute&#8217; (optional, defaults to url)  </li>\n</ul>\n<p>EXAMPLE:<br />\nCode:</p>\n<pre><code>&lt;?php \n    profilepic_internal_picpath($authid, true, 'absolute'); \n?&gt;  \n</code></pre>\n<p>Result: <code>/home/jdoe/public_html/blog/wp-content/uploads/authors/1.jpg</code></p>\n<h4>Template Tag 3:</h4>\n<p><strong>Get Author&#8217;s Image&#8217;s Dimension</strong> &#8211; useful if you are making your own <code>&lt;img&gt;</code> tag, or a div container for the img</p>\n<p>USAGE: profilepic&#095;internal&#095;fingerdimensions(&#8216;path&#8217;, &#8216;dimension&#8217;, &#8216;display&#8217;)</p>\n<p>FUNCTION: returns requested dimension of author&#8217;s picture</p>\n<p>OPTIONS:</p>\n<ul>\n<li>path: absolute path to author&#8217;s picture from server root&#8217;, </li>\n<li>dimension: the dimension you want, can be either &#8216;height&#8217; or width&#8217;</li>\n<li>display: display results in html (ie. echo) or reuse in php? true or false</li>\n</ul>\n<p>EXAMPLES:</p>\n<ol>\n<li>\n<p>to get picture width&#8230; (using profilepic&#095;internal&#095;picpath to get path to picture)</p>\n<p>Code:</p>\n<pre><code>&lt;?php \n    profilepic_internal_fingerdimensions(profilepic_internal_picpath($authid, false, 'absolute'), 'width', true); \n?&gt;\n</code></pre>\n<p>Result (Ex.): 200</p>\n</li>\n<li>\n<p>to get picture height&#8230; (using profilepic&#095;internal&#095;picpath to get path to picture)</p>\n<p>Code:</p>\n<pre><code>&lt;?php \n\n    profilepic_internal_fingerdimensions(profilepic_internal_picpath($authid, false, 'absolute'), 'height', true); \n?&gt;\n</code></pre>\n<p>Result (Ex.): 199</p>\n</li>\n</ol>\n<h4>Template Tag 4:</h4>\n<p><strong>Get Author&#8217;s Avatar</strong> &#8211; intended for use in the comments loop</p>\n<p>USAGE:  profilepic&#095;internal&#095;gravatar($authorID, $tags = &#8221;)</p>\n<p>FUNCTION: returns image tag if authorID is a registered user of your blog, false if author is not</p>\n<p>OPTIONS:</p>\n<ul>\n<li>authorID: id number of author</li>\n<li>tags: attributes to include in img tag (optional, defaults to no tags)</li>\n</ul>\n<p>EXAMPLES:</p>\n<p>Code:</p>\n<pre><code>&lt;?php\n    if (function_exists('profilepic_internal_gravatar')) { \n        $author_gravatar = profilepic_internal_gravatar($comment-&gt;user_id, \"class='gravatar'\"); \n    } else { \n        $author_gravatar = false;\n    }\n    if ($author_gravatar != false) {\n        echo $author_gravatar;\n    } \n?&gt;  \n</code></pre>\n<p>Result (Ex.):</p>\n<pre><code>    &lt;img src=\"http://blog.com/wp-content/uploads/authors/default.jpg\" width=80 height=80 class='gravatar' /&gt;\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/profile-pic.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/profile-pic/trunk/screenshot-1.jpg?rev=1566826",
            "caption": "Sidebar widget"
        },
        {
            "src": "https://ps.w.org/profile-pic/trunk/screenshot-2.jpg?rev=1566826",
            "caption": "Author Profile"
        },
        {
            "src": "https://ps.w.org/profile-pic/trunk/screenshot-3.jpg?rev=1566826",
            "caption": "Widget Configuration"
        },
        {
            "src": "https://ps.w.org/profile-pic/trunk/screenshot-4.jpg?rev=1566826",
            "caption": "Plugin Options"
        }
    ],
    "tags": {
        "author-page": "author page",
        "author-template": "author template",
        "profile": "profile",
        "profile-pic": "profile-pic"
    },
    "stable_tag": "trunk",
    "versions": {
        "0.8": "https://downloads.wordpress.org/plugin/profile-pic.0.8.zip",
        "0.8.1": "https://downloads.wordpress.org/plugin/profile-pic.0.8.1.zip",
        "0.8.2": "https://downloads.wordpress.org/plugin/profile-pic.0.8.2.zip",
        "0.8.3": "https://downloads.wordpress.org/plugin/profile-pic.0.8.3.zip",
        "0.9.2": "https://downloads.wordpress.org/plugin/profile-pic.0.9.2.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://geekgrl.net/wordpress/wordpress-profile-pic-plugin/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/profile-pic.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 20,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}