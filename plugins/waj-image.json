{
    "name": "WAJ Image",
    "slug": "waj-image",
    "version": "3.0.0",
    "author": "<a href=\"https://www.jaimeson-waugh.com\">Jaimeson Waugh</a>",
    "author_profile": "https://profiles.wordpress.org/waughjai/",
    "contributors": {
        "waughjai": {
            "profile": "https://profiles.wordpress.org/waughjai/",
            "avatar": "https://secure.gravatar.com/avatar/c18c3ff307c43dd4752168eb30f5030f?s=96&d=monsterid&r=g",
            "display_name": "waughjai"
        }
    },
    "requires": "5.0.0",
    "tested": "5.2.21",
    "requires_php": "7.0",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/waj-image/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1052,
    "last_updated": "2019-05-20 16:44:00",
    "added": "2018-11-30",
    "homepage": "https://github.com/waughjai/waj-image-loaders",
    "sections": {
        "description": "<p>This plugin has 3 main classes, with a shortcode for each 1.</p>\n<p>Shorcodes:<br />\n* [image src=&#8221;%url%&#8221;]<br />\n* [theme-image src=&#8221;%url%&#8221;]<br />\n* [upload-image src=&#8221;%url%&#8221;]<br />\n* [picture src=&#8221;%baseurl%&#8221; ext=&#8221;%ext%&#8221; sizes=&#8221;%sizes%&#8221;]<br />\n* [theme-picture src=&#8221;%baseurl%&#8221; ext=&#8221;%ext%&#8221; sizes=&#8221;%sizes%&#8221;]<br />\n* [upload-picture src=&#8221;%baseurl%&#8221; ext=&#8221;%ext%&#8221; sizes=&#8221;%sizes%&#8221;]<br />\n* [thumbnail]</p>\n<p>Classes:<br />\n* WaughJ\\HTMLImage\\HTMLImage<br />\n* WaughJ\\WPThemeImage\\WPThemeImage<br />\n* WaughJ\\WPUploadImage\\WPUploadImage<br />\n* WaughJ\\HTMLPicture\\HTMLPicture<br />\n* WaughJ\\WPThemePicture\\WPThemePicture<br />\n* WaughJ\\WPUploadPicture\\WPUploadPicture<br />\n* WaughJ\\WPPostThumbnail\\WPPostThumbnail</p>\n<p>The regular image shortcode loads the exact source URL given, without a cache-corruption-breaking version parameter. It is mainly for use by other classes, like the next 2.</p>\n<p>The regular picture shortcode loads %base%.%ext%, as well as extra sources based on the sizes given. Read https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture for mo&#8217; info on how the picture element works.</p>\n<p>The theme image &amp; picture shortcodes load images from the current theme directory.</p>\n<p>The upload image &amp; picture shortcodes load images from the uploads directory.</p>\n<p>The thumbnail shortcode loads a post&#8217;s thumbnail. If the post-id attribute is given, it loads the thumbnail o&#8217; that ID. If no ID is given, it tries to supply the ID o&#8217; whatever the current post is ( whatever get_the_ID() gives ). Img, source, &amp; picture attributes can be given through %tag-name%-%attribute-name%. For example, to set the image&#8217;s class, add img-class=&#8221;%class%&#8221;.</p>\n<p>The HTML &amp; Theme classes have near the same interface: a mandatory source &amp; optional arguments. For the shortcodes, this means a &#8220;src&#8221; attribute as well as any other valid HTML attributes; for the classes, it means a hash map as an optional 2nd argument.</p>\n<p>The WPUploadImage class takes a mandatory ID integer representing the ID o&#8217; the image in the media section o&#8217; the WordPress admin, the 2nd argument is an optional size string representing the slug o&#8217; the size type as registered in WordPress, with &#8220;responsive&#8221; for automatically an image that uses srcset to dynamically load the size for different window sizes, &amp; the optional 3rd argument is a hash map for extra attributes, as &#8216;bove.</p>\n<p>The WPUploadPicture takes a mandatory ID integer &amp; the optional attributes hash map.</p>\n<p>In addition to any valid HTML attributes, the WPThemeImage &amp; WPThemePicture classes also accept &#8220;directory&#8221; &amp; they &amp; the uploads classes accept the &#8220;show-version&#8221; attributes. The former, if set, will automatically put the source in the given directory; the &#8220;show-version&#8221; attribute, if set to false, won&#8217;t try to find the image&#8217;s last modified type to give it a version parameter for breaking cache corruption.</p>\n<p>If &#8220;alt&#8221; attribute is not set, an empty 1 will automatically be added to the HTML generated, ensuring that all images made through these will have an alt tag.</p>\n<p>To make working with theme image objects with minimal inconvenience for images that are all in the same directory that is not the topmost directory o&#8217; the theme directory, you can globally set the inner shared directory in the WordPress admin through Appearances -&gt; Theme -&gt; Directories, or directly in PHP with WPThemeImage&#8217;s static setDefaultSharedDirectory method on the class itself. After that, all initialized WPThemeImage &amp; WPThemePicture instances, including the shortcodes, will automatically use that shared directory if a different 1 isn&#8217;t provided.</p>\n<p>To add HTML attributes to WPThemePicture &amp; WPUploadPicture shortcodes, prefix them with &#8220;img-&#8220;, &#8220;picture-&#8220;, or &#8220;source-&#8221; depending on what tag you want the attribute given to. For example, to apply a class to the img tag, give the shortcode the attribute &#8220;img-class&#8221;.</p>\n<h3>Examples</h3>\n<pre><code>use WaughJ\\WPUploadImage\\WPUploadImage;\necho new WPUploadImage\n(\n    31,\n    [\n        'class' =&gt; 'center-img portrait',\n        'alt' =&gt; 'King'\n    ]\n);\n</code></pre>\n<p>&amp;</p>\n<pre><code>[upload-image media-id=\"31\" class=\"center-img portrait\" alt=\"King\"]\n</code></pre>\n<p>Will generate something like <code>&lt;img class=\"center-img portrait\" alt=\"King\" src=\"https://www.domain.com/wp-content/uploads/2018/12/demo-150x150.png?m=1543875777\" /&gt;</code></p>\n<pre><code>use WaughJ\\WPThemeImage\\WPThemeImage;\nWPThemeImage::setDefaultSharedDirectory( 'img' );\necho new WPThemeImage( 'photo.jpg' );\n</code></pre>\n<p>Will generate something like <code>&lt;img src=\"https://www.domain.com/wp-content/themes/theme-slug/img/photo.jpg?m=1543875777\" alt=\"\" /&gt;</code></p>\n<pre><code>[upload-picture media-id=\"8\"]\n</code></pre>\n<p>Will generate something like <code>&lt;picture&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-150x150.jpg?m=1543875777\" media=\"(max-width:150px)\"&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-300x300.jpg?m=1543875781\" media=\"(max-width:300px)\"&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-768x768.jpg?m=1543875785\" media=\"(max-width:768px)\"&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-1024x1024.jpg?m=1543875831\"&gt;&lt;img src=\"https://www.example.com/wp-content/uploads/2018/12/photo-150x150.jpg?m=1543875777\" alt=\"\" /&gt;&lt;/picture&gt;</code></p>\n<p>For mo’ information on how each class works, check out their documentation @ https://github.com/waughjai?tab=repositories</p>\n",
        "installation": "<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/plugin-name</code> directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress</li>\n<li>Images can be added using shortcode in WordPress editors or directly in PHP by using instances o&#8217; classes. Instances o&#8217; classes can be automatically casted into strings &amp; used as strings.</li>\n</ol>\n",
        "changelog": "<h4>3.0.0</h4>\n<ul>\n<li>Revamp all shortcodes &amp; underlying classes.</li>\n<li>WPUploadImage &amp; WPUploadPicture shortcode attributes now use “media-id” for image ID &amp; WPPostThumbnail now uses “post-id” ’stead o’ either using just “id” so they don’t conflict with setting id HTML attribute.</li>\n<li>All classes have improved error-handling so that they all throw exceptions. Shortcodes catch all exceptions so unsightly errors don’t show up on public website.</li>\n</ul>\n<h4>2.2.2</h4>\n<ul>\n<li>Update Directory class so that WPThemeImage doesn&#8217;t cause it to break with empty directory.</li>\n</ul>\n<h4>2.2.1</h4>\n<ul>\n<li>Turn on thumbnail support by default.</li>\n</ul>\n<h4>2.2.0</h4>\n<ul>\n<li>Add WPPostThumbnail class &amp; shortcode for easily getting post thumbnail.</li>\n</ul>\n<h4>2.1.1</h4>\n<ul>\n<li>Fix WPThemePicture bug changing default theme shared directory.</li>\n</ul>\n<h4>2.1.0</h4>\n<ul>\n<li>Update dependencies, test for WordPress 5.1.</li>\n</ul>\n<h4>2.0.1</h4>\n<ul>\n<li>Fix buggy WPUploadImage class.</li>\n</ul>\n<h4>2.0</h4>\n<ul>\n<li>Refactor into split classes.</li>\n<li>Fix WordPress Uploads incompatibility with WPUpload classes.</li>\n</ul>\n<h4>1.3</h4>\n<ul>\n<li>Add directory bar to admin.</li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>Add ability to just get source from images.</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Make uploads classes mo&#8217; automatic.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Initial stable version.</li>\n</ul>\n"
    },
    "short_description": "Simple classes &amp; shortcodes for easy image HTML generation from common image directories.",
    "description": "<p>This plugin has 3 main classes, with a shortcode for each 1.</p>\n<p>Shorcodes:<br />\n* [image src=&#8221;%url%&#8221;]<br />\n* [theme-image src=&#8221;%url%&#8221;]<br />\n* [upload-image src=&#8221;%url%&#8221;]<br />\n* [picture src=&#8221;%baseurl%&#8221; ext=&#8221;%ext%&#8221; sizes=&#8221;%sizes%&#8221;]<br />\n* [theme-picture src=&#8221;%baseurl%&#8221; ext=&#8221;%ext%&#8221; sizes=&#8221;%sizes%&#8221;]<br />\n* [upload-picture src=&#8221;%baseurl%&#8221; ext=&#8221;%ext%&#8221; sizes=&#8221;%sizes%&#8221;]<br />\n* [thumbnail]</p>\n<p>Classes:<br />\n* WaughJ\\HTMLImage\\HTMLImage<br />\n* WaughJ\\WPThemeImage\\WPThemeImage<br />\n* WaughJ\\WPUploadImage\\WPUploadImage<br />\n* WaughJ\\HTMLPicture\\HTMLPicture<br />\n* WaughJ\\WPThemePicture\\WPThemePicture<br />\n* WaughJ\\WPUploadPicture\\WPUploadPicture<br />\n* WaughJ\\WPPostThumbnail\\WPPostThumbnail</p>\n<p>The regular image shortcode loads the exact source URL given, without a cache-corruption-breaking version parameter. It is mainly for use by other classes, like the next 2.</p>\n<p>The regular picture shortcode loads %base%.%ext%, as well as extra sources based on the sizes given. Read https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture for mo&#8217; info on how the picture element works.</p>\n<p>The theme image &amp; picture shortcodes load images from the current theme directory.</p>\n<p>The upload image &amp; picture shortcodes load images from the uploads directory.</p>\n<p>The thumbnail shortcode loads a post&#8217;s thumbnail. If the post-id attribute is given, it loads the thumbnail o&#8217; that ID. If no ID is given, it tries to supply the ID o&#8217; whatever the current post is ( whatever get_the_ID() gives ). Img, source, &amp; picture attributes can be given through %tag-name%-%attribute-name%. For example, to set the image&#8217;s class, add img-class=&#8221;%class%&#8221;.</p>\n<p>The HTML &amp; Theme classes have near the same interface: a mandatory source &amp; optional arguments. For the shortcodes, this means a &#8220;src&#8221; attribute as well as any other valid HTML attributes; for the classes, it means a hash map as an optional 2nd argument.</p>\n<p>The WPUploadImage class takes a mandatory ID integer representing the ID o&#8217; the image in the media section o&#8217; the WordPress admin, the 2nd argument is an optional size string representing the slug o&#8217; the size type as registered in WordPress, with &#8220;responsive&#8221; for automatically an image that uses srcset to dynamically load the size for different window sizes, &amp; the optional 3rd argument is a hash map for extra attributes, as &#8216;bove.</p>\n<p>The WPUploadPicture takes a mandatory ID integer &amp; the optional attributes hash map.</p>\n<p>In addition to any valid HTML attributes, the WPThemeImage &amp; WPThemePicture classes also accept &#8220;directory&#8221; &amp; they &amp; the uploads classes accept the &#8220;show-version&#8221; attributes. The former, if set, will automatically put the source in the given directory; the &#8220;show-version&#8221; attribute, if set to false, won&#8217;t try to find the image&#8217;s last modified type to give it a version parameter for breaking cache corruption.</p>\n<p>If &#8220;alt&#8221; attribute is not set, an empty 1 will automatically be added to the HTML generated, ensuring that all images made through these will have an alt tag.</p>\n<p>To make working with theme image objects with minimal inconvenience for images that are all in the same directory that is not the topmost directory o&#8217; the theme directory, you can globally set the inner shared directory in the WordPress admin through Appearances -&gt; Theme -&gt; Directories, or directly in PHP with WPThemeImage&#8217;s static setDefaultSharedDirectory method on the class itself. After that, all initialized WPThemeImage &amp; WPThemePicture instances, including the shortcodes, will automatically use that shared directory if a different 1 isn&#8217;t provided.</p>\n<p>To add HTML attributes to WPThemePicture &amp; WPUploadPicture shortcodes, prefix them with &#8220;img-&#8220;, &#8220;picture-&#8220;, or &#8220;source-&#8221; depending on what tag you want the attribute given to. For example, to apply a class to the img tag, give the shortcode the attribute &#8220;img-class&#8221;.</p>\n<h3>Examples</h3>\n<pre><code>use WaughJ\\WPUploadImage\\WPUploadImage;\necho new WPUploadImage\n(\n    31,\n    [\n        'class' =&gt; 'center-img portrait',\n        'alt' =&gt; 'King'\n    ]\n);\n</code></pre>\n<p>&amp;</p>\n<pre><code>[upload-image media-id=\"31\" class=\"center-img portrait\" alt=\"King\"]\n</code></pre>\n<p>Will generate something like <code>&lt;img class=\"center-img portrait\" alt=\"King\" src=\"https://www.domain.com/wp-content/uploads/2018/12/demo-150x150.png?m=1543875777\" /&gt;</code></p>\n<pre><code>use WaughJ\\WPThemeImage\\WPThemeImage;\nWPThemeImage::setDefaultSharedDirectory( 'img' );\necho new WPThemeImage( 'photo.jpg' );\n</code></pre>\n<p>Will generate something like <code>&lt;img src=\"https://www.domain.com/wp-content/themes/theme-slug/img/photo.jpg?m=1543875777\" alt=\"\" /&gt;</code></p>\n<pre><code>[upload-picture media-id=\"8\"]\n</code></pre>\n<p>Will generate something like <code>&lt;picture&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-150x150.jpg?m=1543875777\" media=\"(max-width:150px)\"&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-300x300.jpg?m=1543875781\" media=\"(max-width:300px)\"&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-768x768.jpg?m=1543875785\" media=\"(max-width:768px)\"&gt;&lt;source srcset=\"https://www.example.com/wp-content/uploads/2018/12/photo-1024x1024.jpg?m=1543875831\"&gt;&lt;img src=\"https://www.example.com/wp-content/uploads/2018/12/photo-150x150.jpg?m=1543875777\" alt=\"\" /&gt;&lt;/picture&gt;</code></p>\n<p>For mo’ information on how each class works, check out their documentation @ https://github.com/waughjai?tab=repositories</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/waj-image.3.0.0.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "html-generator": "html generator",
        "image": "image",
        "loader": "loader"
    },
    "stable_tag": "3.0.0",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/waj-image.1.0.0.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/waj-image.1.1.0.zip",
        "1.2.0": "https://downloads.wordpress.org/plugin/waj-image.1.2.0.zip",
        "1.3.0": "https://downloads.wordpress.org/plugin/waj-image.1.3.0.zip",
        "2.0.0": "https://downloads.wordpress.org/plugin/waj-image.2.0.0.zip",
        "2.0.1": "https://downloads.wordpress.org/plugin/waj-image.2.0.1.zip",
        "2.1.0": "https://downloads.wordpress.org/plugin/waj-image.2.1.0.zip",
        "2.1.1": "https://downloads.wordpress.org/plugin/waj-image.2.1.1.zip",
        "2.2.0": "https://downloads.wordpress.org/plugin/waj-image.2.2.0.zip",
        "2.2.1": "https://downloads.wordpress.org/plugin/waj-image.2.2.1.zip",
        "2.2.2": "https://downloads.wordpress.org/plugin/waj-image.2.2.2.zip",
        "3.0.0": "https://downloads.wordpress.org/plugin/waj-image.3.0.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/waj-image.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/waj-image/assets/icon.svg?rev=2010165",
        "svg": "https://ps.w.org/waj-image/assets/icon.svg?rev=2010165"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}