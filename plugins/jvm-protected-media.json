{
    "name": "JVM Protected Media",
    "slug": "jvm-protected-media",
    "version": "1.0.6",
    "author": "<a href=\"http://www.jorisvm.nl\">Joris van Montfort</a>",
    "author_profile": "https://profiles.wordpress.org/jorisvanmontfort/",
    "contributors": {
        "jorisvanmontfort": {
            "profile": "https://profiles.wordpress.org/jorisvanmontfort/",
            "avatar": "https://secure.gravatar.com/avatar/9a15534d9757c27df190aa969d6c1c02?s=96&d=monsterid&r=g",
            "display_name": "Joris van Montfort"
        }
    },
    "requires": "4.4.1",
    "tested": "6.0.9",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/jvm-protected-media/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1136,
    "last_updated": "2022-09-28 09:22:00",
    "added": "2018-02-21",
    "homepage": "",
    "sections": {
        "description": "<p>Protect access to all your media files and implement your own custom file access rules using a hook. Works for apache with mod rewrite or nginx with some custom configuration. No Multisite support. This plugin is more or less a development tool for defining your own custom file access rules.</p>\n<p>For nginx you will need to modify the config file as nginx does not handle .htacess files. Add the following code:</p>\n<pre><code>location ~ \"^/wp-content/uploads/(.*)$\" {\n    rewrite ^/wp-content/uploads(/.*\\.\\w+)$ /index.php?jvm_protected_media_file=$1;\n}\n</code></pre>\n<h3>Hooks</h3>\n<p>Without a custom hook all file access will be disabled. The user will see the 404 page for all requested files. Adding a hook is needed to handle your own file access rules. A simple example that could go into your functions.php:</p>\n<pre><code>function my_file_access_rule($file_info) {\n    // Implement your own logic here\n    $userHasAccess = true;\n\n    if($userHasAccess) {\n        // Send the file output if users has access to the file\n        JVM_Protected_Media::send_file_output($file_info['path']);\n    }\n}\n\nadd_action( 'jvm_protected_media_file', 'my_file_access_rule');\n</code></pre>\n<p>The jvm_protected_media_file action has one parameter with the following file information:</p>\n<pre><code>Array\n(\n    [id] =&gt; id_of_the_file\n    [url] =&gt; full/url/to/your/file\n    [path] =&gt; full/path/to/your/file\n    [is_resized_image] =&gt; bool (true if the requested file is a image thumbnail or resized version of an image)\n)\n</code></pre>\n<h3>Actions</h3>\n<p>Available actions:</p>\n<ul>\n<li>jvm_protected_media_loaded (fires as soon as the plugin is loaded)</li>\n<li>jvm_protected_media_file (fires when a file is requested)</li>\n</ul>\n<h3>Functions</h3>\n<p>To send the output of a file to you can call:</p>\n<pre><code>JVM_Protected_Media::send_file_output($fullPathToFile)\n</code></pre>\n",
        "installation": "<ol>\n<li>Install the plugin from the Plugins or upload the plugin folder to the <code>/wp-content/plugins/</code> directory menu and then activate it. If your server does not meet the requirements the plugin will show a notification.</li>\n<li>Define your own access rules in your themes functions.php</li>\n</ol>\n",
        "changelog": "<h4>1.0.6</h4>\n<p>Added nginx check and admin notice for nginx users.</p>\n<h4>1.0.5</h4>\n<p>Tested up to 5.2.2 and added a comment for nginx usage.</p>\n<h4>1.0.4</h4>\n<p>Better flushing of rewrite rules and plugin tested up to 5.0.3</p>\n<h4>1.0.3</h4>\n<p>Fix for the .htaccess file being reset in some situations.</p>\n<h4>1.0.2</h4>\n<p>Added a 24 hour cache time to the output. This effectivly trigger the 304 not modified header if the file is indeed not modified.</p>\n<h4>1.0.1</h4>\n<p>Bug fix: When requesting files that are not in the media library the plugin was not calling the jvm_protected_media_file action. Fixed this. In this case the action is called but the file_id will remain empty.</p>\n<h4>1.0.0</h4>\n<p>Initial release</p>\n<h4>Stable</h4>\n<p>1.0.3</p>\n"
    },
    "short_description": "Restrict access to all your media files and implement your own custom file access rules.",
    "description": "<p>Protect access to all your media files and implement your own custom file access rules using a hook. Works for apache with mod rewrite or nginx with some custom configuration. No Multisite support. This plugin is more or less a development tool for defining your own custom file access rules.</p>\n<p>For nginx you will need to modify the config file as nginx does not handle .htacess files. Add the following code:</p>\n<pre><code>location ~ \"^/wp-content/uploads/(.*)$\" {\n    rewrite ^/wp-content/uploads(/.*\\.\\w+)$ /index.php?jvm_protected_media_file=$1;\n}\n</code></pre>\n<h3>Hooks</h3>\n<p>Without a custom hook all file access will be disabled. The user will see the 404 page for all requested files. Adding a hook is needed to handle your own file access rules. A simple example that could go into your functions.php:</p>\n<pre><code>function my_file_access_rule($file_info) {\n    // Implement your own logic here\n    $userHasAccess = true;\n\n    if($userHasAccess) {\n        // Send the file output if users has access to the file\n        JVM_Protected_Media::send_file_output($file_info['path']);\n    }\n}\n\nadd_action( 'jvm_protected_media_file', 'my_file_access_rule');\n</code></pre>\n<p>The jvm_protected_media_file action has one parameter with the following file information:</p>\n<pre><code>Array\n(\n    [id] =&gt; id_of_the_file\n    [url] =&gt; full/url/to/your/file\n    [path] =&gt; full/path/to/your/file\n    [is_resized_image] =&gt; bool (true if the requested file is a image thumbnail or resized version of an image)\n)\n</code></pre>\n<h3>Actions</h3>\n<p>Available actions:</p>\n<ul>\n<li>jvm_protected_media_loaded (fires as soon as the plugin is loaded)</li>\n<li>jvm_protected_media_file (fires when a file is requested)</li>\n</ul>\n<h3>Functions</h3>\n<p>To send the output of a file to you can call:</p>\n<pre><code>JVM_Protected_Media::send_file_output($fullPathToFile)\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/jvm-protected-media.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "attachments": "attachments",
        "files": "files",
        "media": "media",
        "protect": "protect",
        "protection": "protection"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=VXZJG9GC34JJU",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/jvm-protected-media.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}