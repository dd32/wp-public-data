{
    "name": "Incorrect Datetime Bug Fix",
    "slug": "incorrect-datetime-bug-plugin-fix",
    "version": "1.1",
    "author": "<a href=\"http://eddiemoya.com/\">Eddie Moya</a>",
    "author_profile": "https://profiles.wordpress.org/eddiemoya/",
    "contributors": {
        "eddiemoya": {
            "profile": "https://profiles.wordpress.org/eddiemoya/",
            "avatar": "https://secure.gravatar.com/avatar/56406b3128a7c0e1bf7282c26536a7cf?s=96&d=monsterid&r=g",
            "display_name": "Eddie Moya"
        }
    },
    "requires": false,
    "tested": "3.2.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 2,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/incorrect-datetime-bug-plugin-fix/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 60,
    "downloaded": 2864,
    "last_updated": "2013-01-07 19:49:00",
    "added": "2011-08-23",
    "homepage": "http://eddiemoya.com/plugins/incorrect-datetime-bug-fix-wordpress/",
    "sections": {
        "description": "<p>This plugin was create to work around a problem caused by certain configurations in MySQL that lead to several odd symptoms including but not limited to:</p>\n<ul>\n<li>Loss of ability to create new posts</li>\n<li>Loss of ability to update posts</li>\n<li>Errors regarding invalid timestamps</li>\n<li>Admin interface reverts to lowest permissions ex:‘Publish’ button says ‘Submit Draft’.</li>\n</ul>\n<p>In addition, this problem is often accompanied by an error like the following:</p>\n<pre><code>WordPress database error: [Incorrect datetime value: '0000-00-00 00:00:00' for column 'post_date_gmt' at row 1]\nINSERT INTO 'mg_posts' ('post_author','post_date','post_date_gmt','post_content','post_content_filtered','post_title',\n'post_excerpt','post_status','post_type','comment_status','ping_status','post_password','post_name','to_ping','pinged',\n'post_modified','post_modified_gmt','post_parent','menu_order','guid') VALUES (’1′,’2011-08-23 03:32:43′,\n’0000-00-00 00:00:00′,”,”,’Auto Draft’,”,’auto-draft’,'post’,'closed’,'open’,”,”,”,”,’2011-08-23 03:32:43′,’0000-00-00 00:00:00′,’0′,’0′,”)\n</code></pre>\n<p>The inability to pass zero dates breaks the ability to actually create a new post, but it also seems to have the odd secondary effect of confusing the heck out of nonces (noces are a security feature), probably because they too rely on timestamps.</p>\n<p>This plugin strips out the sql_modes listed below from @@SESSION, thereby eliminating the problem while only effecting database sessions WordPress starts and not the whole database.</p>\n<h3>Explanation and history of the problem</h3>\n<p>The cause of this problem stems from an old (soon to be deprecated) odd behavior/feature of MySQL which WordPress came to depend on. My understanding is that it stems from problems in MySQL with regard to using the MySQL NOW() function in some contexts – so as a workaround it was decided that if a date of all zeros was entered on a column that was set as NOT NULL, then that date would not be rejected, but instead would be converted to the current date – to mimic NOW().</p>\n<p>Subsequently this method was marginalized as generally a bad idea – and now values exist for a setting called sql_mode, which turn this behavior off and force errors when a null value is passed to a NOT NULL field. In many cases when there is an actual DBA in charge of the database, they will assign these values to the production database to force what outside of MySQL would be normal SQL behavior.</p>\n<p>There are 3 sql_modes which will trigger the error by disabling the ability to enter zero dates.</p>\n<ul>\n<li>NO_ZERO_DATE</li>\n<li>NO_ZERO_IN_DATE</li>\n<li>TRADITIONAL</li>\n</ul>\n<p>It’s worth mentioning that the ALLOW_INVALID_DATES mode does NOT solve the problem, even though by the name of it, it would seem that it might.</p>\n<h3>The solution</h3>\n<p>This plugin solves the problem with minimal effect to the database environment. All this plugin does it check to see if the sql_modes in question are set, and if they are, it removes them.</p>\n<p>Importantly, this plugin changes @@SESSION.sql_mode and not @@GLOBAL.sql_mode. By changing sql_mode via the session, it only takes effect on each specific connections WordPress makes with the database rather than changing it for the entire database permanently &#8211; as such this will have no effect whatsoever on any applications that might happen to be using the same database.</p>\n<h3>Other manifestations, alternative solutions.</h3>\n<p>WARNING: Whenever applicable, consult your DBA before making any changes to production databases.</p>\n<p>This problem may (I have no idea) in fact be more common during installation. The errors are different, and although I have seen them, I do not have them handy at this time. In any case, if the sql_modes are set during installation – the process will fail from the start – because of this, it is my presumption that anyone encountering the errors as described above – has probably recently migrated to a new database, or perhaps recently acquired an enthusiastic new DBA who has made some changes.</p>\n<p>This plugin DOES NOT FIX this problem for those encountering during installation – thats impossible because WordPress ignores all plugins during installation – so there is no way to hack around it via plugin and fix it before installation occurs.</p>\n<p>If you are encountering this problem during installation you will need to find an alternative way to remove the modes. If this is a production environment this may require the cooperation of a DBA who may not like the idea. If met with resistance, I suggest the asking for the modes to be temporarily removed for installation, and then set back after its dont – at which point this plugin will handle the problem from then on.</p>\n<p>If your encountering this locally, or on a environment whose database you have access to modify, you will want to make as few changes as possible, so go to whatever interface you use (command line, phpMyAdmin, whatever) and run this line of SQL:</p>\n<pre><code>SELECT @@GLOBAL.sql_mode;\n</code></pre>\n<p>This will show you all the sql modes currently defined. Copy all them them but if you have NO_ZERO_DATE, NO_ZERO_IN_DATE, or TRADITIONAL remove them. Then update sql_mode with the remaining modes as such:</p>\n<pre><code>SET @@GLOBAL.sql_mode = \"STRICT_TRANS_TABLES,STRICT_ALL_TABLES,ERROR_FOR_DIVISION_BY_ZERO\";\n</code></pre>\n<p>Please don’t simply use the sql_mode definition I have shown above, this is only an example – be sure to use the modes from your database configuration. Remember to keep everything together NO SPACES ALLOWED in the definition.</p>\n<p>Finally, if your just working locally and don’t care about these sql_modes, you can just clear them all.</p>\n<pre><code>SET @@GLOBAL.sql_mode = \"\";\n</code></pre>\n<p>This will do the trick but is absolutely not recommended as a fix for production sites that might share environments.</p>\n<p>Irrelevant Note: I struggled with naming this plugin, and settled on the terminology seen in the error message.</p>\n",
        "installation": "<ol>\n<li>Upload <code>plugin-name.php</code> to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n<h4>Will this fix sql_mode during installation?</h4>\n<p>No, plugins are not loaded during installation. For alternative solutions see<br />\n&#8220;Other manifestations, alternative solutions&#8221; on the plugin home page</p>\n<h4>Will this effect other applications that might run on the same database, and depend on these sql_mode settings?</h4>\n<p>No, it uses @@SESSION.sql_mode to change the settings for each WordPress session individually.</p>\n<h4>How do I undo what this plugin does?</h4>\n<p>Just turn off the plugin &#8211; because it uses @@SESSION, the changes wont persist.</p>\n<p>If you&#8217;ve made other modifications explained in this plugin&#8217;s documentation, you will have to run similar SQL commands to apply the old settings.</p>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Initial plugin release</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Bug fix: Corrected the way the plugin used wpdb::prepare().</li>\n</ul>\n"
    },
    "short_description": "This plugin was create to work around a problem caused by certain configurations in MySQL that lead to several odd symptoms including but not limited  &hellip;",
    "description": "<p>This plugin was create to work around a problem caused by certain configurations in MySQL that lead to several odd symptoms including but not limited to:</p>\n<ul>\n<li>Loss of ability to create new posts</li>\n<li>Loss of ability to update posts</li>\n<li>Errors regarding invalid timestamps</li>\n<li>Admin interface reverts to lowest permissions ex:‘Publish’ button says ‘Submit Draft’.</li>\n</ul>\n<p>In addition, this problem is often accompanied by an error like the following:</p>\n<pre><code>WordPress database error: [Incorrect datetime value: '0000-00-00 00:00:00' for column 'post_date_gmt' at row 1]\nINSERT INTO 'mg_posts' ('post_author','post_date','post_date_gmt','post_content','post_content_filtered','post_title',\n'post_excerpt','post_status','post_type','comment_status','ping_status','post_password','post_name','to_ping','pinged',\n'post_modified','post_modified_gmt','post_parent','menu_order','guid') VALUES (’1′,’2011-08-23 03:32:43′,\n’0000-00-00 00:00:00′,”,”,’Auto Draft’,”,’auto-draft’,'post’,'closed’,'open’,”,”,”,”,’2011-08-23 03:32:43′,’0000-00-00 00:00:00′,’0′,’0′,”)\n</code></pre>\n<p>The inability to pass zero dates breaks the ability to actually create a new post, but it also seems to have the odd secondary effect of confusing the heck out of nonces (noces are a security feature), probably because they too rely on timestamps.</p>\n<p>This plugin strips out the sql_modes listed below from @@SESSION, thereby eliminating the problem while only effecting database sessions WordPress starts and not the whole database.</p>\n<h3>Explanation and history of the problem</h3>\n<p>The cause of this problem stems from an old (soon to be deprecated) odd behavior/feature of MySQL which WordPress came to depend on. My understanding is that it stems from problems in MySQL with regard to using the MySQL NOW() function in some contexts – so as a workaround it was decided that if a date of all zeros was entered on a column that was set as NOT NULL, then that date would not be rejected, but instead would be converted to the current date – to mimic NOW().</p>\n<p>Subsequently this method was marginalized as generally a bad idea – and now values exist for a setting called sql_mode, which turn this behavior off and force errors when a null value is passed to a NOT NULL field. In many cases when there is an actual DBA in charge of the database, they will assign these values to the production database to force what outside of MySQL would be normal SQL behavior.</p>\n<p>There are 3 sql_modes which will trigger the error by disabling the ability to enter zero dates.</p>\n<ul>\n<li>NO_ZERO_DATE</li>\n<li>NO_ZERO_IN_DATE</li>\n<li>TRADITIONAL</li>\n</ul>\n<p>It’s worth mentioning that the ALLOW_INVALID_DATES mode does NOT solve the problem, even though by the name of it, it would seem that it might.</p>\n<h3>The solution</h3>\n<p>This plugin solves the problem with minimal effect to the database environment. All this plugin does it check to see if the sql_modes in question are set, and if they are, it removes them.</p>\n<p>Importantly, this plugin changes @@SESSION.sql_mode and not @@GLOBAL.sql_mode. By changing sql_mode via the session, it only takes effect on each specific connections WordPress makes with the database rather than changing it for the entire database permanently &#8211; as such this will have no effect whatsoever on any applications that might happen to be using the same database.</p>\n<h3>Other manifestations, alternative solutions.</h3>\n<p>WARNING: Whenever applicable, consult your DBA before making any changes to production databases.</p>\n<p>This problem may (I have no idea) in fact be more common during installation. The errors are different, and although I have seen them, I do not have them handy at this time. In any case, if the sql_modes are set during installation – the process will fail from the start – because of this, it is my presumption that anyone encountering the errors as described above – has probably recently migrated to a new database, or perhaps recently acquired an enthusiastic new DBA who has made some changes.</p>\n<p>This plugin DOES NOT FIX this problem for those encountering during installation – thats impossible because WordPress ignores all plugins during installation – so there is no way to hack around it via plugin and fix it before installation occurs.</p>\n<p>If you are encountering this problem during installation you will need to find an alternative way to remove the modes. If this is a production environment this may require the cooperation of a DBA who may not like the idea. If met with resistance, I suggest the asking for the modes to be temporarily removed for installation, and then set back after its dont – at which point this plugin will handle the problem from then on.</p>\n<p>If your encountering this locally, or on a environment whose database you have access to modify, you will want to make as few changes as possible, so go to whatever interface you use (command line, phpMyAdmin, whatever) and run this line of SQL:</p>\n<pre><code>SELECT @@GLOBAL.sql_mode;\n</code></pre>\n<p>This will show you all the sql modes currently defined. Copy all them them but if you have NO_ZERO_DATE, NO_ZERO_IN_DATE, or TRADITIONAL remove them. Then update sql_mode with the remaining modes as such:</p>\n<pre><code>SET @@GLOBAL.sql_mode = \"STRICT_TRANS_TABLES,STRICT_ALL_TABLES,ERROR_FOR_DIVISION_BY_ZERO\";\n</code></pre>\n<p>Please don’t simply use the sql_mode definition I have shown above, this is only an example – be sure to use the modes from your database configuration. Remember to keep everything together NO SPACES ALLOWED in the definition.</p>\n<p>Finally, if your just working locally and don’t care about these sql_modes, you can just clear them all.</p>\n<pre><code>SET @@GLOBAL.sql_mode = \"\";\n</code></pre>\n<p>This will do the trick but is absolutely not recommended as a fix for production sites that might share environments.</p>\n<p>Irrelevant Note: I struggled with naming this plugin, and settled on the terminology seen in the error message.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/incorrect-datetime-bug-plugin-fix.1.1.zip",
    "upgrade_notice": {
        "1.1": "<p>New version eliminates wpdb::prepare() PHP warnings.</p>"
    },
    "screenshots": [],
    "tags": {
        "mysql": "mysql",
        "no_zero_date": "no_zero_date",
        "no_zero_in_date": "no_zero_in_date",
        "sql": "sql",
        "sql_mode": "sql_mode"
    },
    "stable_tag": "1.1",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/incorrect-datetime-bug-plugin-fix.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/incorrect-datetime-bug-plugin-fix.1.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/incorrect-datetime-bug-plugin-fix.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://eddiemoya.com",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/incorrect-datetime-bug-plugin-fix.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}