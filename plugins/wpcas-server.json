{
    "name": "wpCAS Server",
    "slug": "wpcas-server",
    "version": "1.0",
    "author": "<a href=\"http://borkweb.com/\">Matthew Batchelder</a>",
    "author_profile": "https://profiles.wordpress.org/adambackstrom/",
    "contributors": {
        "borkweb": {
            "profile": "https://profiles.wordpress.org/borkweb/",
            "avatar": "https://secure.gravatar.com/avatar/1e656e49ac69899daa3ff81232b041eb?s=96&d=monsterid&r=g",
            "display_name": "Matthew Batchelder"
        },
        "misterbisson": {
            "profile": "https://profiles.wordpress.org/misterbisson/",
            "avatar": "https://secure.gravatar.com/avatar/0f756e1de29bab208e6cf438fb24e67b?s=96&d=monsterid&r=g",
            "display_name": "Casey Bisson"
        }
    },
    "requires": "2.8",
    "tested": "2.9.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wpcas-server/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2094,
    "last_updated": "2012-07-12 1:42pm GMT",
    "added": "2009-03-30",
    "homepage": "http://borkweb.com/projects/wpcas-server",
    "sections": {
        "description": "<p>This plugin reserves a collection of URIs that create, validate, and destroy CAS tickets.</p>\n<ul>\n<li>\n<p>/cas/login :: If user is not authenticated he/she is redirected to the login page.  Otherwise the user is redirected to the service specified as a GET variable in the URL &#8211; or if service is not provided, the user is redirected to the WordPress instance&#8217;s home.</p>\n</li>\n<li>\n<p>/cas/logout :: The user&#8217;s session is destroyed, user is logged out of the WordPress instance, and redirected to $_GET[&#8216;service&#8217;] (or the blog home if service isn&#8217;t provided)</p>\n</li>\n<li>\n<p>/cas/proxyValidate and /cas/validate :: The CAS ticket must be passed as a GET parameter in the URL when calling /cas/validate.  The ticket is validated and XML is output with either cas:authenticationSuccess or cas:authenticationFailure</p>\n</li>\n</ul>\n<h3>Hooks &amp; Filters</h3>\n<h4>wpcas_server_login Hook</h4>\n<p>This hook allows for the insertion of code after login has successfully completed and just before the ticket creation.  One common use of this hook is to fill out the $_SESSION variable with site/user specific information.</p>\n<h4>wpcas_server_auth_value Filter</h4>\n<p>This filter (executed in a successful ticket validation in /cas/validate) is used to override the user identifier returned in the cas:authenticationSuccess XML response.  By default, the value returned is the $user_ID of the authenticated user.  Using this filter, that value can be altered to whatever suits your implementation.</p>\n",
        "installation": "<ol>\n<li>Upload <code>wpcas-server</code> directory to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "faq": "\n<h4>What version of CAS does this plugin replicate?</h4>\n<p>\n<p>wpCAS Server currently replicates partial functionality of a CAS 2.0 server.</p>\n</p>\n<h4>You just said &#8220;partial&#8221;&#8230;what doesn&#8217;t this support?</h4>\n<p>\n<p>Currently wpCAS Server has not implemented the Proxy ticketing found in the <a href=\"http://www.jasig.org/cas/cas2-architecture\" rel=\"nofollow ugc\">CAS 2.0 architecture</a>.</p>\n</p>\n\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n"
    },
    "short_description": "Turns WordPress or WordPress MU into a CAS single sign-on authenticator.",
    "description": "<p>This plugin reserves a collection of URIs that create, validate, and destroy CAS tickets.</p>\n<ul>\n<li>\n<p>/cas/login :: If user is not authenticated he/she is redirected to the login page.  Otherwise the user is redirected to the service specified as a GET variable in the URL &#8211; or if service is not provided, the user is redirected to the WordPress instance&#8217;s home.</p>\n</li>\n<li>\n<p>/cas/logout :: The user&#8217;s session is destroyed, user is logged out of the WordPress instance, and redirected to $_GET[&#8216;service&#8217;] (or the blog home if service isn&#8217;t provided)</p>\n</li>\n<li>\n<p>/cas/proxyValidate and /cas/validate :: The CAS ticket must be passed as a GET parameter in the URL when calling /cas/validate.  The ticket is validated and XML is output with either cas:authenticationSuccess or cas:authenticationFailure</p>\n</li>\n</ul>\n<h3>Hooks &amp; Filters</h3>\n<h4>wpcas_server_login Hook</h4>\n<p>This hook allows for the insertion of code after login has successfully completed and just before the ticket creation.  One common use of this hook is to fill out the $_SESSION variable with site/user specific information.</p>\n<h4>wpcas_server_auth_value Filter</h4>\n<p>This filter (executed in a successful ticket validation in /cas/validate) is used to override the user identifier returned in the cas:authenticationSuccess XML response.  By default, the value returned is the $user_ID of the authenticated user.  Using this filter, that value can be altered to whatever suits your implementation.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wpcas-server.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "auth": "auth",
        "authentication": "authentication",
        "central-authentication-service": "central authentication service",
        "wpcas": "wpCAS",
        "wpcas-server": "wpcas-server"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wpcas-server.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}