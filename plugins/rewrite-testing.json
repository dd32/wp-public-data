{
    "name": "Rewrite Rule Testing",
    "slug": "rewrite-testing",
    "version": "0.1.1",
    "author": "<a href=\"http://www.alleyinteractive.com/\">Matthew Boynes</a>",
    "author_profile": "https://profiles.wordpress.org/mboynes/",
    "contributors": {
        "mboynes": {
            "profile": "https://profiles.wordpress.org/mboynes/",
            "avatar": "https://secure.gravatar.com/avatar/6b5e3a6a664bcb435216ecba76c9ed90?s=96&d=monsterid&r=g",
            "display_name": "Matthew Boynes"
        },
        "alleyinteractive": {
            "profile": "https://profiles.wordpress.org/alleyinteractive/",
            "avatar": "https://secure.gravatar.com/avatar/09436109e0f3eb40bb5a05068f23417c?s=96&d=monsterid&r=g",
            "display_name": "Alley"
        }
    },
    "requires": "3.9",
    "tested": "3.9.40",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 2,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/rewrite-testing/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 300,
    "downloaded": 24249,
    "last_updated": "2014-05-20 16:53:00",
    "added": "2014-05-20",
    "homepage": "https://github.com/alleyinteractive/rewrite-testing",
    "sections": {
        "description": "<p>This plugin provides a simple interface for testing your custom rewrite rules.</p>\n<p>The purpose of this plugin is to be able to test your <em>own</em> rewrite rules, so<br />\nyou&#8217;re probably most interested in knowing how to do that, right? The plugin<br />\nprovides a filter, <code>rewrite_testing_tests</code> to add your own tests. That filter<br />\npasses an associative array of name =&gt; tests. The tests array is an associative<br />\narray of URI =&gt; expected match. In the outer array, the &#8220;name&#8221; is arbitrary and<br />\nfor your own reference. In the inner array, the &#8220;URI&#8221; is the path you want to<br />\ntest, and the &#8220;expected match&#8221; is what WordPress should find as a rewrite<br />\nmatch.</p>\n<p>Enough chit-chat, here&#8217;s an example:</p>\n<pre><code>function my_rewrite_tests( $tests ) {\n  return array(\n    'Events' =&gt; array(\n      '/event/super-bowl/' =&gt; 'index.php?event=$matches[1]',\n      '/event/super-bowl/page/2/' =&gt; 'index.php?event=$matches[1]&amp;paged=$matches[2]'\n    )\n  );\n}\nadd_filter( 'rewrite_testing_tests', 'my_rewrite_tests' );\n</code></pre>\n<p>You can see the <code>test_cases()</code> method for a full suite of tests for the &#8220;Day<br />\nand Name&#8221; permalink structure. It&#8217;s not necessary to leave these in (in fact,<br />\nthe above demo would wipe them out), unless you want to make sure that your<br />\ncustom rewrites aren&#8217;t affecting core rewrites. If you aren&#8217;t using &#8220;Day and<br />\nName&#8221; permalinks, you&#8217;ll need to adjust the tests to fit your permalink<br />\nstructure.</p>\n<h3>Todo</h3>\n<ul>\n<li>Add a debug bar extension which reads a transient; the transient would be<br />\nupdated whenever rewrite rules are flushed. The debug bar extension would<br />\nshow pass/fail status and link directly to the settings page.</li>\n<li>Add tests for other permalink structures?</li>\n<li>Add a way to run this as part of phpunit</li>\n</ul>\n",
        "installation": "<ol>\n<li>Upload to the /wp-content/plugins/ directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Go to Tools &rarr; Rewrite Testing</li>\n</ol>\n",
        "faq": "\n<h4>I installed this and my tests failed, what gives?</h4>\n<p>\n<p>Out-of-the-box, this plugin is setup to test core rewrites for the &#8220;Day and<br />\nName&#8221; permalink structure. The purpose of this plugin is not to test core<br />\nrewrites; these are just to serve as a demonstration.</p>\n</p>\n\n",
        "changelog": "<h4>0.1.1</h4>\n<p>Cosmetic updates</p>\n<h4>0.1</h4>\n<p>Initial release. Enjoy!</p>\n"
    },
    "short_description": "Unit test your rewrite rules from the WordPress Admin.",
    "description": "<p>This plugin provides a simple interface for testing your custom rewrite rules.</p>\n<p>The purpose of this plugin is to be able to test your <em>own</em> rewrite rules, so<br />\nyou&#8217;re probably most interested in knowing how to do that, right? The plugin<br />\nprovides a filter, <code>rewrite_testing_tests</code> to add your own tests. That filter<br />\npasses an associative array of name =&gt; tests. The tests array is an associative<br />\narray of URI =&gt; expected match. In the outer array, the &#8220;name&#8221; is arbitrary and<br />\nfor your own reference. In the inner array, the &#8220;URI&#8221; is the path you want to<br />\ntest, and the &#8220;expected match&#8221; is what WordPress should find as a rewrite<br />\nmatch.</p>\n<p>Enough chit-chat, here&#8217;s an example:</p>\n<pre><code>function my_rewrite_tests( $tests ) {\n  return array(\n    'Events' =&gt; array(\n      '/event/super-bowl/' =&gt; 'index.php?event=$matches[1]',\n      '/event/super-bowl/page/2/' =&gt; 'index.php?event=$matches[1]&amp;paged=$matches[2]'\n    )\n  );\n}\nadd_filter( 'rewrite_testing_tests', 'my_rewrite_tests' );\n</code></pre>\n<p>You can see the <code>test_cases()</code> method for a full suite of tests for the &#8220;Day<br />\nand Name&#8221; permalink structure. It&#8217;s not necessary to leave these in (in fact,<br />\nthe above demo would wipe them out), unless you want to make sure that your<br />\ncustom rewrites aren&#8217;t affecting core rewrites. If you aren&#8217;t using &#8220;Day and<br />\nName&#8221; permalinks, you&#8217;ll need to adjust the tests to fit your permalink<br />\nstructure.</p>\n<h3>Todo</h3>\n<ul>\n<li>Add a debug bar extension which reads a transient; the transient would be<br />\nupdated whenever rewrite rules are flushed. The debug bar extension would<br />\nshow pass/fail status and link directly to the settings page.</li>\n<li>Add tests for other permalink structures?</li>\n<li>Add a way to run this as part of phpunit</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/rewrite-testing.0.1.1.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/rewrite-testing/assets/screenshot-1.png?rev=918058",
            "caption": "Sample output of passing rules"
        },
        {
            "src": "https://ps.w.org/rewrite-testing/assets/screenshot-2.png?rev=918058",
            "caption": "Sample output of failing rules"
        }
    ],
    "tags": {
        "permalinks": "permalinks",
        "rewrite-rules": "rewrite rules",
        "testing": "testing",
        "tests": "tests"
    },
    "stable_tag": "0.1.1",
    "versions": {
        "0.1.1": "https://downloads.wordpress.org/plugin/rewrite-testing.0.1.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/rewrite-testing.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://url",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/rewrite-testing.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}