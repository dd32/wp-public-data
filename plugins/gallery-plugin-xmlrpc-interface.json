{
    "name": "Gallery Plugin XMLRPC Interface",
    "slug": "gallery-plugin-xmlrpc-interface",
    "version": "0.3",
    "author": "<a href=\"http://bigtester.com\">Peidong Hu</a>",
    "author_profile": "https://profiles.wordpress.org/zhouyibhic/",
    "contributors": {
        "zhouyibhic": {
            "profile": "https://profiles.wordpress.org/zhouyibhic/",
            "avatar": "https://secure.gravatar.com/avatar/3d02396a03afbf70377d59da35e98ceb?s=96&d=monsterid&r=g",
            "display_name": "Peidong Hu"
        }
    },
    "requires": "3.3",
    "tested": "3.3.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/gallery-plugin-xmlrpc-interface/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1958,
    "last_updated": "2013-01-10 15:04:00",
    "added": "2012-06-23",
    "homepage": "",
    "sections": {
        "description": "<p>Basically this plugin creates XMLRPC interfaces for Gallery Plugin.<br />\n Thanks for the author of Extended API, Michael Grosser,  since this plugin has reused the design.<br />\n NOTE: API functions (xmlrpc revoke functions) are all prefixed with &#8216;i_gllrxmlrpc&#8217;.</p>\n",
        "installation": "<ol>\n<li>Gallery plugin has to be installed as the pre-requisite condition. You can find Gallery Plugin here, https://wordpress.org/extend/plugins/gallery-plugin/</li>\n<li>unzip the plugin</li>\n<li>Upload plugin folder to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>In administrator portal, click Settings-&gt;Gallery Plugin XMLRPC Interface to enable/disable the api functions.</li>\n</ol>\n<p>Warning: Debug Error log is being appended into the WP_CONTENT_DIR . &#8216;/debug.log&#8217;; Make sure that in production environment, trun off the debug directive in wp-includes/default-constants.php</p>\n",
        "faq": "\n<h4>Exmaple to invoke the xmlrpc api in PHP</h4>\n<p>\n<p>//this example demo how to invoke the api to delete a image in the album<br />\nset_time_limit(0);<br />\nrequire_once(&#8220;IXR_Library.php.inc&#8221;);</p>\n<p>$client-&gt;debug = true; // Set it to false in Production Environment</p>\n<p>// Create the client object<br />\n$client = new IXR_Client(&#8216;{zonename}&#8217;,&#8217;/xmlrpc.php?delete_images[]={imageID}&#8217;);</p>\n<p>$username = &#8220;{admin login name}&#8221;;<br />\n $password = &#8220;{password}&#8221;;</p>\n<p>$function_args = array(array(&#8221;,$username,$password,'{postID}&#8217;, array()));<br />\n $params = array($username,$password,&#8221;i_gllrxmlrpc_editpost&#8221;, $function_args);</p>\n<p>// Run a query To Read Posts From WordPress<br />\n $ret = $client-&gt;query(&#8216;gllrxmlrpc_extapi.callGllrMethod&#8217;, $params);<br />\n if (!$ret) {<br />\n    die(&#8216;Something went wrong &#8211; &#8216;.$client-&gt;getErrorCode().&#8217; : &#8216;.$client-&gt;getErrorMessage());<br />\n }</p>\n<p>$myresponse = $client-&gt;getResponse();<br />\n print_r($myresponse);</p>\n</p>\n<h4>Exmaple to invoke the xmlrpc api in java</h4>\n<p>\n<p>client = new XMLRPCClient(WordPress.currentBlog.getUrl(),<br />\n                    WordPress.currentBlog.getHttpuser(),<br />\n                    WordPress.currentBlog.getHttppassword());</p>\n<p>Object[] result = null;<br />\n//<br />\nMap&lt;String, String&gt; gallery_type = new HashMap&lt;String, String&gt;();<br />\ngallery_type.put(&#8220;post_type&#8221;, &#8220;gallery&#8221;);<br />\n//String[] return_fields = {&#8220;post_title&#8221;, &#8220;post_type&#8221;};</p>\n<p>Object[] fArgs = {&#8220;&#8221;, WordPress.currentBlog.getUsername(),WordPress.currentBlog.getPassword(),gallery_type};<br />\nObject[] funcArgs = {fArgs};<br />\n//<br />\nObject[] params = {<br />\n        WordPress.currentBlog.getUsername(),<br />\n        WordPress.currentBlog.getPassword(),<br />\n        &#8220;i_gllrxmlrpc_metaweblog_getposts&#8221;,<br />\n        funcArgs };<br />\ntry {<br />\n    result = (Object[]) client.call(&#8220;gllrxmlrpc_extapi.callGllrMethod&#8221;, params);<br />\n} catch (XMLRPCException e) {<br />\n    errorMsg = e.getMessage();<br />\n}</p>\n</p>\n<h4>Exmaple to invoke the delete post api in php</h4>\n<p>debug = true; // Set it to fase in Production Environment</p>\n<p>// Create the client object<br />\n$client = new IXR_Client(&#8216;hushanqi.localhost&#8217;,&#8217;/xmlrpc.php?XDEBUG_SESSION_START=ECLIPSE_DBGP&amp;KEY=13505726480152&#8242;);</p>\n<p> $username = &#8220;{user name}&#8221;;<br />\n $password = &#8220;{password}&#8221;;</p>\n<p> $function_args = array(array(&#8221;,$username,$password,&#8217;99&#8217;));</p>\n<p> $params = array($username,$password,&#8221;i_gllrxmlrpc_deletepost&#8221;, $function_args); </p>\n<p> // Run a query To Read Posts From WordPress<br />\n if (!$client-&gt;query(&#8216;gllrxmlrpc_extapi.callGllrMethod&#8217;, $params)) {<br />\n    die(&#8216;Something went wrong &#8211; &#8216;.$client-&gt;getErrorCode().&#8217; : &#8216;.$client-&gt;getErrorMessage());<br />\n }</p>\n<p> $myresponse = $client-&gt;getResponse();<br />\n print_r($myresponse);<br />\n die();<br />\n ?&gt;</p>\n\n",
        "changelog": "<h4>0.3</h4>\n<ul>\n<li>add new interface i_gllrxmlrpc_metaweblog_getPost</li>\n<li>new php example of delete post </li>\n</ul>\n<h4>0.2</h4>\n<ul>\n<li>add new interface i_gllrxmlrpc_metaweblog_getposts to be compliant with metaweblog standard for getposts api.</li>\n<li>bug fix in i_gllrxmlrpc_newpost</li>\n<li>new example in Java code</li>\n</ul>\n<h4>0.1</h4>\n<ul>\n<li>initial version</li>\n</ul>\n"
    },
    "short_description": "This plugin creates functions for Gallery Plugin which can be XMLRPC invoked remotely.",
    "description": "<p>Basically this plugin creates XMLRPC interfaces for Gallery Plugin.<br />\n Thanks for the author of Extended API, Michael Grosser,  since this plugin has reused the design.<br />\n NOTE: API functions (xmlrpc revoke functions) are all prefixed with &#8216;i_gllrxmlrpc&#8217;.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/gallery-plugin-xmlrpc-interface.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "gallery": "gallery",
        "photo": "photo",
        "xmlrpc": "xmlrpc"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/gallery-plugin-xmlrpc-interface.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}