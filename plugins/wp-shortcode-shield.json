{
    "name": "WP Shortcode Shield",
    "slug": "wp-shortcode-shield",
    "version": "1.1.0",
    "author": "<a href=\"http://www.garygale.com/\">Gary Gale</a>",
    "author_profile": "https://profiles.wordpress.org/vicchi/",
    "contributors": {
        "vicchi": {
            "profile": "https://profiles.wordpress.org/vicchi/",
            "avatar": "https://secure.gravatar.com/avatar/d300ed1dcec487e20c8600570abeffab?s=96&d=monsterid&r=g",
            "display_name": "vicchi"
        }
    },
    "requires": "3.4",
    "tested": "3.4.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/wp-shortcode-shield/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2225,
    "last_updated": "2012-11-12 6:00am GMT",
    "added": "2012-04-25",
    "homepage": "http://www.vicchi.org/codeage/wp-shortcode-shield/",
    "sections": {
        "description": "<p>This plugin allows you to refer to a WordPress shortcode within the content of posts and pages without that shortcode being automagically expanded by WordPress. The plugin takes advantage of the fact that the <a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">WordPress ShortCode API</a> does not support nested shortcodes to allow this plugin&#8217;s shortcode to wrap the shortcode being documented.</p>\n<blockquote>\n<p>The shortcode parser uses a single pass on the post content. This means that if<br />\n  the $content parameter of a shortcode handler contains another shortcode, it won&#8217;t<br />\n  be parsed</p>\n</blockquote>\n<p>The plugin supports both the self closing <code>[shortcode]</code> and enclosing <code>[shortcode]content[/shortcode]</code> forms and supports a short form name of the shortcode, <code>[wp_scs]</code> as well as the more verbose <code>[wp_shortcode_shield]</code> form. For the sake of brevity, the remainder of this documentation will use the <code>[wp_scs]</code> short form name.</p>\n<p>If using the self-closing form of the shortcode, you need to supply the name of the shortcode you are documenting using the <code>code</code> attribute but without using the enclosing <code>[</code> and <code>]</code> characters. This is because when parsing shortcodes, WordPress looks for the first occurrence of the &#8216;]&#8217; character to terminate the shortcode. As a result of this, usage such as</p>\n<pre><code>[wp_scs code=\"[another-shortcode-name]\"]\n</code></pre>\n<p>&#8230; WordPress will use the &#8216;]&#8217; character inside the <code>code</code> attribute to try and terminate the shortcode name, which is not what is desired. Instead, the plugin automagically adds the terminating &#8216;[&#8216; and &#8216;]&#8217; characters to the plugin&#8217;s output, so that usage such as</p>\n<pre><code>[wp_scs code=\"another-shortcode-name\"]\n</code></pre>\n<p>&#8230; will display <em>[another-shortcode-name]</em> in your post&#8217;s of page&#8217;s content.</p>\n<p>If you are using the enclosing form of the shortcode, you can either supply the shortcode to be documented with or without enclosing &#8216;[&#8216; and &#8216;]&#8217; characters; if they are omitted, the plugin will add them for you, so that usage such as</p>\n<pre><code>[wp_scs][another-shortcode-name][/wp_scs]\n</code></pre>\n<p>&#8230; and</p>\n<pre><code>[wp_scs]another-shortcode-name[/wp_scs]\n</code></pre>\n<p>&#8230; will display the same results, namely <em>[another-shortcode-name]</em>.</p>\n<p>Finally a note of caution, you cannot mix the enclosing and self closing form of the plugin&#8217;s shortcode within the same post or page; this is not a limitation of the plugin, but the way in which WordPress implements the <a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">ShortCode API</a> &#8230;</p>\n<blockquote>\n<p>The parser does not handle mixing of enclosing and non-enclosing forms of the same<br />\n  shortcode as you would want it to. For example, if you have:</p>\n<p><code>[myshortcode example='non-enclosing' /] non-enclosed content [myshortcode] enclosed content<br />\n  [/myshortcode]</code></p>\n<p>Instead of being treated as two shortcodes separated by the text &#8221; non-enclosed content &#8220;,<br />\n  the parser treats this as a single shortcode enclosing &#8221; non-enclosed content [myshortcode]<br />\n  enclosed content&#8221;.</p>\n</blockquote>\n",
        "installation": "<ol>\n<li>You can install WP Shortcode Shield automatically from the WordPress admin panel. From the Dashboard, navigate to the <em>Plugins / Add New</em> page and search for <em>&#8220;WP Shortcode Shield&#8221;</em> and click on the <em>&#8220;Install Now&#8221;</em> link.</li>\n<li>Or you can install WP Shortcode Shield manually. Download the plugin Zip archive and uncompress it. Copy or upload the <code>wp-shortcode-shield</code> folder to the <code>wp-content/plugins</code> folder on your web server.</li>\n<li>Activate the plugin. From the Dashboard, navigate to Plugins and click on the <em>&#8220;Activate&#8221;</em> link under the entry for WP Shortcode Shield.</li>\n<li>That&#8217;s it. There&#8217;s no admin settings to configure. Go and start documenting.</li>\n</ol>\n",
        "faq": "\n<h4>How do I get help or support for this plugin?</h4>\n<p>\n<p>In short, very easily. But before you read any further, take a look at <a href=\"http://www.vicchi.org/2012/03/31/asking-for-wordpress-plugin-help-and-support-without-tears/\" rel=\"nofollow ugc\">Asking For WordPress Plugin Help And Support Without Tears</a> before firing off a question. In order of preference, you can ask a question on the <a href=\"https://wordpress.org/support/plugin/wp-shortcode-shield\" rel=\"ugc\">WordPress support forum</a>; this is by far the best way so that other users can follow the conversation. You can ask me a question on Twitter; I&#8217;m <a href=\"http://twitter.com/vicchi\" rel=\"nofollow ugc\">@vicchi</a>. Or you can drop me an email instead. I can&#8217;t promise to answer your question but I do promise to answer and do my best to help.</p>\n</p>\n<h4>Is there a web site for this plugin?</h4>\n<p>\n<p>Absolutely. Go to the <a href=\"http://www.vicchi.org/codeage/wp-shortcode-shield/\" rel=\"nofollow ugc\">WP Shortcode Shield home page</a> for the latest information. There&#8217;s also the official <a href=\"https://wordpress.org/extend/plugins/wp-shortcode-shield/\" rel=\"ugc\">WordPress plugin repository page</a> and the <a href=\"http://vicchi.github.com/wp-shortcode-shield/\" rel=\"nofollow ugc\">source for the plugin is on GitHub</a> as well.</p>\n</p>\n<h4>I want to amend/hack/augment this plugin; can I do this?</h4>\n<p>\n<p>Totally; this plugin is licensed under the GNU General Public License v2 (GPLV2). See http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt for the full license terms.</p>\n</p>\n\n",
        "changelog": "<p>The current version is 1.1.0 (2012.11.12)</p>\n<h4>1.1.0</h4>\n<ul>\n<li>Released 2012.11.12</li>\n<li>Other: Upgraded plugin to new version of WP_PluginBase to prevent class name clashes during future upgrades.</li>\n<li>Other: Ensure WP_ShortCodeShield is not already defined and instantiate as a singleton.</li>\n<li>Other: Rename misleading plugin constants (they&#8217;re square brackets not angle brackets)</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>Released 2012.08.29</li>\n<li>Fixed: Ensure WP_PluginBase is properly included and defined.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Released 2012.07.17</li>\n<li>This is the first version of WP Shortcode Shield.</li>\n</ul>\n"
    },
    "short_description": "Allows posts and pages to easily document WordPress shortcodes without the shortcode being expanded.",
    "description": "<p>This plugin allows you to refer to a WordPress shortcode within the content of posts and pages without that shortcode being automagically expanded by WordPress. The plugin takes advantage of the fact that the <a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">WordPress ShortCode API</a> does not support nested shortcodes to allow this plugin&#8217;s shortcode to wrap the shortcode being documented.</p>\n<blockquote>\n<p>The shortcode parser uses a single pass on the post content. This means that if<br />\n  the $content parameter of a shortcode handler contains another shortcode, it won&#8217;t<br />\n  be parsed</p>\n</blockquote>\n<p>The plugin supports both the self closing <code>[shortcode]</code> and enclosing <code>[shortcode]content[/shortcode]</code> forms and supports a short form name of the shortcode, <code>[wp_scs]</code> as well as the more verbose <code>[wp_shortcode_shield]</code> form. For the sake of brevity, the remainder of this documentation will use the <code>[wp_scs]</code> short form name.</p>\n<p>If using the self-closing form of the shortcode, you need to supply the name of the shortcode you are documenting using the <code>code</code> attribute but without using the enclosing <code>[</code> and <code>]</code> characters. This is because when parsing shortcodes, WordPress looks for the first occurrence of the &#8216;]&#8217; character to terminate the shortcode. As a result of this, usage such as</p>\n<pre><code>[wp_scs code=\"[another-shortcode-name]\"]\n</code></pre>\n<p>&#8230; WordPress will use the &#8216;]&#8217; character inside the <code>code</code> attribute to try and terminate the shortcode name, which is not what is desired. Instead, the plugin automagically adds the terminating &#8216;[&#8216; and &#8216;]&#8217; characters to the plugin&#8217;s output, so that usage such as</p>\n<pre><code>[wp_scs code=\"another-shortcode-name\"]\n</code></pre>\n<p>&#8230; will display <em>[another-shortcode-name]</em> in your post&#8217;s of page&#8217;s content.</p>\n<p>If you are using the enclosing form of the shortcode, you can either supply the shortcode to be documented with or without enclosing &#8216;[&#8216; and &#8216;]&#8217; characters; if they are omitted, the plugin will add them for you, so that usage such as</p>\n<pre><code>[wp_scs][another-shortcode-name][/wp_scs]\n</code></pre>\n<p>&#8230; and</p>\n<pre><code>[wp_scs]another-shortcode-name[/wp_scs]\n</code></pre>\n<p>&#8230; will display the same results, namely <em>[another-shortcode-name]</em>.</p>\n<p>Finally a note of caution, you cannot mix the enclosing and self closing form of the plugin&#8217;s shortcode within the same post or page; this is not a limitation of the plugin, but the way in which WordPress implements the <a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">ShortCode API</a> &#8230;</p>\n<blockquote>\n<p>The parser does not handle mixing of enclosing and non-enclosing forms of the same<br />\n  shortcode as you would want it to. For example, if you have:</p>\n<p><code>[myshortcode example='non-enclosing' /] non-enclosed content [myshortcode] enclosed content<br />\n  [/myshortcode]</code></p>\n<p>Instead of being treated as two shortcodes separated by the text &#8221; non-enclosed content &#8220;,<br />\n  the parser treats this as a single shortcode enclosing &#8221; non-enclosed content [myshortcode]<br />\n  enclosed content&#8221;.</p>\n</blockquote>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-shortcode-shield.1.1.0.zip",
    "upgrade_notice": {
        "1.1.0": "<p>Maintenance version; upgraded plugin to new version of WP_PluginBase to prevent class name clashes during future upgrades.</p>",
        "1.0.1": "<p>Fixed a bug where WP_PluginBase is properly included and defined. This is the 2nd. version of WP Shortcode Shield.</p>",
        "1.0": "<ul>\n<li>This is the first version of WP Shortcode Shield.</li>\n</ul>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-shortcode-shield/trunk/screenshot-1.jpg?rev=1539234",
            "caption": "Raw Source Code Sample"
        },
        {
            "src": "https://ps.w.org/wp-shortcode-shield/trunk/screenshot-2.jpg?rev=1539234",
            "caption": "Resultant Content Display"
        }
    ],
    "tags": {
        "documentation": "documentation",
        "page": "page",
        "post": "post",
        "shortcode": "shortcode"
    },
    "stable_tag": "1.1.0",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/wp-shortcode-shield.1.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/wp-shortcode-shield.1.0.1.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/wp-shortcode-shield.1.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-shortcode-shield.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://www.vicchi.org/codeage/donate/",
    "banners": {
        "low": "https://ps.w.org/wp-shortcode-shield/assets/banner-772x250.jpg?rev=536020",
        "high": false
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wp-shortcode-shield_f5f5f5.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}