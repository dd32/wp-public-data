{
    "name": "Import Members from CSV for Paid Memberships Pro",
    "slug": "pmpro-import-members-from-csv",
    "version": "3.1.4",
    "author": "Thomas Sjolshagen ",
    "author_profile": "https://profiles.wordpress.org/eighty20results/",
    "contributors": {
        "eighty20results": {
            "profile": "https://profiles.wordpress.org/eighty20results/",
            "avatar": "https://secure.gravatar.com/avatar/6e8bbf123cc92b1105efa06ea4be23df?s=96&d=monsterid&r=g",
            "display_name": "Thomas S"
        },
        "sorich87": {
            "profile": "https://profiles.wordpress.org/sorich87/",
            "avatar": "https://secure.gravatar.com/avatar/89643b9cf8db47bcf64e9fa7d48a7828?s=96&d=monsterid&r=g",
            "display_name": "Ulrich Sossou"
        },
        "ideadude": {
            "profile": "https://profiles.wordpress.org/ideadude/",
            "avatar": "https://secure.gravatar.com/avatar/ff7b3019012f15f9c89c199f1d5c2047?s=96&d=monsterid&r=g",
            "display_name": ""
        }
    },
    "requires": "5.0",
    "tested": "5.8.10",
    "requires_php": "7.3",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 2,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/pmpro-import-members-from-csv/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 8221,
    "last_updated": "2021-07-20 8:27pm GMT",
    "added": "2018-01-03",
    "homepage": "http://wordpress.org/plugins/pmpro-import-members-from-csv/",
    "sections": {
        "description": "<p>We designed this plugin to give you an error free import of a user/member to a WordPress/Paid Memberships Pro site.<br />\nIt supports both adding and changing user data.</p>\n<p>Unlike the &#8220;Import User From CSV Integration&#8221; add-on by Paid Memberships Pro, this &#8220;Import Members from CSV&#8221; plugin<br />\nwill verify the data you are trying to import during the import operation. This is done to reduce the probability of<br />\nproblem after the import. If there are any errors/issues, information about the problem will be logged to the<br />\n    e20r_im_errors.log saved in the <code>wp-content/uploads/</code> directory.</p>\n<p><strong>NOTE</strong>: You can run the import multiple times with the same/slightly modified import .csv file and the appropriate<br />\nsettings (see the FAQ/description below). If you configure the plugin settings correctly, this will only result in<br />\noverwriting/changing the existing member data.</p>\n<p>Using a CSV (Comma Separated Values) file, the will add users with basic user information as well as user meta data<br />\nfields, the user role (if applicable) and the specified Paid Memberships Pro member configuration/information. It can<br />\nalso generate an order record to ensure your recurring subscriptions continue to get attributed to the imported member.</p>\n<p>If you&#8217;ve exported the user&#8217;s passwords as hashed strings, you can import them without re-encrypting them again<br />\n(by setting the option).</p>\n<p>You can also choose to send a notification to the new users and to display password nag on user login.</p>\n<p>This plugin supports Network Activation on a WordPress Multisite (WPMU) installation (see the settings page when<br />\nusing in a multisite configuration)</p>\n<p><a href=\"http://eighty20results.com/wordpress-plugins/\" rel=\"nofollow ugc\">Check out my other plugins.</a></p>\n<h4>Features</h4>\n<ul>\n<li>Imports all WP User database table fields</li>\n<li>Imports user meta</li>\n<li>Imports PMPro membership data</li>\n<li>Update existing users if they already exist in the WP Users database (if the option is selected)</li>\n<li>Overwrite preexisting membership records for the same membership level as is being imported (if the option is selected)</li>\n<li>Set/Update the user WordPress role for the member (if the role is specified in the import file)</li>\n<li>Sends new user a notification message (if the option is selected)</li>\n<li>Deactivate the standard WordPress user update email notices during the import operation</li>\n<li>Shows password nag on user login (if the option is selected)</li>\n<li>Allows large user/member import without having to configure the PHP max_execution_time variable (if the option is selected)</li>\n<li>Import hashed password for new/updating users (if the option is selected)</li>\n</ul>\n<p><strong>NOTE</strong>: The plugin may not import some of data if it detects a problem. To find out what the problem was, read this<br />\ndocumentation and the FAQ section to ensure you have correctly formatted <em>all</em> of your import data.</p>\n<p>For feature request and bug reports, <a href=\"https://github.com/eighty20results/pmpro-import-members-from-csv/issues\" rel=\"nofollow ugc\">please use the issues section on GitHub</a>.<br />\nCode contributions are welcome <a href=\"https://github.com/eighty20results/pmpro-import-members-from-csv\" rel=\"nofollow ugc\">on Github</a>.</p>\n<p><strong>NOTE</strong>: In order to hide the &#8220;Donation&#8221; button after a donation, this plugin will attempt to track the admin&#8217;s IP<br />\naddress. This action may have GDPR implications for you or your administrators.</p>\n<p>The tracking information is stored in the WordPress options table (wp_options) using the <code>e20r_import_has_donated</code><br />\noption name and can safely be deleted in the database if you do not wish to leave it. Deleting the option from the<br />\ndatabase will obviously re-enable the Donation nag.</p>\n<p>The Nag tracking can be disabled altogether with the <code>e20r_import_donation_tracking_disabled</code> filter:</p>\n<pre><code>add_filter( 'e20r_import_donation_tracking_disabled', '__return_true' );'\n</code></pre>\n<h3>How to use?</h3>\n<p>Click on the &#8216;Import Members&#8217; link in the &#8216;Membership&#8217; menu, then select your CSV file.<br />\nNext you have to decide whether you:</p>\n<ol>\n<li>want to deactivate previously existing member record(s) for the user &#8211; The CSV record has to specify the same<br />\nmembership as the user previously had so this is most useful when having to reimport/update data (default: enabled and<br />\nrecommended),</li>\n<li>update the existing user/member&#8217;s information (default: enabled and recommended)</li>\n<li>send a notification email to new users (default: disabled),</li>\n<li>want the password nag to be displayed when the user logs in (default: disabled),</li>\n<li>have included a hashed (encoded) password specified in the import file and (default: disabled)</li>\n<li>want to use the background import option (default: enabled and recommended)</li>\n<li>create a PMPro order record based on supplied payment info in the .csv file (default: disabled)</li>\n</ol>\n<p>Then click the &#8216;Import&#8217; button.</p>\n<p>Each row in your CSV file should represent a user; each column identifies user data, user meta data or user membership data<br />\nIf a column name matches a field in the user table, data from this column is imported in that field; if not, data is<br />\nimported in a user meta field with the name of the column or into the PMPro custom membership tables.</p>\n<p>Look at the examples/import.csv file in the plugin directory (also linked on the &#8220;Import Members&#8221; page) to have a<br />\nbetter understanding of how the your CSV file should be organized and what the data fields need to contain as far as<br />\nformatting/values go.</p>\n<p>You can always try importing the examples/import.csv file and look at the result, assuming the values specified for the<br />\nmembership_id in the example file match your membership level configuration.</p>\n<h3>The .CSV file from the &#8220;Export to CSV&#8221; button on the &#8220;Members List&#8221; page won&#8217;t import?</h3>\n<p>The purpose of the resulting .CSV file from the &#8220;Export to CSV&#8221; is to generate reports that are meaningful to a human,<br />\nnot a file that can be imported easily. This is true for any of the available Import from .CSV plugins/add-ons for<br />\nPaid Memberships Pro.</p>\n<p>Basically there are a few key differences between the file resulting from the Export function and the file contents<br />\nneeded to import the same member.</p>\n<p>As of version 2.5, this plugin includes data checks for some of the more common mistakes I&#8217;ve seen in the .CSV file(s).</p>\n<p>You should also check out the import example file that is linked on the &#8220;Import Members&#8221; page (under the &#8220;Choose File&#8221; button).</p>\n<h3>My import fails, what is wrong?</h3>\n<p>This is almost always related to the data in the file being imported. As a result, I&#8217;ve added some data tests for some<br />\nof the typical mistakes I&#8217;ve seen in the .CSV file(s) being imported. There is also a link to an example file on the<br />\n&#8220;Import Members&#8221; page (under the &#8220;Choose File&#8221; button) that illustrates a functional import file. Things lik what the<br />\nfield names are and the format you&#8217;ll most likely need to use for the data in that column.</p>\n<p>Check the wp-content/uploads/pmp_im_errors.log log file for details on the import operations (link should also be<br />\nincluded in a wp-admin dashboard notice if there are errors/warnings). The log should contain suggestions on some of<br />\nthe more common mistakes in the data being imported.</p>\n<h3>Do I need to include all the columns from the sample file?</h3>\n<p>No. <strong>Only</strong> include the columns where you have data to import. I.e, if none of your members need to have their<br />\nmembership end date defined (i.e the membership you&#8217;re importing doesn&#8217;t have an expiration or it&#8217;s a recurring<br />\nmembership with a linked Payment Gateway subscription plan), just remove the column(s) you don&#8217;t need. That way,<br />\nthe plugin doesn&#8217;t try to import data that isn&#8217;t there.</p>\n<p>If a column has no data, you should remove the column and it&#8217;s column header from the import file!</p>\n<h3>The plugin didn&#8217;t import any membership data!?!</h3>\n<p>This is a pretty common question and the reason is almost always because there is something unexpected in the<br />\n    membership_ portion of the row being imported.</p>\n<p>Most often it&#8217;s the date/time format for the <code>membership_startdate</code> and <code>membership_enddate</code> columns.</p>\n<p>If you use MS Excel(tm) to prepare your .CSV file, you&#8217;re in for a treat&#8230;</p>\n<p>In my experience, MS Excel(tm) is <em>really</em> good at changing the date format in a spreadsheet column to whatever it<br />\nthinks works best (i.e. human readable). (If my sarcasm doesn&#8217;t shine through; This actually <strong>isn&#8217;t</strong> a good thing!)</p>\n<p>However, human readable is often problematic for CSV imports, so you <strong>have to make sure</strong> the date format follows the<br />\n    YYYY-MM-DD HH:ii:ss template (where ii = 2 digit minute value). For startdate I&#8217;d recommend using <code>00:00:00</code> and<br />\nfor the enddate I&#8217;d suggest using <code>23:59:59</code>.</p>\n<p>Just to be clear: The <strong>only</strong> date format for the <code>membership_startdate</code>, <code>membership_enddate</code> and the<br />\n    user_registered columns that this plugin will accept is the MySQL datetime format: YYYY-MM-DD HH:ii:ss.</p>\n<p><em>Use anything else and your membership data will not be imported</em>!</p>\n<p>You can change the way Microsoft Excel(tm) handles date and time data in the Regional settings, but I&#8217;ve yet to<br />\nfigure out what the ideal settings are here. Truth be told, I&#8217;m using Apple Numbers and others have had great<br />\nsuccess using Google Sheets to process and export their .CSV files. Because there are alternatives to Microsoft<br />\nExcel(tm) and they seem to work a lot better for this specific task, I&#8217;m not at all inclined to spend more time<br />\non fixing something that I view to be a rather significant &#8220;bug&#8221;[1] in Excel(tm).</p>\n<p>[1] = Being that it&#8217;s an intentional usability feature, I realize Microsoft is unlikely to be all that interested<br />\n in fixing this &#8220;as designed&#8221; capability they&#8217;ve implemented.</p>\n<h3>Can this plugin be used to link sponsored members with their sponsors?</h3>\n<p>Yes.</p>\n<p>In version 2.60, we added support for importing Sponsors and their sponsored members. So, if you have the<br />\nPMPro Sponsored Members add-on installed, active and need to link sponsors and their sponsored members<br />\nduring the import with this plugin.</p>\n<h3>Importing the Sponsored user</h3>\n<p>To link sponsored users with their sponsors, add the <code>pmprosm_sponsor</code> column to your import file.</p>\n<p>On the data row for the <strong>sponsored</strong> user, the <code>pmprosm_sponsor</code> column must contain the user key for the sponsor<br />\nyou want to link them with.</p>\n<p>Or, if they don&#8217;t have a sponsor, that column must be blank.</p>\n<p>The sponsor key is either the email address they used when registering on your system &#8211; or the user_email column<br />\nvalue for their user record if they&#8217;re also being imported at the same time, the WordPress user ID value (numeric),<br />\nor the login name used (user_login value).</p>\n<h3>Importing the Sponsor</h3>\n<p>First of all, you will need to include a <code>pmprosm_seats</code> column as well. This column contains a numeric value to<br />\nindicate the number of seats (sponsored users) this user has paid to sponsor.</p>\n<p>When importing a sponsor there are a couple of scenarios;</p>\n<p>1) The system already contains the sponsor code (a sponsor code is a PMPro discount code prefixed with the letter &#8216;S&#8217;)<br />\nand you simply need to link the sponsor to their code.</p>\n<p>2) The system lacks the sponsor code, so you&#8217;ll need one to be created.</p>\n<p>For scenario 1; The sponsor code (discount code) already has a Discount Code ID (integer value, found on the PMPro<br />\n&#8220;Discount Codes&#8221; settings page). This ID needs to be added in the <code>membership_code_id</code> column of the import file for<br />\nthe sponsor (user record), along with a numeric value in the <code>pmprosm_seats</code> column.</p>\n<p>For scenario 2; The sponsor code is created by this plugin. It happens automatically if the sponsor user exists &#8211; or<br />\nis being imported at the same time as &#8211; when the <strong>sponsored</strong> user is attempted imported and linked. The discount<br />\ncode created attempts to use the settings from the PMPro Sponsored Members add-on for the discount code.</p>\n<h3>Caveat</h3>\n<p>The order in which users are listed in the .csv import file can matter when importing sponsors and their sponsored user.</p>\n<p>Although this plugin tries to re-import sponsored users if the import fails the first time, as part of the<br />\nclean-up process, this retry does not guarantee success!</p>\n<p>As a result, it is possible that a sponsored user is imported without being linked to their sponsor.</p>\n<p>You can fix that by running the import more than once.</p>\n<p>Alternatively, you can create two import files;</p>\n<p>One with the sponsor users only, and one with the sponsor<em>ed</em> users only.</p>\n<p>Then import the sponsors first. Next you import the sponsored users.</p>\n<h4>Can this plugin be used to import order data for Paid Memberships Pro?</h4>\n<p>As of version 2.20, we have an option to create member orders at the same time as we update the membership record.</p>\n<p>That means you can now include some of the order table fields to import custom values as needed for each<br />\nuser/member, along with updating/adding their membership level information.</p>\n<p>The supported order record columns are:</p>\n<ol>\n<li>paypal_token</li>\n<li>subtotal</li>\n<li>tax</li>\n<li>couponamount</li>\n<li>checkout_id</li>\n<li>certificate_id</li>\n<li>certificateamount</li>\n<li>total</li>\n<li>payment_type</li>\n<li>cardtype</li>\n<li>accountnumber</li>\n<li>expirationmonth</li>\n<li>expirationyear</li>\n<li>status</li>\n<li>gateway</li>\n<li>gateway_environment</li>\n<li>payment_transaction_id</li>\n<li>subscription_transaction_id</li>\n<li>timestamp</li>\n<li>affiliate_id</li>\n<li>affiliate_subid</li>\n<li>notes</li>\n<li>billing_street (*)</li>\n<li>billing_city (*)</li>\n<li>billing_state (*)</li>\n<li>billing_zip (*)</li>\n<li>billing_country (*)</li>\n<li>billing_phone (*)</li>\n</ol>\n<p>All of these columns/fields should be prefixed with <code>membership_</code>. I.e. <code>membership_paypal_token</code> or <code>membership_tax</code>,<br />\netc. The exceptions are the <code>user_id</code> and <code>membership_id</code> columns/fields which should be left as <code>user_id</code> and<br />\n    membership_id respectively if you want to include them in the import operation(s).</p>\n<p>The <code>status</code> column has a limited number of valid values. By default, we recommend using either <code>success</code> or <code>cancelled</code></p>\n<p>All timestamp values (&#8216;timestamp&#8217;) must use the same format as the one used by the MySQL database&#8217;s &#8216;DATETIME&#8217;<br />\nformat: <code>YYYY-MM-DD HH:MM:SS</code></p>\n<p><strong>PLEASE NOTE:</strong></p>\n<p>Although you <em>can</em> specify an account number (<code>accountnumber</code>) in the import file, doing that will <em>not</em> result in<br />\nthis plugin importing and activating subscriptions or payments by credit card.</p>\n<p>You CANNOT use this tool to import and <strong>create</strong> subscription plans, or transactions, on the payment gateway for<br />\nyour Paid Memberships Pro users.</p>\n<p>Including anything other than a masked Credit Card number for the <code>membership_accountnumber</code> column <em>is a really<br />\nbad idea</em>[1]!</p>\n<p>A masked credit card number = Only the last 4 digits are real and the rest are repetitions of the &#8216;X&#8217;<br />\ncharacter (<code>XXXXXXXXXXXX1234</code>).</p>\n<p>[1] = Importing a full credit card number will exponentially increase the probability that you, in the event of a<br />\nsecurity problem on your site, will have to pay the Payment Card Industry (PCI) massive fines. Simply put; Don&#8217;t import<br />\nCredit Card information! Instead, ask your members to resubmit their information when the site is back online/live.</p>\n<p><strong>This plugin does NOT mask your credit card numbers for you!</strong></p>\n<h3>Supported membership_gateway options</h3>\n<p>The Import Members from CSV plugin supports specifying different payment gateways for the user record(s) when<br />\nimporting order data (i.e. the &#8220;Attempt to create PMPro Order record&#8221; option has been selected). At present, the<br />\npayment gateways that can be specified in the <code>membership_gateway</code> column are:</p>\n<ol>\n<li>authorizenet</li>\n<li>braintree</li>\n<li>check</li>\n<li>cybersource</li>\n<li>payflowpro</li>\n<li>paypal</li>\n<li>paypalexpress</li>\n<li>paypalstandard</li>\n<li>stripe</li>\n<li>twocheckout</li>\n<li>payfast</li>\n</ol>\n<p>During the import operation, the plugin will verify that the specified payment gateway integration is one of the<br />\nsupported payment gateway integrations for Paid Memberships Pro.</p>\n<p>Specifying a Payment Gateway Integration that has not been configured for use during the PMPro checkout process would<br />\nrender the order record invalid.</p>\n<p><strong>NOTE:</strong> The limitations to how Paid Memberships Pro supports/handles multiple payment gateway integrations at the<br />\nsame time still apply.</p>\n<h3>Adding billing address information to the PMPro Order import</h3>\n<p>The normal way to import billing address data to the database for a member/user is to use the <code>pmpro_b[*]</code> fields<br />\n(<code>pmpro_bfirstname</code>, <code>pmpro_blastname</code>, <code>pmpro_baddress1</code>, <code>pmpro_baddress2</code>, <code>pmpro_bcity</code>, <code>pmpro_bstate</code>,<br />\n    pmpro_bzipcode, <code>pmpro_bcountry</code> and <code>pmpro_bphone</code>).</p>\n<p>If the <code>pmpro_b*</code> field data is present in the row and the &#8216;Add order&#8217; option is selected for the import file, the<br />\nimport will attempt to populate the order billing information using the <code>pmpro_b*</code> data.</p>\n<h4>How should the .csv file be defined?</h4>\n<p>This plugin assumes that the .csv file;</p>\n<ul>\n<li>Uses a comma (,) character to denote a new column in a row</li>\n<li>Uses a double-quote (&#8220;) character to wrap the contents of each of the columns</li>\n<li>Uses a backslash (&#041; character as the escape character</li>\n</ul>\n<p>For example;<br />\nTo have a 2 column .csv file, each row <strong>after</strong> the header row, the row should look something like this:<br />\n    &#8220;my first column data&#8221;,&#8221;my second \\&#8221;escaped\\&#8221; column data&#8221;.</p>\n<p>The application you use to edit and export your .CSV file will need to be configured appropriately before you<br />\nexport the .csv file.</p>\n<h4>Why am I or my users not receiving New user notifications</h4>\n<p>There are a couple of possible reasons, as far as I can tell. The functionality in WordPress that generates the<br />\n&#8220;new user notification&#8221; message is what they call &#8220;pluggable&#8221;. That means that it&#8217;s possible for a plugin (any plugin!)<br />\nto override the behavior of the functionality. So the first thing I&#8217;d suggest investigating is whether you have a<br />\nplugin active that intentionally changes/modifies/updates how the <code>wp_new_user_notification()</code> function works/behaves.</p>\n<p>Next, it&#8217;s (very) possible that your hosting environment doesn&#8217;t want you to be sending out a lot of email messages<br />\nfrom their servers. As a result, the import operation could potentially trip their anti-spam measures and blocking<br />\nyou from sending any messages.</p>\n<p>Third, the recipient email server may be using a SBL (Spam Black List) and have your web server IP listed as a<br />\ntypical source of Spam messages (it happens, a lot).</p>\n<h3>I&#8217;ve set the &#8216;membership_status&#8217; column to &#8216;inactive&#8217;, but the user&#8217;s imported membership level is currently &#8216;active&#8217;?</h3>\n<p>This is due to what I&#8217;d term a bug in Paid Memberships Pro. This issue doesn&#8217;t currently have a fix.</p>\n<p>Basically, the &#8216;inactive&#8217; status will only apply to the order record (if it&#8217;s created, see above) and <em>not</em> to the<br />\nuser&#8217;s membership status.</p>\n<p><strong>NOTE:</strong> Assigning a membership level for a user will cause them to be given an active membership on the site when<br />\nthe import operation is complete, regardless of the value supplied for the &#8216;membership_status&#8217; column.</p>\n<h3>How do I import an existing payment plan (recurring billing plan) for a user?</h3>\n<p>This only works if the plan already exists on the payment gateway itself.</p>\n<p>There is no way to use this plugin to import a new member/user and have the system create a recurring billing plan<br />\nfor them.</p>\n<h3>Can I use this plugin to create new billing plans or trigger charges on the payment gateway for an imported user?</h3>\n<p>No.</p>\n<h3>What are the constraints for WordPress Multisite import operations?</h3>\n<p>As documented by Paid Memberships Pro, the PMPro plugin cannot be Network Activated.</p>\n<p>This import plugin will work from the site(s) where PMPro is active <em>and</em> have the same membership level IDs<br />\nidentified as are listed in the <code>membership_id</code> column of the import file you&#8217;re using.</p>\n<p>If your primary site has a configured and active Paid Memberships Pro installation, you could theoretically start<br />\nthe plugin from the Network Admin dashboard (which will send you to the primary site anyway).</p>\n<p>The users being imported will only be linked to the site you import them to. Their membership data will only be<br />\nvisible on the PMPro site(s) that have the membership level ID(s) configured that match those in the import file.</p>\n<h4>Welcome Email Message (imported_welcome.html template) issues</h4>\n<p>If you selected the &#8220;Send the imported_member.html welcome email&#8221; option and your users still aren&#8217;t receiving messages,<br />\nplease make sure the &#8216;membership_status&#8217; field is included in the import .csv file and contains the <code>active</code> value.</p>\n<p>As a design philosophy, we treat an inactive member as somebody who should <em>not</em>  receive welcome messages<br />\n(you may disagree..?)</p>\n<h3>What GDPR impacted data is stored by this plugin?</h3>\n<p>Obviously, there&#8217;s the user data that this plugin is designed to import. This plugin does <em>not</em> track, report, or<br />\nallow download/deletion of any data it imports. There are (now or soon) other plugin options to handle those<br />\nrequirements from the GDPR legislation.</p>\n<p>In an attempt to make the &#8220;Donation&#8221; button less intrusive, we attempt to track the computer (IP) address when<br />\nsomebody clicks the button. This plugin does <em>not</em> link the IP address to a user account, so it should be a little<br />\nmore challenging to identify the person who clicked the &#8220;Donate&#8221; button for any 3rd party who gets access to your<br />\ndatabase than simply looking at the options saved by this plugin.</p>\n<p>The IP tracking information (the IP address) is stored in the WordPress options table (<code>wp_options</code>) using the<br />\n    e20r_import_has_donated option name. That option can safely be deleted in the database if you do not wish to have<br />\nIPs tracked. Deleting the option from the database will obviously re-enable the Donation nag.</p>\n<p>As long as this plugin remains installed and active on the server, the tracked IP address will automatically be<br />\nremoved from the option 2 months after the admin clicked the Donation button.</p>\n<p>The option is removed when the plugin is deactivated in the &#8220;Plugins&#8221; admin panel.</p>\n<p>Nag tracking can be disabled altogether with the <code>e20r_import_donation_tracking_disabled</code> filter:<br />\n    add_filter( &#8216;e20r_import_donation_tracking_disabled&#8217;, &#8216;__return_true&#8217; );&#8217;</p>\n<h3>Known Issues</h3>\n<p>N/A</p>\n<h3>Supported Filters and Actions</h3>\n<p>The list of filters and actions supported by this plugin can be found in the <a href=\"./docs/FILTERS.md\" rel=\"nofollow ugc\">Filters</a> and<br />\n<a href=\"./docs/ACTIONS.md\" rel=\"nofollow ugc\">Actions</a> documentation.</p>\n",
        "installation": "<p>For an automatic installation through WordPress:</p>\n<ol>\n<li>Go to the &#8216;Add New&#8217; plugins screen in your WordPress admin area</li>\n<li>Search for &#8216;Import Users from CSV&#8217;</li>\n<li>Click &#8216;Install Now&#8217; and activate the plugin</li>\n<li>Upload your CSV file in the &#8216;Users&#8217; menu, under &#8216;Import From CSV&#8217;</li>\n</ol>\n<p>Or use a nifty tool by WordPress lead developer Mark Jaquith:</p>\n<ol>\n<li>Visit <a href=\"http://coveredwebservices.com/wp-plugin-install/?plugin=pmpro-import-members-from-csv\" rel=\"nofollow ugc\">this link</a> and<br />\nfollow the instructions.</li>\n</ol>\n<p>For a manual installation via FTP:</p>\n<ol>\n<li>Upload the <code>pmpro-import-members-from-csv</code> directory to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in your WordPress admin area</li>\n<li>Upload your CSV file in the &#8216;Members&#8217; menu, under &#8216;Import Members&#8217;</li>\n</ol>\n<p>To upload the plugin through WordPress, instead of FTP:</p>\n<ol>\n<li>Search for the plugin (&#8220;Paid Memberships Pro Import Members from CSV&#8221; on the &#8216;Add New&#8217; plugins screen in your WordPress admin area and activate.</li>\n<li>Upload your CSV file in the &#8216;Memberships&#8217; menu, under &#8216;Import Members&#8217;</li>\n</ol>\n<h4>Frequently Asked Questions</h4>\n<ol>\n<li>Upload the <code>pmpro-import-members-from-csv</code> folder to the <code>/wp-content/plugins/</code> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n</ol>\n",
        "changelog": "<p>See the official <a href=\"CHANGELOG.md\" rel=\"nofollow ugc\">CHANGELOG.md file</a>.</p>\n"
    },
    "short_description": "Import and create user + PMPro member records from a CSV file on your WordPress with Paid Memberships Pro website. The plugin will import the membersh &hellip;",
    "description": "<p>We designed this plugin to give you an error free import of a user/member to a WordPress/Paid Memberships Pro site.<br />\nIt supports both adding and changing user data.</p>\n<p>Unlike the &#8220;Import User From CSV Integration&#8221; add-on by Paid Memberships Pro, this &#8220;Import Members from CSV&#8221; plugin<br />\nwill verify the data you are trying to import during the import operation. This is done to reduce the probability of<br />\nproblem after the import. If there are any errors/issues, information about the problem will be logged to the<br />\n    e20r_im_errors.log saved in the <code>wp-content/uploads/</code> directory.</p>\n<p><strong>NOTE</strong>: You can run the import multiple times with the same/slightly modified import .csv file and the appropriate<br />\nsettings (see the FAQ/description below). If you configure the plugin settings correctly, this will only result in<br />\noverwriting/changing the existing member data.</p>\n<p>Using a CSV (Comma Separated Values) file, the will add users with basic user information as well as user meta data<br />\nfields, the user role (if applicable) and the specified Paid Memberships Pro member configuration/information. It can<br />\nalso generate an order record to ensure your recurring subscriptions continue to get attributed to the imported member.</p>\n<p>If you&#8217;ve exported the user&#8217;s passwords as hashed strings, you can import them without re-encrypting them again<br />\n(by setting the option).</p>\n<p>You can also choose to send a notification to the new users and to display password nag on user login.</p>\n<p>This plugin supports Network Activation on a WordPress Multisite (WPMU) installation (see the settings page when<br />\nusing in a multisite configuration)</p>\n<p><a href=\"http://eighty20results.com/wordpress-plugins/\" rel=\"nofollow ugc\">Check out my other plugins.</a></p>\n<h4>Features</h4>\n<ul>\n<li>Imports all WP User database table fields</li>\n<li>Imports user meta</li>\n<li>Imports PMPro membership data</li>\n<li>Update existing users if they already exist in the WP Users database (if the option is selected)</li>\n<li>Overwrite preexisting membership records for the same membership level as is being imported (if the option is selected)</li>\n<li>Set/Update the user WordPress role for the member (if the role is specified in the import file)</li>\n<li>Sends new user a notification message (if the option is selected)</li>\n<li>Deactivate the standard WordPress user update email notices during the import operation</li>\n<li>Shows password nag on user login (if the option is selected)</li>\n<li>Allows large user/member import without having to configure the PHP max_execution_time variable (if the option is selected)</li>\n<li>Import hashed password for new/updating users (if the option is selected)</li>\n</ul>\n<p><strong>NOTE</strong>: The plugin may not import some of data if it detects a problem. To find out what the problem was, read this<br />\ndocumentation and the FAQ section to ensure you have correctly formatted <em>all</em> of your import data.</p>\n<p>For feature request and bug reports, <a href=\"https://github.com/eighty20results/pmpro-import-members-from-csv/issues\" rel=\"nofollow ugc\">please use the issues section on GitHub</a>.<br />\nCode contributions are welcome <a href=\"https://github.com/eighty20results/pmpro-import-members-from-csv\" rel=\"nofollow ugc\">on Github</a>.</p>\n<p><strong>NOTE</strong>: In order to hide the &#8220;Donation&#8221; button after a donation, this plugin will attempt to track the admin&#8217;s IP<br />\naddress. This action may have GDPR implications for you or your administrators.</p>\n<p>The tracking information is stored in the WordPress options table (wp_options) using the <code>e20r_import_has_donated</code><br />\noption name and can safely be deleted in the database if you do not wish to leave it. Deleting the option from the<br />\ndatabase will obviously re-enable the Donation nag.</p>\n<p>The Nag tracking can be disabled altogether with the <code>e20r_import_donation_tracking_disabled</code> filter:</p>\n<pre><code>add_filter( 'e20r_import_donation_tracking_disabled', '__return_true' );'\n</code></pre>\n<h3>How to use?</h3>\n<p>Click on the &#8216;Import Members&#8217; link in the &#8216;Membership&#8217; menu, then select your CSV file.<br />\nNext you have to decide whether you:</p>\n<ol>\n<li>want to deactivate previously existing member record(s) for the user &#8211; The CSV record has to specify the same<br />\nmembership as the user previously had so this is most useful when having to reimport/update data (default: enabled and<br />\nrecommended),</li>\n<li>update the existing user/member&#8217;s information (default: enabled and recommended)</li>\n<li>send a notification email to new users (default: disabled),</li>\n<li>want the password nag to be displayed when the user logs in (default: disabled),</li>\n<li>have included a hashed (encoded) password specified in the import file and (default: disabled)</li>\n<li>want to use the background import option (default: enabled and recommended)</li>\n<li>create a PMPro order record based on supplied payment info in the .csv file (default: disabled)</li>\n</ol>\n<p>Then click the &#8216;Import&#8217; button.</p>\n<p>Each row in your CSV file should represent a user; each column identifies user data, user meta data or user membership data<br />\nIf a column name matches a field in the user table, data from this column is imported in that field; if not, data is<br />\nimported in a user meta field with the name of the column or into the PMPro custom membership tables.</p>\n<p>Look at the examples/import.csv file in the plugin directory (also linked on the &#8220;Import Members&#8221; page) to have a<br />\nbetter understanding of how the your CSV file should be organized and what the data fields need to contain as far as<br />\nformatting/values go.</p>\n<p>You can always try importing the examples/import.csv file and look at the result, assuming the values specified for the<br />\nmembership_id in the example file match your membership level configuration.</p>\n<h3>The .CSV file from the &#8220;Export to CSV&#8221; button on the &#8220;Members List&#8221; page won&#8217;t import?</h3>\n<p>The purpose of the resulting .CSV file from the &#8220;Export to CSV&#8221; is to generate reports that are meaningful to a human,<br />\nnot a file that can be imported easily. This is true for any of the available Import from .CSV plugins/add-ons for<br />\nPaid Memberships Pro.</p>\n<p>Basically there are a few key differences between the file resulting from the Export function and the file contents<br />\nneeded to import the same member.</p>\n<p>As of version 2.5, this plugin includes data checks for some of the more common mistakes I&#8217;ve seen in the .CSV file(s).</p>\n<p>You should also check out the import example file that is linked on the &#8220;Import Members&#8221; page (under the &#8220;Choose File&#8221; button).</p>\n<h3>My import fails, what is wrong?</h3>\n<p>This is almost always related to the data in the file being imported. As a result, I&#8217;ve added some data tests for some<br />\nof the typical mistakes I&#8217;ve seen in the .CSV file(s) being imported. There is also a link to an example file on the<br />\n&#8220;Import Members&#8221; page (under the &#8220;Choose File&#8221; button) that illustrates a functional import file. Things lik what the<br />\nfield names are and the format you&#8217;ll most likely need to use for the data in that column.</p>\n<p>Check the wp-content/uploads/pmp_im_errors.log log file for details on the import operations (link should also be<br />\nincluded in a wp-admin dashboard notice if there are errors/warnings). The log should contain suggestions on some of<br />\nthe more common mistakes in the data being imported.</p>\n<h3>Do I need to include all the columns from the sample file?</h3>\n<p>No. <strong>Only</strong> include the columns where you have data to import. I.e, if none of your members need to have their<br />\nmembership end date defined (i.e the membership you&#8217;re importing doesn&#8217;t have an expiration or it&#8217;s a recurring<br />\nmembership with a linked Payment Gateway subscription plan), just remove the column(s) you don&#8217;t need. That way,<br />\nthe plugin doesn&#8217;t try to import data that isn&#8217;t there.</p>\n<p>If a column has no data, you should remove the column and it&#8217;s column header from the import file!</p>\n<h3>The plugin didn&#8217;t import any membership data!?!</h3>\n<p>This is a pretty common question and the reason is almost always because there is something unexpected in the<br />\n    membership_ portion of the row being imported.</p>\n<p>Most often it&#8217;s the date/time format for the <code>membership_startdate</code> and <code>membership_enddate</code> columns.</p>\n<p>If you use MS Excel(tm) to prepare your .CSV file, you&#8217;re in for a treat&#8230;</p>\n<p>In my experience, MS Excel(tm) is <em>really</em> good at changing the date format in a spreadsheet column to whatever it<br />\nthinks works best (i.e. human readable). (If my sarcasm doesn&#8217;t shine through; This actually <strong>isn&#8217;t</strong> a good thing!)</p>\n<p>However, human readable is often problematic for CSV imports, so you <strong>have to make sure</strong> the date format follows the<br />\n    YYYY-MM-DD HH:ii:ss template (where ii = 2 digit minute value). For startdate I&#8217;d recommend using <code>00:00:00</code> and<br />\nfor the enddate I&#8217;d suggest using <code>23:59:59</code>.</p>\n<p>Just to be clear: The <strong>only</strong> date format for the <code>membership_startdate</code>, <code>membership_enddate</code> and the<br />\n    user_registered columns that this plugin will accept is the MySQL datetime format: YYYY-MM-DD HH:ii:ss.</p>\n<p><em>Use anything else and your membership data will not be imported</em>!</p>\n<p>You can change the way Microsoft Excel(tm) handles date and time data in the Regional settings, but I&#8217;ve yet to<br />\nfigure out what the ideal settings are here. Truth be told, I&#8217;m using Apple Numbers and others have had great<br />\nsuccess using Google Sheets to process and export their .CSV files. Because there are alternatives to Microsoft<br />\nExcel(tm) and they seem to work a lot better for this specific task, I&#8217;m not at all inclined to spend more time<br />\non fixing something that I view to be a rather significant &#8220;bug&#8221;[1] in Excel(tm).</p>\n<p>[1] = Being that it&#8217;s an intentional usability feature, I realize Microsoft is unlikely to be all that interested<br />\n in fixing this &#8220;as designed&#8221; capability they&#8217;ve implemented.</p>\n<h3>Can this plugin be used to link sponsored members with their sponsors?</h3>\n<p>Yes.</p>\n<p>In version 2.60, we added support for importing Sponsors and their sponsored members. So, if you have the<br />\nPMPro Sponsored Members add-on installed, active and need to link sponsors and their sponsored members<br />\nduring the import with this plugin.</p>\n<h3>Importing the Sponsored user</h3>\n<p>To link sponsored users with their sponsors, add the <code>pmprosm_sponsor</code> column to your import file.</p>\n<p>On the data row for the <strong>sponsored</strong> user, the <code>pmprosm_sponsor</code> column must contain the user key for the sponsor<br />\nyou want to link them with.</p>\n<p>Or, if they don&#8217;t have a sponsor, that column must be blank.</p>\n<p>The sponsor key is either the email address they used when registering on your system &#8211; or the user_email column<br />\nvalue for their user record if they&#8217;re also being imported at the same time, the WordPress user ID value (numeric),<br />\nor the login name used (user_login value).</p>\n<h3>Importing the Sponsor</h3>\n<p>First of all, you will need to include a <code>pmprosm_seats</code> column as well. This column contains a numeric value to<br />\nindicate the number of seats (sponsored users) this user has paid to sponsor.</p>\n<p>When importing a sponsor there are a couple of scenarios;</p>\n<p>1) The system already contains the sponsor code (a sponsor code is a PMPro discount code prefixed with the letter &#8216;S&#8217;)<br />\nand you simply need to link the sponsor to their code.</p>\n<p>2) The system lacks the sponsor code, so you&#8217;ll need one to be created.</p>\n<p>For scenario 1; The sponsor code (discount code) already has a Discount Code ID (integer value, found on the PMPro<br />\n&#8220;Discount Codes&#8221; settings page). This ID needs to be added in the <code>membership_code_id</code> column of the import file for<br />\nthe sponsor (user record), along with a numeric value in the <code>pmprosm_seats</code> column.</p>\n<p>For scenario 2; The sponsor code is created by this plugin. It happens automatically if the sponsor user exists &#8211; or<br />\nis being imported at the same time as &#8211; when the <strong>sponsored</strong> user is attempted imported and linked. The discount<br />\ncode created attempts to use the settings from the PMPro Sponsored Members add-on for the discount code.</p>\n<h3>Caveat</h3>\n<p>The order in which users are listed in the .csv import file can matter when importing sponsors and their sponsored user.</p>\n<p>Although this plugin tries to re-import sponsored users if the import fails the first time, as part of the<br />\nclean-up process, this retry does not guarantee success!</p>\n<p>As a result, it is possible that a sponsored user is imported without being linked to their sponsor.</p>\n<p>You can fix that by running the import more than once.</p>\n<p>Alternatively, you can create two import files;</p>\n<p>One with the sponsor users only, and one with the sponsor<em>ed</em> users only.</p>\n<p>Then import the sponsors first. Next you import the sponsored users.</p>\n<h4>Can this plugin be used to import order data for Paid Memberships Pro?</h4>\n<p>As of version 2.20, we have an option to create member orders at the same time as we update the membership record.</p>\n<p>That means you can now include some of the order table fields to import custom values as needed for each<br />\nuser/member, along with updating/adding their membership level information.</p>\n<p>The supported order record columns are:</p>\n<ol>\n<li>paypal_token</li>\n<li>subtotal</li>\n<li>tax</li>\n<li>couponamount</li>\n<li>checkout_id</li>\n<li>certificate_id</li>\n<li>certificateamount</li>\n<li>total</li>\n<li>payment_type</li>\n<li>cardtype</li>\n<li>accountnumber</li>\n<li>expirationmonth</li>\n<li>expirationyear</li>\n<li>status</li>\n<li>gateway</li>\n<li>gateway_environment</li>\n<li>payment_transaction_id</li>\n<li>subscription_transaction_id</li>\n<li>timestamp</li>\n<li>affiliate_id</li>\n<li>affiliate_subid</li>\n<li>notes</li>\n<li>billing_street (*)</li>\n<li>billing_city (*)</li>\n<li>billing_state (*)</li>\n<li>billing_zip (*)</li>\n<li>billing_country (*)</li>\n<li>billing_phone (*)</li>\n</ol>\n<p>All of these columns/fields should be prefixed with <code>membership_</code>. I.e. <code>membership_paypal_token</code> or <code>membership_tax</code>,<br />\netc. The exceptions are the <code>user_id</code> and <code>membership_id</code> columns/fields which should be left as <code>user_id</code> and<br />\n    membership_id respectively if you want to include them in the import operation(s).</p>\n<p>The <code>status</code> column has a limited number of valid values. By default, we recommend using either <code>success</code> or <code>cancelled</code></p>\n<p>All timestamp values (&#8216;timestamp&#8217;) must use the same format as the one used by the MySQL database&#8217;s &#8216;DATETIME&#8217;<br />\nformat: <code>YYYY-MM-DD HH:MM:SS</code></p>\n<p><strong>PLEASE NOTE:</strong></p>\n<p>Although you <em>can</em> specify an account number (<code>accountnumber</code>) in the import file, doing that will <em>not</em> result in<br />\nthis plugin importing and activating subscriptions or payments by credit card.</p>\n<p>You CANNOT use this tool to import and <strong>create</strong> subscription plans, or transactions, on the payment gateway for<br />\nyour Paid Memberships Pro users.</p>\n<p>Including anything other than a masked Credit Card number for the <code>membership_accountnumber</code> column <em>is a really<br />\nbad idea</em>[1]!</p>\n<p>A masked credit card number = Only the last 4 digits are real and the rest are repetitions of the &#8216;X&#8217;<br />\ncharacter (<code>XXXXXXXXXXXX1234</code>).</p>\n<p>[1] = Importing a full credit card number will exponentially increase the probability that you, in the event of a<br />\nsecurity problem on your site, will have to pay the Payment Card Industry (PCI) massive fines. Simply put; Don&#8217;t import<br />\nCredit Card information! Instead, ask your members to resubmit their information when the site is back online/live.</p>\n<p><strong>This plugin does NOT mask your credit card numbers for you!</strong></p>\n<h3>Supported membership_gateway options</h3>\n<p>The Import Members from CSV plugin supports specifying different payment gateways for the user record(s) when<br />\nimporting order data (i.e. the &#8220;Attempt to create PMPro Order record&#8221; option has been selected). At present, the<br />\npayment gateways that can be specified in the <code>membership_gateway</code> column are:</p>\n<ol>\n<li>authorizenet</li>\n<li>braintree</li>\n<li>check</li>\n<li>cybersource</li>\n<li>payflowpro</li>\n<li>paypal</li>\n<li>paypalexpress</li>\n<li>paypalstandard</li>\n<li>stripe</li>\n<li>twocheckout</li>\n<li>payfast</li>\n</ol>\n<p>During the import operation, the plugin will verify that the specified payment gateway integration is one of the<br />\nsupported payment gateway integrations for Paid Memberships Pro.</p>\n<p>Specifying a Payment Gateway Integration that has not been configured for use during the PMPro checkout process would<br />\nrender the order record invalid.</p>\n<p><strong>NOTE:</strong> The limitations to how Paid Memberships Pro supports/handles multiple payment gateway integrations at the<br />\nsame time still apply.</p>\n<h3>Adding billing address information to the PMPro Order import</h3>\n<p>The normal way to import billing address data to the database for a member/user is to use the <code>pmpro_b[*]</code> fields<br />\n(<code>pmpro_bfirstname</code>, <code>pmpro_blastname</code>, <code>pmpro_baddress1</code>, <code>pmpro_baddress2</code>, <code>pmpro_bcity</code>, <code>pmpro_bstate</code>,<br />\n    pmpro_bzipcode, <code>pmpro_bcountry</code> and <code>pmpro_bphone</code>).</p>\n<p>If the <code>pmpro_b*</code> field data is present in the row and the &#8216;Add order&#8217; option is selected for the import file, the<br />\nimport will attempt to populate the order billing information using the <code>pmpro_b*</code> data.</p>\n<h4>How should the .csv file be defined?</h4>\n<p>This plugin assumes that the .csv file;</p>\n<ul>\n<li>Uses a comma (,) character to denote a new column in a row</li>\n<li>Uses a double-quote (&#8220;) character to wrap the contents of each of the columns</li>\n<li>Uses a backslash (&#041; character as the escape character</li>\n</ul>\n<p>For example;<br />\nTo have a 2 column .csv file, each row <strong>after</strong> the header row, the row should look something like this:<br />\n    &#8220;my first column data&#8221;,&#8221;my second \\&#8221;escaped\\&#8221; column data&#8221;.</p>\n<p>The application you use to edit and export your .CSV file will need to be configured appropriately before you<br />\nexport the .csv file.</p>\n<h4>Why am I or my users not receiving New user notifications</h4>\n<p>There are a couple of possible reasons, as far as I can tell. The functionality in WordPress that generates the<br />\n&#8220;new user notification&#8221; message is what they call &#8220;pluggable&#8221;. That means that it&#8217;s possible for a plugin (any plugin!)<br />\nto override the behavior of the functionality. So the first thing I&#8217;d suggest investigating is whether you have a<br />\nplugin active that intentionally changes/modifies/updates how the <code>wp_new_user_notification()</code> function works/behaves.</p>\n<p>Next, it&#8217;s (very) possible that your hosting environment doesn&#8217;t want you to be sending out a lot of email messages<br />\nfrom their servers. As a result, the import operation could potentially trip their anti-spam measures and blocking<br />\nyou from sending any messages.</p>\n<p>Third, the recipient email server may be using a SBL (Spam Black List) and have your web server IP listed as a<br />\ntypical source of Spam messages (it happens, a lot).</p>\n<h3>I&#8217;ve set the &#8216;membership_status&#8217; column to &#8216;inactive&#8217;, but the user&#8217;s imported membership level is currently &#8216;active&#8217;?</h3>\n<p>This is due to what I&#8217;d term a bug in Paid Memberships Pro. This issue doesn&#8217;t currently have a fix.</p>\n<p>Basically, the &#8216;inactive&#8217; status will only apply to the order record (if it&#8217;s created, see above) and <em>not</em> to the<br />\nuser&#8217;s membership status.</p>\n<p><strong>NOTE:</strong> Assigning a membership level for a user will cause them to be given an active membership on the site when<br />\nthe import operation is complete, regardless of the value supplied for the &#8216;membership_status&#8217; column.</p>\n<h3>How do I import an existing payment plan (recurring billing plan) for a user?</h3>\n<p>This only works if the plan already exists on the payment gateway itself.</p>\n<p>There is no way to use this plugin to import a new member/user and have the system create a recurring billing plan<br />\nfor them.</p>\n<h3>Can I use this plugin to create new billing plans or trigger charges on the payment gateway for an imported user?</h3>\n<p>No.</p>\n<h3>What are the constraints for WordPress Multisite import operations?</h3>\n<p>As documented by Paid Memberships Pro, the PMPro plugin cannot be Network Activated.</p>\n<p>This import plugin will work from the site(s) where PMPro is active <em>and</em> have the same membership level IDs<br />\nidentified as are listed in the <code>membership_id</code> column of the import file you&#8217;re using.</p>\n<p>If your primary site has a configured and active Paid Memberships Pro installation, you could theoretically start<br />\nthe plugin from the Network Admin dashboard (which will send you to the primary site anyway).</p>\n<p>The users being imported will only be linked to the site you import them to. Their membership data will only be<br />\nvisible on the PMPro site(s) that have the membership level ID(s) configured that match those in the import file.</p>\n<h4>Welcome Email Message (imported_welcome.html template) issues</h4>\n<p>If you selected the &#8220;Send the imported_member.html welcome email&#8221; option and your users still aren&#8217;t receiving messages,<br />\nplease make sure the &#8216;membership_status&#8217; field is included in the import .csv file and contains the <code>active</code> value.</p>\n<p>As a design philosophy, we treat an inactive member as somebody who should <em>not</em>  receive welcome messages<br />\n(you may disagree..?)</p>\n<h3>What GDPR impacted data is stored by this plugin?</h3>\n<p>Obviously, there&#8217;s the user data that this plugin is designed to import. This plugin does <em>not</em> track, report, or<br />\nallow download/deletion of any data it imports. There are (now or soon) other plugin options to handle those<br />\nrequirements from the GDPR legislation.</p>\n<p>In an attempt to make the &#8220;Donation&#8221; button less intrusive, we attempt to track the computer (IP) address when<br />\nsomebody clicks the button. This plugin does <em>not</em> link the IP address to a user account, so it should be a little<br />\nmore challenging to identify the person who clicked the &#8220;Donate&#8221; button for any 3rd party who gets access to your<br />\ndatabase than simply looking at the options saved by this plugin.</p>\n<p>The IP tracking information (the IP address) is stored in the WordPress options table (<code>wp_options</code>) using the<br />\n    e20r_import_has_donated option name. That option can safely be deleted in the database if you do not wish to have<br />\nIPs tracked. Deleting the option from the database will obviously re-enable the Donation nag.</p>\n<p>As long as this plugin remains installed and active on the server, the tracked IP address will automatically be<br />\nremoved from the option 2 months after the admin clicked the Donation button.</p>\n<p>The option is removed when the plugin is deactivated in the &#8220;Plugins&#8221; admin panel.</p>\n<p>Nag tracking can be disabled altogether with the <code>e20r_import_donation_tracking_disabled</code> filter:<br />\n    add_filter( &#8216;e20r_import_donation_tracking_disabled&#8217;, &#8216;__return_true&#8217; );&#8217;</p>\n<h3>Known Issues</h3>\n<p>N/A</p>\n<h3>Supported Filters and Actions</h3>\n<p>The list of filters and actions supported by this plugin can be found in the <a href=\"./docs/FILTERS.md\" rel=\"nofollow ugc\">Filters</a> and<br />\n<a href=\"./docs/ACTIONS.md\" rel=\"nofollow ugc\">Actions</a> documentation.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/pmpro-import-members-from-csv/assets/screenshot-1.png?rev=1796635",
            "caption": "User import screen"
        },
        {
            "src": "https://ps.w.org/pmpro-import-members-from-csv/assets/screenshot-2.png?rev=1796635",
            "caption": "Ongoing (background) import screen"
        },
        {
            "src": "https://ps.w.org/pmpro-import-members-from-csv/assets/screenshot-3.png?rev=1869880",
            "caption": "Default settings on the user import screen"
        }
    ],
    "tags": {
        "batch": "batch",
        "csv": "csv",
        "import": "import",
        "user": "user",
        "users": "users"
    },
    "stable_tag": "trunk",
    "versions": {
        "2.3": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.2.3.zip",
        "2.4": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.2.4.zip",
        "2.41": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.2.41.zip",
        "v2.50": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v2.50.zip",
        "v3.0": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.0.zip",
        "v3.0.1": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.0.1.zip",
        "v3.0.2": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.0.2.zip",
        "v3.0.3": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.0.3.zip",
        "v3.0.4": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.0.4.zip",
        "v3.0.6": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.0.6.zip",
        "v3.1.1": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.1.1.zip",
        "v3.1.3": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.1.3.zip",
        "v3.1.4": "https://downloads.wordpress.org/plugin/pmpro-import-members-from-csv.v3.1.4.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/pmpro-import-members-from-csv/assets/banner-772x250.png?rev=1920072",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/pmpro-import-members-from-csv/assets/icon-128x128.png?rev=1920071",
        "2x": "https://ps.w.org/pmpro-import-members-from-csv/assets/icon-256x256.png?rev=1920071"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "pmpro-import-members-from-csv",
            "language": "nl_NL",
            "version": "3.1.4",
            "updated": "2022-09-14 08:24:57",
            "package": "http://downloads.wordpress.org/translation/plugin/pmpro-import-members-from-csv/3.1.4/nl_NL.zip"
        }
    ]
}