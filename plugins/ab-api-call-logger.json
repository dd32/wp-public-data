{
    "name": "API Request Collector",
    "slug": "ab-api-call-logger",
    "version": "0.1",
    "author": "<a href=\"http://technosailor.com\">Aaron Brazell</a>",
    "author_profile": "https://profiles.wordpress.org/technosailor/",
    "contributors": {
        "technosailor": {
            "profile": "https://profiles.wordpress.org/technosailor/",
            "avatar": "https://secure.gravatar.com/avatar/d409f7e3d0b43dd41dcfbd58aa255601?s=96&d=monsterid&r=g",
            "display_name": "Aaron Brazell"
        }
    },
    "requires": "3.5.1",
    "tested": "3.6.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/ab-api-call-logger/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1332,
    "last_updated": "2013-04-30 2:56am GMT",
    "added": "2013-04-30",
    "homepage": "",
    "sections": {
        "description": "<p>This is a very simple plugin that creates a new adminbar menu with a list of pertinent API calls used on a page.</p>\n<p>However, no good thing happens in a vacuum, and you good folks, are developers.</p>\n<p>In order to log API calls, you should invoke the <code>log_api_call()</code> method of the <code>$ab_api_logger</code> global object. Of course, if you prefer, you can instantiate your own object using the <code>AB_API_Logger</code> class.</p>\n<p>The <code>log_api_call()</code> method takes two properties. The first is an array of URLs that will be included as menu items (easy access, easy click to see responses). By default, the plugin maintains a property <code>$api_calls</code> with this array and uses it to  parse out the menu items.</p>\n<p>However, if you wish to maintain your own array, you can do that too. The plugin takes care of what it needs, and you can feel free to maintain what you need.</p>\n<p>The second argument for the <code>log_api_calls()</code> method is the URL that will be added to the adminbar menu. You can escape it if you want, but I will as well for security.</p>\n<p>The reason I built this plugin is because I deal with APIs a lot. My normal approach to API integration is to use a pre-existing PHP library or, more commonly, build a library around the API so I can use it easily without having to remember everything.</p>\n<p>Usually, this means I create a class and that class is filled with methods that construct a URL based on parameters and then use <code>wp_remote_get()</code> to retrieve the response from the API. Anytime <strong>after</strong> the URL is created, invoke this plugin:</p>\n<pre><code>if( class_exists( 'AB_API_Logger' ) ) {     // Example API Call: $api_url (http://api.example.com?apikey=asdfASD234&amp;post_id=213)     global $ab_api_logger;     $ab_api_logger-&gt;log_api_call( $ab_api_logger-&gt;api_calls, $api_url ); } </code></pre>\n<p>Pull requests can be submitted via <a href=\"https://github.com/technosailor/ab-api-call-logger\" rel=\"nofollow ugc\">Github</a></p>\n",
        "changelog": "<h4>0.1</h4>\n<ul>\n<li>Initial Release.</li>\n</ul>\n"
    },
    "short_description": "This plugin is made for plugin developers that work with APIs and need easy access to debug information.",
    "description": "<p>This is a very simple plugin that creates a new adminbar menu with a list of pertinent API calls used on a page.</p>\n<p>However, no good thing happens in a vacuum, and you good folks, are developers.</p>\n<p>In order to log API calls, you should invoke the <code>log_api_call()</code> method of the <code>$ab_api_logger</code> global object. Of course, if you prefer, you can instantiate your own object using the <code>AB_API_Logger</code> class.</p>\n<p>The <code>log_api_call()</code> method takes two properties. The first is an array of URLs that will be included as menu items (easy access, easy click to see responses). By default, the plugin maintains a property <code>$api_calls</code> with this array and uses it to  parse out the menu items.</p>\n<p>However, if you wish to maintain your own array, you can do that too. The plugin takes care of what it needs, and you can feel free to maintain what you need.</p>\n<p>The second argument for the <code>log_api_calls()</code> method is the URL that will be added to the adminbar menu. You can escape it if you want, but I will as well for security.</p>\n<p>The reason I built this plugin is because I deal with APIs a lot. My normal approach to API integration is to use a pre-existing PHP library or, more commonly, build a library around the API so I can use it easily without having to remember everything.</p>\n<p>Usually, this means I create a class and that class is filled with methods that construct a URL based on parameters and then use <code>wp_remote_get()</code> to retrieve the response from the API. Anytime <strong>after</strong> the URL is created, invoke this plugin:</p>\n<pre><code>if( class_exists( 'AB_API_Logger' ) ) {     // Example API Call: $api_url (http://api.example.com?apikey=asdfASD234&amp;post_id=213)     global $ab_api_logger;     $ab_api_logger-&gt;log_api_call( $ab_api_logger-&gt;api_calls, $api_url ); } </code></pre>\n<p>Pull requests can be submitted via <a href=\"https://github.com/technosailor/ab-api-call-logger\" rel=\"nofollow ugc\">Github</a></p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/ab-api-call-logger.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/ab-api-call-logger/trunk/screenshot-1.png?rev=1443603",
            "caption": "This screenshot (properly obfuscated to protect the innocent) shows a clickable list of API calls performed."
        }
    ],
    "tags": {
        "api": "api",
        "development": "development"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/ab-api-call-logger.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}