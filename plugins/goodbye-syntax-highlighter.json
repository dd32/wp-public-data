{
    "name": "Goodbye Syntax Highlighter",
    "slug": "goodbye-syntax-highlighter",
    "version": "0.1.2",
    "author": "<a href=\"http://www.visoftinc.com\">Damien White (Visoft, Inc.)</a>",
    "author_profile": "https://profiles.wordpress.org/dwhitevisoft/",
    "contributors": {
        "dwhitevisoft": {
            "profile": "https://profiles.wordpress.org/dwhitevisoft/",
            "avatar": "https://secure.gravatar.com/avatar/874b44da3a2397098282c151c5e7f437?s=96&d=monsterid&r=g",
            "display_name": "dwhitevisoft"
        }
    },
    "requires": "3.1",
    "tested": "3.5.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/goodbye-syntax-highlighter/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3546,
    "last_updated": "2013-02-11 17:05:00",
    "added": "2012-08-14",
    "homepage": "https://github.com/visoft/goodbye-syntax-highlighter",
    "sections": {
        "description": "<p>For years I&#8217;ve used <a href=\"http://alexgorbatchev.com/SyntaxHighlighter/\" rel=\"nofollow ugc\">Alex Gorbatchev&#8217;s SyntaxHighlighter</a>. It has served me well over the years. When I moved to WordPress I tried various plugins based on the library, such <a href=\"https://wordpress.org/extend/plugins/syntaxhighlighter/\" rel=\"ugc\">SyntaxHighlighter Evolved</a>.</p>\n<p>I&#8217;ve decided to start blogging using <a href=\"http://daringfireball.net/projects/markdown/\" rel=\"nofollow ugc\">Markdown</a>. Making this move I needed to find a way to highlight various bits of source code in an easy way. There are many nice libraries that make this a snap, such as <a href=\"http://code.google.com/p/google-code-prettify/\" rel=\"nofollow ugc\">google-code-prettify</a> or <a href=\"http://softwaremaniacs.org/soft/highlight/en/\" rel=\"nofollow ugc\">highlight.js</a>. In the end I decided to go with highlight.js, for the simple reason that it is automatic, working flawlessly with Markdown&#8217;s code syntax output.</p>\n<p>Great, but my existing source code examples use SyntaxHighlighter&#8217;s style for code blocks (using <code>&lt;pre class=\"brush: ruby;\" /&gt;</code>, for example). I could have converted things in a few ways:</p>\n<ul>\n<li>Change the database</li>\n<li>Write a JS script to convert the <code>&lt;pre /&gt;</code> structure to <code>&lt;pre&gt;&lt;code /&gt;&lt;/pre&gt;</code></li>\n<li>Write a JS script to call highlight.js&#8217; <code>highlightBlock</code> method</li>\n<li>Write a WP plugin and reformat things easily <strong>Ding Ding Ding</strong></li>\n</ul>\n<p>So there you have it. This WordPress plugin will go through and process your SyntaxHighlighter style blocks into ones that highlight.js works with out-of-the-box. It will also add the language that you have specified with the <code>brush</code> class and add it as a class on the <code>&lt;code /&gt;</code> element (<a href=\"http://www.w3.org/html/wg/drafts/html/master/text-level-semantics.html#the-code-element\" rel=\"nofollow ugc\">following the HTML5 recommendation</a>). Nothing is changed in the DB, so if you decide to go back to SyntaxHighlighter, you can without any issues.</p>\n<h3>GeSHi</h3>\n<p>This plugin now supports conversion of <a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> style code blocks! Now you can move from plugins such as <a href=\"https://wordpress.org/extend/plugins/wp-syntax/\" rel=\"ugc\">WP-Syntax</a> and <a href=\"https://wordpress.org/extend/plugins/wp-geshi-highlight\" rel=\"ugc\">WP-GeSHi-Highlight</a> to highlight.js.</p>\n<p>GeSHi uses the syntax that is <em>close</em> to SyntaxHighlighter, except instead of putting the language in the <code>class</code> attribute, it uses the <code>lang</code> attribute. Similar to the SyntaxHighligher conversion, it will go through and process your GeSHi style blocks into ones that highlight.js works with out-of-the-box. It will also add the language that you have specified with the <code>lang</code> attribute and add it as a <code>class</code> on the <code>&lt;code /&gt;</code> element.</p>\n",
        "installation": "<p>Installation is standard and straight forward.</p>\n<ol>\n<li>Upload the <code>goodbye-syntax-highlighter</code> folder (and all it&#8217;s contents) to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "changelog": "<h4>0.1.0</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n<h4>0.1.1</h4>\n<ul>\n<li>Modified output to use the HTML5 recommended syntax highlighting class names, e.g. <code>language-ruby</code>. For more information, see <a href=\"http://www.w3.org/html/wg/drafts/html/master/text-level-semantics.html#the-code-element\" rel=\"nofollow ugc\">the HTML5 spec</a></li>\n</ul>\n<h4>0.1.2</h4>\n<ul>\n<li>Added conversion of GeSHi style code blocks</li>\n</ul>\n"
    },
    "short_description": "For years I&#039;ve used Alex Gorbatchev&#039;s SyntaxHighlighter. It has served me well over the years. When I moved to WordPress I tried various plu &hellip;",
    "description": "<p>For years I&#8217;ve used <a href=\"http://alexgorbatchev.com/SyntaxHighlighter/\" rel=\"nofollow ugc\">Alex Gorbatchev&#8217;s SyntaxHighlighter</a>. It has served me well over the years. When I moved to WordPress I tried various plugins based on the library, such <a href=\"https://wordpress.org/extend/plugins/syntaxhighlighter/\" rel=\"ugc\">SyntaxHighlighter Evolved</a>.</p>\n<p>I&#8217;ve decided to start blogging using <a href=\"http://daringfireball.net/projects/markdown/\" rel=\"nofollow ugc\">Markdown</a>. Making this move I needed to find a way to highlight various bits of source code in an easy way. There are many nice libraries that make this a snap, such as <a href=\"http://code.google.com/p/google-code-prettify/\" rel=\"nofollow ugc\">google-code-prettify</a> or <a href=\"http://softwaremaniacs.org/soft/highlight/en/\" rel=\"nofollow ugc\">highlight.js</a>. In the end I decided to go with highlight.js, for the simple reason that it is automatic, working flawlessly with Markdown&#8217;s code syntax output.</p>\n<p>Great, but my existing source code examples use SyntaxHighlighter&#8217;s style for code blocks (using <code>&lt;pre class=\"brush: ruby;\" /&gt;</code>, for example). I could have converted things in a few ways:</p>\n<ul>\n<li>Change the database</li>\n<li>Write a JS script to convert the <code>&lt;pre /&gt;</code> structure to <code>&lt;pre&gt;&lt;code /&gt;&lt;/pre&gt;</code></li>\n<li>Write a JS script to call highlight.js&#8217; <code>highlightBlock</code> method</li>\n<li>Write a WP plugin and reformat things easily <strong>Ding Ding Ding</strong></li>\n</ul>\n<p>So there you have it. This WordPress plugin will go through and process your SyntaxHighlighter style blocks into ones that highlight.js works with out-of-the-box. It will also add the language that you have specified with the <code>brush</code> class and add it as a class on the <code>&lt;code /&gt;</code> element (<a href=\"http://www.w3.org/html/wg/drafts/html/master/text-level-semantics.html#the-code-element\" rel=\"nofollow ugc\">following the HTML5 recommendation</a>). Nothing is changed in the DB, so if you decide to go back to SyntaxHighlighter, you can without any issues.</p>\n<h3>GeSHi</h3>\n<p>This plugin now supports conversion of <a href=\"http://qbnz.com/highlighter/\" rel=\"nofollow ugc\">GeSHi</a> style code blocks! Now you can move from plugins such as <a href=\"https://wordpress.org/extend/plugins/wp-syntax/\" rel=\"ugc\">WP-Syntax</a> and <a href=\"https://wordpress.org/extend/plugins/wp-geshi-highlight\" rel=\"ugc\">WP-GeSHi-Highlight</a> to highlight.js.</p>\n<p>GeSHi uses the syntax that is <em>close</em> to SyntaxHighlighter, except instead of putting the language in the <code>class</code> attribute, it uses the <code>lang</code> attribute. Similar to the SyntaxHighligher conversion, it will go through and process your GeSHi style blocks into ones that highlight.js works with out-of-the-box. It will also add the language that you have specified with the <code>lang</code> attribute and add it as a <code>class</code> on the <code>&lt;code /&gt;</code> element.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/goodbye-syntax-highlighter.0.1.2.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "code": "code",
        "highlight": "Highlight",
        "highlight-js": "highlight.js",
        "pre": "pre",
        "syntax": "syntax"
    },
    "stable_tag": "0.1.2",
    "versions": {
        "0.1.0": "https://downloads.wordpress.org/plugin/goodbye-syntax-highlighter.0.1.0.zip",
        "0.1.1": "https://downloads.wordpress.org/plugin/goodbye-syntax-highlighter.0.1.1.zip",
        "0.1.2": "https://downloads.wordpress.org/plugin/goodbye-syntax-highlighter.0.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/goodbye-syntax-highlighter.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://www.visoftinc.com/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/goodbye-syntax-highlighter.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}