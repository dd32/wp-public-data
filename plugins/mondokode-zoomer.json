{
    "name": "MondoKode-Zoomer",
    "slug": "mondokode-zoomer",
    "version": "0.1",
    "author": "<a href=\"http://sunflower.coleharbour.ca/cocoamondo\">Matthieu Cormier</a>",
    "author_profile": "https://profiles.wordpress.org/mcormier/",
    "contributors": {
        "mcormier": {
            "profile": "https://profiles.wordpress.org/mcormier/",
            "avatar": "https://secure.gravatar.com/avatar/b376a1ffca4d0a0448cc7ef9bfc706bc?s=96&d=monsterid&r=g",
            "display_name": ""
        }
    },
    "requires": "2.8",
    "tested": "2.8",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/mondokode-zoomer/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 919,
    "last_updated": "2009-07-06 2:29am GMT",
    "added": "2009-07-06",
    "homepage": "http://todo--createURL",
    "sections": {
        "description": "<p>MondoKode-Zoomer was created for blogs that have a narrow reading column but will<br />\nbe embedding code using the wp_syntax plugin.  A narrow column is a pleasure to read<br />\nand there is a reason for this.</p>\n<blockquote>\n<p>&#8220;That&#8217;s why newspapers have narrow columns: It makes them faster to read.&#8221;</p>\n</blockquote>\n<ul>\n<li>Amar Sagoo <a href=\"http://amarsagoo.info/tofu/\" rel=\"nofollow ugc\">Tofu web page</a></li>\n</ul>\n<p>However, it is a nuissance to have a narrow width constraint when presenting kode.  I&#8217;ve caught myself<br />\nreformatting kode on numerous occasions in hope of eliminating the horizontal scrollbar.<br />\nWith this plugin you can spend more time sharing kode and less time formatting it for a skinny column.</p>\n<h3>Basic Usage</h3>\n<p>Add a zoom attribute to a pre block that wp_syntax formats.  Valid values for the<br />\nattribute are &#8220;yes&#8221; and &#8220;no&#8221;.</p>\n<pre><code> &lt;pre lang=\"LANGUAGE\" zoom=\"yes\"&gt; \n</code></pre>\n<p>The attribute is not required. When it is not present zoom is not enabled.</p>\n<h3>Wp-syntax Changes</h3>\n<p>To allow wp_syntax and MondoKode-zoomer to play nicely you need to use the version of wp-syntax.php<br />\nprovided with this plugin.  The changes to the file are listed here, do a diff comparison with the<br />\noriginal to see the changes in detail.</p>\n<ol>\n<li>zoom is added as a supported attribute in $allowedposttags and $allowedtags.</li>\n<li>The regular expression in the wp_syntax_before_filter function has been modified to allow the zoom attributed. </li>\n<li>In the wp_syntax_highlight function some logic was added to add the wp_syntax_zoom css class to<br />\na div block if zoom was enabled.</li>\n</ol>\n<h3>Usage</h3>\n<p>Use regular wp-syntax formatting commands but add the zoom attribute if you want the kode to zoom.<br />\nIt&#8217;s that simple.</p>\n<p><strong>Example 1: Enabling zoom</strong></p>\n<pre><code>&lt;pre lang=\"php\" zoom=\"yes\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 2: Explicitly disabling zoom</strong></p>\n<pre><code>&lt;pre lang=\"java\" zoom=\"no\" &gt;\npublic class Hello {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World!\");\n  }\n}\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 3: Zoom is implicity disabled because the attribute does not exist</strong></p>\n<pre><code>&lt;pre lang=\"ruby\" line=\"18\"&gt;\nclass Example\n  def example(arg1)\n    return \"Hello: \" + arg1.to_s\n  end\nend\n&lt;/pre&gt;\n</code></pre>\n",
        "installation": "<ol>\n<li>Upload MondoKode-zoomer to your WordPress plugins directory, usually <code>wp-content/plugins/</code> and unzip the file.  It will create a <code>wp-content/plugins/MondoKode-zoomer/</code> directory.</li>\n<li>Copy <code>wp_syntax_Override/wp-syntax.php</code> to <code>wp-content/plugins/wp-syntax</code>.  The reasons for doing this are explained<br />\nin the wp-syntax changes section below.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n<li>Create a post/page that contains a code snippet following the <a href=\"https://wordpress.org/extend/plugins/wp-syntax/other_notes/\" rel=\"ugc\">proper usage syntax</a><br />\nand add the zoom attribute if you want to make it zoomable.</li>\n</ol>\n",
        "faq": "<p>Empty.</p>\n",
        "changelog": "<p><strong>0.1</strong> : First release;</p>\n"
    },
    "short_description": "MondoKode-Zoomer provides an overlay window for kode formatted with the wp_syntax plugin.",
    "description": "<p>MondoKode-Zoomer was created for blogs that have a narrow reading column but will<br />\nbe embedding code using the wp_syntax plugin.  A narrow column is a pleasure to read<br />\nand there is a reason for this.</p>\n<blockquote>\n<p>&#8220;That&#8217;s why newspapers have narrow columns: It makes them faster to read.&#8221;</p>\n</blockquote>\n<ul>\n<li>Amar Sagoo <a href=\"http://amarsagoo.info/tofu/\" rel=\"nofollow ugc\">Tofu web page</a></li>\n</ul>\n<p>However, it is a nuissance to have a narrow width constraint when presenting kode.  I&#8217;ve caught myself<br />\nreformatting kode on numerous occasions in hope of eliminating the horizontal scrollbar.<br />\nWith this plugin you can spend more time sharing kode and less time formatting it for a skinny column.</p>\n<h3>Basic Usage</h3>\n<p>Add a zoom attribute to a pre block that wp_syntax formats.  Valid values for the<br />\nattribute are &#8220;yes&#8221; and &#8220;no&#8221;.</p>\n<pre><code> &lt;pre lang=\"LANGUAGE\" zoom=\"yes\"&gt; \n</code></pre>\n<p>The attribute is not required. When it is not present zoom is not enabled.</p>\n<h3>Wp-syntax Changes</h3>\n<p>To allow wp_syntax and MondoKode-zoomer to play nicely you need to use the version of wp-syntax.php<br />\nprovided with this plugin.  The changes to the file are listed here, do a diff comparison with the<br />\noriginal to see the changes in detail.</p>\n<ol>\n<li>zoom is added as a supported attribute in $allowedposttags and $allowedtags.</li>\n<li>The regular expression in the wp_syntax_before_filter function has been modified to allow the zoom attributed. </li>\n<li>In the wp_syntax_highlight function some logic was added to add the wp_syntax_zoom css class to<br />\na div block if zoom was enabled.</li>\n</ol>\n<h3>Usage</h3>\n<p>Use regular wp-syntax formatting commands but add the zoom attribute if you want the kode to zoom.<br />\nIt&#8217;s that simple.</p>\n<p><strong>Example 1: Enabling zoom</strong></p>\n<pre><code>&lt;pre lang=\"php\" zoom=\"yes\"&gt;\n&lt;div id=\"foo\"&gt;\n&lt;?php\n  function foo() {\n    echo \"Hello World!\\\\n\";\n  }\n?&gt;\n&lt;/div&gt;\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 2: Explicitly disabling zoom</strong></p>\n<pre><code>&lt;pre lang=\"java\" zoom=\"no\" &gt;\npublic class Hello {\n  public static void main(String[] args) {\n    System.out.println(\"Hello World!\");\n  }\n}\n&lt;/pre&gt;\n</code></pre>\n<p><strong>Example 3: Zoom is implicity disabled because the attribute does not exist</strong></p>\n<pre><code>&lt;pre lang=\"ruby\" line=\"18\"&gt;\nclass Example\n  def example(arg1)\n    return \"Hello: \" + arg1.to_s\n  end\nend\n&lt;/pre&gt;\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/mondokode-zoomer.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "code": "code",
        "formatting": "formatting",
        "highlight": "Highlight",
        "kode": "kode",
        "zoom": "zoom"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://www.nsnt.ca/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/mondokode-zoomer.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}