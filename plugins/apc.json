{
    "name": "APC Object Cache Backend",
    "slug": "apc",
    "version": "2.0.7",
    "author": "<a href=\"https://coveredweb.com/\">Mark Jaquith</a>",
    "author_profile": "https://profiles.wordpress.org/markjaquith/",
    "contributors": {
        "markjaquith": {
            "profile": "https://profiles.wordpress.org/markjaquith/",
            "avatar": "https://secure.gravatar.com/avatar/31c9246c917b5a53e34ae693b37840ac?s=96&d=monsterid&r=g",
            "display_name": "Mark Jaquith"
        }
    },
    "requires": "3.3",
    "tested": "3.5.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 14,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 14,
    "support_url": "https://wordpress.org/support/plugin/apc/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 30,
    "downloaded": 34931,
    "last_updated": "2020-05-04 3:55pm GMT",
    "added": "2010-08-04",
    "homepage": "",
    "sections": {
        "description": "<p>APC Object Cache provides a persistent memory-based backend for the WordPress object cache. APC must be available on your PHP install.</p>\n<p>An object cache is a place for WordPress and WordPress extensions to store the results of complex operations. On subsequent loads,<br />\nthis data can be fetched from the cache, which will be must faster than dynamically generating it on every page load.</p>\n<p>The APC Object Cache backend is also compatible with <a href=\"https://wordpress.org/extend/plugins/batcache/\" rel=\"ugc\">Batcache</a>, the powerful full page caching engine that runs on WordPress.com</p>\n<p>Be sure to read the installation instructions, as this is <strong>not</strong> a traditional plugin, and needs to be installed in a specific location.</p>\n",
        "installation": "<ol>\n<li>Verify that you have PHP 5.2.4+ and a compatible APC version installed.</li>\n<li>Copy <code>object-cache.php</code> to your WordPress content directory (<code>wp-content/</code> by default).</li>\n<li>Done!</li>\n</ol>\n",
        "faq": "\n<h4>Does this work as a backend for Batcache?</h4>\n<p>\n<p>Yes! APC 3.1.1+ supports incrementers and handles its own cleanup of expired objects, so it works just fine for Batcache. Lower versions of APC will work, but the hits trigger will be disabled.</p>\n</p>\n<h4>Does this support versions of WordPress earlier than 3.3?</h4>\n<p>\n<p>Maybe, but I&#8217;m not going to support them, and you shouldn&#8217;t still be running them!</p>\n</p>\n<h4>I share `wp-config.php` among multiple WordPress installs. How can I guarantee key uniqueness?</h4>\n<p>\n<p>Define <code>WP_APC_KEY_SALT</code> to something that is unique for each install (like an md5 of the MySQL host, database, and table prefix).</p>\n</p>\n\n",
        "changelog": "<h4>2.0.7</h4>\n<ul>\n<li>Address potential XSS issues</li>\n</ul>\n<h4>2.0.6</h4>\n<ul>\n<li>Fixed a PHP notice</li>\n</ul>\n<h4>2.0.5</h4>\n<ul>\n<li>Implements <code>wp_cache_switch_to_blog()</code></li>\n<li>Degrades to the built-in PHP-memory cache when APC is not available (now plays with WP-CLI)</li>\n<li>Clone objects before storing them to the local cache, so changes to them don&#8217;t corrupt the cache</li>\n<li>Clear the local PHP memory cache when the APC cache is cleared</li>\n</ul>\n<h4>2.0.4</h4>\n<ul>\n<li><code>die()</code> when people mistakenly try to activate this as a plugin, and provide a helpful message for where they should move the file</li>\n</ul>\n<h4>2.0.3</h4>\n<ul>\n<li>Parity with the Memcache backend, as much as was possible</li>\n<li>Object cloning</li>\n<li>Requires WP 3.1+</li>\n<li>Fix double-equals vs triple-equals bug with boolean true values</li>\n</ul>\n<h4>2.0.2</h4>\n<ul>\n<li>Perform the <code>md5( ABSPATH )</code> calculation once per load (props jdub)</li>\n<li>Allow users of complex <code>wp-config.php</code> setups to define <code>WP_APC_KEY_SALT</code> to guarantee key uniqueness (props jdub)</li>\n<li>Lose the <code>preg_replace()</code> call in <code>::key()</code> (props jdub)</li>\n<li>Rename the <code>incr</code> method to <code>incr2</code> and then conditionally add <code>incr</code> via class extension (so that Batcache can properly detect incrementor support)</li>\n<li>Convert arrays to ArrayObject objects (APC does not cache multi-level arrays or arrays of objects, so this works around that)</li>\n<li>Require PHP 5.2+</li>\n</ul>\n<h4>2.0.1</h4>\n<ul>\n<li>Fixed bugs in wp_cache_delete()</li>\n</ul>\n<h4>2.0</h4>\n<ul>\n<li>First version in SVN</li>\n<li>Updated to support increment/decrement and feature parity with the Memcached backend (except for multiget support)</li>\n</ul>\n"
    },
    "short_description": "APC Object Cache provides a persistent memory-based backend for the WordPress object cache. APC must be available on your PHP install.",
    "description": "<p>APC Object Cache provides a persistent memory-based backend for the WordPress object cache. APC must be available on your PHP install.</p>\n<p>An object cache is a place for WordPress and WordPress extensions to store the results of complex operations. On subsequent loads,<br />\nthis data can be fetched from the cache, which will be must faster than dynamically generating it on every page load.</p>\n<p>The APC Object Cache backend is also compatible with <a href=\"https://wordpress.org/extend/plugins/batcache/\" rel=\"ugc\">Batcache</a>, the powerful full page caching engine that runs on WordPress.com</p>\n<p>Be sure to read the installation instructions, as this is <strong>not</strong> a traditional plugin, and needs to be installed in a specific location.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/apc.2.0.7.zip",
    "upgrade_notice": {
        "2.0.5": "<p>Upgrade for better WordPress Multisite support and WP-CLI support.</p>",
        "2.0.4": "<p>More helpful error message for people who try to activate this as a plugin.</p>",
        "2.0.3": "<p>Object cloning and a fix for the boolean true value bug. Parity with Memcache backend, as much as was possible.</p>",
        "2.0.2": "<p>Support for lower versions of APC (Batcache, especially). Adds support for more esoteric <code>wp-config.php</code> setups, and adds minor performance tweaks.</p>",
        "2.0.1": "<p>Fixed bugs regarding wp_cache_delete()</p>",
        "2.0": "<p>First update in four years! This should last you a while.</p>"
    },
    "screenshots": [],
    "tags": {
        "apc": "apc",
        "backend": "backend",
        "cache": "cache",
        "object-cache": "object cache",
        "performance": "performance"
    },
    "stable_tag": "2.0.7",
    "versions": {
        "2.0": "https://downloads.wordpress.org/plugin/apc.2.0.zip",
        "2.0.1": "https://downloads.wordpress.org/plugin/apc.2.0.1.zip",
        "2.0.2": "https://downloads.wordpress.org/plugin/apc.2.0.2.zip",
        "2.0.2-beta": "https://downloads.wordpress.org/plugin/apc.2.0.2-beta.zip",
        "2.0.3": "https://downloads.wordpress.org/plugin/apc.2.0.3.zip",
        "2.0.4": "https://downloads.wordpress.org/plugin/apc.2.0.4.zip",
        "2.0.5": "https://downloads.wordpress.org/plugin/apc.2.0.5.zip",
        "2.0.6": "https://downloads.wordpress.org/plugin/apc.2.0.6.zip",
        "2.0.7": "https://downloads.wordpress.org/plugin/apc.2.0.7.zip",
        "trunk": "https://downloads.wordpress.org/plugin/apc.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://txfx.net/wordpress-plugins/donate",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/apc.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}