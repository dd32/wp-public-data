{
    "name": "WP-API JSON Feed",
    "slug": "wp-api-json-feed",
    "version": "1.1.0",
    "author": "<a href=\"https://felix-arntz.me\">Felix Arntz</a>",
    "author_profile": "https://profiles.wordpress.org/flixos90/",
    "contributors": {
        "flixos90": {
            "profile": "https://profiles.wordpress.org/flixos90/",
            "avatar": "https://secure.gravatar.com/avatar/311f5b078f20df54be55cbe1a5a45f1e?s=96&d=monsterid&r=g",
            "display_name": "Felix Arntz"
        }
    },
    "requires": "5.4",
    "tested": "6.6.1",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wp-api-json-feed/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 30,
    "downloaded": 3192,
    "last_updated": "2024-08-13 21:53:00",
    "added": "2017-05-22",
    "homepage": "https://wordpress.org/plugins/wp-api-json-feed/",
    "sections": {
        "description": "<p>Implements JSON feeds following the official JSON feed specification by using the WordPress REST API. By default, only a JSON feed for regular posts is added. This can be easily customized to also provide JSON feeds for e.g. certain custom post types.</p>\n<ul>\n<li>Adds JSON feeds following the official <a href=\"https://jsonfeed.org/version/1.1\" rel=\"nofollow ugc\">version 1.1 spec</a>.</li>\n<li>Adds a JSON feed for posts to the REST API by default (e.g. at <code>/wp-json/feed/v1/posts</code>).</li>\n<li>Allows adding JSON feeds for other post types by using a <code>show_json_feed</code> argument when registering the post type.</li>\n<li>Places a link tag to the current feed inside the HTML head tag.</li>\n<li>Maintains backward compatibility with the previous JSON feed <a href=\"https://www.jsonfeed.org/version/1/\" rel=\"nofollow ugc\">version 1 spec</a>.</li>\n<li>Contains extensive filters to modify the feed responses as necessary.</li>\n</ul>\n",
        "installation": "<ol>\n<li>Upload the entire <code>wp-api-json-feed</code> folder to the <code>/wp-content/plugins/</code> directory or download it through the WordPress backend.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n</ol>\n<h4>Administration</h4>\n<p>Once the plugin is activated, it will work out of the box and provide a JSON feed for posts. If you want to provide JSON feeds for further post types, you need to specify an additional argument <code>show_json_feed</code> when registering the post type, and set it to a boolean <code>true</code>. You may also specify a <code>json_feed_base</code> argument being a string identifier that should be used in the feed URL. If no string identifier is provided, the post type slug will be used.</p>\n",
        "faq": "\n<dt id='how%20can%20i%20add%20a%20feed%20for%20my%20custom%20post%20type%3F'>\nHow can I add a feed for my custom post type?\n</h4>\n<p>\n<p>To provide a JSON feed for your custom post type, you need to specify an additional argument <code>show_json_feed</code> when registering the post type, and set it to a boolean <code>true</code>. You may optionally specify a <code>json_feed_base</code> argument being a string identifier that should be used in the feed URL. If no string identifier is provided, the post type slug will be used.</p>\n<p>Here is an example, supporting a JSON feed for a custom post type &#8220;article&#8221; and setting its feed base to &#8220;articles&#8221; so that the feed will appear at <code>{restURL}/feed/v1/articles</code>.</p>\n<pre><code>&lt;?php\n\nadd_filter(\n    'register_post_type_args',\n    function ( $args, $post_type ) {\n        if ( 'article' === $post_type ) {\n            $args['show_json_feed'] = true;\n            $args['json_feed_base'] = 'articles';\n        }\n        return $args;\n    },\n    10,\n    2\n);\n</code></pre>\n</p>\n<dt id='why%20does%20the%20json%20feed%20contain%20fields%20which%20are%20not%20part%20of%20the%20schema%3F'>\nWhy does the JSON feed contain fields which are not part of the schema?\n</h4>\n<p>\n<p>Since the JSON feed schema is always future compatible, by default the plugin preserves backward compatibility with older JSON feed readers by maintaining deprecated fields such as <code>author</code>. You can skip this backward compatibility behavior by using the <code>wp_api_json_feed_skip_backward_compatibility</code> filter and returning <code>true</code>.</p>\n</p>\n<dt id='where%20should%20i%20submit%20my%20support%20request%3F'>\nWhere should I submit my support request?\n</h4>\n<p>\n<p>For regular support requests, please use the <a href=\"https://wordpress.org/support/plugin/wp-api-json-feed\" rel=\"ugc\">wordpress.org support forums</a>. If you have a technical issue with the plugin where you already have more insight on how to fix it, you can also <a href=\"https://github.com/felixarntz/wp-api-json-feed/issues\" rel=\"nofollow ugc\">open an issue on GitHub instead</a>.</p>\n</p>\n<dt id='how%20can%20i%20contribute%20to%20the%20plugin%3F'>\nHow can I contribute to the plugin?\n</h4>\n<p>\n<p>If you have ideas to improve the plugin or to solve a bug, feel free to raise an issue or submit a pull request in the <a href=\"https://github.com/felixarntz/wp-api-json-feed\" rel=\"nofollow ugc\">GitHub repository for the plugin</a>. Please stick to the <a href=\"https://github.com/felixarntz/wp-api-json-feed/blob/main/CONTRIBUTING.md\" rel=\"nofollow ugc\">contributing guidelines</a>.</p>\n<p>You can also contribute to the plugin by translating it. Simply visit <a href=\"https://translate.wordpress.org/projects/wp-plugins/wp-api-json-feed\" rel=\"nofollow ugc\">translate.wordpress.org</a> to get started.</p>\n</p>\n\n",
        "changelog": "<h4>1.1.0</h4>\n<ul>\n<li>Added: Add support for the <a href=\"https://jsonfeed.org/version/1.1\" rel=\"nofollow ugc\">JSON feed 1.1 spec</a>.</li>\n<li>Added: Introduce filter <code>wp_api_json_feed_skip_backward_compatibility</code> to optionally skip JSON feed fields included for backward compatibility with <a href=\"https://jsonfeed.org/version/1\" rel=\"nofollow ugc\">JSON feed 1.0 spec</a>.</li>\n<li>Enhanced: Include a <code>&lt;link&gt;</code> tag for the most relevant JSON feed based on the current content, in addition to the general posts JSON feed.</li>\n<li>Enhanced: Include a <code>user_comment</code> field in the JSON feeds.</li>\n<li>Tweaked: Bump the minimum required WordPress and PHP versions.</li>\n<li>Tweaked: Use modern test infrastructure including revised PHPUnit tests, and GitHub Actions to ensure long-term stability.</li>\n<li>Fixed: Remove unnecessary call to <code>load_plugin_textdomain()</code>.</li>\n</ul>\n<h4>1.0.0</h4>\n<ul>\n<li>First stable version</li>\n</ul>\n"
    },
    "short_description": "Implements JSON feeds following the official JSON feed specification by using the WordPress REST API.",
    "description": "<p>Implements JSON feeds following the official JSON feed specification by using the WordPress REST API. By default, only a JSON feed for regular posts is added. This can be easily customized to also provide JSON feeds for e.g. certain custom post types.</p>\n<ul>\n<li>Adds JSON feeds following the official <a href=\"https://jsonfeed.org/version/1.1\" rel=\"nofollow ugc\">version 1.1 spec</a>.</li>\n<li>Adds a JSON feed for posts to the REST API by default (e.g. at <code>/wp-json/feed/v1/posts</code>).</li>\n<li>Allows adding JSON feeds for other post types by using a <code>show_json_feed</code> argument when registering the post type.</li>\n<li>Places a link tag to the current feed inside the HTML head tag.</li>\n<li>Maintains backward compatibility with the previous JSON feed <a href=\"https://www.jsonfeed.org/version/1/\" rel=\"nofollow ugc\">version 1 spec</a>.</li>\n<li>Contains extensive filters to modify the feed responses as necessary.</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-api-json-feed.1.1.0.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-api-json-feed/assets/screenshot-1.png?rev=2982096",
            "caption": "Example JSON feed response generated by the plugin"
        }
    ],
    "tags": {
        "feed": "feed",
        "json-feed": "json feed",
        "rest-api": "rest-api"
    },
    "stable_tag": "1.1.0",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/wp-api-json-feed.1.0.0.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/wp-api-json-feed.1.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-api-json-feed.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://felix-arntz.me/wordpress-plugins/",
    "banners": {
        "low": "https://ps.w.org/wp-api-json-feed/assets/banner-772x250.png?rev=2982096",
        "high": "https://ps.w.org/wp-api-json-feed/assets/banner-1544x500.png?rev=2982096"
    },
    "icons": {
        "1x": "https://ps.w.org/wp-api-json-feed/assets/icon-128x128.png?rev=2982096",
        "2x": "https://ps.w.org/wp-api-json-feed/assets/icon-256x256.png?rev=2982096"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}