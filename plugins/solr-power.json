{
    "name": "Solr Search for WordPress",
    "slug": "solr-power",
    "version": "2.5.3",
    "author": "<a href=\"http://pantheon.io\">Pantheon</a>",
    "author_profile": "https://profiles.wordpress.org/getpantheon/",
    "contributors": {
        "getpantheon": {
            "profile": "https://profiles.wordpress.org/getpantheon/",
            "avatar": "https://secure.gravatar.com/avatar/f49a8919fd068cbbb81b36643367070a?s=96&d=monsterid&r=g",
            "display_name": "Pantheon Systems"
        },
        "outlandish-josh": {
            "profile": "https://profiles.wordpress.org/outlandish-josh/",
            "avatar": "https://secure.gravatar.com/avatar/3724b2b5f307aafd318d943796e54ab1?s=96&d=monsterid&r=g",
            "display_name": "Josh Koenig"
        },
        "10up": {
            "profile": "https://profiles.wordpress.org/10up/",
            "avatar": "https://secure.gravatar.com/avatar/78f1d9ceab2dbc8f92f875ec1637e2f1?s=96&d=monsterid&r=g",
            "display_name": "10up"
        },
        "collinsinternet": {
            "profile": "https://profiles.wordpress.org/collinsinternet/",
            "avatar": "https://secure.gravatar.com/avatar/a6ca97d2af82f4616c60f234c634be0c?s=96&d=monsterid&r=g",
            "display_name": "Allan Collins"
        },
        "andrewtaylor-1": {
            "profile": "https://profiles.wordpress.org/andrewtaylor-1/",
            "avatar": "https://secure.gravatar.com/avatar/65a38e6607bb16a7314f098d172fea38?s=96&d=monsterid&r=g",
            "display_name": "Andrew Taylor"
        },
        "danielbachhuber": {
            "profile": "https://profiles.wordpress.org/danielbachhuber/",
            "avatar": "https://secure.gravatar.com/avatar/560b284fd021779ea4817470074133f1?s=96&d=monsterid&r=g",
            "display_name": "Daniel Bachhuber"
        },
        "mattleff": {
            "profile": "https://profiles.wordpress.org/mattleff/",
            "avatar": "https://secure.gravatar.com/avatar/07949f61db7413f62faaa43b5fc49b5f?s=96&d=monsterid&r=g",
            "display_name": "Matthew Leffler"
        },
        "mikengarrett": {
            "profile": "https://profiles.wordpress.org/mikengarrett/",
            "avatar": "https://secure.gravatar.com/avatar/346d3925bf75edc1ad8836c83d9f7dbe?s=96&d=monsterid&r=g",
            "display_name": "MikeNGarrett"
        },
        "jazzs3quence": {
            "profile": "https://profiles.wordpress.org/jazzs3quence/",
            "avatar": "https://secure.gravatar.com/avatar/2e6c0a0ecb51c9d67263485a1713294d?s=96&d=monsterid&r=g",
            "display_name": "Chris Reynolds"
        },
        "jspellman": {
            "profile": "https://profiles.wordpress.org/jspellman/",
            "avatar": "https://secure.gravatar.com/avatar/f0a6a9ca58a5db894454f3f21bde2eff?s=96&d=monsterid&r=g",
            "display_name": "John Spellman"
        },
        "pwtyler": {
            "profile": "https://profiles.wordpress.org/pwtyler/",
            "avatar": "https://secure.gravatar.com/avatar/6ed3c3f6fbbbe9bb72dc544fae6b3974?s=96&d=monsterid&r=g",
            "display_name": "pwtyler"
        }
    },
    "requires": "4.6",
    "tested": "6.5.5",
    "requires_php": "7.1",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 80,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 1,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/solr-power/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 66607,
    "last_updated": "2024-04-25 00:01:00",
    "added": "2015-11-20",
    "homepage": "",
    "sections": {
        "description": "<p><a href=\"https://travis-ci.org/pantheon-systems/solr-power\" rel=\"nofollow ugc\"></a><br />\n<a href=\"https://circleci.com/gh/pantheon-systems/solr-power\" rel=\"nofollow ugc\"></a></p>\n<p>Search is critical for your site, but the default search for WordPress leaves a lot to be desired. Improve your user experience with the Apache Solr search engine for your WordPress website.</p>\n<ul>\n<li>Fast results, with better accuracy.</li>\n<li>Enables faceting on fields such as tags, categories, author, and page type.</li>\n<li>Indexing and faceting on custom fields.</li>\n<li>Drop-in support for <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query\" rel=\"nofollow ugc\">WP_Query</a> with the <code>solr_integrate</code> parameter set to true.</li>\n<li>Completely replaces default WordPress search, just install and configure.</li>\n<li>Completely integrated into default WordPress theme and search widget.</li>\n<li>Very developer-friendly: uses the modern <a href=\"http://www.solarium-project.org/\" rel=\"nofollow ugc\">Solarium</a> library</li>\n</ul>\n<h3>Development</h3>\n<p>This plugin is under active development on GitHub:</p>\n<p><a href=\"https://github.com/pantheon-systems/solr-power\" rel=\"nofollow ugc\">https://github.com/pantheon-systems/solr-power</a></p>\n<p>Please feel free to file issues there. Pull requests are also welcome! See <a href=\"https://github.com/pantheon-systems/solr-power/blob/main/CONTRIBUTING.md\" rel=\"nofollow ugc\">CONTRIBUTING.md</a> for information on contributing.</p>\n<p>For further documentation, such as available filters and working with the <code>SolrPower_Api</code> class directly, please see the project wiki:</p>\n<p><a href=\"https://github.com/pantheon-systems/solr-power/wiki\" rel=\"nofollow ugc\">https://github.com/pantheon-systems/solr-power/wiki</a></p>\n<p>You may notice there are two sets of tests running, on two different services:</p>\n<ul>\n<li><a href=\"https://phpunit.de/\" rel=\"nofollow ugc\">PHPUnit</a> test suite against a Solr instance.</li>\n<li>The <a href=\"http://behat.org/\" rel=\"nofollow ugc\">Behat</a> test suite against a Pantheon site, to ensure the plugin&#8217;s compatibility with the Pantheon platform.</li>\n</ul>\n<p>Both of these test suites can be run locally, with a varying amount of setup.</p>\n<p>PHPUnit requires the <a href=\"https://make.wordpress.org/core/handbook/testing/automated-testing/phpunit/\" rel=\"nofollow ugc\">WordPress PHPUnit test suite</a>, and access to a database with name <code>wordpress_test</code>. If you haven&#8217;t already configured the test suite locally, you can run <code>bash bin/install-wp-tests.sh wordpress_test root '' localhost</code>. You&#8217;ll also need access to a running Solr instance, in order to run the unit tests against Solr.</p>\n<p>Behat requires a Pantheon site with Solr enabled. Once you&#8217;ve created the site, you&#8217;ll need <a href=\"https://github.com/pantheon-systems/terminus#installation\" rel=\"nofollow ugc\">install Terminus</a>, and set the <code>TERMINUS_TOKEN</code>, <code>TERMINUS_SITE</code>, and <code>TERMINUS_ENV</code> environment variables. Then, you can run <code>./bin/behat-prepare.sh</code> to prepare the site for the test suite.</p>\n<p>Note that dependencies are installed via Composer and the <code>vendor</code> directory is not committed to the repository. You will need to run <code>composer install</code> locally for the plugin to function. You can read more about Composer <a href=\"https://getcomposer.org\" rel=\"nofollow ugc\">here</a></p>\n<h3>WP-CLI Support</h3>\n<p>This plugin has <a href=\"http://wp-cli.org/\" rel=\"nofollow ugc\">WP-CLI</a> support.</p>\n<p>All Solr Power related commands are grouped into the <code>wp solr</code> command, see an example:</p>\n<pre><code>$ wp solr\nusage: wp solr check-server-settings\n   or: wp solr delete [&lt;id&gt;...] [--all]\n   or: wp solr index [--batch=&lt;batch&gt;] [--batch_size=&lt;size&gt;] [--post_type=&lt;post-type&gt;]\n   or: wp solr info [--field=&lt;field&gt;] [--format=&lt;format&gt;]\n   or: wp solr optimize-index\n   or: wp solr repost-schema\n   or: wp solr stats [--field=&lt;field&gt;] [--format=&lt;format&gt;]\n\nSee 'wp help solr &lt;command&gt;' for more information on a specific command.\n</code></pre>\n<p>You can see more details about the commands using <code>wp help solr</code>:</p>\n<pre><code>**NAME**\n\n  wp solr\n\n**DESCRIPTION**\n\n  Perform a variety of actions against your Solr instance.\n\n**SYNOPSIS**\n\n  wp solr &lt;command&gt;\n\n**SUBCOMMANDS**\n\n  check-server-settings      Check server settings.\n  delete                     Remove one or more posts from the index.\n  index                      Index all posts for a site.\n  info                       Report information about Solr Power configuration.\n  optimize-index             Optimize the Solr index.\n  repost-schema              Repost schema.xml to Solr.\n  stats                      Report stats about indexed content.&lt;h3&gt;WP_Query Integration&lt;/h3&gt;\n</code></pre>\n<p>Use Solr in a custom WP_Query instead of querying a database. Add <code>'solr_integrate' =&gt; true</code> to the query arguments.</p>\n<p><strong>NOTE:</strong> Currently, only basic queries, tax_query, meta_query and date_query are supported. See <code>examples/example.custom_WP_Query.php</code> for an example.</p>\n<p>A meta_query can use the following compare operators:</p>\n<ul>\n<li><code>'='</code></li>\n<li><code>'!='</code></li>\n<li><code>'&gt;'</code></li>\n<li><code>'&gt;='</code></li>\n<li><code>'&lt;'</code></li>\n<li><code>'&lt;='</code></li>\n<li><code>'LIKE'</code></li>\n<li><code>'NOT LIKE'</code></li>\n<li><code>'IN'</code></li>\n<li><code>'NOT IN'</code></li>\n<li><code>'BETWEEN'</code></li>\n<li><code>'NOT BETWEEN'</code></li>\n<li><code>'EXISTS'</code></li>\n<li><code>'NOT EXISTS'</code></li>\n</ul>\n<p>(<code>'REGEXP'</code>, <code>'NOT REGEXP'</code>, and <code>'RLIKE'</code> are not supported.)</p>\n<h3>Configuration Tips</h3>\n</p>\n<p><h4>Searching by author name</h4>\n</p>\n<p>To support searching by author name (e.g. where &#8220;Pantheon&#8221; would return posts authored by the &#8220;Pantheon&#8221; user), add the following to your custom <code>schema.xml</code>:</p>\n<pre><code>  &lt;copyField source=\"post_author\" dest=\"text\"/&gt;\n</code></pre>\n<p><h4>Boosting relevancy score by publish date</h4>\n</p>\n<p>The following guidance can be used to extend the Solr index and modify boosts beyond just this example.</p>\n<p>To support math functions on dates, you must add a custom <code>schema.xml</code> to Solr and <strong>reindex with the new schema</strong>.</p>\n<p>Add the following to <code>schema.xml</code>:</p>\n<pre><code>  &lt;!-- Add to &lt;types&gt; --&gt;\n  &lt;!-- See: https://lucene.apache.org/solr/6_2_0/solr-core/org/apache/solr/schema/TrieDateField.html --&gt;\n  &lt;fieldType name=\"tdate\" class=\"solr.TrieDateField\" omitNorms=\"true\" precisionStep=\"6\" positionIncrementGap=\"0\"/&gt;\n\n  &lt;!-- Add to &lt;fields&gt; --&gt;\n  &lt;field name=\"post_date_iso\" type=\"tdate\" indexed=\"true\" stored=\"true\" required=\"true\" /&gt;\n</code></pre>\n<p>Add the following to your <code>functions.php</code> file.</p>\n<pre><code>  &lt;?php\n  /**\n   * Hooks into the document build process to add post date field in proper format.\n   */\n  function my_solr_build_document( $doc, $post_info ) {\n        $post_time = strtotime( $post_info-&gt;post_date );\n        // Matches format required for TrieDateField\n        $doc-&gt;setField( 'post_date_iso', gmdate( 'c\\Z', $post_time ) );\n        return $doc;\n  }\n  add_filter( 'solr_build_document', 'my_solr_build_document', 10, 2 );\n\n  /**\n   * Hooks into query processor, Dismax, to add publish date boost.\n   * See: https://www.metaltoad.com/blog/date-boosting-solr-drupal-search-results\n   */\n  function my_solr_dismax_query( $dismax ) {\n        $dismax-&gt;setQueryParser( 'edismax' );\n        $dismax-&gt;setBoostQuery( 'recip(abs(ms(NOW/HOUR,post_date_iso),3.16e-11,1,1))' );\n        return $dismax;\n  }\n  add_filter( 'solr_dismax_query', 'my_solr_dismax_query' );\n</code></pre>\n<p><h4>Common issues</h4>\n</p>\n<ul>\n<li>Failing to post the schema.xml will result in an error during indexing, &#8220;Missing <code>post_date_iso</code> field.&#8221;</li>\n<li>If you have the field and type in the schema, but don&#8217;t add the <code>solr_build_document</code> filter, you will get a similar error.</li>\n<li>If the <code>post_date_iso</code> field is missing from the index, Solr will ignore this boost and return regular results.</li>\n<li>Trying to use a regular date field for the boost query will result in an error in the request instead of results.</li>\n</ul>\n<p><h4>Explicit Commit vs Autocommit</h4>\n</p>\n<p>Once solr has sent the data to the solr server, solr must COMMIT the data to the index and adjust the index and relevancy ratings accordingly before that data can appear in search results.</p>\n<p>By default, Solr Search for WordPress has auto-commit disabled. The index is committed when the uncommitted item is two minutes old, or the cron runs. By default, the cron runs on the Pantheon platform every hour.</p>\n<p>When autocommit is enabled, Solr Search for WordPress commits data when it sends every post. When running on Pantheon, we recommend leaving autocommit disabled to aid overall site performance.</p>\n<p>To enable autocommit, add the following to <code>wp-config.php</code> or an mu-plugin.</p>\n<pre><code>  define( 'SOLRPOWER_DISABLE_AUTOCOMMIT', false );\n</code></pre>\n<p>To force-commit data outside of a normal cron run, from the command line, you can run the command below or simply force a cron-run.</p>\n<pre><code>  wp solr commit\n</code></pre>\n",
        "installation": "<p>The Solr Power plugin can be installed just like you&#8217;d install any other WordPress plugin.</p>\n<p>Because Solr Power is intended to be a bridge between WordPress and the Apache Solr search engine, you&#8217;ll need access to a functioning Solr 3.6 instance for the plugin to work as expected. This plugin does not support other versions of Solr. The plugin also requires PHP 7.1 or higher.</p>\n<p>If you&#8217;re using the Solr Power plugin on Pantheon, setting up Apache Solr is as easy as enabling the Apache Solr add-on in your Pantheon dashboard. Once you&#8217;ve done so:</p>\n<ol>\n<li>Configure which post types, taxonomies and custom fields to index by going to the <strong>Indexing</strong> tab of the Solr Power settings page.</li>\n<li>Index your existing content by going to the plugin options screen and selecting the applicable <strong>Actions</strong>:\n<ul>\n<li>\n<ul>\n<li><strong>Index Searchable Post Types</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Search on!</li>\n<li>See the examples/templates directories for more rich implementation guidelines.</li>\n</ol>\n<p>If you&#8217;re using the Solr Power plugin elsewhere, you&#8217;ll need to install and configure Apache Solr. On a Linux environment, this involves four steps:</p>\n<ol>\n<li>Install the Java Runtime Environment.</li>\n<li>Run <code>./bin/install-solr.sh</code> to install and run Apache Solr on port 8983.</li>\n<li>Configuring Solr Power to use this particular Solr instance by setting the <code>PANTHEON_INDEX_HOST</code> and <code>PANTHEON_INDEX_PORT</code> environment variables.</li>\n<li>Copying <code>schema.xml</code> to the Solr configuration directory (a path similar to <code>solr/conf/schema.xml</code>).</li>\n</ol>\n<p>Alternatively, there are a couple of community-maintained Docker containers you may be able to use: <a href=\"https://hub.docker.com/r/kalabox/pantheon-solr/\" rel=\"nofollow ugc\">kalabox/pantheon-solr</a>, <a href=\"https://hub.docker.com/r/kshaner/solr/\" rel=\"nofollow ugc\">kshaner/solr</a>.</p>\n<p>In a local development environment, you can point Solr Power to a custom Solr instance by creating a MU plugin with:</p>\n<pre><code>&lt;?php\n/**\n * Define Solr host IP, port, scheme and path\n * Update these as necessary if your configuration differs\n */\nputenv( 'PANTHEON_INDEX_HOST=192.168.50.4' );\nputenv( 'PANTHEON_INDEX_PORT=8983' );\nadd_filter( 'solr_scheme', function(){ return 'http'; });\ndefine( 'SOLR_PATH', '/solr/wordpress/' );\n</code></pre>\n<p>** Note for Lando users **</p>\n<p>If you are using lando for development, the MU plugin is not needed. Lando auto configures everything for your local environment to connect to the docker index it maintains and if you overrite the ENV variables it will mess with that configuration.</p>\n",
        "faq": "\n<dt id='where%20do%20i%20report%20security%20bugs%20found%20in%20this%20plugin%3F'>\nWhere do I report security bugs found in this plugin?\n</h4>\n<p>\n<p>Please report security bugs found in the source code of the Solr Power plugin through the <a href=\"https://patchstack.com/database/vdp/solr-power\" rel=\"nofollow ugc\">Patchstack Vulnerability Disclosure Program</a>. The Patchstack team will assist you with verification, CVE assignment, and notify the developers of this plugin.</p>\n</p>\n\n",
        "changelog": "<h4>2.5.3 (April 24, 2024)</h4>\n<ul>\n<li>Fixes a very old bug that would cause tax queries to be built incorrectly. [<a href=\"https://github.com/pantheon-systems/solr-power/pull/622\" rel=\"nofollow ugc\">#622</a>] (props <a href=\"https://wordpress.org/support/users/offshorealert/\" rel=\"ugc\">@offshorealert</a>)</li>\n</ul>\n<h4>2.5.2 (September 12, 2023)</h4>\n<ul>\n<li>Fix incompatibility with Object Cache Pro when running &#8220;wp solr index&#8221; [<a href=\"https://github.com/pantheon-systems/solr-power/pull/611\" rel=\"nofollow ugc\">#611</a>]</li>\n</ul>\n<h4>2.5.1</h4>\n<ul>\n<li>Fix Solr not indexing automatically [<a href=\"https://github.com/pantheon-systems/solr-power/pull/598\" rel=\"nofollow ugc\">#598</a>]</li>\n<li>Fixed issue with empty/zero value for posts_per_page [<a href=\"https://github.com/pantheon-systems/solr-power/pull/599\" rel=\"nofollow ugc\">#599</a>] (props @threeiem)</li>\n</ul>\n<h4>2.5.0</h4>\n<ul>\n<li>Updates CONTRIBUTING.md [<a href=\"https://github.com/pantheon-systems/solr-power/pull/585\" rel=\"nofollow ugc\">#585</a>] [<a href=\"https://github.com/pantheon-systems/solr-power/pull/594\" rel=\"nofollow ugc\">#594</a>]</li>\n<li>Fixes typo in var which caused undefined notice [<a href=\"https://github.com/pantheon-systems/solr-power/pull/582\" rel=\"nofollow ugc\">#582</a>]</li>\n<li>Update Composer dependencies [<a href=\"https://github.com/pantheon-systems/solr-power/pull/576\" rel=\"nofollow ugc\">#576</a>] [<a href=\"https://github.com/pantheon-systems/solr-power/pull/583\" rel=\"nofollow ugc\">#574</a>] [<a href=\"https://github.com/pantheon-systems/solr-power/pull/584\" rel=\"nofollow ugc\">#573</a>]</li>\n<li>Updates security policy [<a href=\"https://github.com/pantheon-systems/solr-power/pull/589\" rel=\"nofollow ugc\">#589</a>]</li>\n<li>Disable auto-commit by default. [<a href=\"https://github.com/pantheon-systems/solr-power/pull/591\" rel=\"nofollow ugc\">#591</a>]</li>\n</ul>\n<h4>2.4.5 (April 9, 2023)</h4>\n<ul>\n<li>Fixes missing vendor/ directory in previous release [<a href=\"https://github.com/pantheon-systems/solr-power/pull/580\" rel=\"nofollow ugc\">#580</a>]</li>\n</ul>\n<h4>2.4.4 (April 7, 2023)</h4>\n<ul>\n<li>Update Composer dependencies [<a href=\"https://github.com/pantheon-systems/solr-power/pull/576\" rel=\"nofollow ugc\">#576</a>] [<a href=\"https://github.com/pantheon-systems/solr-power/pull/574\" rel=\"nofollow ugc\">#574</a>] [<a href=\"https://github.com/pantheon-systems/solr-power/pull/573\" rel=\"nofollow ugc\">#573</a>]</li>\n<li>Fix failing tests [<a href=\"https://github.com/pantheon-systems/solr-power/pull/577\" rel=\"nofollow ugc\">#577</a>]</li>\n<li>Update tested up to version</li>\n</ul>\n<h4>2.4.3 (January 19, 2022)</h4>\n<ul>\n<li>Include schema.xml in release distribution [<a href=\"https://github.com/pantheon-systems/solr-power/pull/568\" rel=\"nofollow ugc\">#568</a>]</li>\n</ul>\n<h4>2.4.2 (December 2, 2022)</h4>\n<ul>\n<li>Re-add changelog heading to readme.txt [<a href=\"https://github.com/pantheon-systems/solr-power/pull/564\" rel=\"nofollow ugc\">#564</a>]</li>\n</ul>\n<h4>2.4.1 (December 1, 2022)</h4>\n<ul>\n<li>Fixes the WordPress <code>readme.txt</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/562/\" rel=\"nofollow ugc\">#562</a>]</li>\n</ul>\n<h4>2.4.0 (November 30, 2022)</h4>\n<ul>\n<li>Adds Github Actions for building tag and deploying to wp.org. Add CONTRIBUTING.md. [<a href=\"https://github.com/pantheon-systems/solr-power/issues/551\" rel=\"nofollow ugc\">#551</a>]</li>\n<li>Added SOLRPOWER_DISABLE_AUTOCOMMIT to disable autocommitting of posts, moved CHANGELOG to it&#8217;s own file, added <code>$post-&gt;score</code> value to parsed search results [<a href=\"https://github.com/pantheon-systems/solr-power/pull/559\" rel=\"nofollow ugc\">#559</a>]</li>\n</ul>\n<h4>2.3.3 (September 28, 2022)</h4>\n<ul>\n<li>Fixes issue where options could not be saved [<a href=\"https://github.com/pantheon-systems/solr-power/issues/541\" rel=\"nofollow ugc\">#541</a>]</li>\n<li>Enforces network activation requirement for WordPress multisite [<a href=\"https://github.com/pantheon-systems/solr-power/issues/538\" rel=\"nofollow ugc\">#538</a>]</li>\n</ul>\n<h4>2.3.2 (April 1, 2022)</h4>\n<ul>\n<li>Fixes query filtering for <code>'fields' =&gt; 'id=&gt;parent'</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/528\" rel=\"nofollow ugc\">#528</a>].</li>\n</ul>\n<h4>2.3.1 (March 29, 2022)</h4>\n<ul>\n<li>Adapts <code>posts_pre_query()</code> return values based on &#8216;fields&#8217; argument [<a href=\"https://github.com/pantheon-systems/solr-power/pull/522\" rel=\"nofollow ugc\">#522</a>].</li>\n</ul>\n<h4>2.3.0 (March 29, 2022)</h4>\n<ul>\n<li>Removes incorrect use of <code>array_map( 'get_post' )</code> in <code>posts_pre_query</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/521\" rel=\"nofollow ugc\">#521</a>].</li>\n</ul>\n<h4>2.2.6 (February 22, 2022)</h4>\n<ul>\n<li>Fixes PHP 8 deprecations in <code>class-solrpower-options.php</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/513\" rel=\"nofollow ugc\">#513</a>].</li>\n</ul>\n<h4>2.2.5 (July 27, 2021)</h4>\n<ul>\n<li>Switches to <code>wp_strip_all_tags()</code> to remove style and script tag content [<a href=\"https://github.com/pantheon-systems/solr-power/pull/500\" rel=\"nofollow ugc\">#500</a>].</li>\n</ul>\n<h4>2.2.4 (May 5, 2021)</h4>\n<ul>\n<li>Introduces <code>SOLRPOWER_DISABLE_QUERY_ALT</code> constant for disabling setQueryAlternative behavior [<a href=\"https://github.com/pantheon-systems/solr-power/pull/495\" rel=\"nofollow ugc\">#495</a>].</li>\n</ul>\n<h4>2.2.3 (March 8, 2021)</h4>\n<ul>\n<li>Incorporates the value for <code>$_ENV['FILEMOUNT']</code> when indicating path for <code>schema.xml</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/492\" rel=\"nofollow ugc\">#492</a>].</li>\n</ul>\n<h4>2.2.2 (December 1, 2020)</h4>\n<ul>\n<li>Updates various Composer dependencies [<a href=\"https://github.com/pantheon-systems/solr-power/pull/477\" rel=\"nofollow ugc\">#477</a>].</li>\n<li>Updates README to include detail on how to use TrieDateField for publish date [<a href=\"https://github.com/pantheon-systems/solr-power/pull/466\" rel=\"nofollow ugc\">#466</a>].</li>\n</ul>\n<h4>2.2.1 (July 13, 2020)</h4>\n<ul>\n<li>Avoids pinging Solr unless we actually need, to avoid unnecessary requests [<a href=\"https://github.com/pantheon-systems/solr-power/pull/458\" rel=\"nofollow ugc\">#458</a>].</li>\n</ul>\n<h4>2.2.0 (May 5, 2020)</h4>\n<ul>\n<li>Uses <code>posts_pre_query</code> hook to support use of &#8216;fields&#8217; in <code>WP_Query</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/448\" rel=\"nofollow ugc\">#448</a>].</li>\n</ul>\n<h4>2.1.4 (April 24, 2020)</h4>\n<ul>\n<li>Ensures highlighting is also applied to the post excerpt [<a href=\"https://github.com/pantheon-systems/solr-power/pull/446\" rel=\"nofollow ugc\">#446</a>].</li>\n</ul>\n<h4>2.1.3 (November 16, 2019)</h4>\n<ul>\n<li>Add <code>solr_power_ajax_search_query_args</code> filter to modify AJAX search query arguments [<a href=\"https://github.com/pantheon-systems/solr-power/pull/432\" rel=\"nofollow ugc\">#432</a>].</li>\n</ul>\n<h4>2.1.2 (August 28, 2019)</h4>\n<ul>\n<li>Adds <code>solr_is_private_blog</code> filter to allow control over whether a blog is indexed [<a href=\"https://github.com/pantheon-systems/solr-power/pull/423\" rel=\"nofollow ugc\">#423</a>].</li>\n</ul>\n<h4>2.1.1 (August 14, 2019)</h4>\n<ul>\n<li>Uses some fancy <code>composer</code> magic to unblock WordPress.org plugin updates [<a href=\"https://github.com/pantheon-systems/solr-power/pull/418\" rel=\"nofollow ugc\">#418</a>].</li>\n</ul>\n<h4>2.1.0 (May 22, 2019)</h4>\n<ul>\n<li>Introduces <code>solr_index_stat</code> filter for allowing additional information to be included [<a href=\"https://github.com/pantheon-systems/solr-power/pull/396\" rel=\"nofollow ugc\">#396</a>].</li>\n<li>Introduces <code>solr_facet_operator</code> filter for allowing facet operator to be overridden [<a href=\"https://github.com/pantheon-systems/solr-power/pull/388\" rel=\"nofollow ugc\">#388</a>].</li>\n<li>Ensures warning message appears when activating across the entire network [<a href=\"https://github.com/pantheon-systems/solr-power/pull/399\" rel=\"nofollow ugc\">#399</a>].</li>\n<li>Parses <code>&lt;h1&gt;</code> tags in Solr error response, in addition to <code>&lt;title&gt;</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/407\" rel=\"nofollow ugc\">#407</a>].</li>\n<li>Fixes incorrect variable name when outputting schema error message [<a href=\"https://github.com/pantheon-systems/solr-power/pull/404\" rel=\"nofollow ugc\">#404</a>].</li>\n</ul>\n<h4>2.0.0</h4>\n<ul>\n<li>Fix PHP 7 warning caused by bad conditional</li>\n<li>Ensure <code>$post-&gt;post_author</code> remains user ID when processing WP_Query</li>\n<li>Add a test case asserting that <code>post_title</code> and <code>post_content</code> are not bolded</li>\n<li>Update Solarium to <code>4.1.0</code> and other dependencies updates as needed</li>\n<li>Run automated tests against PHP <code>7.1</code></li>\n<li>Increase the minimum supported PHP version to <code>7.1</code></li>\n</ul>\n<h4>1.5.0</h4>\n<ul>\n<li>Adds support for queries using <code>post__in</code> and <code>post__not_in</code>.</li>\n<li>Clears batch cache when entire index is deleted.</li>\n<li>CLI: Errors early when there are no posts to index.</li>\n<li>Update Composer dependencies</li>\n</ul>\n<h4>1.4.1</h4>\n<ul>\n<li>Introduce <code>batch_size</code> argument for <code>wp solr index</code></li>\n<li>Ensure custom taxonomies are included in widget facets</li>\n<li>Mention available Docker containers in README</li>\n<li>Properly handle negative integers when indexing and querying</li>\n<li>Increase precision of <code>test_wp_query_failed_ping</code> to avoid racy failures</li>\n<li>Catch exception when <code>$search-&gt;getData()</code> fails</li>\n<li>Remove unused global imports for $current_blog</li>\n<li>Properly escape dismax query strings</li>\n<li>POST actions to <code>admin.php</code> in network admin</li>\n<li>Define checked files in PHPCS config so <code>phpcs</code> can easily be run</li>\n<li>Remove unused global imports for $current_blog</li>\n<li>Define checked files in PHPCS config so <code>phpcs</code> can easily be run</li>\n<li>Rename PHPCS config to correct name</li>\n</ul>\n<h4>1.4.0</h4>\n<ul>\n<li>Bumps minimum supported version to WordPress 4.6.</li>\n<li>Updates bundled Solarium library to 3.8.1.</li>\n<li>Fixes Solr queries using <code>orderby=&gt;meta_value_num</code> [<a href=\"https://github.com/pantheon-systems/solr-power/pull/299\" rel=\"nofollow ugc\">#299</a>].</li>\n<li>Use <code>$_SERVER['HOME']</code> as a reliable way of finding the cert on Pantheon [<a href=\"https://github.com/pantheon-systems/solr-power/pull/314\" rel=\"nofollow ugc\">#314</a>].</li>\n</ul>\n<h4>1.3.0</h4>\n<ul>\n<li>Add <code>.distignore</code> file for wp dist-archive solr-power</li>\n<li>Make Solr in the admin opt-in only using the <code>solr_allow_admin</code> filter</li>\n<li>Error early when <code>PANTHEON_ENVIRONMENT</code> isn&#8217;t set</li>\n<li>Clarify error message when environment variables aren&#8217;t set</li>\n<li>Mention copying <code>schema.xml</code> and supported Solr version in README</li>\n<li>Include original plugin attribution in the copyright notice</li>\n<li>Boost <code>post_title</code> more than <code>post_content</code> with sane boost values</li>\n<li>Add missing filter for custom fields</li>\n<li>Boost posts with matching titles to the top of results</li>\n<li>Remove duplicate options when initializing them</li>\n<li>Match author name in search results</li>\n<li>Bug fixes</li>\n<li>Adhere to WordPress coding standards in PHP files</li>\n</ul>\n<h4>1.2.0</h4>\n<ul>\n<li>Add multisite support</li>\n<li>Respect all query vars when searching with <code>WP_Query</code></li>\n<li>Display error from schema submit response when Solr includes one</li>\n</ul>\n<h4>1.1.0</h4>\n<ul>\n<li>Introduce a new class for managing batch indexes</li>\n<li>Rewrite <code>wp solr index</code> to provide more verbosity</li>\n<li>Make batch indexes resumeable by logging <code>paged</code> to an option</li>\n<li>Remove old <code>wp solr index</code> code</li>\n<li>Fire <code>solr_power_index_all_finished</code> action when indexing is complete</li>\n<li>Ensure a completion message displays after indexing is complete</li>\n<li>Fix a bug around Solr taking over searches in wp-admin</li>\n<li>Properly apply the <code>solr_allow_admin</code> and <code>solr_allow_ajax</code> filters</li>\n<li>Add <code>solr_boost_query</code> filter for boosted items</li>\n<li>Add <code>solr_dismax_query</code> filter for Dismax</li>\n<li>Add <code>get_post_types</code> and <code>get_post_statuses</code> helper methods</li>\n<li>Remove unnecessary <code>get_env</code> call</li>\n<li>Add <code>solr_post_status</code> filter</li>\n<li>Add missing <code>solr_post_types</code> filter to <code>get_post_types</code> call</li>\n<li>Use <code>PANTHEON_INDEX_PORT</code> instead of hard-coded port in curl</li>\n</ul>\n<h4>1.0.0</h4>\n<ul>\n<li>Add Ajax functionality to the facet search widget</li>\n<li>Add date_query support to WP_Query Integration</li>\n<li>Allow <code>s</code> parameter for WP_Query when Solr is enabled</li>\n<li>Checks for searchable post type before indexing modified post</li>\n<li>Test with WordPress 4.7</li>\n<li>Add <code>solr_power_index_all_finished</code> action when indexing all posts is complete</li>\n<li>Allow post_title and post_content to score higher</li>\n<li>Make sure that integers and float values are actually of that type. Otherwise, Solr will fail to index the document.</li>\n</ul>\n<h4>0.6.0</h4>\n<ul>\n<li>Advanced WP_Query Integration &#8211; Meta Queries, Tax Queries</li>\n<li>Translatable strings standardized</li>\n<li>Facet query fixes</li>\n<li>Hide schema submit option if not on the Pantheon platform</li>\n<li>Added a method for API status</li>\n<li>Document available filters</li>\n<li>Fixed single quote/character issues in the facet widget</li>\n</ul>\n<h4>0.5.0</h4>\n<ul>\n<li>Add facet search widget</li>\n<li>Update options page internals to utilize WordPress settings API</li>\n<li>Add Behat tests to ensure the plugin&#8217;s compatibility with the Pantheon platform.</li>\n<li>Defork Solarium and update it to version 3.6.0</li>\n</ul>\n<h4>0.4.1</h4>\n<ul>\n<li>Do not allow plugin activation if the <code>PANTHEON_INDEX_HOST</code> or <code>PANTHEON_INDEX_PORT</code> environment variables are not set. Instead, show an admin notice to the user advising them to configure the environment variables.</li>\n</ul>\n<h4>0.4</h4>\n<ul>\n<li>Auto submission of schema.xml</li>\n<li>Moved legacy functions to a separate file</li>\n<li>PHP version check &#8211; warn in the WordPress dashboard and disable Solr Power plugin if the PHP version is less than 5.4</li>\n</ul>\n<h4>0.3</h4>\n<ul>\n<li>Bug fixes</li>\n<li>Settings page updates</li>\n<li>Filters for AJAX/Admin integration</li>\n<li>Indexing all publicly queryable post types</li>\n<li>Debug Bar Extension</li>\n<li>Default sort option on settings page</li>\n<li>Initial WP CLI integration</li>\n</ul>\n<h4>0.2</h4>\n<ul>\n<li>Works &#8220;out of the box&#8221; by overriding WP_Query()</li>\n<li>Much improved internal factoring</li>\n</ul>\n<h4>0.1</h4>\n<ul>\n<li>Initial alpha release (GitHub only)</li>\n</ul>\n<h4>0.0</h4>\n<ul>\n<li>Note this started as a fork of this wonderful project: https://github.com/mattweber/solr-for-wordpress</li>\n</ul>\n"
    },
    "short_description": "Improve your user experience with the Apache Solr search engine for your WordPress website.",
    "description": "<p><a href=\"https://travis-ci.org/pantheon-systems/solr-power\" rel=\"nofollow ugc\"></a><br />\n<a href=\"https://circleci.com/gh/pantheon-systems/solr-power\" rel=\"nofollow ugc\"></a></p>\n<p>Search is critical for your site, but the default search for WordPress leaves a lot to be desired. Improve your user experience with the Apache Solr search engine for your WordPress website.</p>\n<ul>\n<li>Fast results, with better accuracy.</li>\n<li>Enables faceting on fields such as tags, categories, author, and page type.</li>\n<li>Indexing and faceting on custom fields.</li>\n<li>Drop-in support for <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query\" rel=\"nofollow ugc\">WP_Query</a> with the <code>solr_integrate</code> parameter set to true.</li>\n<li>Completely replaces default WordPress search, just install and configure.</li>\n<li>Completely integrated into default WordPress theme and search widget.</li>\n<li>Very developer-friendly: uses the modern <a href=\"http://www.solarium-project.org/\" rel=\"nofollow ugc\">Solarium</a> library</li>\n</ul>\n<h3>Development</h3>\n<p>This plugin is under active development on GitHub:</p>\n<p><a href=\"https://github.com/pantheon-systems/solr-power\" rel=\"nofollow ugc\">https://github.com/pantheon-systems/solr-power</a></p>\n<p>Please feel free to file issues there. Pull requests are also welcome! See <a href=\"https://github.com/pantheon-systems/solr-power/blob/main/CONTRIBUTING.md\" rel=\"nofollow ugc\">CONTRIBUTING.md</a> for information on contributing.</p>\n<p>For further documentation, such as available filters and working with the <code>SolrPower_Api</code> class directly, please see the project wiki:</p>\n<p><a href=\"https://github.com/pantheon-systems/solr-power/wiki\" rel=\"nofollow ugc\">https://github.com/pantheon-systems/solr-power/wiki</a></p>\n<p>You may notice there are two sets of tests running, on two different services:</p>\n<ul>\n<li><a href=\"https://phpunit.de/\" rel=\"nofollow ugc\">PHPUnit</a> test suite against a Solr instance.</li>\n<li>The <a href=\"http://behat.org/\" rel=\"nofollow ugc\">Behat</a> test suite against a Pantheon site, to ensure the plugin&#8217;s compatibility with the Pantheon platform.</li>\n</ul>\n<p>Both of these test suites can be run locally, with a varying amount of setup.</p>\n<p>PHPUnit requires the <a href=\"https://make.wordpress.org/core/handbook/testing/automated-testing/phpunit/\" rel=\"nofollow ugc\">WordPress PHPUnit test suite</a>, and access to a database with name <code>wordpress_test</code>. If you haven&#8217;t already configured the test suite locally, you can run <code>bash bin/install-wp-tests.sh wordpress_test root '' localhost</code>. You&#8217;ll also need access to a running Solr instance, in order to run the unit tests against Solr.</p>\n<p>Behat requires a Pantheon site with Solr enabled. Once you&#8217;ve created the site, you&#8217;ll need <a href=\"https://github.com/pantheon-systems/terminus#installation\" rel=\"nofollow ugc\">install Terminus</a>, and set the <code>TERMINUS_TOKEN</code>, <code>TERMINUS_SITE</code>, and <code>TERMINUS_ENV</code> environment variables. Then, you can run <code>./bin/behat-prepare.sh</code> to prepare the site for the test suite.</p>\n<p>Note that dependencies are installed via Composer and the <code>vendor</code> directory is not committed to the repository. You will need to run <code>composer install</code> locally for the plugin to function. You can read more about Composer <a href=\"https://getcomposer.org\" rel=\"nofollow ugc\">here</a></p>\n<h3>WP-CLI Support</h3>\n<p>This plugin has <a href=\"http://wp-cli.org/\" rel=\"nofollow ugc\">WP-CLI</a> support.</p>\n<p>All Solr Power related commands are grouped into the <code>wp solr</code> command, see an example:</p>\n<pre><code>$ wp solr\nusage: wp solr check-server-settings\n   or: wp solr delete [&lt;id&gt;...] [--all]\n   or: wp solr index [--batch=&lt;batch&gt;] [--batch_size=&lt;size&gt;] [--post_type=&lt;post-type&gt;]\n   or: wp solr info [--field=&lt;field&gt;] [--format=&lt;format&gt;]\n   or: wp solr optimize-index\n   or: wp solr repost-schema\n   or: wp solr stats [--field=&lt;field&gt;] [--format=&lt;format&gt;]\n\nSee 'wp help solr &lt;command&gt;' for more information on a specific command.\n</code></pre>\n<p>You can see more details about the commands using <code>wp help solr</code>:</p>\n<pre><code>**NAME**\n\n  wp solr\n\n**DESCRIPTION**\n\n  Perform a variety of actions against your Solr instance.\n\n**SYNOPSIS**\n\n  wp solr &lt;command&gt;\n\n**SUBCOMMANDS**\n\n  check-server-settings      Check server settings.\n  delete                     Remove one or more posts from the index.\n  index                      Index all posts for a site.\n  info                       Report information about Solr Power configuration.\n  optimize-index             Optimize the Solr index.\n  repost-schema              Repost schema.xml to Solr.\n  stats                      Report stats about indexed content.&lt;h3&gt;WP_Query Integration&lt;/h3&gt;\n</code></pre>\n<p>Use Solr in a custom WP_Query instead of querying a database. Add <code>'solr_integrate' =&gt; true</code> to the query arguments.</p>\n<p><strong>NOTE:</strong> Currently, only basic queries, tax_query, meta_query and date_query are supported. See <code>examples/example.custom_WP_Query.php</code> for an example.</p>\n<p>A meta_query can use the following compare operators:</p>\n<ul>\n<li><code>'='</code></li>\n<li><code>'!='</code></li>\n<li><code>'&gt;'</code></li>\n<li><code>'&gt;='</code></li>\n<li><code>'&lt;'</code></li>\n<li><code>'&lt;='</code></li>\n<li><code>'LIKE'</code></li>\n<li><code>'NOT LIKE'</code></li>\n<li><code>'IN'</code></li>\n<li><code>'NOT IN'</code></li>\n<li><code>'BETWEEN'</code></li>\n<li><code>'NOT BETWEEN'</code></li>\n<li><code>'EXISTS'</code></li>\n<li><code>'NOT EXISTS'</code></li>\n</ul>\n<p>(<code>'REGEXP'</code>, <code>'NOT REGEXP'</code>, and <code>'RLIKE'</code> are not supported.)</p>\n<h3>Configuration Tips</h3>\n</p>\n<p><h4>Searching by author name</h4>\n</p>\n<p>To support searching by author name (e.g. where &#8220;Pantheon&#8221; would return posts authored by the &#8220;Pantheon&#8221; user), add the following to your custom <code>schema.xml</code>:</p>\n<pre><code>  &lt;copyField source=\"post_author\" dest=\"text\"/&gt;\n</code></pre>\n<p><h4>Boosting relevancy score by publish date</h4>\n</p>\n<p>The following guidance can be used to extend the Solr index and modify boosts beyond just this example.</p>\n<p>To support math functions on dates, you must add a custom <code>schema.xml</code> to Solr and <strong>reindex with the new schema</strong>.</p>\n<p>Add the following to <code>schema.xml</code>:</p>\n<pre><code>  &lt;!-- Add to &lt;types&gt; --&gt;\n  &lt;!-- See: https://lucene.apache.org/solr/6_2_0/solr-core/org/apache/solr/schema/TrieDateField.html --&gt;\n  &lt;fieldType name=\"tdate\" class=\"solr.TrieDateField\" omitNorms=\"true\" precisionStep=\"6\" positionIncrementGap=\"0\"/&gt;\n\n  &lt;!-- Add to &lt;fields&gt; --&gt;\n  &lt;field name=\"post_date_iso\" type=\"tdate\" indexed=\"true\" stored=\"true\" required=\"true\" /&gt;\n</code></pre>\n<p>Add the following to your <code>functions.php</code> file.</p>\n<pre><code>  &lt;?php\n  /**\n   * Hooks into the document build process to add post date field in proper format.\n   */\n  function my_solr_build_document( $doc, $post_info ) {\n        $post_time = strtotime( $post_info-&gt;post_date );\n        // Matches format required for TrieDateField\n        $doc-&gt;setField( 'post_date_iso', gmdate( 'c\\Z', $post_time ) );\n        return $doc;\n  }\n  add_filter( 'solr_build_document', 'my_solr_build_document', 10, 2 );\n\n  /**\n   * Hooks into query processor, Dismax, to add publish date boost.\n   * See: https://www.metaltoad.com/blog/date-boosting-solr-drupal-search-results\n   */\n  function my_solr_dismax_query( $dismax ) {\n        $dismax-&gt;setQueryParser( 'edismax' );\n        $dismax-&gt;setBoostQuery( 'recip(abs(ms(NOW/HOUR,post_date_iso),3.16e-11,1,1))' );\n        return $dismax;\n  }\n  add_filter( 'solr_dismax_query', 'my_solr_dismax_query' );\n</code></pre>\n<p><h4>Common issues</h4>\n</p>\n<ul>\n<li>Failing to post the schema.xml will result in an error during indexing, &#8220;Missing <code>post_date_iso</code> field.&#8221;</li>\n<li>If you have the field and type in the schema, but don&#8217;t add the <code>solr_build_document</code> filter, you will get a similar error.</li>\n<li>If the <code>post_date_iso</code> field is missing from the index, Solr will ignore this boost and return regular results.</li>\n<li>Trying to use a regular date field for the boost query will result in an error in the request instead of results.</li>\n</ul>\n<p><h4>Explicit Commit vs Autocommit</h4>\n</p>\n<p>Once solr has sent the data to the solr server, solr must COMMIT the data to the index and adjust the index and relevancy ratings accordingly before that data can appear in search results.</p>\n<p>By default, Solr Search for WordPress has auto-commit disabled. The index is committed when the uncommitted item is two minutes old, or the cron runs. By default, the cron runs on the Pantheon platform every hour.</p>\n<p>When autocommit is enabled, Solr Search for WordPress commits data when it sends every post. When running on Pantheon, we recommend leaving autocommit disabled to aid overall site performance.</p>\n<p>To enable autocommit, add the following to <code>wp-config.php</code> or an mu-plugin.</p>\n<pre><code>  define( 'SOLRPOWER_DISABLE_AUTOCOMMIT', false );\n</code></pre>\n<p>To force-commit data outside of a normal cron run, from the command line, you can run the command below or simply force a cron-run.</p>\n<pre><code>  wp solr commit\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/solr-power.2.5.3.zip",
    "upgrade_notice": {
        "2.5.0": "<p>Changes the default auto-commit behavior to disabled. See <a href=\"https://github.com/pantheon-systems/solr-power/#explicit-commit-vs-autocommit\">the README</a> for instructions for keeping enabled.</p>"
    },
    "screenshots": [],
    "tags": {
        "search": "search"
    },
    "stable_tag": "2.5.3",
    "versions": {
        "0.3": "https://downloads.wordpress.org/plugin/solr-power.0.3.zip",
        "0.4": "https://downloads.wordpress.org/plugin/solr-power.0.4.zip",
        "0.4.1": "https://downloads.wordpress.org/plugin/solr-power.0.4.1.zip",
        "0.5.0": "https://downloads.wordpress.org/plugin/solr-power.0.5.0.zip",
        "0.6.0": "https://downloads.wordpress.org/plugin/solr-power.0.6.0.zip",
        "1.0.0": "https://downloads.wordpress.org/plugin/solr-power.1.0.0.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/solr-power.1.1.0.zip",
        "1.2.0": "https://downloads.wordpress.org/plugin/solr-power.1.2.0.zip",
        "1.3.0": "https://downloads.wordpress.org/plugin/solr-power.1.3.0.zip",
        "1.4.0": "https://downloads.wordpress.org/plugin/solr-power.1.4.0.zip",
        "1.4.1": "https://downloads.wordpress.org/plugin/solr-power.1.4.1.zip",
        "1.5.0": "https://downloads.wordpress.org/plugin/solr-power.1.5.0.zip",
        "2.0.0": "https://downloads.wordpress.org/plugin/solr-power.2.0.0.zip",
        "2.1.1": "https://downloads.wordpress.org/plugin/solr-power.2.1.1.zip",
        "2.1.2": "https://downloads.wordpress.org/plugin/solr-power.2.1.2.zip",
        "2.1.3": "https://downloads.wordpress.org/plugin/solr-power.2.1.3.zip",
        "2.1.4": "https://downloads.wordpress.org/plugin/solr-power.2.1.4.zip",
        "2.2.0": "https://downloads.wordpress.org/plugin/solr-power.2.2.0.zip",
        "2.2.1": "https://downloads.wordpress.org/plugin/solr-power.2.2.1.zip",
        "2.2.2": "https://downloads.wordpress.org/plugin/solr-power.2.2.2.zip",
        "2.2.3": "https://downloads.wordpress.org/plugin/solr-power.2.2.3.zip",
        "2.2.4": "https://downloads.wordpress.org/plugin/solr-power.2.2.4.zip",
        "2.2.5": "https://downloads.wordpress.org/plugin/solr-power.2.2.5.zip",
        "2.2.6": "https://downloads.wordpress.org/plugin/solr-power.2.2.6.zip",
        "2.3.0": "https://downloads.wordpress.org/plugin/solr-power.2.3.0.zip",
        "2.3.1": "https://downloads.wordpress.org/plugin/solr-power.2.3.1.zip",
        "2.3.2": "https://downloads.wordpress.org/plugin/solr-power.2.3.2.zip",
        "2.3.3": "https://downloads.wordpress.org/plugin/solr-power.2.3.3.zip",
        "2.4.0": "https://downloads.wordpress.org/plugin/solr-power.2.4.0.zip",
        "2.4.1": "https://downloads.wordpress.org/plugin/solr-power.2.4.1.zip",
        "2.4.2": "https://downloads.wordpress.org/plugin/solr-power.2.4.2.zip",
        "2.4.3": "https://downloads.wordpress.org/plugin/solr-power.2.4.3.zip",
        "2.4.4": "https://downloads.wordpress.org/plugin/solr-power.2.4.4.zip",
        "2.4.5": "https://downloads.wordpress.org/plugin/solr-power.2.4.5.zip",
        "2.5.0": "https://downloads.wordpress.org/plugin/solr-power.2.5.0.zip",
        "2.5.1": "https://downloads.wordpress.org/plugin/solr-power.2.5.1.zip",
        "2.5.2": "https://downloads.wordpress.org/plugin/solr-power.2.5.2.zip",
        "2.5.3": "https://downloads.wordpress.org/plugin/solr-power.2.5.3.zip",
        "trunk": "https://downloads.wordpress.org/plugin/solr-power.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/solr-power/assets/banner-772x250.png?rev=2826602",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/solr-power/assets/icon-128x128.png?rev=2826602",
        "2x": "https://ps.w.org/solr-power/assets/icon-256x256.png?rev=2826602"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 80,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}