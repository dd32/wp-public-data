{
    "name": "WP Specific Comment",
    "slug": "wp-specific-comment",
    "version": "1.0",
    "author": "<a href=\"http://upsidestudio.com\">David Link | Upsidestudio & Special thanks to Nick Ohrn of plugin-developer.com</a>",
    "author_profile": "https://profiles.wordpress.org/davidlink/",
    "contributors": {
        "davidlink": {
            "profile": "https://profiles.wordpress.org/davidlink/",
            "avatar": "https://secure.gravatar.com/avatar/ff887def24f9ecf6036f6319451d80d3?s=96&d=monsterid&r=g",
            "display_name": "davidlink"
        }
    },
    "requires": "2.0",
    "tested": "2.7.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wp-specific-comment/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1213,
    "last_updated": "2009-04-30 4:41pm GMT",
    "added": "2009-04-30",
    "homepage": "http://upsidestudio.com/plugins/wp-specific-comment",
    "sections": {
        "description": "<p>WP Specific Comment provides a template tag for use anywhere in your theme, inside or outside <strong>The Loop</strong>. This template tag will return a specific comment as an object, from which you can retrieve any standard comment data.</p>\n<h4>Template Tag</h4>\n<p>To initiate the plugin, place <code>&lt;?php wp_specific_comment($ID); ?&gt;</code> into your theme, where <code>$ID</code> will be the ID number for the comment you want returned.</p>\n<p><strong>Example:</strong></p>\n<pre><code>&lt;?php wp_specific_comment(44); ?&gt; will return the comment with the ID of 44. Pretty simple, right? </code></pre>\n<p>Note: This template tag will not actually display anything. It only sets up a comment to be displayed. You&#8217;ll have to add in some other standard WordPress Template Tags to get anything to show up on your blog. List of available Comment Tags can be found <a href=\"https://codex.wordpress.org/Template_Tags\" rel=\"nofollow ugc\">here</a>.</p>\n<p><strong>Example:</strong></p>\n<pre><code>&lt;?php wp_specific_comment(1); ?&gt; &lt;h5 class=\"comment_author\"&gt;&lt;?php comment_author_link(); ?&gt;&lt;/h5&gt; &lt;div class=\"comment_text\"&gt;&lt;?php comment_text(); ?&gt;&lt;/div&gt; </code></pre>\n<p>The above code would retrieve comment with ID of 1, and then display its author (linked to the author&#8217;s URL, if provided) in a <code>&lt;h5&gt;</code> followed by a <code>&lt;div&gt;</code> containing the comment&#8217;s text content. Still pretty simple!</p>\n",
        "installation": "<p>Installation of WP Specific Comment is quick and easy.</p>\n<ol>\n<li>Upload <code>wp-specific-comment.php</code> to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Place <code>&lt;?php wp_specific_comment($ID); ?&gt;</code> in your templates, where <code>$ID</code> is will be the numerical ID for the comment you want returned.</li>\n<li>Add additional <a href=\"https://codex.wordpress.org/Template_Tags\" rel=\"nofollow ugc\">WordPress Comment Tags</a> to display the desired data.</li>\n</ol>\n"
    },
    "short_description": "Allows for the use of a template tag which returns a comment (specified by its ID) for use as an object.",
    "description": "<p>WP Specific Comment provides a template tag for use anywhere in your theme, inside or outside <strong>The Loop</strong>. This template tag will return a specific comment as an object, from which you can retrieve any standard comment data.</p>\n<h4>Template Tag</h4>\n<p>To initiate the plugin, place <code>&lt;?php wp_specific_comment($ID); ?&gt;</code> into your theme, where <code>$ID</code> will be the ID number for the comment you want returned.</p>\n<p><strong>Example:</strong></p>\n<pre><code>&lt;?php wp_specific_comment(44); ?&gt; will return the comment with the ID of 44. Pretty simple, right? </code></pre>\n<p>Note: This template tag will not actually display anything. It only sets up a comment to be displayed. You&#8217;ll have to add in some other standard WordPress Template Tags to get anything to show up on your blog. List of available Comment Tags can be found <a href=\"https://codex.wordpress.org/Template_Tags\" rel=\"nofollow ugc\">here</a>.</p>\n<p><strong>Example:</strong></p>\n<pre><code>&lt;?php wp_specific_comment(1); ?&gt; &lt;h5 class=\"comment_author\"&gt;&lt;?php comment_author_link(); ?&gt;&lt;/h5&gt; &lt;div class=\"comment_text\"&gt;&lt;?php comment_text(); ?&gt;&lt;/div&gt; </code></pre>\n<p>The above code would retrieve comment with ID of 1, and then display its author (linked to the author&#8217;s URL, if provided) in a <code>&lt;h5&gt;</code> followed by a <code>&lt;div&gt;</code> containing the comment&#8217;s text content. Still pretty simple!</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-specific-comment.1.0.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "comments": "comments",
        "id": "id",
        "specific": "specific"
    },
    "stable_tag": "1.0",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/wp-specific-comment.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-specific-comment.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wp-specific-comment.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}