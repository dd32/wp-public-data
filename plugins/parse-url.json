{
    "name": "Parse URL",
    "slug": "parse-url",
    "version": "2.0",
    "author": "Adithya Narayan",
    "author_profile": "https://profiles.wordpress.org/ketanmujumdar/",
    "contributors": {
        "ketanmujumdar": {
            "profile": "https://profiles.wordpress.org/ketanmujumdar/",
            "avatar": "https://secure.gravatar.com/avatar/a48df4c253e27a86dd2240e65e07587e?s=96&d=monsterid&r=g",
            "display_name": "ketanmujumdar"
        }
    },
    "requires": "2.0",
    "tested": "2.0",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/parse-url/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 7829,
    "last_updated": "2012-06-02 3:07pm GMT",
    "added": "2012-05-30",
    "homepage": "http://www.youtube.com/watch?v=t_rBlLUmUcA",
    "sections": {
        "description": "<p>URL Parse plugin will be responsible for fetching meta information along with 330 characters from the supplied website url.<br />\nOptionally, it also takes the image parameter where we need to supply a specific uploaded image in the post. This parser takes care<br />\nof url forwarding. Optionally this parser takes 2 parameters named url_name and tag_name. These parameters are stored in the database<br />\nas key-value pair. url_name is the primary DNS and tag_name is the tag within which the actual text is stored.</p>\n<p>For example,<br />\nIf the url = http://timesofindia.indiatimes.com/india/Italy-regrets-killing-of-Indian-fishermen/articleshow/11990083.cms<br />\nand if the text is actually under the tag &#8220;div class=Normal&#8221; then the shortcode can be used as follows:<br />\n[url_parse url=&#8217;http://timesofindia.indiatimes.com/india/Italy-regrets-killing-of-Indian-fishermen/articleshow/11990083.cms&#8217;<br />\nurl_name = &#8216;timesofindia.indiatimes.com&#8217; tag_name = &#8216;div class=Normal&#8217;] and next time when one uses any URL of timesofindia.indiatimes.com<br />\nthen you need not supply the url_name and tag_name as it will be stored in the database.</p>\n<p>Plugin Usage:<br />\n[url_parse url=&#8217;%WEB_PAGE_URL%&#8217; tag = &#8216;$TAG_CONTAINING_INFO%&#8217;]<br />\nwhere,<br />\nWEB_PAGE_URL = url link of the web page; currently supports http/https protocol supoorting web pages; required<br />\nTAG_CONTAINING_INFO = the tag under which the information is contained; Generally certain browsers are helpful in finding this information.<br />\n                     For e.g. in mozilla firefox when you select a certain text/element in a web-page and right-click ,you get an option<br />\n                     &#8216;View Selection Source&#8217;. This can be used to examine under which tag the content is placed. Alternatively you can skim<br />\n                     through the page source to find out;  optional</p>\n<p>There is database support provided for storing the tags for a particular URL. For example, if a web page contains certain information under<br />\na particular &#8216;tag&#8217; and you specify it, the logic is intelligent enough to store it which will help one get the data required from the same page<br />\nwithout specifying the &#8216;tag&#8217; again.</p>\n",
        "installation": "<ol>\n<li>Upload &#8216;url-parse-plugin.php&#8217;, &#8216;url_parse_table.php&#8217; and &#8216;simple_html_dom.php&#8217; to the &#8216;/wp-content/plugins/&#8217; directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "faq": "<p>Query : When does the table get created ?<br />\nAns : url_parse_table.php is responsible for creating the table when you upload the php files. A hook has been registered and some initial data is also added.</p>\n<p>Query : How do i add data in the table for my web page/ url ?<br />\nAns : For example,If the url = http://timesofindia.indiatimes.com/india/Italy-regrets-killing-of-Indian-fishermen/articleshow/11990083.cms<br />\nand if the text is actually under the tag &#8220;div class=Normal&#8221; then the shortcode can be used as follows:<br />\n[url_parse url=&#8217;http://timesofindia.indiatimes.com/abc/xyz/def/content.cms&#8217; tag = &#8216;div class=Normal&#8217;] and next time when one uses any<br />\nURL under the domain &#8216;timesofindia.indiatimes.com&#8217; then one need not supply the &#8216;tag&#8217; as it will be stored in the database.</p>\n"
    },
    "short_description": "URL Parse plugin will be responsible for fetching meta information along with 330 characters from the supplied website url.",
    "description": "<p>URL Parse plugin will be responsible for fetching meta information along with 330 characters from the supplied website url.<br />\nOptionally, it also takes the image parameter where we need to supply a specific uploaded image in the post. This parser takes care<br />\nof url forwarding. Optionally this parser takes 2 parameters named url_name and tag_name. These parameters are stored in the database<br />\nas key-value pair. url_name is the primary DNS and tag_name is the tag within which the actual text is stored.</p>\n<p>For example,<br />\nIf the url = http://timesofindia.indiatimes.com/india/Italy-regrets-killing-of-Indian-fishermen/articleshow/11990083.cms<br />\nand if the text is actually under the tag &#8220;div class=Normal&#8221; then the shortcode can be used as follows:<br />\n[url_parse url=&#8217;http://timesofindia.indiatimes.com/india/Italy-regrets-killing-of-Indian-fishermen/articleshow/11990083.cms&#8217;<br />\nurl_name = &#8216;timesofindia.indiatimes.com&#8217; tag_name = &#8216;div class=Normal&#8217;] and next time when one uses any URL of timesofindia.indiatimes.com<br />\nthen you need not supply the url_name and tag_name as it will be stored in the database.</p>\n<p>Plugin Usage:<br />\n[url_parse url=&#8217;%WEB_PAGE_URL%&#8217; tag = &#8216;$TAG_CONTAINING_INFO%&#8217;]<br />\nwhere,<br />\nWEB_PAGE_URL = url link of the web page; currently supports http/https protocol supoorting web pages; required<br />\nTAG_CONTAINING_INFO = the tag under which the information is contained; Generally certain browsers are helpful in finding this information.<br />\n                     For e.g. in mozilla firefox when you select a certain text/element in a web-page and right-click ,you get an option<br />\n                     &#8216;View Selection Source&#8217;. This can be used to examine under which tag the content is placed. Alternatively you can skim<br />\n                     through the page source to find out;  optional</p>\n<p>There is database support provided for storing the tags for a particular URL. For example, if a web page contains certain information under<br />\na particular &#8216;tag&#8217; and you specify it, the logic is intelligent enough to store it which will help one get the data required from the same page<br />\nwithout specifying the &#8216;tag&#8217; again.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/parse-url.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "facebook-url-parse-plugin": "facebook url parse plugin",
        "parse": "parse",
        "url": "url"
    },
    "stable_tag": "trunk",
    "versions": {
        "readme.txt": "https://downloads.wordpress.org/plugin/parse-url.readme.txt.zip",
        "simple_html_dom.php": "https://downloads.wordpress.org/plugin/parse-url.simple_html_dom.php.zip",
        "url-parse-plugin.php": "https://downloads.wordpress.org/plugin/parse-url.url-parse-plugin.php.zip",
        "url_parse_table.php": "https://downloads.wordpress.org/plugin/parse-url.url_parse_table.php.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/parse-url.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}