{
    "name": "WP REST Menus",
    "slug": "wp-rest-menu",
    "version": "1.0.4",
    "author": "<a href=\"https://noveldigital.pro\">Kostas Charalampidis </a>",
    "author_profile": "https://profiles.wordpress.org/skapator/",
    "contributors": {
        "skapator": {
            "profile": "https://profiles.wordpress.org/skapator/",
            "avatar": "https://secure.gravatar.com/avatar/da485e97eb82c442ef87b75138d8cbe7?s=96&d=monsterid&r=g",
            "display_name": "skapator"
        }
    },
    "requires": "5.0",
    "tested": "5.9.10",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 4,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 4,
    "support_url": "https://wordpress.org/support/plugin/wp-rest-menu/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 5654,
    "last_updated": "2022-02-17 20:43:00",
    "added": "2018-07-04",
    "homepage": "https:/noveldigital.pro",
    "sections": {
        "description": "<p>This plugin adds new endpoints for WordPress registered menus.<br />\nUsefull when building SPAs with Vuejs, React or any front-end framework.<br />\nWorks with Advacned Custom Fields, WPML, Polylang</p>\n<p>The new endpoints available:</p>\n<p><strong>Get all menus</strong></p>\n<pre><code>GET /menus/v1/menus\n\n// Response sample\n{  \n    term_id: 2,\n    name: \"Main Menu\",\n    slug: \"main-menu\",\n    term_group: 0,\n    term_taxonomy_id: 2,\n    taxonomy: \"nav_menu\",\n    description: \"\",\n    parent: 0,\n    count: 8,\n    filter: \"raw\"\n},\n...\n</code></pre>\n<p><strong>Get a menus items by id (term_id)</strong></p>\n<pre><code>GET /menus/v1/menus/&lt;id&gt;\n\n// Response sample\n{  \n    ID: 5,\n    post_author: \"1\",\n    post_date: \"2018-07-03 06:42:18\",\n    post_date_gmt: \"2018-07-03 06:42:18\",\n    filter: \"raw\",\n    db_id:5,\n    menu_item_parent: \"0\",\n    object_id: \"5\",\n    object: \"custom\",\n    type: \"custom\",\n    type_label: \"Custom Link\",\n    title: \"Home\",\n    url: \"https:\\/\\/wp-rest-menu.local\\/\",\n    target: \"\",\n    attr_title: \"\",\n    description: \"\",\n    classes: [  \n     \"\"\n    ],\n    xfn: \"\",\n    meta: null\n},\n...\n</code></pre>\n<p><strong>Get all menu locations</strong><br />\nAll menu locations assigned  in /wp-admin/nav-menus.php?action=locations</p>\n<pre><code>GET /menus/v1/menus/locations is deprecated and will be removed in newer versions use:\nGET /menus/v1/locations\n\n// Response example\n{  \n    slug: \"top\",\n    description: \"Top Menu\"\n},\n{  \n    slug: \"social\",\n    description: \"Social Links Menu\"\n}\n...\n</code></pre>\n<p><strong>Get all menu location items</strong><br />\nAll menu locations assigned in /wp-admin/nav-menus.php?action=locations</p>\n<pre><code>GET /menus/v1/menus/locations/&lt;slug&gt; is deprecated and will be removed in newer versions use:\nGET /menus/v1/locations/&lt;slug&gt;\n\n// Response samexampleple\n{  \n    ID: 5,\n    post_author: \"1\",\n    post_date: \"2018-07-03 06:42:18\",\n    post_date_gmt: \"2018-07-03 06:42:18\",\n    filter: \"raw\",\n    db_id:5,\n    menu_item_parent: \"0\",\n    object_id: \"5\",\n    object: \"custom\",\n    type: \"custom\",\n    type_label: \"Custom Link\",\n    title: \"Home\",\n    url: \"https:\\/\\/wp-rest-menu.local\\/\",\n    target: \"\",\n    attr_title: \"\",\n    description: \"\",\n    classes: [  \n     \"\"\n    ],\n    xfn: \"\",\n    meta: null\n},\n...\n</code></pre>\n<p>There are two filters availiable:</p>\n<p><strong>Fields Filter</strong></p>\n<pre><code>// it will return only the fields specified\nGET /menus/v1/menus/&lt;id&gt;/?fields=ID,title,meta\n\n// Response sample\n// Response sample\n{  \n    ID: 5,\n    title: \"Home\",\n    meta: null\n},\n...\n</code></pre>\n<p><strong>Nested Items Filter</strong></p>\n<pre><code>// it will return menu items parents and nested children in a 'children' field\n// Currently only one level deep is supported\nGET /menus/v1/menus/&lt;id&gt;/?nested=1\n\n// Response sample\n{  \n  ID: 1716,\n  menu_item_parent: \"0\",\n  object_id: \"174\",\n  object: \"page\",\n  title: \"Level 1\",\n  meta: {  \n     vue_component: \"LevelComponent\",\n     menu-item-field-01: \"Field 1 value\",\n     menu-item-field-02: \"Field 2 value\"\n  },\n  children:[  \n     {  \n        ID: 1717,\n        menu_item_parent: \"1716\",\n        object_id: \"744\",\n        object: \"page\",\n        title: \"Level 2b\",\n        meta : {  \n           vue_component: null\n        }\n     },\n     ...\n  ]\n},\n...\n</code></pre>\n<p><strong>WP filter hooks</strong></p>\n<p>This plugin is quite configurable and provides lots of wp filter hooks from returned data in responses for each endpoint to params validation and endpoint permissions.</p>\n<pre><code>add_filter( 'wprm/get_menus/wp_get_nav_menus/args', 'my_wp_get_nav_menus', 10, 1 );\n(used in GET /menus/v1/menus)\n\nfunction my_wp_get_nav_menus( $args ) {\n    // do something with wp_get_nav_menus $args array\n    return $args;\n}\n\n\n\nadd_filter( 'wprm/get_menus', 'my_get_menus', 10, 1 );\n(used in GET /menus/v1/menus)\n\nfunction my_get_menus( $menus ) {\n    // do something with $menus array\n\n    return $menus; // WP_Error|WP_HTTP_Response|WP_REST_Response|mixed\n}\n\n\n\nadd_filter( 'wprm/get_menu_locations', 'my_get_menu_locations', 10, 1 );\n(used in GET /menus/v1/locations)\n\nfunction my_get_menu_locations( $locations ) {\n    // You can modify the $locations array response (get_registered_nav_menus())\n\n    return $locations; // WP_Error|WP_HTTP_Response|WP_REST_Response|mixed\n}\n\n\n\nadd_filter( 'wprm/get_menu_items', 'my_get_menu_items', 10, 1 );\n(used in GET /menus/v1/menus/&lt;id&gt;)\n\nfunction my_rest_menu_item_fields( $menu ) {\n    // You can modify the $menu items\n\n    return $menu;\n}\n\n\n\nadd_filter( 'wprm/get_location_menu_items', 'my_get_location_menu_items', 10, 1 );\n(used in GET /menus/v1/menus/&lt;id&gt;)\n\nfunction my_get_location_menu_items( $menu ) {\n    // You can modify the locations $menu items\n\n    return $menu;\n}\n\n\n\nadd_filter( 'wprm/get_item_fields/filter_fields', 'my_filter_fields', 10, 1 );\n(used to filter return field -node edges-)\n\nfunction my_filter_fields( $fields ) {\n    // You can modify the $fields array so\n    // you can filter the return fields for all endpoints\n    // without using the url param ?fields\n\n    $fields = array( 'ID', 'title' );\n    return $fields;\n}\n</code></pre>\n<p>More filters</p>\n<pre><code>apply_filters('wprm/get_menus/permissions', '__return_true', $request );\napply_filters('wprm/get_menu_locations/permissions', '__return_true', $request );\napply_filters('wprm/get_menu_items/permissions', '__return_true', $request );\napply_filters('wprm/get_menu_items/validate/args/id', is_numeric( $param ), $param, $request, $key );\napply_filters('wprm/get_menu_items/validate/args/fields', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_menu_items/validate/args/nested', absint( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/permissions', '__return_true', $request );\napply_filters('wprm/get_location_menu_items/validate/args/slug', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/fields', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/nested', absint( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/permissions', '__return_true', $request );\napply_filters('wprm/get_location_menu_items/validate/args/slug', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/fields', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/nested', absint( $param ), $param, $request, $key );\n</code></pre>\n<p>Supports custom fields and Advanced Custom Fields<br />\nIf ACF is installed the response node edge is <em>acf</em> else <em>meta</em><br />\nIn newer version these two edges will co exist and the plugin will separate natively registered custom fields ad acf registered ones.</p>\n",
        "installation": "<p>There are no requirements other than WordPress and one active menu. Installation is simple:</p>\n<ol>\n<li>Upload the <code>wp-rest-menus</code> folder to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "faq": "\n<dt id='how%20do%20i%20use%20this%20plugin%3F'>\nHow do I use this plugin?\n</h4>\n<p>\n<p>It creates endpoints for wp nav menus to use in your front end.</p>\n</p>\n<dt id='can%20i%20contribute%3F'>\nCan I contribute?\n</h4>\n<p>\n<p>Yes, you can fork it on <a href=\"https://github.com/kostasxyz/wp-rest-menus\" rel=\"nofollow ugc\">github</a>.</p>\n</p>\n\n"
    },
    "short_description": "Add menus endpoints to WP REST API",
    "description": "<p>This plugin adds new endpoints for WordPress registered menus.<br />\nUsefull when building SPAs with Vuejs, React or any front-end framework.<br />\nWorks with Advacned Custom Fields, WPML, Polylang</p>\n<p>The new endpoints available:</p>\n<p><strong>Get all menus</strong></p>\n<pre><code>GET /menus/v1/menus\n\n// Response sample\n{  \n    term_id: 2,\n    name: \"Main Menu\",\n    slug: \"main-menu\",\n    term_group: 0,\n    term_taxonomy_id: 2,\n    taxonomy: \"nav_menu\",\n    description: \"\",\n    parent: 0,\n    count: 8,\n    filter: \"raw\"\n},\n...\n</code></pre>\n<p><strong>Get a menus items by id (term_id)</strong></p>\n<pre><code>GET /menus/v1/menus/&lt;id&gt;\n\n// Response sample\n{  \n    ID: 5,\n    post_author: \"1\",\n    post_date: \"2018-07-03 06:42:18\",\n    post_date_gmt: \"2018-07-03 06:42:18\",\n    filter: \"raw\",\n    db_id:5,\n    menu_item_parent: \"0\",\n    object_id: \"5\",\n    object: \"custom\",\n    type: \"custom\",\n    type_label: \"Custom Link\",\n    title: \"Home\",\n    url: \"https:\\/\\/wp-rest-menu.local\\/\",\n    target: \"\",\n    attr_title: \"\",\n    description: \"\",\n    classes: [  \n     \"\"\n    ],\n    xfn: \"\",\n    meta: null\n},\n...\n</code></pre>\n<p><strong>Get all menu locations</strong><br />\nAll menu locations assigned  in /wp-admin/nav-menus.php?action=locations</p>\n<pre><code>GET /menus/v1/menus/locations is deprecated and will be removed in newer versions use:\nGET /menus/v1/locations\n\n// Response example\n{  \n    slug: \"top\",\n    description: \"Top Menu\"\n},\n{  \n    slug: \"social\",\n    description: \"Social Links Menu\"\n}\n...\n</code></pre>\n<p><strong>Get all menu location items</strong><br />\nAll menu locations assigned in /wp-admin/nav-menus.php?action=locations</p>\n<pre><code>GET /menus/v1/menus/locations/&lt;slug&gt; is deprecated and will be removed in newer versions use:\nGET /menus/v1/locations/&lt;slug&gt;\n\n// Response samexampleple\n{  \n    ID: 5,\n    post_author: \"1\",\n    post_date: \"2018-07-03 06:42:18\",\n    post_date_gmt: \"2018-07-03 06:42:18\",\n    filter: \"raw\",\n    db_id:5,\n    menu_item_parent: \"0\",\n    object_id: \"5\",\n    object: \"custom\",\n    type: \"custom\",\n    type_label: \"Custom Link\",\n    title: \"Home\",\n    url: \"https:\\/\\/wp-rest-menu.local\\/\",\n    target: \"\",\n    attr_title: \"\",\n    description: \"\",\n    classes: [  \n     \"\"\n    ],\n    xfn: \"\",\n    meta: null\n},\n...\n</code></pre>\n<p>There are two filters availiable:</p>\n<p><strong>Fields Filter</strong></p>\n<pre><code>// it will return only the fields specified\nGET /menus/v1/menus/&lt;id&gt;/?fields=ID,title,meta\n\n// Response sample\n// Response sample\n{  \n    ID: 5,\n    title: \"Home\",\n    meta: null\n},\n...\n</code></pre>\n<p><strong>Nested Items Filter</strong></p>\n<pre><code>// it will return menu items parents and nested children in a 'children' field\n// Currently only one level deep is supported\nGET /menus/v1/menus/&lt;id&gt;/?nested=1\n\n// Response sample\n{  \n  ID: 1716,\n  menu_item_parent: \"0\",\n  object_id: \"174\",\n  object: \"page\",\n  title: \"Level 1\",\n  meta: {  \n     vue_component: \"LevelComponent\",\n     menu-item-field-01: \"Field 1 value\",\n     menu-item-field-02: \"Field 2 value\"\n  },\n  children:[  \n     {  \n        ID: 1717,\n        menu_item_parent: \"1716\",\n        object_id: \"744\",\n        object: \"page\",\n        title: \"Level 2b\",\n        meta : {  \n           vue_component: null\n        }\n     },\n     ...\n  ]\n},\n...\n</code></pre>\n<p><strong>WP filter hooks</strong></p>\n<p>This plugin is quite configurable and provides lots of wp filter hooks from returned data in responses for each endpoint to params validation and endpoint permissions.</p>\n<pre><code>add_filter( 'wprm/get_menus/wp_get_nav_menus/args', 'my_wp_get_nav_menus', 10, 1 );\n(used in GET /menus/v1/menus)\n\nfunction my_wp_get_nav_menus( $args ) {\n    // do something with wp_get_nav_menus $args array\n    return $args;\n}\n\n\n\nadd_filter( 'wprm/get_menus', 'my_get_menus', 10, 1 );\n(used in GET /menus/v1/menus)\n\nfunction my_get_menus( $menus ) {\n    // do something with $menus array\n\n    return $menus; // WP_Error|WP_HTTP_Response|WP_REST_Response|mixed\n}\n\n\n\nadd_filter( 'wprm/get_menu_locations', 'my_get_menu_locations', 10, 1 );\n(used in GET /menus/v1/locations)\n\nfunction my_get_menu_locations( $locations ) {\n    // You can modify the $locations array response (get_registered_nav_menus())\n\n    return $locations; // WP_Error|WP_HTTP_Response|WP_REST_Response|mixed\n}\n\n\n\nadd_filter( 'wprm/get_menu_items', 'my_get_menu_items', 10, 1 );\n(used in GET /menus/v1/menus/&lt;id&gt;)\n\nfunction my_rest_menu_item_fields( $menu ) {\n    // You can modify the $menu items\n\n    return $menu;\n}\n\n\n\nadd_filter( 'wprm/get_location_menu_items', 'my_get_location_menu_items', 10, 1 );\n(used in GET /menus/v1/menus/&lt;id&gt;)\n\nfunction my_get_location_menu_items( $menu ) {\n    // You can modify the locations $menu items\n\n    return $menu;\n}\n\n\n\nadd_filter( 'wprm/get_item_fields/filter_fields', 'my_filter_fields', 10, 1 );\n(used to filter return field -node edges-)\n\nfunction my_filter_fields( $fields ) {\n    // You can modify the $fields array so\n    // you can filter the return fields for all endpoints\n    // without using the url param ?fields\n\n    $fields = array( 'ID', 'title' );\n    return $fields;\n}\n</code></pre>\n<p>More filters</p>\n<pre><code>apply_filters('wprm/get_menus/permissions', '__return_true', $request );\napply_filters('wprm/get_menu_locations/permissions', '__return_true', $request );\napply_filters('wprm/get_menu_items/permissions', '__return_true', $request );\napply_filters('wprm/get_menu_items/validate/args/id', is_numeric( $param ), $param, $request, $key );\napply_filters('wprm/get_menu_items/validate/args/fields', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_menu_items/validate/args/nested', absint( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/permissions', '__return_true', $request );\napply_filters('wprm/get_location_menu_items/validate/args/slug', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/fields', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/nested', absint( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/permissions', '__return_true', $request );\napply_filters('wprm/get_location_menu_items/validate/args/slug', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/fields', is_string( $param ), $param, $request, $key );\napply_filters('wprm/get_location_menu_items/validate/args/nested', absint( $param ), $param, $request, $key );\n</code></pre>\n<p>Supports custom fields and Advanced Custom Fields<br />\nIf ACF is installed the response node edge is <em>acf</em> else <em>meta</em><br />\nIn newer version these two edges will co exist and the plugin will separate natively registered custom fields ad acf registered ones.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-rest-menu.1.0.4.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "api": "api",
        "v2": "v2",
        "wp-rest-api": "wp-rest-api",
        "wp-rest-menus": "wp-rest-menus"
    },
    "stable_tag": "1.0.4",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/wp-rest-menu.1.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/wp-rest-menu.1.0.1.zip",
        "1.0.2": "https://downloads.wordpress.org/plugin/wp-rest-menu.1.0.2.zip",
        "1.0.3": "https://downloads.wordpress.org/plugin/wp-rest-menu.1.0.3.zip",
        "1.0.4": "https://downloads.wordpress.org/plugin/wp-rest-menu.1.0.4.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-rest-menu.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/wp-rest-menu/assets/banner-772x250.png?rev=2678035",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/wp-rest-menu/assets/icon-128x128.png?rev=2678036"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}