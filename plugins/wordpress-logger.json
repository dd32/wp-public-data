{
    "name": "WordPress Logger",
    "slug": "wordpress-logger",
    "version": "0.3",
    "author": "<a href=\"http://www.turingtarpit.com\">Chandima Cumaranatunge</a>",
    "author_profile": "https://profiles.wordpress.org/chandima/",
    "contributors": {
        "chandima": {
            "profile": "https://profiles.wordpress.org/chandima/",
            "avatar": "https://secure.gravatar.com/avatar/012c5ae796a1833cebddf6e24f9b231f?s=96&d=monsterid&r=g",
            "display_name": "chandima"
        }
    },
    "requires": "2.5",
    "tested": "2.7.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wordpress-logger/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3184,
    "last_updated": "2009-05-18 7:55pm GMT",
    "added": "2009-05-13",
    "homepage": "http://www.turingtarpit.com/2009/05/wordpress-logger-a-plugin-to-display-php-log-messages-in-safari-and-firefox/",
    "sections": {
        "description": "<p>Display log messages from PHP in the browser console in Safari, Firefox (with firebug), and Opera (with the new Dragonfly debugging environment). Essential debugging tool for<br />\nplugin and theme developers. You no longer have to use &#8216;print_r&#8217; statements from PHP to figure out what is going<br />\non in the code, which more often than not, messes up the DOM and HTML layout. Displays complex PHP structures like arrays and objects<br />\nin pretty print.</p>\n<p><strong>Features</strong></p>\n<ul>\n<li>Log debug messages directly from themes and plugins.</li>\n<li>Display log messages in the browser console, without muddying up the browser display.</li>\n<li>Displays complex structures such as arrays and objects in pretty print.</li>\n<li>Shows the line number and file from where the message was logged ( you won&#8217;t lose track of log statements ).</li>\n</ul>\n<p>For more info, comments, and feature requests, visit <a href=\"http://www.turingtarpit.com/2009/05/wplogger\" title=\"Wordpress Logger\" rel=\"nofollow ugc\">the plugin homepage</a>.</p>\n<h3>Credits</h3>\n<p>Code that forces the wplogger plugin to load first was adapted from the WordPress<br />\n<a href=\"http://inchoo.net/wordpress/wordpress-firephp-plugin/\" title=\"FirePHP plugin\" rel=\"nofollow ugc\">FirePHP plugin</a><br />\ndeveloped by Ivan Weiller.</p>\n<p>This plugin is based on <a href=\"http://pear.php.net/package/Log\" title=\"PEAR Log\" rel=\"nofollow ugc\">PEAR Log</a>, the logging framework that is part of the<br />\nPHP PEAR library. Current maintainers Jon Parise, Jan Schneider, and Chuck Hagenbuch. PEAR Log is based on code first<br />\ndeveloped for the Horde 1.3 framework &#8211; original authors Chuck Hagenbuch, and Jon Parise.</p>\n<h3>Release Notes</h3>\n<p><strong>0.3</strong> : Added support for Opera ;</p>\n<p><strong>0.2.2</strong> : Fixed formatting issues in <em>readme.txt</em> file;</p>\n<p><strong>0.2.1</strong> : Added more detail to the <em>readme.txt</em> file;</p>\n<p><strong>0.2</strong> : First official public release;</p>\n<p><strong>0.1</strong> : First internal release;</p>\n",
        "installation": "<p><strong>Installing from the Admin Panel</strong></p>\n<ol>\n<li>Select the <em>Add New</em> subpanel from the <em>Plugins</em> panel.</li>\n<li>Type in &#8220;wordpress-logger&#8221; in the search field and click the <strong>Search</strong> button.</li>\n<li>Identify the &#8220;WordPress Logger&#8221; from the plugin list and click on its <em>install</em> action.</li>\n<li>Click on the <strong>Install Now</strong> button in the resulting dialog.</li>\n<li>Click on the <em>Activate Plugin</em> link.</li>\n</ol>\n<p><strong>Installing manually</strong></p>\n<ol>\n<li>Verify that you have PHP5, which is required for this plugin.</li>\n<li>Upload the whole <em>wordpress-logger</em> folder into the <em>/wp-content/plugins/</em> directory.</li>\n<li>Activate the plugin through the Plugins panel in WordPress.</li>\n</ol>\n<p><strong>Requirements</strong></p>\n<ul>\n<li><strong>Make sure that your theme template has a footer ( <em>index.php</em> should have a <em>get_footer()</em> function call at the end).</strong></li>\n<li>Turn on the console in your browser:\n<ul>\n<li><strong>Firefox:</strong> The <a href=\"http://getfirebug.com/\" title=\"Firebug home page\" rel=\"nofollow ugc\">Firebug</a> extension needs to be installed and activated. </li>\n<li><strong>Safari:</strong> Show the <em>Error Console</em> from the <em>Debug</em>/<em>Develop</em> menu. See FAQ section for details on how to enable the <em>Debug</em> menu.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Usage</strong></p>\n<p>After activating the plugin, the following PHP function call can log any PHP expression to the console log.</p>\n<pre><code>     $wplogger-&gt;log( php_expression [, message_type] );\n</code></pre>\n<p>The message_type is optional and can be any one of the following constants:</p>\n<ul>\n<li>WPLOG_ERR</li>\n<li>WPLOG_WARNING</li>\n<li>WPLOG_INFO</li>\n<li>WPLOG_DEBUG</li>\n</ul>\n<p><strong>Examples</strong></p>\n<p><strong>Logging from template files</strong> &#8211; inside the loop to display post IDs.</p>\n<pre><code>    &lt;?php $wplogger-&gt;log( 'Post ID: '.$post-&gt;ID ); ?&gt;\n\n    Output:\n\n    [Information: from line 20 in file index.php] Post ID: 125\n    [Information: from line 20 in file index.php] Post ID: 116\n    [Information: from line 20 in file index.php] Post ID: 65\n</code></pre>\n<p><strong>Logging from PHP files (e.g. functions.php)</strong> ( always a good idea to check if $wplogger is available ). Note the message type set to <em>warning</em> through the second parameter.</p>\n<pre><code>    if ($wplogger) $wplogger-&gt;log( get_option('active_plugins'), WPLOG_WARNING );\n\n    Output:\n\n    [Warning: from line 55 in file functions.php] array (\n          0 =&gt; 'wplogger/wplogger.php',\n          1 =&gt; '12seconds-widget/12seconds-widget.php',\n          2 =&gt; 'get-the-image/get-the-image.php',\n    )\n</code></pre>\n<p><strong>Logging from plugins</strong> &#8211; inside a plugin function. Note the global statement to get $wplogger into current scope.</p>\n<pre><code>    global $wplogger; $wplogger-&gt;log( 'No images attached to this post', WPLOG_ERR );\n\n    Output:\n\n    [Error: from line 206 in file get-the-image.php] No images attached to this post\n</code></pre>\n",
        "faq": "\n<h4>How to enable the *Debug* / *Develop* menu in Safari?</h4>\n<p>\n<ul>\n<li>On <a href=\"http://www.macosxhints.com/article.php?story=20030110063041629\" rel=\"nofollow ugc\">OSX</a>. </li>\n<li>On <a href=\"http://robrohan.com/2007/06/11/enable-debug-mode-on-safari-windows-error/\" rel=\"nofollow ugc\">Windows</a>.</li>\n</ul>\n</p>\n<h4>How to show the error console in Opera?</h4>\n<p>\n<ol>\n<li>Select the <em>Tools &gt; Advanced &gt; Developer Tools</em> menu.</li>\n<li>Click on the <em>Error Console</em> tab in the Opera Dragonfly console.</li>\n</ol>\n</p>\n\n"
    },
    "short_description": "Display log messages during plugin and theme development on the console in Safari and Firefox (with Firebug) browsers.",
    "description": "<p>Display log messages from PHP in the browser console in Safari, Firefox (with firebug), and Opera (with the new Dragonfly debugging environment). Essential debugging tool for<br />\nplugin and theme developers. You no longer have to use &#8216;print_r&#8217; statements from PHP to figure out what is going<br />\non in the code, which more often than not, messes up the DOM and HTML layout. Displays complex PHP structures like arrays and objects<br />\nin pretty print.</p>\n<p><strong>Features</strong></p>\n<ul>\n<li>Log debug messages directly from themes and plugins.</li>\n<li>Display log messages in the browser console, without muddying up the browser display.</li>\n<li>Displays complex structures such as arrays and objects in pretty print.</li>\n<li>Shows the line number and file from where the message was logged ( you won&#8217;t lose track of log statements ).</li>\n</ul>\n<p>For more info, comments, and feature requests, visit <a href=\"http://www.turingtarpit.com/2009/05/wplogger\" title=\"Wordpress Logger\" rel=\"nofollow ugc\">the plugin homepage</a>.</p>\n<h3>Credits</h3>\n<p>Code that forces the wplogger plugin to load first was adapted from the WordPress<br />\n<a href=\"http://inchoo.net/wordpress/wordpress-firephp-plugin/\" title=\"FirePHP plugin\" rel=\"nofollow ugc\">FirePHP plugin</a><br />\ndeveloped by Ivan Weiller.</p>\n<p>This plugin is based on <a href=\"http://pear.php.net/package/Log\" title=\"PEAR Log\" rel=\"nofollow ugc\">PEAR Log</a>, the logging framework that is part of the<br />\nPHP PEAR library. Current maintainers Jon Parise, Jan Schneider, and Chuck Hagenbuch. PEAR Log is based on code first<br />\ndeveloped for the Horde 1.3 framework &#8211; original authors Chuck Hagenbuch, and Jon Parise.</p>\n<h3>Release Notes</h3>\n<p><strong>0.3</strong> : Added support for Opera ;</p>\n<p><strong>0.2.2</strong> : Fixed formatting issues in <em>readme.txt</em> file;</p>\n<p><strong>0.2.1</strong> : Added more detail to the <em>readme.txt</em> file;</p>\n<p><strong>0.2</strong> : First official public release;</p>\n<p><strong>0.1</strong> : First internal release;</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wordpress-logger.0.3.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wordpress-logger/trunk/screenshot-1.png?rev=1566830",
            "caption": "Console log output in the Firefox Browser with the Firebug extension."
        },
        {
            "src": "https://ps.w.org/wordpress-logger/trunk/screenshot-2.png?rev=1566830",
            "caption": "Console log output in the Safari Browser."
        },
        {
            "src": "https://ps.w.org/wordpress-logger/trunk/screenshot-3.png?rev=1566830",
            "caption": "Opera Dragonfly Error Console output in the Opera Browser."
        }
    ],
    "tags": {
        "debug": "debug",
        "log": "log",
        "logging": "logging",
        "php": "php",
        "safari": "safari"
    },
    "stable_tag": "0.3",
    "versions": {
        "0.2": "https://downloads.wordpress.org/plugin/wordpress-logger.0.2.zip",
        "0.2.1": "https://downloads.wordpress.org/plugin/wordpress-logger.0.2.1.zip",
        "0.2.2": "https://downloads.wordpress.org/plugin/wordpress-logger.0.2.2.zip",
        "0.3": "https://downloads.wordpress.org/plugin/wordpress-logger.0.3.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wordpress-logger.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wordpress-logger.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}