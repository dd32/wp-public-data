{
    "name": "Theme and plugin translation for Polylang (TTfP)",
    "slug": "theme-translation-for-polylang",
    "version": "3.4.6",
    "author": "Marcin Kazmierski",
    "author_profile": "https://profiles.wordpress.org/marcinkazmierski/",
    "contributors": {
        "marcinkazmierski": {
            "profile": "https://profiles.wordpress.org/marcinkazmierski/",
            "avatar": "https://secure.gravatar.com/avatar/cc87ba303ebfa2320f032ec37cf629fa?s=96&d=monsterid&r=g",
            "display_name": "Marcin Kazmierski"
        }
    },
    "requires": "5.7",
    "tested": "6.6.1",
    "requires_php": "7.0",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 94,
    "ratings": {
        "5": 29,
        "4": 2,
        "3": 0,
        "2": 0,
        "1": 2
    },
    "num_ratings": 33,
    "support_url": "https://wordpress.org/support/plugin/theme-translation-for-polylang/",
    "support_threads": 5,
    "support_threads_resolved": 2,
    "active_installs": 10000,
    "downloaded": 202662,
    "last_updated": "2024-08-07 09:54:00",
    "added": "2016-02-03",
    "homepage": "",
    "sections": {
        "description": "<h4>What is &#8220;Theme and plugin translation for Polylang&#8221;?</h4>\n<p>Extension for Polylang plugin (Polylang is an extension to make multilingual WordPress websites.).<br />\nPlugin is needed to translate the WordPress themes and plugins by Polylang.</p>\n<h4>How to configure it?</h4>\n<p>Select themes and plugins to find texts for translation by Polylang.<br />\nIn admin dashboard:</p>\n<pre><code>Languages -&gt; TTfP Settings\n</code></pre>\n<h4>How it is work?</h4>\n<p>&#8220;Theme and plugin translation for Polylang&#8221; automatically searches all files of WordPress themes and plugins. It chooses from this file only those files with extensions:</p>\n<ul>\n<li>php</li>\n<li>inc</li>\n<li>twig</li>\n</ul>\n<p>In addition, is implemented the integration with Timber library (read more: http://timber.upstatement.com) – which allows to translate twig&#8217;s skins in simple way.<br />\nPlugin in searched skins or plugins chooses texts from Polylang functions, such as:</p>\n<ul>\n<li>_e(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>__(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>_x(string $text, string $context, string $domain = &#8216;default&#8217;);</li>\n<li>pll_e(string $text);</li>\n<li>pll__(string $text);</li>\n<li>esc_html(string $text);</li>\n<li>esc_html_e(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>esc_html__(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>_n(string $single, string $plural, int $number, string $domain = &#8216;default&#8217;);</li>\n<li>esc_attr_e(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>esc_attr__(string $text, string $domain = &#8216;default&#8217;);</li>\n</ul>\n<p>In your function.php, themes or plugins.</p>\n<p>For example:</p>\n<pre><code>&lt;p&gt;&lt;?php pll_e('My text'); ?&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;?php _e('My another text', 'my_theme'); ?&gt;&lt;/p&gt;\n</code></pre>\n<p>On the timber context declare this functions like:</p>\n<pre><code>$context['pll_e'] = TimberHelper::function_wrapper('pll_e');\n\n$context['pll_'] = TimberHelper::function_wrapper('pll_');\n</code></pre>\n<p>See more on: <code>https://polylang.wordpress.com/documentation/documentation-for-developers/functions-reference/</code><br />\nThese functions are defined by Polylang plugin for printing translations.<br />\nThanks &#8220;Theme and plugin translation for Polylang&#8221; you can find these strings to translate and add to Polylang register on very simple way.<br />\nAnd then you can translate these texts from the admin dashboard.<br />\nThe scan result can be seen on the tab with translations:</p>\n<pre><code>Settings -&gt; Languages -&gt; String translation\n</code></pre>\n<p>or</p>\n<pre><code>Languages -&gt; String translation\n</code></pre>\n<p>You don&#8217;t need programs like poedit – you don&#8217;t change files with extensions like: <code>.pot</code>, <code>.po</code>, <code>.mo</code>.<br />\n&#8220;Theme and plugin translation for Polylang&#8221; is highly efficient because the scanner is worked only on admin dashboard in tab:<br />\nIn dashboard:</p>\n<pre><code>Settings -&gt; Languages -&gt; String translation\n</code></pre>\n<p>or</p>\n<pre><code>Languages -&gt; String translation\n</code></pre>\n<h4>Export and import string translation</h4>\n<p>In dashboard:</p>\n<pre><code>Languages -&gt; TTfP Settings\n</code></pre>\n<h4>Filter reference</h4>\n<pre><code>ttfp_domains\n</code></pre>\n<p>Allows plugins and themes (in functions.php) to modify list of text domains (unique identifier for retrieving translated strings).<br />\nList of text domains is displayed on &#8220;TTfP Settings&#8221; page to select them for translation by polylang engine.</p>\n<p>Example:</p>\n<pre><code>add_filter('ttfp_domains', 'custom_ttfp_domains', 10, 1);\nfunction custom_ttfp_domains(array $domains):array\n {\n     $domains[] = \"my-custom-domain\";\n     return $domains;\n }\n</code></pre>\n<h4>Filter reference</h4>\n<pre><code>ttfp_translation_access\n</code></pre>\n<p>Returns whether the user has capability to view and edit translations provided by TTfP.</p>\n<p>Example:</p>\n<pre><code>add_filter('ttfp_translation_access', 'custom_ttfp_translation_access', 10, 1);\nfunction custom_ttfp_translation_access(bool $hasAccess):bool\n {\n     return current_user_can('edit_posts');\n }\n</code></pre>\n",
        "installation": "<p>This plugin requires to be installed and activated the Polylang plugin,<br />\nThis plugin requires PHP 7.0</p>\n<ol>\n<li>Upload the &#8220;Theme and plugin translation for Polylang&#8221; folder to the <code>/wp-content/plugins/</code> directory on your web server.</li>\n<li>Activate the plugin through the Plugins menu in WordPress.</li>\n<li>In Dashboard go to the <code>Settings -&gt; Languages -&gt; String translation</code> or <code>Languages -&gt; String translation</code> and find your texts.</li>\n</ol>\n<h4>Use</h4>\n<pre><code>&lt;?php\n pll_e('My string'); // similar to _e();\n // or:\n $var = pll_('My string'); // similar to __();\n // or:\n  _e('My string', 'my_theme');\n // or:\n  $var = __('My string', 'my_theme');\n</code></pre>\n<h4>How to enable Twig extension with &#8220;Theme and plugin translation for Polylang&#8221;? [Timber plugin]</h4>\n<p>In functions.php add:</p>\n<pre><code>if (!class_exists('Timber')) {\n    add_action('admin_notices', function () {\n        echo '&lt;div class=\"error\"&gt;&lt;p&gt;Timber not activated. Make sure you activate the plugin in &lt;a href=\"' . esc_url(admin_url('plugins.php#timber')) . '\"&gt;' . esc_url(admin_url('plugins.php')) . '&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;';\n    });\n    return;\n}\n\nfunction timber_context()\n{\n    $context = Timber::get_context();\n    $post = Timber::query_post();\n    $context['post'] = $post;\n    $context['pll_e'] = TimberHelper::function_wrapper('pll_e');\n    $context['pll__'] = TimberHelper::function_wrapper('pll__');\n    return $context;\n}\n\nTimber::$dirname = array('templates', 'views'); // directory names with twig templates\ntimber_context();\n</code></pre>\n<p>Next, for example in index.php add:</p>\n<pre><code>&lt;?php\n $context = timber_context();\n $templates = array('home.twig', 'index.twig'); // twig files for render\n Timber::render($templates, $context);\n</code></pre>\n<p>Then you can use in twig templates polylang functions like this (in templates/home.twig):</p>\n<pre><code>{% extends \"base.twig\" %}\n {% block content %}\n     &lt;p&gt;\n         {{ pll_e(\"Test text on TWIG template 1.\") }}\n     &lt;/p&gt;\n     &lt;p&gt;\n         {{ pll__(\"Test text on TWIG template 2.\") }}\n     &lt;/p&gt;\n {% endblock %}\n</code></pre>\n",
        "changelog": "<h4>3.4.6 &#8211; 2024/08/07</h4>\n<ul>\n<li>Requires Plugins &#8211; by problems with the pro version of Polylang.</li>\n</ul>\n<h4>3.4.5 &#8211; 2024/08/07</h4>\n<ul>\n<li>Requires Plugins &#8211; by problems with the pro version of Polylang.</li>\n</ul>\n<h4>3.4.4 &#8211; 2024/08/07</h4>\n<ul>\n<li>Requires Plugins &#8211; allow pro version of polylang.</li>\n</ul>\n<h4>3.4.3 &#8211; 2024/08/06</h4>\n<ul>\n<li>Added New Plugin Header &#8211;  Requires Plugins.</li>\n</ul>\n<h4>3.4.2 &#8211; 2024/02/15</h4>\n<ul>\n<li>Fixed preg_match_all for pll_.</li>\n<li>New option in settings: &#8220;Translate admin dashboard by user preferences (user profile settings)&#8221;.</li>\n</ul>\n<h4>3.4.1 &#8211; 2024/01/16</h4>\n<ul>\n<li>Fixed &#8216;Call to undefined function get_plugins()&#8217;</li>\n</ul>\n<h4>3.4.0 &#8211; 2023/08/03</h4>\n<ul>\n<li>Added apply_filters: ttfp_translation_access.</li>\n<li>Fixed force translating the administrator&#8217;s dashboard.</li>\n<li>Switched to PHP 7.0.</li>\n</ul>\n<h4>3.3.5 &#8211; 2023/04/24</h4>\n<ul>\n<li>Fixed text domains of plugins on setting page.</li>\n<li>Fixed pll_admin_current_language filter for translate or no translate admin dashboard.</li>\n</ul>\n<h4>3.3.4 &#8211; 2023/04/03</h4>\n<ul>\n<li>Check if function get_plugin_data exist before use.</li>\n<li>Added pll_admin_current_language filter for translate or no translate admin dashboard.</li>\n</ul>\n<h4>3.3.3 &#8211; 2023/01/26</h4>\n<ul>\n<li>Include text domain of plugins and themes.</li>\n</ul>\n<h4>3.3.2 &#8211; 2022/12/27</h4>\n<ul>\n<li>Fixed notice in Polylang_Theme_Translation_Settings.</li>\n</ul>\n<h4>3.3.1 &#8211; 2022/12/15</h4>\n<ul>\n<li>Added apply_filters: ttfp_domains.</li>\n</ul>\n<h4>3.3.0 &#8211; 2022/12/15</h4>\n<ul>\n<li>Fixed performance in filters in admin.</li>\n<li>Added temporary cache on polylang translations page (for 60s).</li>\n<li>Added WordPress core and admin string scanner: default domain.</li>\n<li>Loading translations on action: pll_language_defined</li>\n</ul>\n<h4>3.2.23 &#8211; 2022/12/12</h4>\n<ul>\n<li>Fixed performance in filters in admin.</li>\n</ul>\n<h4>3.2.22 &#8211; 2022/12/12</h4>\n<ul>\n<li>Fixed translators in filters.</li>\n</ul>\n<h4>3.2.21 &#8211; 2022/12/12</h4>\n<ul>\n<li>Removed esc_html filter.</li>\n</ul>\n<h4>3.2.20 &#8211; 2022/12/10</h4>\n<ul>\n<li>Fixed gettext filter for default domain.</li>\n</ul>\n<h4>3.2.19 &#8211; 2022/11/17</h4>\n<ul>\n<li>Security fix.</li>\n</ul>\n<h4>3.2.18 &#8211; 2022/11/17</h4>\n<ul>\n<li>Security fix.</li>\n</ul>\n<h4>3.2.17 &#8211; 2022/11/08</h4>\n<ul>\n<li>Security fix.</li>\n</ul>\n<h4>3.2.16 &#8211; 2022/11/04</h4>\n<ul>\n<li>Fixed gettext filter.</li>\n</ul>\n<h4>3.2.15 &#8211; 2022/11/04</h4>\n<ul>\n<li>Fixed gettext filter.</li>\n</ul>\n<h4>3.2.14 &#8211; 2022/11/03</h4>\n<ul>\n<li>Fixed gettext filter.</li>\n</ul>\n<h4>3.2.13 &#8211; 2022/05/26</h4>\n<ul>\n<li>Updated plugin description.</li>\n<li>Test with Polylang version 3.2.3 and WordPress 6.0.</li>\n</ul>\n<h4>3.2.12 &#8211; 2021/06/15</h4>\n<ul>\n<li>Added esc_attr_e and esc_attr__ filter.</li>\n</ul>\n<h4>3.2.11 &#8211; 2021/05/17</h4>\n<ul>\n<li>Added esc_html filter.</li>\n<li>Test with WordPress 5.7.2 version and Polylang version 3.0.4.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.2.10 &#8211; 2021/05/10</h4>\n<ul>\n<li>Fixed gettext_with_context filter.</li>\n</ul>\n<h4>3.2.9 &#8211; 2021/05/04</h4>\n<ul>\n<li>Updated scanner regex.</li>\n</ul>\n<h4>3.2.8 &#8211; 2021/05/03</h4>\n<ul>\n<li>Updated scanner regex.</li>\n<li>Updated readme.</li>\n</ul>\n<h4>3.2.7 &#8211; 2021/05/03</h4>\n<ul>\n<li>Updated scanner regex: added esc_html__.</li>\n</ul>\n<h4>3.2.6 &#8211; 2021/04/27</h4>\n<ul>\n<li>Updated scanner regex.</li>\n<li>Test with Polylang version 3.0.4.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.2.5 &#8211; 2021/02/20</h4>\n<ul>\n<li>UTF-8 header in csv exporter.</li>\n<li>Test with Polylang version 2.9.2.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.2.4 &#8211; 2020/09/13</h4>\n<ul>\n<li>Added ngettext polylang filter.</li>\n<li>Added to file skaner function _n(): single + plural.</li>\n<li>Test with Polylang version 2.8.2.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.2.3 &#8211; 2020/03/26</h4>\n<ul>\n<li>Updated screens.</li>\n<li>Refactoring.</li>\n<li>Test with Polylang version 2.6.10.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.2.2 &#8211; 2020/02/02</h4>\n<ul>\n<li>Fixed gettext filter.</li>\n<li>Test with WordPress 5.3.2 version and Polylang version 2.6.9.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.2.1 &#8211; 2019/12/07</h4>\n<ul>\n<li>Updated version.</li>\n<li>Test with WordPress 5.3 version and Polylang version 2.6.7</li>\n</ul>\n<h4>3.2.0 &#8211; 2019/09/26</h4>\n<ul>\n<li>Added setting section in &#8220;TTfP Settings&#8221; tab.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.1.1 &#8211; 2019/09/20</h4>\n<ul>\n<li>Fix file scanner.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.1.0 &#8211; 2019/09/13</h4>\n<ul>\n<li>Translate strings from functions: _e( string $text, string $domain = &#8216;default&#8217; ) and __( string $text, string $domain = &#8216;default&#8217; ).</li>\n<li>Updated plugin description.</li>\n<li>Test with WordPress 5.2.3 version and Polylang version 2.6.x.</li>\n<li>Updated version.</li>\n</ul>\n<h4>3.0.0 &#8211; 2019/05/12</h4>\n<ul>\n<li>Added import and export feature.</li>\n<li>Updated plugin description.</li>\n<li>Test with WordPress 5.2 version and Polylang version 2.5.x.</li>\n<li>Updated version.</li>\n</ul>\n<h4>2.0.4 &#8211; 2018/12/10</h4>\n<ul>\n<li>Test with WordPress 5.0 version and Polylang version 2.5.</li>\n<li>Updated version.</li>\n</ul>\n<h4>2.0.3 &#8211; 2018/07/04</h4>\n<ul>\n<li>Test with WordPress 4.9.5 version and Polylang version 2.3.4.</li>\n<li>Updated version.</li>\n</ul>\n<h4>2.0.2 &#8211; 2018/01/02</h4>\n<ul>\n<li>Updated plugin description.</li>\n<li>Test with WordPress 4.9 version and Polylang version 2.2.7.</li>\n<li>Updated version.</li>\n</ul>\n<h4>2.0.1 &#8211; 2017/10/03</h4>\n<ul>\n<li>Test with WordPress 4.8 version and Polylang version 2.2.3.</li>\n<li>Updated version.</li>\n</ul>\n<h4>2.0.0 &#8211; 2017/03/05</h4>\n<ul>\n<li>Added plugin scanner.</li>\n<li>Updated version.</li>\n</ul>\n<h4>1.4.0 &#8211; 2017/01/29</h4>\n<ul>\n<li>Polylang version 2.1 &#8211; fixed: polylang changed default tab.</li>\n<li>Updated version.</li>\n</ul>\n<h4>1.3.3 &#8211; 2017/01/09</h4>\n<ul>\n<li>Test with WordPress 4.7 version and Polylang version 2.0.12.</li>\n<li>Updated version.</li>\n</ul>\n<h4>1.3.2 &#8211; 2016/09/07</h4>\n<ul>\n<li>Test with 4.6.1 WordPress version.</li>\n<li>Updated version.</li>\n</ul>\n<h4>1.3.1 &#8211; 2016/06/07</h4>\n<ul>\n<li>Added plugin logo.</li>\n</ul>\n<h4>1.3 &#8211; 2016/05/15</h4>\n<ul>\n<li>Fixed warnings.</li>\n<li>Test with 4.5 WordPress version.</li>\n<li>Updated description.</li>\n<li>Updated version.</li>\n</ul>\n<h4>1.2 &#8211; 2016/03/27</h4>\n<ul>\n<li>Updated description.</li>\n</ul>\n<h4>1.1 &#8211; 2016/02/03</h4>\n<ul>\n<li>Fixed readme.txt</li>\n</ul>\n"
    },
    "short_description": "Theme and plugin translation using Polylang for WordPress. Extension for Polylang plugin.",
    "description": "<h4>What is &#8220;Theme and plugin translation for Polylang&#8221;?</h4>\n<p>Extension for Polylang plugin (Polylang is an extension to make multilingual WordPress websites.).<br />\nPlugin is needed to translate the WordPress themes and plugins by Polylang.</p>\n<h4>How to configure it?</h4>\n<p>Select themes and plugins to find texts for translation by Polylang.<br />\nIn admin dashboard:</p>\n<pre><code>Languages -&gt; TTfP Settings\n</code></pre>\n<h4>How it is work?</h4>\n<p>&#8220;Theme and plugin translation for Polylang&#8221; automatically searches all files of WordPress themes and plugins. It chooses from this file only those files with extensions:</p>\n<ul>\n<li>php</li>\n<li>inc</li>\n<li>twig</li>\n</ul>\n<p>In addition, is implemented the integration with Timber library (read more: http://timber.upstatement.com) – which allows to translate twig&#8217;s skins in simple way.<br />\nPlugin in searched skins or plugins chooses texts from Polylang functions, such as:</p>\n<ul>\n<li>_e(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>__(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>_x(string $text, string $context, string $domain = &#8216;default&#8217;);</li>\n<li>pll_e(string $text);</li>\n<li>pll__(string $text);</li>\n<li>esc_html(string $text);</li>\n<li>esc_html_e(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>esc_html__(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>_n(string $single, string $plural, int $number, string $domain = &#8216;default&#8217;);</li>\n<li>esc_attr_e(string $text, string $domain = &#8216;default&#8217;);</li>\n<li>esc_attr__(string $text, string $domain = &#8216;default&#8217;);</li>\n</ul>\n<p>In your function.php, themes or plugins.</p>\n<p>For example:</p>\n<pre><code>&lt;p&gt;&lt;?php pll_e('My text'); ?&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;?php _e('My another text', 'my_theme'); ?&gt;&lt;/p&gt;\n</code></pre>\n<p>On the timber context declare this functions like:</p>\n<pre><code>$context['pll_e'] = TimberHelper::function_wrapper('pll_e');\n\n$context['pll_'] = TimberHelper::function_wrapper('pll_');\n</code></pre>\n<p>See more on: <code>https://polylang.wordpress.com/documentation/documentation-for-developers/functions-reference/</code><br />\nThese functions are defined by Polylang plugin for printing translations.<br />\nThanks &#8220;Theme and plugin translation for Polylang&#8221; you can find these strings to translate and add to Polylang register on very simple way.<br />\nAnd then you can translate these texts from the admin dashboard.<br />\nThe scan result can be seen on the tab with translations:</p>\n<pre><code>Settings -&gt; Languages -&gt; String translation\n</code></pre>\n<p>or</p>\n<pre><code>Languages -&gt; String translation\n</code></pre>\n<p>You don&#8217;t need programs like poedit – you don&#8217;t change files with extensions like: <code>.pot</code>, <code>.po</code>, <code>.mo</code>.<br />\n&#8220;Theme and plugin translation for Polylang&#8221; is highly efficient because the scanner is worked only on admin dashboard in tab:<br />\nIn dashboard:</p>\n<pre><code>Settings -&gt; Languages -&gt; String translation\n</code></pre>\n<p>or</p>\n<pre><code>Languages -&gt; String translation\n</code></pre>\n<h4>Export and import string translation</h4>\n<p>In dashboard:</p>\n<pre><code>Languages -&gt; TTfP Settings\n</code></pre>\n<h4>Filter reference</h4>\n<pre><code>ttfp_domains\n</code></pre>\n<p>Allows plugins and themes (in functions.php) to modify list of text domains (unique identifier for retrieving translated strings).<br />\nList of text domains is displayed on &#8220;TTfP Settings&#8221; page to select them for translation by polylang engine.</p>\n<p>Example:</p>\n<pre><code>add_filter('ttfp_domains', 'custom_ttfp_domains', 10, 1);\nfunction custom_ttfp_domains(array $domains):array\n {\n     $domains[] = \"my-custom-domain\";\n     return $domains;\n }\n</code></pre>\n<h4>Filter reference</h4>\n<pre><code>ttfp_translation_access\n</code></pre>\n<p>Returns whether the user has capability to view and edit translations provided by TTfP.</p>\n<p>Example:</p>\n<pre><code>add_filter('ttfp_translation_access', 'custom_ttfp_translation_access', 10, 1);\nfunction custom_ttfp_translation_access(bool $hasAccess):bool\n {\n     return current_user_can('edit_posts');\n }\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/theme-translation-for-polylang.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/theme-translation-for-polylang/assets/screenshot-1.png?rev=2086990",
            "caption": "Screen show \"Polylang\" strings translations with \"Theme and plugin translation for Polylang\"."
        },
        {
            "src": "https://ps.w.org/theme-translation-for-polylang/assets/screenshot-2.png?rev=2086990",
            "caption": "Export/import translations as CSV file with \"Theme and plugin translation for Polylang\"."
        },
        {
            "src": "https://ps.w.org/theme-translation-for-polylang/assets/screenshot-3.png?rev=2834530",
            "caption": "Settings - Select area to be scanned in Strigs translations polylang tab."
        }
    ],
    "tags": {
        "languages": "languages",
        "multilanguage": "multilanguage",
        "polylang": "polylang",
        "translate": "translate",
        "translation": "translation"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/theme-translation-for-polylang/assets/icon-128x128.png?rev=1431912",
        "2x": "https://ps.w.org/theme-translation-for-polylang/assets/icon-256x256.png?rev=1431912"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 94,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}