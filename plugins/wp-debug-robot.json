{
    "name": "WP Debug Robot",
    "slug": "wp-debug-robot",
    "version": "1.0",
    "author": "<a href=\"http://borkweb.com\">Matthew Batchelder</a>",
    "author_profile": "https://profiles.wordpress.org/borkweb/",
    "contributors": {
        "borkweb": {
            "profile": "https://profiles.wordpress.org/borkweb/",
            "avatar": "https://secure.gravatar.com/avatar/1e656e49ac69899daa3ff81232b041eb?s=96&d=monsterid&r=g",
            "display_name": "Matthew Batchelder"
        }
    },
    "requires": "3.4.1",
    "tested": "3.4.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wp-debug-robot/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2660,
    "last_updated": "2014-03-04 19:05:00",
    "added": "2012-09-18",
    "homepage": "http://borkweb.com",
    "sections": {
        "description": "<p>Have you ever wanted to get debug output sent to you from WordPress without interrupting the flow of the page?<br />\nDo you ever wish you could get debug output from <em>other users&#8217;</em> sessions so you don&#8217;t have to:</p>\n<ul>\n<li>Log in as them</li>\n<li>Asking them to look at debug output themselves (bleh)</li>\n<li>Or try in vain to re-create their issue</li>\n</ul>\n<p>This plugin allows you to send debug messages via UDP to a <a href=\"https://github.com/borkweb/jabberbot\" rel=\"nofollow ugc\">Jabber Bot</a> that can then route<br />\nthe debug information to your IM client.</p>\n<p><em>Note: This plugin sends the messages via UDP.  The receiving end doesn&#8217;t necessarily need to be a Jabber bot&#8230;it could be anything you want<br />\n(e.g. email bot, logger, whatever).  My implementation is a Jabber Bot on my local dev environment ðŸ™‚</em></p>\n<h4>Usage</h4>\n<p>To send debug messages, simply call:</p>\n<pre><code>do_action( 'debug_robot', $message [, $target ]);\n</code></pre>\n<ul>\n<li><strong>$message</strong>: Message to send to your jabber bot.</li>\n<li><strong>$target</strong>: <em>(optional)</em> Email address that your jabber bot will route the message to.</li>\n</ul>\n<p>To receive debug messages, you will need to have:</p>\n<ul>\n<li>Your <a href=\"https://github.com/borkweb/jabberbot\" rel=\"nofollow ugc\">Jabber Bot</a> installed and configured.</li>\n<li>The Jabber Bot must be running.</li>\n<li>You must have friended your robot&#8217;s jabber account with another jabber account (e.g. your Google account).</li>\n<li>You must be signed into Google Talk in some way shape or form so that your jabber bot can IM you.</li>\n</ul>\n<p><em>Note: If your Jabber Bot isn&#8217;t running, no worries.  UDP doesn&#8217;t wait for a response so it won&#8217;t impact your WordPress instance&#8230;you just won&#8217;t get the messages that<br />\nare sent until your bot is running ðŸ™‚</em></p>\n<h3>Credits</h3>\n<p>This code was largely written by <a href=\"https://github.com/abackstrom\" rel=\"nofollow ugc\">@abackstrom</a> with some additions by me while we worked at <a href=\"https://github.com/PlymouthState\" rel=\"nofollow ugc\">@PlymouthState</a>. I then ported it into a WordPress plugin.</p>\n",
        "installation": "<ol>\n<li>Upload the <code>wp-debug-robot</code> folder to your plugins directory (e.g. <code>wp-content/plugins</code>)</li>\n<li>Got to Settings &gt; Debug Robot and configure your settings.  </li>\n<li>Set the <code>host</code> and <code>port</code> of the server you wish to send debug messages to.</li>\n<li>Set the default <code>target</code> email address that debug messages will be routed to by a Jabber bot.</li>\n<li>Configure a <a href=\"https://github.com/borkweb/jabberbot\" rel=\"nofollow ugc\">Jabber Bot</a> </li>\n</ol>\n<p><em>Note: you will also need a dummy jabber email address to act as your jabber bot.  I created one with Google Apps called robot@mydomain.com then friended that account with my primary Google account.</em></p>\n",
        "faq": "\n<h4>You mention a jabber bot.  What is that all about?</h4>\n<p>\n<p>This plugin allows your WordPress installation to send UDP packets containing debug information to&#8230;some place.  The jabber bot is a service that runs on a the location you configure your Debug Settings to point to.  When doing development on my localhost, I can run my jabberbot on my localhost as well so my dev environment sends debug info to the same machine it is running on.  Another example that I have running: There is a machine in my office with the jabberbot running at all times.  My co-workers at Gigaom and me &#8211; as long as we&#8217;re on our local network &#8211; can use the jabber bot by pointing their Debug Robot settings to the machine running the bot!  Super easy.</p>\n</p>\n\n",
        "changelog": "<h4>1.0</h4>\n<p>Initial version</p>\n"
    },
    "short_description": "An unobtrusive debugging tool for WordPress",
    "description": "<p>Have you ever wanted to get debug output sent to you from WordPress without interrupting the flow of the page?<br />\nDo you ever wish you could get debug output from <em>other users&#8217;</em> sessions so you don&#8217;t have to:</p>\n<ul>\n<li>Log in as them</li>\n<li>Asking them to look at debug output themselves (bleh)</li>\n<li>Or try in vain to re-create their issue</li>\n</ul>\n<p>This plugin allows you to send debug messages via UDP to a <a href=\"https://github.com/borkweb/jabberbot\" rel=\"nofollow ugc\">Jabber Bot</a> that can then route<br />\nthe debug information to your IM client.</p>\n<p><em>Note: This plugin sends the messages via UDP.  The receiving end doesn&#8217;t necessarily need to be a Jabber bot&#8230;it could be anything you want<br />\n(e.g. email bot, logger, whatever).  My implementation is a Jabber Bot on my local dev environment ðŸ™‚</em></p>\n<h4>Usage</h4>\n<p>To send debug messages, simply call:</p>\n<pre><code>do_action( 'debug_robot', $message [, $target ]);\n</code></pre>\n<ul>\n<li><strong>$message</strong>: Message to send to your jabber bot.</li>\n<li><strong>$target</strong>: <em>(optional)</em> Email address that your jabber bot will route the message to.</li>\n</ul>\n<p>To receive debug messages, you will need to have:</p>\n<ul>\n<li>Your <a href=\"https://github.com/borkweb/jabberbot\" rel=\"nofollow ugc\">Jabber Bot</a> installed and configured.</li>\n<li>The Jabber Bot must be running.</li>\n<li>You must have friended your robot&#8217;s jabber account with another jabber account (e.g. your Google account).</li>\n<li>You must be signed into Google Talk in some way shape or form so that your jabber bot can IM you.</li>\n</ul>\n<p><em>Note: If your Jabber Bot isn&#8217;t running, no worries.  UDP doesn&#8217;t wait for a response so it won&#8217;t impact your WordPress instance&#8230;you just won&#8217;t get the messages that<br />\nare sent until your bot is running ðŸ™‚</em></p>\n<h3>Credits</h3>\n<p>This code was largely written by <a href=\"https://github.com/abackstrom\" rel=\"nofollow ugc\">@abackstrom</a> with some additions by me while we worked at <a href=\"https://github.com/PlymouthState\" rel=\"nofollow ugc\">@PlymouthState</a>. I then ported it into a WordPress plugin.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-debug-robot.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "debug": "debug",
        "debugging": "debugging",
        "robot": "robot",
        "udp": "udp"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/wp-debug-robot/assets/banner-772x250.png?rev=600688",
        "high": false
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wp-debug-robot_384e71.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}