{
    "name": "Expire Password Protected Pages",
    "slug": "expire-password-protected-pages",
    "version": "0.1.0",
    "author": "<a href=\"http://troyglancy.com\">Troy Glancy</a>",
    "author_profile": "https://profiles.wordpress.org/troyglancy/",
    "contributors": {
        "troyglancy": {
            "profile": "https://profiles.wordpress.org/troyglancy/",
            "avatar": "https://secure.gravatar.com/avatar/25a15b76a1ead86a91f7693aad2d6ff8?s=96&d=monsterid&r=g",
            "display_name": "TG"
        }
    },
    "requires": "3.7",
    "tested": "4.9.26",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 3,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 3,
    "support_url": "https://wordpress.org/support/plugin/expire-password-protected-pages/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 200,
    "downloaded": 2630,
    "last_updated": "2018-05-22 3:44am GMT",
    "added": "2017-08-16",
    "homepage": "https://github.com/troyglancy/Expire-Password-Protected-Pages",
    "sections": {
        "installation": "<ol>\n<li>\n<p>Install plugin via the WordPress Plugin directory within your WordPress install or uploading the the folder <code>expire-password-protected-pages</code> to the <code>/wp-content/plugins/</code> directory</p>\n</li>\n<li>\n<p>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</p>\n</li>\n<li>\n<p>Done</p>\n</li>\n</ol>\n<h4>0.1.0</h4>\n<p>*Inital Date &#8211; August 15 2017</p>\n",
        "description": "<p>Description: This plugin will require visitors to type in the password each time they are visiting a password protected page. This also will prevent the page from being accessible if someone types in the password on a public computer. By default WordPress password protected pages sessions will last 10 days. Originally came up with this idea when a client did not want a password protected pages accessible after the browser was closed. While you could add the code to your function.php within your theme I did not want the code to get overwritten when doing a theme update. Using this plugin avoids the need for updating the function.php file.</p>\n<p>Once you have it uploaded to your WordPress install. Simply login to your WordPress backend and activate the plugin. After it&#8217;s activated you no longer need to do anything. You can test the page by refreshing the page after typing the password or closing your browser. Once you visit the page again it will force you to type in the password.</p>\n<p>Please note: If you use a cache plugin it may cause the plugin to not work correctly. Please whitelist the page you&#8217;re password protecting within your cache plugin.</p>\n<p>You can use this plugin by downloading and unzippping it to the /plugin directory. Once you have it uploaded to your web host login to your WordPress backend and activate the plugin. After it&#8217;s activated you no longer need to do anything.</p>\n",
        "faq": "\n<h4>Installation Instructions</h4>\n<p>\n<ol>\n<li>\n<p>Install plugin via the WordPress Plugin directory within your WordPress install or uploading the the folder <code>expire-password-protected-pages</code> to the <code>/wp-content/plugins/</code> directory</p>\n</li>\n<li>\n<p>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</p>\n</li>\n<li>\n<p>Done</p>\n</li>\n</ol>\n<h4>0.1.0</h4>\n<p>*Inital Date &#8211; August 15 2017</p>\n</p>\n\n"
    },
    "short_description": "Description: This plugin will require visitors to type in the password each time they are visiting a password protected page.",
    "description": "<p>Description: This plugin will require visitors to type in the password each time they are visiting a password protected page. This also will prevent the page from being accessible if someone types in the password on a public computer. By default WordPress password protected pages sessions will last 10 days. Originally came up with this idea when a client did not want a password protected pages accessible after the browser was closed. While you could add the code to your function.php within your theme I did not want the code to get overwritten when doing a theme update. Using this plugin avoids the need for updating the function.php file.</p>\n<p>Once you have it uploaded to your WordPress install. Simply login to your WordPress backend and activate the plugin. After it&#8217;s activated you no longer need to do anything. You can test the page by refreshing the page after typing the password or closing your browser. Once you visit the page again it will force you to type in the password.</p>\n<p>Please note: If you use a cache plugin it may cause the plugin to not work correctly. Please whitelist the page you&#8217;re password protecting within your cache plugin.</p>\n<p>You can use this plugin by downloading and unzippping it to the /plugin directory. Once you have it uploaded to your web host login to your WordPress backend and activate the plugin. After it&#8217;s activated you no longer need to do anything.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/expire-password-protected-pages.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "password-protected-pages": "password protected pages",
        "security": "security"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/expire-password-protected-pages.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}