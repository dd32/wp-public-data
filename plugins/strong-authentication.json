{
    "name": "WordPress Strong Authentication",
    "slug": "strong-authentication",
    "version": "1.2.1",
    "author": "Cornelius KÃ¶lbel",
    "author_profile": "https://profiles.wordpress.org/cornelinux/",
    "contributors": {
        "cornelinux": {
            "profile": "https://profiles.wordpress.org/cornelinux/",
            "avatar": "https://secure.gravatar.com/avatar/a6e03745064e830c7a8fd8dfbfe692e6?s=96&d=monsterid&r=g",
            "display_name": "cornelinux"
        }
    },
    "requires": "3.6",
    "tested": "5.1.19",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/strong-authentication/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2116,
    "last_updated": "2019-08-13 2:31pm GMT",
    "added": "2014-07-22",
    "homepage": "https://github.com/cornelinux/wp-strong-authentication",
    "sections": {
        "description": "<p>WordPress Strong Authentication lets you authenticate users with a second<br />\nfactor of possession.</p>\n<p>Only if the user is able to provide this second factor, he is allowed to login.<br />\nSuch a second factor can be an OTP display card, an OTP hardware token, a Yubikey,<br />\na smartphone App like the Google Authenticator or access to an mobile phone<br />\nto receive an SMS or access to an email account.</p>\n<p>The use then needs to authenticate with his wordpress password and in addition with<br />\na code, generated by his device or sent via email or SMS.</p>\n<p>All the devices are managed in the backend (privacyIDEA)[http://privacyidea.org], the Strong Authentication<br />\nplugin forwards authentication requests to this backend, which you can easily run<br />\non the same machine or anywhere in your network.</p>\n<h3>Configuration</h3>\n<p>Please add at least a hostname or IP address of your backend server privacyIDEA.<br />\nYou need to enter the hostname together with the protocol and the port, if it is<br />\nnot a standard port.<br />\nIf you are using self signed certificates, you should disable the verification of hostname and peer.</p>\n<p>Please note: You need to have the same users in the LinOTP server.<br />\nYou can achieve this by configuring an SQL Resolver and presetting this to<br />\nWordpress.</p>\n<h3>Troubleshooting</h3>\n<p>If you misconfigured the plugin, you might not be able to authenticate anymore!</p>\n<p>So it is always a good idea to add some users to the &#8220;excluded users&#8221; list.<br />\nThese users will be able to authenticate without a second factor and<br />\neven if the authentication server should be down.</p>\n<p>Another possibility is to disable the plugin by removing or renaming the<br />\nplugin directory.<br />\nIn this case is will fall back to the old wordpress passwords.</p>\n",
        "installation": "<p>You can install this plugin from within your wordpress plugin menu.</p>\n<p>Alternatively you can install it manually:</p>\n<p>For installing the wordpress plugin simply copy the file<br />\nwp-strong-authentication.php to the wordpress directory</p>\n<p>./wp-content/plugins</p>\n",
        "faq": "<p>Q: What happens if my authentication backend is offline?</p>\n<p>A: If your authentication backend is offline, the users are not able<br />\n   to authenticate with OTP. This is the same as if you SQL server is down<br />\n   or your LDAP server is not reachable.</p>\n<p>Alas, you can configure certain users, who will not be authenticated against<br />\n   the backend but within wordpres. This can be an emergency entry.</p>\n",
        "changelog": "<p>1.2.1</p>\n<ul>\n<li>Use PHP curl for a better communitcation to the privacyIDEA server</li>\n</ul>\n<p>1.2</p>\n<ul>\n<li>Add user-agent to POST request</li>\n</ul>\n<p>1.1.1</p>\n<ul>\n<li>Fixed and error in displaying errors :-/ </li>\n</ul>\n<p>1.1</p>\n<ul>\n<li>remove php curl and use WP HTTP class instead</li>\n</ul>\n<p>1.0</p>\n<ul>\n<li>Add possibility to exclude users from two factor authentication</li>\n</ul>\n"
    },
    "short_description": "Wordpress Strong Authentication lets you authenticate users with a second",
    "description": "<p>WordPress Strong Authentication lets you authenticate users with a second<br />\nfactor of possession.</p>\n<p>Only if the user is able to provide this second factor, he is allowed to login.<br />\nSuch a second factor can be an OTP display card, an OTP hardware token, a Yubikey,<br />\na smartphone App like the Google Authenticator or access to an mobile phone<br />\nto receive an SMS or access to an email account.</p>\n<p>The use then needs to authenticate with his wordpress password and in addition with<br />\na code, generated by his device or sent via email or SMS.</p>\n<p>All the devices are managed in the backend (privacyIDEA)[http://privacyidea.org], the Strong Authentication<br />\nplugin forwards authentication requests to this backend, which you can easily run<br />\non the same machine or anywhere in your network.</p>\n<h3>Configuration</h3>\n<p>Please add at least a hostname or IP address of your backend server privacyIDEA.<br />\nYou need to enter the hostname together with the protocol and the port, if it is<br />\nnot a standard port.<br />\nIf you are using self signed certificates, you should disable the verification of hostname and peer.</p>\n<p>Please note: You need to have the same users in the LinOTP server.<br />\nYou can achieve this by configuring an SQL Resolver and presetting this to<br />\nWordpress.</p>\n<h3>Troubleshooting</h3>\n<p>If you misconfigured the plugin, you might not be able to authenticate anymore!</p>\n<p>So it is always a good idea to add some users to the &#8220;excluded users&#8221; list.<br />\nThese users will be able to authenticate without a second factor and<br />\neven if the authentication server should be down.</p>\n<p>Another possibility is to disable the plugin by removing or renaming the<br />\nplugin directory.<br />\nIn this case is will fall back to the old wordpress passwords.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/strong-authentication.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "otp": "otp",
        "privacyidea": "privacyIDEA",
        "strong-authentication": "strong authentication",
        "two-factor-authentication": "two factor authentication"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/strong-authentication.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}