{
    "name": "Advanced Custom Fields : CPT Options Pages",
    "slug": "acf-cpt-options-pages",
    "version": "2.0.9",
    "author": "<a href=\"https://frontend.im/\">Tusko Trush</a>",
    "author_profile": "https://profiles.wordpress.org/tusko-trush/",
    "contributors": {
        "tusko-trush": {
            "profile": "https://profiles.wordpress.org/tusko-trush/",
            "avatar": "https://secure.gravatar.com/avatar/0b82d948792c6dad840e0b0aee6c91b6?s=96&d=monsterid&r=g",
            "display_name": "Tusko Trush"
        }
    },
    "requires": "3.0",
    "tested": "6.2.6",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 7,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 7,
    "support_url": "https://wordpress.org/support/plugin/acf-cpt-options-pages/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 3000,
    "downloaded": 54396,
    "last_updated": "2023-04-08 14:30:00",
    "added": "2016-07-08",
    "homepage": "https://wordpress.org/plugins/acf-cpt-options-pages/",
    "sections": {
        "description": "<p>Small addon for ACF Options. Adds ACF location for each custom post type.</p>\n<p><strong>New feature</strong> in the major version 2!<br />\nImportant!<br />\n<strong>After update to v2+ you must reconnect Field Groups to Options Pages</strong></p>\n<p>Now you can activate/deactivate CPTs and create custom options pages for each CPT.<br />\nBy default, options pages are activated for all custom post types.</p>\n<h4>Usage</h4>\n<p>The default functions of <a href=\"http://www.advancedcustomfields.com/\" title=\"Advanced Custom Fields\" rel=\"nofollow ugc\">ACF plugin</a> (<code>get_field, the_field, etc.</code>) can be used to load values from a CPT Options Pages, but second parameter is required to target the CPT options.</p>\n<p>This is similar to passing through a <code>$post_id</code> parameter to target a specific post object.</p>\n<p>The <code>$post_id</code> parameter needed is a string containing the <code>cpt_</code> and CPT name in the following format; <code>\"cpt_{CPT_NAME}\"</code> and for subpages you can copy generated ID while creating subpages.</p>\n<h4>Examples</h4>\n<blockquote>\n<p>In examples Custom Post Type name is <code>projects</code>.</p>\n</blockquote>\n<p>So, let&#8217;s go!</p>\n<p><strong>Display a field</strong></p>\n<pre><code>&lt;p&gt;&lt;?php the_field('field_name', 'cpt_projects'); ?&gt;&lt;/p&gt;\n</code></pre>\n<p>and the subpage&#8217;s field</p>\n<pre><code>&lt;p&gt;&lt;?php the_field('field_name', 'cpt_projects_testpage'); ?&gt;&lt;/p&gt;\n</code></pre>\n<p><strong>Retrieve a field</strong></p>\n<pre><code>&lt;?php\n    $field = get_field('field_name', 'cpt_projects');\n    // do something with $field\n?&gt;\n</code></pre>\n<p><strong>Display a sub field</strong></p>\n<pre><code>    &lt;?php if( have_rows('repeater_name', 'cpt_projects') ): ?&gt;\n        &lt;ul&gt;\n            &lt;?php while( have_rows('repeater_name', 'cpt_projects') ): the_row(); ?&gt;\n                &lt;li&gt;&lt;?php the_sub_field('the_title'); ?&gt;&lt;/li&gt;\n            &lt;?php endwhile; ?&gt;\n        &lt;/ul&gt;\n    &lt;?php endif; ?&gt;\n</code></pre>\n<p><strong>Display with shortcode</strong></p>\n<pre><code>[acf field=\"field_name\" post_id=\"cpt_projects\"]\n</code></pre>\n<blockquote>\n<p>Please read documentation about <a href=\"http://www.advancedcustomfields.com/resources/shortcode/\" title=\"ACF Shortcode\" rel=\"nofollow ugc\">shortcodes with ACF</a></p>\n</blockquote>\n<h3>Customization</h3>\n<pre><code>    function cpt_projects_customize($cptmenu) {\n        $cptmenu['page_title'] = 'Dev Custom title';\n        $cptmenu['menu_title'] = 'Dev Custom title';\n        return $cptmenu;\n    }\n\n    add_filter('cpt_projects_acf_page_args', 'cpt_projects_customize');\n</code></pre>\n<p>Don&#8217;t forget to replace <code>cpt_projects_</code> to your custom post type name ðŸ™‚<br />\nIt works only for first level options pages, not for subpages.</p>\n<h4>Donate</h4>\n<p><a href=\"https://donatua.com/@tusko\" rel=\"nofollow ugc\">Support plugin</a></p>\n<h4>License</h4>\n<p>Copyright (c) 2023, <a href=\"https://frontend.im/?github\" title=\"Front-End Developer\" rel=\"nofollow ugc\">Tusko Trush</a></p>\n<h4>Requirements</h4>\n<p>You must buy ACF PRO or ACF Options Page Addon.</p>\n<h4>Translation</h4>\n<p><strong>qTranslate-XT</strong></p>\n<p>This plugin is compatible and has included <a href=\"https://uk.wordpress.org/plugins/acf-qtranslate/\" title=\"ACF qTranslate\" rel=\"nofollow ugc\">ACF qTranslate</a>.<br />\nJust enjoy!</p>\n<p><strong>qTranslate-X</strong></p>\n<p>If you are using Qtranslate-X, you must install <a href=\"https://uk.wordpress.org/plugins/acf-qtranslate/\" title=\"ACF qTranslate\" rel=\"nofollow ugc\">ACF qTranslate</a>.</p>\n<p><strong>WPML/Polylang</strong></p>\n<p>If you are using WPML or Polylang, you must add constant <code>ICL_LANGUAGE_CODE</code> to <code>post_id</code>,<br />\nfor example: <code>get_field('archive_title', 'cpt_projects_' . ICL_LANGUAGE_CODE)</code>.</p>\n",
        "installation": "<ol>\n<li>Upload &#8216;acf-cpt-options-pages&#8217; to the <code>/wp-content/plugins/</code> directory.</li>\n<li>Activate the plugin through the<code>Plugins</code> menu in WordPress.</li>\n<li>Go to <code>Custom fields</code> submenu <code>CPT Options page</code> and activate CPTs what you need or create subpages for that.</li>\n<li>Create your Custom Field Group, set location rule <code>Options Page</code> and choose your CPT options page or subpage.</li>\n<li>Read the documentation to display your data.</li>\n</ol>\n",
        "faq": "<p>If you have any questions on this please post an issue/question at <a href=\"https://github.com/Tusko/ACF-CPT-Options-Pages/issues\" rel=\"nofollow ugc\">Github Issues</a></p>\n",
        "changelog": "<h4>2.0.9</h4>\n<ul>\n<li>Tested up with WP 6.2 and ACF Pro 6.1.3</li>\n</ul>\n<h4>2.0.8</h4>\n<ul>\n<li>Tested up with WP 5.8.1 and ACF Pro 5.10.2</li>\n<li>Fix lang switcher and Wysiwyg Editor capability on ACF CPT Options pages</li>\n<li>Modified page slug  &#8216;-options&#8217; -&gt; &#8216;acfcpt-options&#8217; to make qTranslate config regex</li>\n</ul>\n<h4>2.0.7</h4>\n<ul>\n<li>Tested up 5.7.2</li>\n<li>@Ekeler PR: Update class.acf-cpt-options-pages.php</li>\n</ul>\n<h4>2.0.6</h4>\n<ul>\n<li>Tested up 5.7.1</li>\n<li>Added apply_filters cpt_options_post_types_params</li>\n</ul>\n<h4>2.0.5</h4>\n<ul>\n<li>Tested up 5.3.2</li>\n<li>Fix donate links</li>\n</ul>\n<h4>2.0.4</h4>\n<ul>\n<li>Tested up 5.2.1</li>\n<li>Assets updated</li>\n</ul>\n<h4>2.0.3</h4>\n<ul>\n<li>Fixed underscores in options pages title</li>\n</ul>\n<h4>2.0.2</h4>\n<ul>\n<li>Fixed WPML slugs</li>\n</ul>\n<h4>2.0.0</h4>\n<ul>\n<li>Added Russian, Ukrainian translations.</li>\n<li>Added setting page to ACF CPT Options Pages</li>\n<li>Added UI to manage options pages per CPT</li>\n<li>Ability to add child pages to CPTs</li>\n</ul>\n<h4>1.1.0</h4>\n<ul>\n<li>Support MO translations</li>\n<li>Customization using <code>add_filter</code></li>\n</ul>\n<h4>1.1.0</h4>\n<ul>\n<li>WPML and Polylang compatibility added.</li>\n</ul>\n<h4>1.0.2</h4>\n<ul>\n<li>Update documentation.</li>\n<li>Change labels and slugs.</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>Plugin created.</li>\n</ul>\n"
    },
    "short_description": "Small addon for ACF Options. Adds ACF location for each custom post type. New feature in the major version 2! Important! After update to v2+ you must &hellip;",
    "description": "<p>Small addon for ACF Options. Adds ACF location for each custom post type.</p>\n<p><strong>New feature</strong> in the major version 2!<br />\nImportant!<br />\n<strong>After update to v2+ you must reconnect Field Groups to Options Pages</strong></p>\n<p>Now you can activate/deactivate CPTs and create custom options pages for each CPT.<br />\nBy default, options pages are activated for all custom post types.</p>\n<h4>Usage</h4>\n<p>The default functions of <a href=\"http://www.advancedcustomfields.com/\" title=\"Advanced Custom Fields\" rel=\"nofollow ugc\">ACF plugin</a> (<code>get_field, the_field, etc.</code>) can be used to load values from a CPT Options Pages, but second parameter is required to target the CPT options.</p>\n<p>This is similar to passing through a <code>$post_id</code> parameter to target a specific post object.</p>\n<p>The <code>$post_id</code> parameter needed is a string containing the <code>cpt_</code> and CPT name in the following format; <code>\"cpt_{CPT_NAME}\"</code> and for subpages you can copy generated ID while creating subpages.</p>\n<h4>Examples</h4>\n<blockquote>\n<p>In examples Custom Post Type name is <code>projects</code>.</p>\n</blockquote>\n<p>So, let&#8217;s go!</p>\n<p><strong>Display a field</strong></p>\n<pre><code>&lt;p&gt;&lt;?php the_field('field_name', 'cpt_projects'); ?&gt;&lt;/p&gt;\n</code></pre>\n<p>and the subpage&#8217;s field</p>\n<pre><code>&lt;p&gt;&lt;?php the_field('field_name', 'cpt_projects_testpage'); ?&gt;&lt;/p&gt;\n</code></pre>\n<p><strong>Retrieve a field</strong></p>\n<pre><code>&lt;?php\n    $field = get_field('field_name', 'cpt_projects');\n    // do something with $field\n?&gt;\n</code></pre>\n<p><strong>Display a sub field</strong></p>\n<pre><code>    &lt;?php if( have_rows('repeater_name', 'cpt_projects') ): ?&gt;\n        &lt;ul&gt;\n            &lt;?php while( have_rows('repeater_name', 'cpt_projects') ): the_row(); ?&gt;\n                &lt;li&gt;&lt;?php the_sub_field('the_title'); ?&gt;&lt;/li&gt;\n            &lt;?php endwhile; ?&gt;\n        &lt;/ul&gt;\n    &lt;?php endif; ?&gt;\n</code></pre>\n<p><strong>Display with shortcode</strong></p>\n<pre><code>[acf field=\"field_name\" post_id=\"cpt_projects\"]\n</code></pre>\n<blockquote>\n<p>Please read documentation about <a href=\"http://www.advancedcustomfields.com/resources/shortcode/\" title=\"ACF Shortcode\" rel=\"nofollow ugc\">shortcodes with ACF</a></p>\n</blockquote>\n<h3>Customization</h3>\n<pre><code>    function cpt_projects_customize($cptmenu) {\n        $cptmenu['page_title'] = 'Dev Custom title';\n        $cptmenu['menu_title'] = 'Dev Custom title';\n        return $cptmenu;\n    }\n\n    add_filter('cpt_projects_acf_page_args', 'cpt_projects_customize');\n</code></pre>\n<p>Don&#8217;t forget to replace <code>cpt_projects_</code> to your custom post type name ðŸ™‚<br />\nIt works only for first level options pages, not for subpages.</p>\n<h4>Donate</h4>\n<p><a href=\"https://donatua.com/@tusko\" rel=\"nofollow ugc\">Support plugin</a></p>\n<h4>License</h4>\n<p>Copyright (c) 2023, <a href=\"https://frontend.im/?github\" title=\"Front-End Developer\" rel=\"nofollow ugc\">Tusko Trush</a></p>\n<h4>Requirements</h4>\n<p>You must buy ACF PRO or ACF Options Page Addon.</p>\n<h4>Translation</h4>\n<p><strong>qTranslate-XT</strong></p>\n<p>This plugin is compatible and has included <a href=\"https://uk.wordpress.org/plugins/acf-qtranslate/\" title=\"ACF qTranslate\" rel=\"nofollow ugc\">ACF qTranslate</a>.<br />\nJust enjoy!</p>\n<p><strong>qTranslate-X</strong></p>\n<p>If you are using Qtranslate-X, you must install <a href=\"https://uk.wordpress.org/plugins/acf-qtranslate/\" title=\"ACF qTranslate\" rel=\"nofollow ugc\">ACF qTranslate</a>.</p>\n<p><strong>WPML/Polylang</strong></p>\n<p>If you are using WPML or Polylang, you must add constant <code>ICL_LANGUAGE_CODE</code> to <code>post_id</code>,<br />\nfor example: <code>get_field('archive_title', 'cpt_projects_' . ICL_LANGUAGE_CODE)</code>.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/acf-cpt-options-pages.zip",
    "upgrade_notice": {
        "1.0.2": "<ul>\n<li>Update documentation.</li>\n<li>Change labels and slugs.</li>\n</ul>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/acf-cpt-options-pages/assets/screenshot-1.png?rev=1490128",
            "caption": "assets/screenshot-1.png"
        }
    ],
    "tags": {
        "acf-options": "acf options",
        "advanced-custom-fields": "advanced custom fields",
        "archive": "archive",
        "custom-post-type": "custom post type"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://donatua.com/@tusko",
    "banners": {
        "low": "https://ps.w.org/acf-cpt-options-pages/assets/banner-772x250.png?rev=1490128",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/acf-cpt-options-pages/assets/icon-128x128.png?rev=2105355",
        "2x": "https://ps.w.org/acf-cpt-options-pages/assets/icon-256x256.png?rev=2105355"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "acf-cpt-options-pages",
            "language": "es_ES",
            "version": "2.0.9",
            "updated": "2019-05-11 14:19:06",
            "package": "http://downloads.wordpress.org/translation/plugin/acf-cpt-options-pages/2.0.9/es_ES.zip"
        },
        {
            "type": "plugin",
            "slug": "acf-cpt-options-pages",
            "language": "fr_FR",
            "version": "2.0.9",
            "updated": "2019-05-24 13:18:07",
            "package": "http://downloads.wordpress.org/translation/plugin/acf-cpt-options-pages/2.0.9/fr_FR.zip"
        },
        {
            "type": "plugin",
            "slug": "acf-cpt-options-pages",
            "language": "sv_SE",
            "version": "2.0.9",
            "updated": "2021-06-21 13:20:45",
            "package": "http://downloads.wordpress.org/translation/plugin/acf-cpt-options-pages/2.0.9/sv_SE.zip"
        }
    ]
}