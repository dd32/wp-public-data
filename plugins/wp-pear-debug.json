{
    "name": "wp pear debug",
    "slug": "wp-pear-debug",
    "version": "1.5",
    "author": "Garvin Casimir",
    "author_profile": "https://profiles.wordpress.org/silasco/",
    "contributors": {
        "silasco": {
            "profile": "https://profiles.wordpress.org/silasco/",
            "avatar": "https://secure.gravatar.com/avatar/16a8dca8d2f509e9d8b816c565f89100?s=96&d=monsterid&r=g",
            "display_name": "silasco"
        }
    },
    "requires": "2.8",
    "tested": "4.3.34",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wp-pear-debug/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 5913,
    "last_updated": "2015-12-05 5:55am GMT",
    "added": "2008-07-25",
    "homepage": "",
    "sections": {
        "description": "<p>This plugin incorporates the pear php_debug library into wordpress.</p>\n<p>I started creating a new website around wordpress and noticed that there was no way to quickly access debug information so I integrated this class<br />\ninto wordpress for quick easy debugging when developing or experiencing problems on your wordpress website.</p>\n<p>Please feel free to ping me on twitter if you have a question.</p>\n<ul>\n<li>Features </li>\n</ul>\n<p>This plugin unlike most operates from within a class.<br />\nThere are several options which can be set in the admin section</p>\n<ol>\n<li>Debug Status: Overall<br />\nthis option allows you to enable and disable debugging entirely</li>\n<li>Display Debugging for: Guests<br />\nThis option allows you to enable debugging when no user is logged in</li>\n<li>The rest are a list of roles found in the sytem, eg. editor, contributor, administrator<br />\nFor each you have the following options: Admin &amp; Front End, Admin Only, Front End Only, Disable</li>\n<li>The plugin shows queries that were run by wordpress<br />\n    Please note that some queries run before the plugin is initialized. to ensure most if not all queries get recorded see step 4 in installation section. v1.4.1 shows not only the query but the time taken by the query and the function which called the query.</li>\n<li>\n<p>You can easly add debug information to the debugger by making use of several functions</p>\n<pre><code>&lt;?php \n    //For advanced use. \n    //Direct access to instance of debugger\n    $oDebug = wp_pear_debug::get();     \n    $oDebug-&gt;add($variable); //add variable to debug\n    $oDebug-&gt;dump($object,$varname); //var_dump an array or object. $varname optional\n    $oDebug-&gt;queryRel($info); //add query related info\n    $oDebug-&gt;error($info); //add user error\n    //more options available in the pear::php_debug documentation\n\n    //With v1.2 you have access to several wrapper functions\n    //Enough for most people\n            wp_pear_debug::add();\n            wp_pear_debug::dump();\n            wp_pear_debug::error();\n    //if you run this query with wpdb\n    //It will probably appear anyways.\n            wp_pear_debug::query();\n\n\n ?&gt;\n</code></pre>\n</li>\n<li>\n<p>Debug information appears in a neat panel controlled by javascript. The options expand and collapse. The debug panel also has<br />\na close button to completely remove the debug panel.</p>\n</li>\n<li>\n<p>Note that the debug bar floats at the top right and will not disrupt your layout.</p>\n</li>\n<li>\n<p>To ensure layout stability the plugin is hard coded to use only the HTML Div Renderer</p>\n</li>\n<li>\n<p>displaying server and response varables.</p>\n<ul>\n<li>Request</li>\n<li>Response</li>\n<li>Setings</li>\n<li>Globals</li>\n<li>Php</li>\n<li>Files</li>\n<li>Database queries</li>\n<li>Execution time</li>\n<li>Errors and messages</li>\n<li>Link to w3c validator</li>\n</ul>\n</li>\n<li>\n<p>With v1.2 you can add debug information via shortcode from within your post. <code>[wp_pear_debug]foo bar[/wp_pear_debug]</code> or you may use:<br />\n [wp_pear-debug foo=&#8221;bar&#8221; foo1=&#8221;bar2&#8243;]</p>\n</li>\n<li>\n<p>Internationalization support has been added with version 1.4.6. A rough spanish translation has been provided in the hope that someone can take it and create a better translation.</p>\n</li>\n</ol>\n<h3>Interesting Points</h3>\n<p>This plugin requires no 3rd party dependencies such as jQuery.</p>\n",
        "installation": "<p>Automatic Install:</p>\n<ol>\n<li>Use the wordpress online installer </li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Set the appropriate option under settings-&gt;Debugger admin menu</li>\n<li>Please note that the above options must be saved at least once before the debugger can appear</li>\n<li>The following step is optional but recommended. Add the following code to wp-config.php <code>define('SAVEQUERIES',true);</code></li>\n</ol>\n<p>Manual Upload:</p>\n<p>File list</p>\n<ul>\n<li>lang (language files)</li>\n<li>lib (containing debugger and helper libraries)</li>\n<li>wp-pear-debug.php (Main plugin file)</li>\n</ul>\n<ol>\n<li>UPload folder <code>wp-pear-debug</code>  to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Set the appropriate option under settings-&gt;Debugger admin menu</li>\n<li>Please note that the above options must be saved at least once before the debugger can appear</li>\n<li>The following step is optional but recommended. Add the following code to wp-config.php <code>define('SAVEQUERIES',true);</code></li>\n</ol>\n",
        "faq": "\n<h4>Who is this for</h4>\n<p>\n<p>I imagine this plugin will be most valuable to wordpress developers<br />\nIt will also be good for people who are seeing errors on their site.<br />\nThis plugin also measures script execution time so It is also good for people who want to measure the performance of<br />\ntheir entire site or a specific part of their script.</p>\n</p>\n<h4>Can I see the library in action?</h4>\n<p>\n<p>You can see the pear demo <a href=\"http://www.php-debug.com/www/PHP_Debug_HTML_Div_test.php\" rel=\"nofollow ugc\">here:</a> Pear Demo.</p>\n</p>\n\n"
    },
    "short_description": "This plugin incorporates the pear php_debug library into wordpress.",
    "description": "<p>This plugin incorporates the pear php_debug library into wordpress.</p>\n<p>I started creating a new website around wordpress and noticed that there was no way to quickly access debug information so I integrated this class<br />\ninto wordpress for quick easy debugging when developing or experiencing problems on your wordpress website.</p>\n<p>Please feel free to ping me on twitter if you have a question.</p>\n<ul>\n<li>Features </li>\n</ul>\n<p>This plugin unlike most operates from within a class.<br />\nThere are several options which can be set in the admin section</p>\n<ol>\n<li>Debug Status: Overall<br />\nthis option allows you to enable and disable debugging entirely</li>\n<li>Display Debugging for: Guests<br />\nThis option allows you to enable debugging when no user is logged in</li>\n<li>The rest are a list of roles found in the sytem, eg. editor, contributor, administrator<br />\nFor each you have the following options: Admin &amp; Front End, Admin Only, Front End Only, Disable</li>\n<li>The plugin shows queries that were run by wordpress<br />\n    Please note that some queries run before the plugin is initialized. to ensure most if not all queries get recorded see step 4 in installation section. v1.4.1 shows not only the query but the time taken by the query and the function which called the query.</li>\n<li>\n<p>You can easly add debug information to the debugger by making use of several functions</p>\n<pre><code>&lt;?php \n    //For advanced use. \n    //Direct access to instance of debugger\n    $oDebug = wp_pear_debug::get();     \n    $oDebug-&gt;add($variable); //add variable to debug\n    $oDebug-&gt;dump($object,$varname); //var_dump an array or object. $varname optional\n    $oDebug-&gt;queryRel($info); //add query related info\n    $oDebug-&gt;error($info); //add user error\n    //more options available in the pear::php_debug documentation\n\n    //With v1.2 you have access to several wrapper functions\n    //Enough for most people\n            wp_pear_debug::add();\n            wp_pear_debug::dump();\n            wp_pear_debug::error();\n    //if you run this query with wpdb\n    //It will probably appear anyways.\n            wp_pear_debug::query();\n\n\n ?&gt;\n</code></pre>\n</li>\n<li>\n<p>Debug information appears in a neat panel controlled by javascript. The options expand and collapse. The debug panel also has<br />\na close button to completely remove the debug panel.</p>\n</li>\n<li>\n<p>Note that the debug bar floats at the top right and will not disrupt your layout.</p>\n</li>\n<li>\n<p>To ensure layout stability the plugin is hard coded to use only the HTML Div Renderer</p>\n</li>\n<li>\n<p>displaying server and response varables.</p>\n<ul>\n<li>Request</li>\n<li>Response</li>\n<li>Setings</li>\n<li>Globals</li>\n<li>Php</li>\n<li>Files</li>\n<li>Database queries</li>\n<li>Execution time</li>\n<li>Errors and messages</li>\n<li>Link to w3c validator</li>\n</ul>\n</li>\n<li>\n<p>With v1.2 you can add debug information via shortcode from within your post. <code>[wp_pear_debug]foo bar[/wp_pear_debug]</code> or you may use:<br />\n [wp_pear-debug foo=&#8221;bar&#8221; foo1=&#8221;bar2&#8243;]</p>\n</li>\n<li>\n<p>Internationalization support has been added with version 1.4.6. A rough spanish translation has been provided in the hope that someone can take it and create a better translation.</p>\n</li>\n</ol>\n<h3>Interesting Points</h3>\n<p>This plugin requires no 3rd party dependencies such as jQuery.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.5.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-pear-debug/trunk/screenshot-1.jpg?rev=1567217",
            "caption": ""
        },
        {
            "src": "https://ps.w.org/wp-pear-debug/trunk/screenshot-2.jpg?rev=1567217",
            "caption": ""
        }
    ],
    "tags": {
        "database-debug": "database debug",
        "debug": "debug",
        "debugging": "debugging",
        "pear": "pear",
        "php_debug": "php_debug"
    },
    "stable_tag": "1.5",
    "versions": {
        "1.1": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.1.zip",
        "1.2": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.2.zip",
        "1.3": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.3.zip",
        "1.4": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.zip",
        "1.4.1": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.1.zip",
        "1.4.2": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.2.zip",
        "1.4.5": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.5.zip",
        "1.4.6": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.6.zip",
        "1.4.7": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.7.zip",
        "1.4.8": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.8.zip",
        "1.4.9": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.4.9.zip",
        "1.5": "https://downloads.wordpress.org/plugin/wp-pear-debug.1.5.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-pear-debug.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/wp-pear-debug.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}