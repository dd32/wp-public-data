{
    "name": "Featuring CountComments",
    "slug": "featuring-countcomments",
    "version": "1.64",
    "author": "<a href=\"https://www.bernhard-riedl.com/\">Dr. Bernhard Riedl</a>",
    "author_profile": "https://profiles.wordpress.org/neoxx/",
    "contributors": {
        "neoxx": {
            "profile": "https://profiles.wordpress.org/neoxx/",
            "avatar": "https://secure.gravatar.com/avatar/09cd630f9191265fcfba2aa10e44961f?s=96&d=monsterid&r=g",
            "display_name": "Bernhard Riedl"
        }
    },
    "requires": "3.3",
    "tested": "4.9.26",
    "requires_php": "5.3",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/featuring-countcomments/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 7152,
    "last_updated": "2017-11-09 06:10:00",
    "added": "2007-03-24",
    "homepage": "https://www.bernhard-riedl.com/projects/",
    "sections": {
        "description": "<ul>\n<li>extends information on Users page in Admin Menu with comment counts</li>\n<li>settings page configurable for standard functions</li>\n<li>easy to integrate (ships with multi/sidebar- and dashboard-widget functionality)</li>\n<li>possible to integrate in &#8220;Right Now&#8221; box or to display as widget on the dashboard and on the user&#8217;s profile page</li>\n<li>high performance because users&#8217; comment counts are re-used within a page-call</li>\n<li><a href=\"https://wordpress.org/plugins/featuring-countcomments/other_notes/\" rel=\"ugc\">API for developers</a></li>\n<li>fully compatible with <a href=\"https://codex.wordpress.org/Administration_Over_SSL\" rel=\"nofollow ugc\">https/SSL/TLS-sites</a></li>\n<li>fully multisite network compatible</li>\n<li>clean uninstall</li>\n</ul>\n<p>Requirement for this plugin: Your users have to be registered and logged in to comment &#8211; <strong>Thus, Featuring CountComments will not work properly in weblogs where anonymous comments are allowed!</strong></p>\n<p>Please find the version for WordPress</p>\n<ul>\n<li>3.3 and higher <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.zip\" rel=\"nofollow ugc\">here</a></li>\n<li>3.2 <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress3.2.zip\" rel=\"nofollow ugc\">here</a></li>\n<li>2.8 to 3.1 <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress2.8-3.1.zip\" rel=\"nofollow ugc\">here</a></li>\n<li>minor 2.8 <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.wordpressminor2.8.zip\" rel=\"nofollow ugc\">here</a></li>\n</ul>\n<p><strong>Plugin&#8217;s website:</strong> <a href=\"https://www.bernhard-riedl.com/projects/\" rel=\"nofollow ugc\">https://www.bernhard-riedl.com/projects/</a></p>\n<p><strong>Author&#8217;s website:</strong> <a href=\"https://www.bernhard-riedl.com/\" rel=\"nofollow ugc\">https://www.bernhard-riedl.com/</a><br />\n<strong>Attention! &#8211; Geeks&#8217; stuff ahead! ðŸ˜‰</strong></p>\n<h4>API</h4>\n<p>Parameters can either be passed <a href=\"https://codex.wordpress.org/Function_Reference/wp_parse_args\" rel=\"nofollow ugc\">as an array or a URL query type string (e.g. &#8220;display=0&amp;format=0&#8221;)</a>. Please note that WordPress parses all arguments as strings, thus booleans have to be 0 or 1 if used in query type strings whereas for arrays <a href=\"https://secure.php.net/manual/en/language.types.boolean.php\" rel=\"nofollow ugc\">real booleans</a> should be used.</p>\n<p><strong><code>$featuring_countcomments-&gt;count_by_user($params=array())</code></strong></p>\n<p>Counts the number of comments made by a user who is currently logged in or has a particular attribute.</p>\n<p>$params:</p>\n<ul>\n<li>\n<p><code>user_attribute</code>: one of the user&#8217;s attributes (matching <code>query_type</code>), for example, the user_id or a WP_User object; if no user_attribute is given, will fallback to currently logged in user</p>\n</li>\n<li>\n<p><code>query_type</code>: corresponding SQL-field of user&#8217;s attribute or WP_User object; default is <code>user_id</code></p>\n<ul>\n<li>user_id</li>\n<li>display_name</li>\n<li>user_nicename</li>\n<li>user_email</li>\n<li>user_login</li>\n<li>WP_User object</li>\n</ul>\n</li>\n<li>\n<p><code>format</code>: if set to true (default), the output will be formatted using the attributes <code>zero</code>, <code>one</code>, <code>more</code> and <code>thousands_separator</code>; false = process plain count value</p>\n</li>\n<li>\n<p><code>zero</code>, <code>one</code>, <code>more</code>: for formatted output &#8211; %c gets replaced    with the number of comments</p>\n<ul>\n<li>&#8216;zero&#8217; =&gt; &#8216;0 comments&#8217;</li>\n<li>&#8216;one&#8217; =&gt; &#8216;1 comment&#8217;</li>\n<li>&#8216;more&#8217; =&gt; &#8216;%c comments&#8217;</li>\n</ul>\n</li>\n<li>\n<p><code>thousands_separator</code>: divides counts by thousand delimiters; default <code>,</code> =&gt; e.g. 1,386</p>\n</li>\n<li>\n<p><code>display</code>: if you want to return the count (e.g. for storing it in a variable) instead of echoing it with this function-call, set <code>display</code> to <code>false</code>; default setting is <code>true</code></p>\n</li>\n</ul>\n<p>The following example outputs the comment count of the user with the registered e-mail address &#8216;j.doe@example.com&#8217;.</p>\n<pre><code>&lt;?php\n\nglobal $featuring_countcomments;\n\n$params=array(\n    'query_type' =&gt; 'user_email',\n    'user_attribute' =&gt; 'j.doe@example.com'\n);\n\n$featuring_countcomments-&gt;count_by_user($params);\n\n?&gt;\n</code></pre>\n<p><strong><code>$featuring_countcomments-&gt;count_by_comment($params=array())</code></strong></p>\n<p>Counts the number of comments made by a user who wrote a certain comment or the current comment in the comment-loop.</p>\n<p>$params:</p>\n<ul>\n<li>\n<p><code>comment</code>: a comment object or comment id; if empty   retrieves current comment</p>\n</li>\n<li>\n<p><code>format</code>: if set to true (default), the output will be formatted using the attributes <code>zero</code>, <code>one</code>, <code>more</code> and <code>thousands_separator</code>; false = process plain count value</p>\n</li>\n<li>\n<p><code>zero</code>, <code>one</code>, <code>more</code>: for formatted output &#8211; %c gets replaced    with the number of comments</p>\n<ul>\n<li>&#8216;zero&#8217; =&gt; &#8216;0 comments&#8217;</li>\n<li>&#8216;one&#8217; =&gt; &#8216;1 comment&#8217;</li>\n<li>&#8216;more&#8217; =&gt; &#8216;%c comments&#8217;</li>\n</ul>\n</li>\n<li>\n<p><code>thousands_separator</code>: divides counts by thousand delimiters default <code>,</code> =&gt; e.g. 1,386</p>\n</li>\n<li>\n<p><code>display</code>: if you want to return the count (e.g. for storing it in a variable) instead of echoing it with this function-call, set <code>display</code> to <code>false</code>; default setting is <code>true</code></p>\n</li>\n<li>\n<p><code>in_loop</code>: if set to true (default), the query count for all user who wrote a comment which belongs to the post of the handed over <code>comment</code> will be cached; otherwise the comment count will be retrieved only for the user who posted the <code>comment</code></p>\n</li>\n</ul>\n<p>The following example outputs the number of comments of the author with the current comment in the comment loop:</p>\n<pre><code>&lt;?php\n\nglobal $featuring_countcomments;\n\n$featuring_countcomments-&gt;count_by_comment();\n\n?&gt;\n</code></pre>\n<h4>Shortcodes</h4>\n<p><a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">How-to for shortcodes</a></p>\n<p><strong>General Example:</strong></p>\n<p>Enter the following text anywhere in a post or page to output the comment count of user <code>xyz</code>:</p>\n<pre><code>[featuring_countcomments_count_by_user query_type=\"user_nicename\" user_attribute=\"xyz\"] by xyz so far...\n</code></pre>\n<p><strong>Available Shortcode:</strong></p>\n<pre><code>featuring_countcomments_count_by_user\n</code></pre>\n<p>Invokes <code>$featuring_countcomments-&gt;count_by_user($params)</code>.</p>\n<pre><code>featuring_countcomments_count_by_comment\n</code></pre>\n<p>Invokes <code>$featuring_countcomments-&gt;count_by_comment($params)</code>.</p>\n<h4>Filters</h4>\n<p><a href=\"https://codex.wordpress.org/Function_Reference/add_filter\" rel=\"nofollow ugc\">How-To for filters</a></p>\n<p><strong>General Example:</strong></p>\n<pre><code>function my_featuring_countcomments_defaults($params=array()) {\n    $params['query_type'] = 'user_nicename';\n    return $params;\n}\n\nadd_filter('featuring_countcomments_defaults', 'my_featuring_countcomments_defaults');\n</code></pre>\n<p><strong>Available Filters:</strong></p>\n<pre><code>featuring_countcomments_defaults\n</code></pre>\n<p>In case you want to set the default parameters globally rather than handing them over on every function call, you can add the <a href=\"https://codex.wordpress.org/Function_Reference/add_filter\" rel=\"nofollow ugc\">filter</a> <code>featuring_countcomments_defaults</code> in for example featuring-countcomments.php or your <a href=\"https://codex.wordpress.org/Writing_a_Plugin\" rel=\"nofollow ugc\">own customization plugin</a> (recommended).</p>\n<p>Please note that parameters which you hand over to a function call (<code>$featuring_countcomments-&gt;count_by_user</code> or <code>$featuring_countcomments-&gt;count_by_comment</code>) will always override the defaults parameters, even if they have been set by a filter or in the admin menu.</p>\n<pre><code>featuring_countcomments_dashboard_widget\n</code></pre>\n<p>Receives an array which is used for the dashboard-widget-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to null to receive the current user&#8217;s count.</p>\n<pre><code>featuring_countcomments_dashboard_widget_text\n</code></pre>\n<p>Receives a string which is used in the dashboard-widget. <code>%c</code> will be replaced by the comment count of the user who is currently logged in.</p>\n<pre><code>featuring_countcomments_dashboard_right_now\n</code></pre>\n<p>Receives an array which is used for the dashboard-right-now-box-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to null to retrieve the comment count of currently logged in user.</p>\n<pre><code>featuring_countcomments_dashboard_right_now_text\n</code></pre>\n<p>Receives a string which is used in the right-now box on the dashboard. <code>%c</code> will be replaced by the comment count of the user who is currently logged in.</p>\n<pre><code>featuring_countcomments_user_profile\n</code></pre>\n<p>Receives an array which is used for the user-profile-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to null to retrieve the comment count of currently logged in user.</p>\n<pre><code>featuring_countcomments_user_profile_text\n</code></pre>\n<p>Receives a string which is used in the user&#8217;s profile page. <code>%c</code> will be replaced by the comment count of the user who is currently logged in.</p>\n<pre><code>featuring_countcomments_users_custom_column\n</code></pre>\n<p>Receives an array which is used for the users-page-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to the user-id of each row to retrieve the user&#8217;s comment count.</p>\n",
        "installation": "<ol>\n<li>\n<p>Copy the <code>featuring-countcomments</code> directory into your WordPress plugins directory (usually wp-content/plugins). Hint: You can also conduct this step within your Admin Menu.</p>\n</li>\n<li>\n<p>In the WordPress Admin Menu go to the Plugins tab and activate the Featuring CountComments plugin.</p>\n</li>\n<li>\n<p>Navigate to the Settings/Featuring Countcomments tab and optionally customize the defaults according to your desires.</p>\n</li>\n<li>\n<p>If you have widget functionality just drag and drop Featuring CountComments on your widget area in the Appearance Menu. Add additional <a href=\"https://wordpress.org/plugins/featuring-countcomments/other_notes/\" rel=\"ugc\">function and shortcode calls</a> according to your desires.</p>\n</li>\n<li>\n<p>Be happy and celebrate! (and maybe you want to add a link to <a href=\"https://www.bernhard-riedl.com/projects/\" rel=\"nofollow ugc\">https://www.bernhard-riedl.com/projects/</a>)</p>\n</li>\n</ol>\n",
        "faq": "\n<h4>Installation Instructions</h4>\n<p>\n<ol>\n<li>\n<p>Copy the <code>featuring-countcomments</code> directory into your WordPress plugins directory (usually wp-content/plugins). Hint: You can also conduct this step within your Admin Menu.</p>\n</li>\n<li>\n<p>In the WordPress Admin Menu go to the Plugins tab and activate the Featuring CountComments plugin.</p>\n</li>\n<li>\n<p>Navigate to the Settings/Featuring Countcomments tab and optionally customize the defaults according to your desires.</p>\n</li>\n<li>\n<p>If you have widget functionality just drag and drop Featuring CountComments on your widget area in the Appearance Menu. Add additional <a href=\"https://wordpress.org/plugins/featuring-countcomments/other_notes/\" rel=\"ugc\">function and shortcode calls</a> according to your desires.</p>\n</li>\n<li>\n<p>Be happy and celebrate! (and maybe you want to add a link to <a href=\"https://www.bernhard-riedl.com/projects/\" rel=\"nofollow ugc\">https://www.bernhard-riedl.com/projects/</a>)</p>\n</li>\n</ol>\n</p>\n<h4>Why do my users have to be registered to comment?</h4>\n<p>\n<p>Various user attributes can be used in queries. Though, the internal structure is based on the authors&#8217; id to avoid confusion in case of changed user-names, e-mail addresses, etc. Featuring CountComments will therefore only count comments, which have been written by authors who have been logged in at the time of writing a comment.</p>\n</p>\n<h4>How about the efficiency in Featuring CountComments?</h4>\n<p>\n<p>Already queried results are cached within a single page-call to avoid executing too many queries. This results in increased performance.</p>\n<p>Moreover, in case of querying the comment count of a certain post&#8217;s comment, only two SQL statements will be used to retrieve the comment count of all users who contributed to this post.</p>\n</p>\n\n",
        "changelog": "<h4>1.64</h4>\n<ul>\n<li>SSLified further links</li>\n</ul>\n<h4>1.63</h4>\n<ul>\n<li>replaced deprecated function calls to wp_get_current_user() and removed $user_ID-globals &#8211; thanks for the <a href=\"https://wordpress.org/support/topic/get_currentuserinfo-is-deprecated-9/\" rel=\"ugc\">notification</a> to highgatecreative</li>\n</ul>\n<h4>1.62</h4>\n<ul>\n<li>changed the permission-denied message in uninstall.php <a href=\"https://core.trac.wordpress.org/ticket/14530\" rel=\"nofollow ugc\">core-trac #14530</a></li>\n<li>fixed some typos</li>\n</ul>\n<h4>1.61</h4>\n<ul>\n<li>small security improvement</li>\n<li>implemented h1 on settings-page as follow-up to <a href=\"https://core.trac.wordpress.org/ticket/31650\" rel=\"nofollow ugc\">core-trac #31650</a></li>\n</ul>\n<h4>1.60</h4>\n<ul>\n<li>switched SQL queries to prepared statements</li>\n<li>marked menu semantically</li>\n<li>enhanced uninstall procedure</li>\n<li>set appropriate http-status codes for wp_die()-calls</li>\n</ul>\n<h4>1.51</h4>\n<ul>\n<li>cleaned-up code</li>\n<li>SSLified links</li>\n<li>added assets/icons</li>\n</ul>\n<h4>1.50</h4>\n<ul>\n<li>implemented responsive web design on settings-page</li>\n<li>removed calls to screen_icon()</li>\n<li>extended length of format-parameters to provide space for example for mobile css-classes</li>\n<li>cleaned-up code</li>\n</ul>\n<h4>1.40</h4>\n<ul>\n<li>removed legacy-code -&gt; minimum-version of WordPress necessary is now 3.3</li>\n<li>removed deprecated functions\n<ul>\n<li>fcc_get_comment_count()</li>\n<li>fcc_comment_count()</li>\n<li>fcc_get_count_comments_author()</li>\n<li>fcc_get_count_comments_authorID()</li>\n<li>fcc_count_comments_author()</li>\n<li>fcc_count_comments_by_author()</li>\n<li>fcc_count_comments_by_authorID()</li>\n</ul>\n</li>\n<li>applied PHP 5 constructor in widget</li>\n<li>tested with PHP 5.4</li>\n<li>removed PHP closing tag before EOF</li>\n<li>removed reference sign on function calls</li>\n<li>adapted plugin-links to the new structure of wordpress.org</li>\n<li>cleaned-up code</li>\n</ul>\n<h4>1.33</h4>\n<ul>\n<li>made add-link to <a href=\"https://core.trac.wordpress.org/ticket/21307\" rel=\"nofollow ugc\">link manager for WordPress 3.5 and higher optional</a></li>\n</ul>\n<h4>1.32</h4>\n<ul>\n<li>adapted &#8216;Defaults&#8217;-string to use WordPress internal i18n</li>\n<li>updated support section</li>\n<li>updated project-information</li>\n</ul>\n<h4>1.31</h4>\n<ul>\n<li>changed handling of contextual help for WordPress 3.3</li>\n<li>adapted handling of default settings</li>\n<li>external files are now registered in init-hook</li>\n</ul>\n<h4>1.30</h4>\n<ul>\n<li>adaption of JavaScript code for jQuery 1.6.1 (ships with WordPress 3.2 =&gt; increased minimum requirement to WordPress 3.2 for this and all upcoming releases)</li>\n<li>small enhancements</li>\n</ul>\n<h4>1.20</h4>\n<ul>\n<li>use <a href=\"https://core.trac.wordpress.org/ticket/14163\" rel=\"nofollow ugc\">new WordPress 3.1 query parameter</a> to retrieve results for comments in Admin Menu by user-id instead of display-name</li>\n<li>Changed settings-page JS library to jQuery</li>\n<li>added CSS for comments column in Users Page of WordPress 3.1 Admin Menu</li>\n</ul>\n<h4>1.11</h4>\n<ul>\n<li>use WordPress style for comment-counts in users table</li>\n</ul>\n<h4>1.10</h4>\n<ul>\n<li>admins are able to view the users comment-counts in the Admin Menu</li>\n<li>the access to the user&#8217;s comment-counts can be restricted</li>\n<li>corrected a few typos and fixed potential bugs</li>\n</ul>\n<h4>1.00</h4>\n<ul>\n<li>start Changelog</li>\n<li>completely reworked API methods and internal structure</li>\n<li>Security improvements</li>\n<li>added Admin Menu</li>\n<li>adapted to WordPress <code>wp_parse_args</code> function</li>\n<li>included Admin Menu and filter to set default values</li>\n<li>added sidebar widget</li>\n<li>added dashboard widget</li>\n<li>possible to add in &#8220;Right Now&#8221; box on dashboard</li>\n<li>added profile page add-on</li>\n<li>added log functionality</li>\n<li>added test-suite</li>\n<li>deprecated old functions</li>\n<li>added contextual help to settings menu</li>\n<li>updated license to GPLv3</li>\n</ul>\n"
    },
    "short_description": "Counts the number of comments for each user, who has been logged in at the time of commenting.",
    "description": "<ul>\n<li>extends information on Users page in Admin Menu with comment counts</li>\n<li>settings page configurable for standard functions</li>\n<li>easy to integrate (ships with multi/sidebar- and dashboard-widget functionality)</li>\n<li>possible to integrate in &#8220;Right Now&#8221; box or to display as widget on the dashboard and on the user&#8217;s profile page</li>\n<li>high performance because users&#8217; comment counts are re-used within a page-call</li>\n<li><a href=\"https://wordpress.org/plugins/featuring-countcomments/other_notes/\" rel=\"ugc\">API for developers</a></li>\n<li>fully compatible with <a href=\"https://codex.wordpress.org/Administration_Over_SSL\" rel=\"nofollow ugc\">https/SSL/TLS-sites</a></li>\n<li>fully multisite network compatible</li>\n<li>clean uninstall</li>\n</ul>\n<p>Requirement for this plugin: Your users have to be registered and logged in to comment &#8211; <strong>Thus, Featuring CountComments will not work properly in weblogs where anonymous comments are allowed!</strong></p>\n<p>Please find the version for WordPress</p>\n<ul>\n<li>3.3 and higher <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.zip\" rel=\"nofollow ugc\">here</a></li>\n<li>3.2 <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress3.2.zip\" rel=\"nofollow ugc\">here</a></li>\n<li>2.8 to 3.1 <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress2.8-3.1.zip\" rel=\"nofollow ugc\">here</a></li>\n<li>minor 2.8 <a href=\"https://downloads.wordpress.org/plugin/featuring-countcomments.wordpressminor2.8.zip\" rel=\"nofollow ugc\">here</a></li>\n</ul>\n<p><strong>Plugin&#8217;s website:</strong> <a href=\"https://www.bernhard-riedl.com/projects/\" rel=\"nofollow ugc\">https://www.bernhard-riedl.com/projects/</a></p>\n<p><strong>Author&#8217;s website:</strong> <a href=\"https://www.bernhard-riedl.com/\" rel=\"nofollow ugc\">https://www.bernhard-riedl.com/</a><br />\n<strong>Attention! &#8211; Geeks&#8217; stuff ahead! ðŸ˜‰</strong></p>\n<h4>API</h4>\n<p>Parameters can either be passed <a href=\"https://codex.wordpress.org/Function_Reference/wp_parse_args\" rel=\"nofollow ugc\">as an array or a URL query type string (e.g. &#8220;display=0&amp;format=0&#8221;)</a>. Please note that WordPress parses all arguments as strings, thus booleans have to be 0 or 1 if used in query type strings whereas for arrays <a href=\"https://secure.php.net/manual/en/language.types.boolean.php\" rel=\"nofollow ugc\">real booleans</a> should be used.</p>\n<p><strong><code>$featuring_countcomments-&gt;count_by_user($params=array())</code></strong></p>\n<p>Counts the number of comments made by a user who is currently logged in or has a particular attribute.</p>\n<p>$params:</p>\n<ul>\n<li>\n<p><code>user_attribute</code>: one of the user&#8217;s attributes (matching <code>query_type</code>), for example, the user_id or a WP_User object; if no user_attribute is given, will fallback to currently logged in user</p>\n</li>\n<li>\n<p><code>query_type</code>: corresponding SQL-field of user&#8217;s attribute or WP_User object; default is <code>user_id</code></p>\n<ul>\n<li>user_id</li>\n<li>display_name</li>\n<li>user_nicename</li>\n<li>user_email</li>\n<li>user_login</li>\n<li>WP_User object</li>\n</ul>\n</li>\n<li>\n<p><code>format</code>: if set to true (default), the output will be formatted using the attributes <code>zero</code>, <code>one</code>, <code>more</code> and <code>thousands_separator</code>; false = process plain count value</p>\n</li>\n<li>\n<p><code>zero</code>, <code>one</code>, <code>more</code>: for formatted output &#8211; %c gets replaced    with the number of comments</p>\n<ul>\n<li>&#8216;zero&#8217; =&gt; &#8216;0 comments&#8217;</li>\n<li>&#8216;one&#8217; =&gt; &#8216;1 comment&#8217;</li>\n<li>&#8216;more&#8217; =&gt; &#8216;%c comments&#8217;</li>\n</ul>\n</li>\n<li>\n<p><code>thousands_separator</code>: divides counts by thousand delimiters; default <code>,</code> =&gt; e.g. 1,386</p>\n</li>\n<li>\n<p><code>display</code>: if you want to return the count (e.g. for storing it in a variable) instead of echoing it with this function-call, set <code>display</code> to <code>false</code>; default setting is <code>true</code></p>\n</li>\n</ul>\n<p>The following example outputs the comment count of the user with the registered e-mail address &#8216;j.doe@example.com&#8217;.</p>\n<pre><code>&lt;?php\n\nglobal $featuring_countcomments;\n\n$params=array(\n    'query_type' =&gt; 'user_email',\n    'user_attribute' =&gt; 'j.doe@example.com'\n);\n\n$featuring_countcomments-&gt;count_by_user($params);\n\n?&gt;\n</code></pre>\n<p><strong><code>$featuring_countcomments-&gt;count_by_comment($params=array())</code></strong></p>\n<p>Counts the number of comments made by a user who wrote a certain comment or the current comment in the comment-loop.</p>\n<p>$params:</p>\n<ul>\n<li>\n<p><code>comment</code>: a comment object or comment id; if empty   retrieves current comment</p>\n</li>\n<li>\n<p><code>format</code>: if set to true (default), the output will be formatted using the attributes <code>zero</code>, <code>one</code>, <code>more</code> and <code>thousands_separator</code>; false = process plain count value</p>\n</li>\n<li>\n<p><code>zero</code>, <code>one</code>, <code>more</code>: for formatted output &#8211; %c gets replaced    with the number of comments</p>\n<ul>\n<li>&#8216;zero&#8217; =&gt; &#8216;0 comments&#8217;</li>\n<li>&#8216;one&#8217; =&gt; &#8216;1 comment&#8217;</li>\n<li>&#8216;more&#8217; =&gt; &#8216;%c comments&#8217;</li>\n</ul>\n</li>\n<li>\n<p><code>thousands_separator</code>: divides counts by thousand delimiters default <code>,</code> =&gt; e.g. 1,386</p>\n</li>\n<li>\n<p><code>display</code>: if you want to return the count (e.g. for storing it in a variable) instead of echoing it with this function-call, set <code>display</code> to <code>false</code>; default setting is <code>true</code></p>\n</li>\n<li>\n<p><code>in_loop</code>: if set to true (default), the query count for all user who wrote a comment which belongs to the post of the handed over <code>comment</code> will be cached; otherwise the comment count will be retrieved only for the user who posted the <code>comment</code></p>\n</li>\n</ul>\n<p>The following example outputs the number of comments of the author with the current comment in the comment loop:</p>\n<pre><code>&lt;?php\n\nglobal $featuring_countcomments;\n\n$featuring_countcomments-&gt;count_by_comment();\n\n?&gt;\n</code></pre>\n<h4>Shortcodes</h4>\n<p><a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">How-to for shortcodes</a></p>\n<p><strong>General Example:</strong></p>\n<p>Enter the following text anywhere in a post or page to output the comment count of user <code>xyz</code>:</p>\n<pre><code>[featuring_countcomments_count_by_user query_type=\"user_nicename\" user_attribute=\"xyz\"] by xyz so far...\n</code></pre>\n<p><strong>Available Shortcode:</strong></p>\n<pre><code>featuring_countcomments_count_by_user\n</code></pre>\n<p>Invokes <code>$featuring_countcomments-&gt;count_by_user($params)</code>.</p>\n<pre><code>featuring_countcomments_count_by_comment\n</code></pre>\n<p>Invokes <code>$featuring_countcomments-&gt;count_by_comment($params)</code>.</p>\n<h4>Filters</h4>\n<p><a href=\"https://codex.wordpress.org/Function_Reference/add_filter\" rel=\"nofollow ugc\">How-To for filters</a></p>\n<p><strong>General Example:</strong></p>\n<pre><code>function my_featuring_countcomments_defaults($params=array()) {\n    $params['query_type'] = 'user_nicename';\n    return $params;\n}\n\nadd_filter('featuring_countcomments_defaults', 'my_featuring_countcomments_defaults');\n</code></pre>\n<p><strong>Available Filters:</strong></p>\n<pre><code>featuring_countcomments_defaults\n</code></pre>\n<p>In case you want to set the default parameters globally rather than handing them over on every function call, you can add the <a href=\"https://codex.wordpress.org/Function_Reference/add_filter\" rel=\"nofollow ugc\">filter</a> <code>featuring_countcomments_defaults</code> in for example featuring-countcomments.php or your <a href=\"https://codex.wordpress.org/Writing_a_Plugin\" rel=\"nofollow ugc\">own customization plugin</a> (recommended).</p>\n<p>Please note that parameters which you hand over to a function call (<code>$featuring_countcomments-&gt;count_by_user</code> or <code>$featuring_countcomments-&gt;count_by_comment</code>) will always override the defaults parameters, even if they have been set by a filter or in the admin menu.</p>\n<pre><code>featuring_countcomments_dashboard_widget\n</code></pre>\n<p>Receives an array which is used for the dashboard-widget-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to null to receive the current user&#8217;s count.</p>\n<pre><code>featuring_countcomments_dashboard_widget_text\n</code></pre>\n<p>Receives a string which is used in the dashboard-widget. <code>%c</code> will be replaced by the comment count of the user who is currently logged in.</p>\n<pre><code>featuring_countcomments_dashboard_right_now\n</code></pre>\n<p>Receives an array which is used for the dashboard-right-now-box-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to null to retrieve the comment count of currently logged in user.</p>\n<pre><code>featuring_countcomments_dashboard_right_now_text\n</code></pre>\n<p>Receives a string which is used in the right-now box on the dashboard. <code>%c</code> will be replaced by the comment count of the user who is currently logged in.</p>\n<pre><code>featuring_countcomments_user_profile\n</code></pre>\n<p>Receives an array which is used for the user-profile-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to null to retrieve the comment count of currently logged in user.</p>\n<pre><code>featuring_countcomments_user_profile_text\n</code></pre>\n<p>Receives a string which is used in the user&#8217;s profile page. <code>%c</code> will be replaced by the comment count of the user who is currently logged in.</p>\n<pre><code>featuring_countcomments_users_custom_column\n</code></pre>\n<p>Receives an array which is used for the users-page-function call to <code>$featuring_countcomments-&gt;count_by_user</code>. <code>display</code> and <code>format</code> will automatically be set to true and <code>user_parameter</code> to the user-id of each row to retrieve the user&#8217;s comment count.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/featuring-countcomments.zip",
    "upgrade_notice": {
        "1.40": "<p>This is a general code clean-up. - Please note that for Featuring CountComments v1.40 you need at minimum WordPress 3.3.</p>",
        "1.30": "<p>The minimum requirement is now WordPress 3.2</p>",
        "1.00": "<p>All old functions have been deprecated in favor of <code>$featuring_countcomments-&amp;gt;count_by_user()</code> and <code>featuring_countcomments-&amp;gt;count_by_comment()</code>.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/featuring-countcomments/trunk/screenshot-1.png?rev=1761435",
            "caption": "<p>This screenshot shows the extended users table in the Admin Menu.</p>"
        },
        {
            "src": "https://ps.w.org/featuring-countcomments/trunk/screenshot-2.png?rev=1761435",
            "caption": "<p>This picture presents an example widget output in the sidebar.</p>"
        },
        {
            "src": "https://ps.w.org/featuring-countcomments/trunk/screenshot-3.png?rev=1761435",
            "caption": "<p>This screenshot depicts the Settings/Featuring CountComments Tab in the Admin Menu.</p>"
        }
    ],
    "tags": {
        "author": "author",
        "authors": "authors",
        "comment": "comment",
        "comments": "comments",
        "count": "count"
    },
    "stable_tag": "trunk",
    "versions": {
        "wordpress 2.8 - 3.1": "https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress 2.8 - 3.1.zip",
        "wordpress 3.2": "https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress 3.2.zip",
        "wordpress minor 2.8": "https://downloads.wordpress.org/plugin/featuring-countcomments.wordpress minor 2.8.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=NF3C4TNWWM77W",
    "banners": {
        "low": "https://ps.w.org/featuring-countcomments/assets/banner-772x250.jpg?rev=506630",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/featuring-countcomments/assets/icon-128x128.jpg?rev=974729",
        "2x": "https://ps.w.org/featuring-countcomments/assets/icon-256x256.jpg?rev=974729"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}