{
    "name": "LogStore",
    "slug": "logstore",
    "version": "0.1.2",
    "author": "Andre Wyrwa ",
    "author_profile": "https://profiles.wordpress.org/wyrfel/",
    "contributors": {
        "wyrfel": {
            "profile": "https://profiles.wordpress.org/wyrfel/",
            "avatar": "https://secure.gravatar.com/avatar/04063db47b3bc75e3fc7950d799e4db9?s=96&d=monsterid&r=g",
            "display_name": "wyrfel"
        }
    },
    "requires": "3.1",
    "tested": "3.1.4",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/logstore/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1022,
    "last_updated": "2011-02-28 1:53pm GMT",
    "added": "2011-02-28",
    "homepage": "",
    "sections": {
        "description": "<p>LogStore can be used to log (important) data from within your plugin.<br />\nIt provides a simple interface to log entries and a friendly administration interface for viewing and managing the log entries.</p>\n<p>While LogStore can be used to log debug output or system events, it&#8217;s main intention is to log more extensive data, such as:</p>\n<ul>\n<li>system emails sent your users</li>\n<li>data received from remote API calls</li>\n</ul>\n<h3>Usage</h3>\n<p>To use LogStore in your plugin, add the following line to your plugin&#8217;s &#8216;plugins_loaded&#8217; callback function:</p>\n<pre><code>if (class_exists('LogStore')) $this-&gt;log = new LogStore('slug', __('Title'));\n</code></pre>\n<ul>\n<li>The &#8216;slug&#8217; should be a unique identifier for your logger.</li>\n<li>The &#8216;Title&#8217; will be the title used in menu entries, options and page titles.</li>\n</ul>\n<p>Once that&#8217;s done you can then start logging your data from anywhere within your plugin by using the following:</p>\n<pre><code>if (!empty($this-&gt;log)) $this-&gt;log-&gt;log(__('My log message'), $my_log_data, 'status', 'tag');\n</code></pre>\n<ul>\n<li>&#8216;My log message.&#8217; is any arbitrary message to describe your log entry.</li>\n<li>$my_log_data is the extended data you want to log. This can be either an array or string.</li>\n<li>&#8216;status&#8217; is one of &#8216;none&#8217;, &#8216;ok&#8217;, &#8216;warn&#8217;, &#8216;critical&#8217; or &#8216;fatal&#8217;.</li>\n<li>&#8216;tag&#8217; can be any kind of singular tag to  further classification to your log entries.add</li>\n</ul>\n<p>If you use LogStore in your plugin, you should check for it&#8217;s presence in</p>\n<ul>\n<li>your &#8216;plugins_loaded&#8217; callback</li>\n<li>your plugin activation callback</li>\n</ul>\n<p>You should either make LogStore use optional or notify the user that they need to install LogStore for your plugin to work properly.</p>\n<h3>Plugin Hooks</h3>\n<p>In the following hooks, <code>*myname*</code> stands for the name with which you instanciated the LogStore class.</p>\n<h4>Action Hooks</h4>\n<ul>\n<li><code>logstore_init-*myname*</code> &#8211; runs during the execution of WP&#8217;s <code>init</code> action hook, passes a single boolean parameter indicating if logging is active or inactive for this logger</li>\n</ul>\n<h4>Filter Hooks</h4>\n<ul>\n<li><code>logstore_new_entry-*myname*</code> &#8211; runs during the creation of a new entry, passes a single array containing all values for that entry (&#8216;time&#8217;, &#8216;message&#8217;, &#8216;data&#8217;, &#8216;status&#8217; and &#8216;tag&#8217;)</li>\n<li><code>logstore_entry-*myname*</code> &#8211; runs before displaying an entry on screen, passes a single array containting all values for the entry (&#8216;time&#8217;, &#8216;message&#8217;, &#8216;data&#8217;, &#8216;status&#8217; and &#8216;tag&#8217;)</li>\n<li><code>logstore_format_entry_data-*myname*</code> &#8211; runs before displaying the formatted data on screen, passes the formatted data as string</li>\n</ul>\n<h3>Further Notes</h3>\n<p>Please note that the &#8216;bulk actions&#8217; in the log viewer are currently not<br />\nworking.</p>\n",
        "installation": "<ol>\n<li>Upload the <code>logstore</code> folder to the <code>/wp-content/plugins/</code> directory</li>\n</ol>\n",
        "faq": "<p>None, yet.</p>\n",
        "changelog": "<h4>0.1.2</h4>\n<ul>\n<li>Readme fixes,</li>\n<li>move to new repository</li>\n</ul>\n<h4>0.1.1</h4>\n<ul>\n<li>Readme fixes</li>\n</ul>\n<h4>0.1</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n"
    },
    "short_description": "LogStore is a &#039;meta&#039; plugin that allows other plugins to log data easily.",
    "description": "<p>LogStore can be used to log (important) data from within your plugin.<br />\nIt provides a simple interface to log entries and a friendly administration interface for viewing and managing the log entries.</p>\n<p>While LogStore can be used to log debug output or system events, it&#8217;s main intention is to log more extensive data, such as:</p>\n<ul>\n<li>system emails sent your users</li>\n<li>data received from remote API calls</li>\n</ul>\n<h3>Usage</h3>\n<p>To use LogStore in your plugin, add the following line to your plugin&#8217;s &#8216;plugins_loaded&#8217; callback function:</p>\n<pre><code>if (class_exists('LogStore')) $this-&gt;log = new LogStore('slug', __('Title'));\n</code></pre>\n<ul>\n<li>The &#8216;slug&#8217; should be a unique identifier for your logger.</li>\n<li>The &#8216;Title&#8217; will be the title used in menu entries, options and page titles.</li>\n</ul>\n<p>Once that&#8217;s done you can then start logging your data from anywhere within your plugin by using the following:</p>\n<pre><code>if (!empty($this-&gt;log)) $this-&gt;log-&gt;log(__('My log message'), $my_log_data, 'status', 'tag');\n</code></pre>\n<ul>\n<li>&#8216;My log message.&#8217; is any arbitrary message to describe your log entry.</li>\n<li>$my_log_data is the extended data you want to log. This can be either an array or string.</li>\n<li>&#8216;status&#8217; is one of &#8216;none&#8217;, &#8216;ok&#8217;, &#8216;warn&#8217;, &#8216;critical&#8217; or &#8216;fatal&#8217;.</li>\n<li>&#8216;tag&#8217; can be any kind of singular tag to  further classification to your log entries.add</li>\n</ul>\n<p>If you use LogStore in your plugin, you should check for it&#8217;s presence in</p>\n<ul>\n<li>your &#8216;plugins_loaded&#8217; callback</li>\n<li>your plugin activation callback</li>\n</ul>\n<p>You should either make LogStore use optional or notify the user that they need to install LogStore for your plugin to work properly.</p>\n<h3>Plugin Hooks</h3>\n<p>In the following hooks, <code>*myname*</code> stands for the name with which you instanciated the LogStore class.</p>\n<h4>Action Hooks</h4>\n<ul>\n<li><code>logstore_init-*myname*</code> &#8211; runs during the execution of WP&#8217;s <code>init</code> action hook, passes a single boolean parameter indicating if logging is active or inactive for this logger</li>\n</ul>\n<h4>Filter Hooks</h4>\n<ul>\n<li><code>logstore_new_entry-*myname*</code> &#8211; runs during the creation of a new entry, passes a single array containing all values for that entry (&#8216;time&#8217;, &#8216;message&#8217;, &#8216;data&#8217;, &#8216;status&#8217; and &#8216;tag&#8217;)</li>\n<li><code>logstore_entry-*myname*</code> &#8211; runs before displaying an entry on screen, passes a single array containting all values for the entry (&#8216;time&#8217;, &#8216;message&#8217;, &#8216;data&#8217;, &#8216;status&#8217; and &#8216;tag&#8217;)</li>\n<li><code>logstore_format_entry_data-*myname*</code> &#8211; runs before displaying the formatted data on screen, passes the formatted data as string</li>\n</ul>\n<h3>Further Notes</h3>\n<p>Please note that the &#8216;bulk actions&#8217; in the log viewer are currently not<br />\nworking.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/logstore.0.1.2.zip",
    "upgrade_notice": {
        "0.1": "<p>Initial Release.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/logstore/trunk/screenshot-1.png?rev=1566869",
            "caption": "This is LogStore's main admin screen. Here the user can activate or deactivate the logging for individual loggers."
        },
        {
            "src": "https://ps.w.org/logstore/trunk/screenshot-2.png?rev=1566869",
            "caption": "This is LogStore's admin menu. A submenu entry is created for each individual registered logger, no matter if active or not."
        },
        {
            "src": "https://ps.w.org/logstore/trunk/screenshot-3.png?rev=1566869",
            "caption": "This is the log view for a logger. Individual entries can be deleted, it can be sorted, uses pagination and the whole log can be wiped."
        },
        {
            "src": "https://ps.w.org/logstore/trunk/screenshot-4.png?rev=1566869",
            "caption": "This is the log entry view where you can view the individual log entries. The data is presented both in a nicely formatted and in raw form."
        }
    ],
    "tags": {
        "development": "development",
        "log": "log",
        "logging": "logging",
        "meta": "meta"
    },
    "stable_tag": "0.1.2",
    "versions": {
        "0.1.2": "https://downloads.wordpress.org/plugin/logstore.0.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/logstore.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/logstore.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}