{
    "name": "CSV Download",
    "slug": "csv-download",
    "version": "1.0.0",
    "author": "Desmond O'Grady",
    "author_profile": "https://profiles.wordpress.org/desie314/",
    "contributors": {
        "desie314": {
            "profile": "https://profiles.wordpress.org/desie314/",
            "avatar": "https://secure.gravatar.com/avatar/b6e9422da3884c8a84e1f9e932aaad98?s=96&d=monsterid&r=g",
            "display_name": "desie314"
        }
    },
    "requires": false,
    "tested": "4.5.32",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/csv-download/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1323,
    "last_updated": "2016-08-02 18:36:00",
    "added": "2016-08-02",
    "homepage": "",
    "sections": {
        "description": "<p>A plugin for WP developers to easily add CSV download links to the admin section or front end. When a specific GET variable is detected (from the download link) your data, which needs to be a multi-dimensional array, is passed to a function that converts it to a csv file and triggers the download.</p>\n<p>Add the following code to <strong>functions.php</strong>.</p>\n<h4>Admin Example</h4>\n<pre><code>/**\n * Instantiate CSVDownload class with appropriate arguments (listed in class).\n * Arguments are optional\n */\nif (class_exists('CSVDownload')) {\n  $csv_button = New CSVDownload(array(\n    'post_types' =&gt; array('page'),\n    'post_type_ids' =&gt; array(420, 114, 749),\n    'metabox_title' =&gt; 'Download CSV Data',\n    'help_text' =&gt; 'CSV file containing useful data.',\n    'parameter' =&gt; 'csv_export_button',\n    'button_text' =&gt; 'Download'\n  ));\n}\n\n/**\n * Get results, convert to csv file, and trigger download.\n */\nif(isset($_GET[$csv_button-&gt;parameter])) {\n  add_action('admin_init', function(){\n    // Get results array\n    $results = get_csv_file_results();\n    // Convert results array to csv file and trigger download.\n    CSVDownload::download_csv_results(array(\n      'results' =&gt; $results,\n      'file_name' =&gt; 'csv_data'\n    ));\n    exit;\n  }, 1);\n}\n\n/**\n * Get the results array for the csv button download.\n *\n * @return array\n */\nfunction get_csv_file_results(){\n\n  // Create multi-dimensional array.\n  $results_array = array(\n    array('Email','User Name','Favorite Color'), // Column headers\n    array('fake@email.com','coolguy1','blue'),\n    array('fake@email.com','coolguy2','orange'),\n    array('fake@email.com','coolguy3','pink'),\n    array('fake@email.com','coolguy4','red'),\n  );\n\n  // Return results array\n  return $results_array;\n}\n</code></pre>\n<h4>Front End Example</h4>\n<p>Add a button element to your HTML.</p>\n<pre><code>&lt;a href=\"&lt;?php echo $_SERVER[\"REQUEST_URI\"]; ?&gt;?csv_export_button=1\"&gt;Download&lt;/a&gt;\n</code></pre>\n<p>Add init action callback and provide array data.</p>\n<pre><code>/**\n * Get results, convert to csv file, and trigger download.\n */\nif(isset($_GET['csv_export_button'])) {\n  add_action('init', function(){\n    // Get results array\n    $results = get_csv_file_results();\n    // Convert results array to csv file and trigger download.\n    CSVDownload::download_csv_results(array(\n      'results' =&gt; $results,\n      'file_name' =&gt; 'csv_data'\n    ));\n    exit;\n  }, 1);\n}\n\n/**\n * Get the results array for the csv button download.\n *\n * @return array\n */\nfunction get_csv_file_results(){\n\n  // Create multi-dimensional array.\n  $results_array = array(\n    array('Email','User Name','Favorite Color'), // Column headers\n    array('fake@email.com','coolguy1','blue'),\n    array('fake@email.com','coolguy2','orange'),\n    array('fake@email.com','coolguy3','pink'),\n    array('fake@email.com','coolguy4','red'),\n  );\n\n  // Return results array\n  return $results_array;\n}\n</code></pre>\n<p><a href=\"http://agencylabs.com/\" rel=\"nofollow ugc\">AgencyLabs.com</a> &#8211; A digital production studio.</p>\n",
        "installation": "<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/csv-download</code> directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress</li>\n</ol>\n"
    },
    "short_description": "A plugin for WP developers to easily add CSV download links to the admin section or front end.",
    "description": "<p>A plugin for WP developers to easily add CSV download links to the admin section or front end. When a specific GET variable is detected (from the download link) your data, which needs to be a multi-dimensional array, is passed to a function that converts it to a csv file and triggers the download.</p>\n<p>Add the following code to <strong>functions.php</strong>.</p>\n<h4>Admin Example</h4>\n<pre><code>/**\n * Instantiate CSVDownload class with appropriate arguments (listed in class).\n * Arguments are optional\n */\nif (class_exists('CSVDownload')) {\n  $csv_button = New CSVDownload(array(\n    'post_types' =&gt; array('page'),\n    'post_type_ids' =&gt; array(420, 114, 749),\n    'metabox_title' =&gt; 'Download CSV Data',\n    'help_text' =&gt; 'CSV file containing useful data.',\n    'parameter' =&gt; 'csv_export_button',\n    'button_text' =&gt; 'Download'\n  ));\n}\n\n/**\n * Get results, convert to csv file, and trigger download.\n */\nif(isset($_GET[$csv_button-&gt;parameter])) {\n  add_action('admin_init', function(){\n    // Get results array\n    $results = get_csv_file_results();\n    // Convert results array to csv file and trigger download.\n    CSVDownload::download_csv_results(array(\n      'results' =&gt; $results,\n      'file_name' =&gt; 'csv_data'\n    ));\n    exit;\n  }, 1);\n}\n\n/**\n * Get the results array for the csv button download.\n *\n * @return array\n */\nfunction get_csv_file_results(){\n\n  // Create multi-dimensional array.\n  $results_array = array(\n    array('Email','User Name','Favorite Color'), // Column headers\n    array('fake@email.com','coolguy1','blue'),\n    array('fake@email.com','coolguy2','orange'),\n    array('fake@email.com','coolguy3','pink'),\n    array('fake@email.com','coolguy4','red'),\n  );\n\n  // Return results array\n  return $results_array;\n}\n</code></pre>\n<h4>Front End Example</h4>\n<p>Add a button element to your HTML.</p>\n<pre><code>&lt;a href=\"&lt;?php echo $_SERVER[\"REQUEST_URI\"]; ?&gt;?csv_export_button=1\"&gt;Download&lt;/a&gt;\n</code></pre>\n<p>Add init action callback and provide array data.</p>\n<pre><code>/**\n * Get results, convert to csv file, and trigger download.\n */\nif(isset($_GET['csv_export_button'])) {\n  add_action('init', function(){\n    // Get results array\n    $results = get_csv_file_results();\n    // Convert results array to csv file and trigger download.\n    CSVDownload::download_csv_results(array(\n      'results' =&gt; $results,\n      'file_name' =&gt; 'csv_data'\n    ));\n    exit;\n  }, 1);\n}\n\n/**\n * Get the results array for the csv button download.\n *\n * @return array\n */\nfunction get_csv_file_results(){\n\n  // Create multi-dimensional array.\n  $results_array = array(\n    array('Email','User Name','Favorite Color'), // Column headers\n    array('fake@email.com','coolguy1','blue'),\n    array('fake@email.com','coolguy2','orange'),\n    array('fake@email.com','coolguy3','pink'),\n    array('fake@email.com','coolguy4','red'),\n  );\n\n  // Return results array\n  return $results_array;\n}\n</code></pre>\n<p><a href=\"http://agencylabs.com/\" rel=\"nofollow ugc\">AgencyLabs.com</a> &#8211; A digital production studio.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/csv-download.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/csv-download/trunk/screenshot-1.png?rev=1539332",
            "caption": "Admin section example metabox."
        }
    ],
    "tags": {
        "comma-separated-values-list": "Comma Separated Values List",
        "csv": "csv",
        "csv-download": "CSV Download",
        "csv-download-button": "CSV Download Button",
        "csv-download-link": "CSV Download Link"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/csv-download.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}