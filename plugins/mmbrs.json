{
    "name": "mmbrs",
    "slug": "mmbrs",
    "version": "1.0",
    "author": "<a href=\"http://compassionate.co/\">Ben Wills</a>",
    "author_profile": "https://profiles.wordpress.org/benwills/",
    "contributors": {
        "benwills": {
            "profile": "https://profiles.wordpress.org/benwills/",
            "avatar": "https://secure.gravatar.com/avatar/e0dc9b3fc89afb4ae8dc759839eafc4b?s=96&d=monsterid&r=g",
            "display_name": "benwills"
        }
    },
    "requires": "3.3",
    "tested": "4.0.38",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/mmbrs/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1086,
    "last_updated": "2014-10-02 5:24pm GMT",
    "added": "2014-10-02",
    "homepage": "http://compassionate.co/mmbrs",
    "sections": {
        "description": "<p>The mmbrs plugin allows you to restrict content access using shortcodes.</p>\n<p>Content may be restricted based on role, capability, user meta, and logged-in status.</p>\n<h3>What makes mmbrs different:</h3>\n<ul>\n<li>Restriction based on role, capability, user meta, and logged-in status is<br />\nall in one place.</li>\n<li>You are able to restrict content based on if a user <strong>is=&#8217;not&#8217;</strong>. For<br />\nexample, <em>Show this content if a user is not an administrator.</em></li>\n<li>You can pass multiple variables to the roles and capabilities shortcodes.<br />\nFor example, <em>Show this content to users who are subscribers,<br />\ncontributors, or editors.</em></li>\n<li>By default, any content within these four shortcodes is not displayed in<br />\nfeeds. You may also set the <strong>showinfeed=&#8217;yes&#8217;</strong> attribute to show the<br />\ncontent in feeds.</li>\n<li>It is as lean as I could get it, with logic ordering to cut down on<br />\nprocessing. Which isn&#8217;t saying much, but if you&#8217;ve got suggestions, I&#8217;m<br />\nopen to hearing them.</li>\n</ul>\n<h3>The four mmbrs shortcodes are:</h3>\n<ul>\n<li>[mmbrs_logged_in]</li>\n<li>[mmbrs_roles]</li>\n<li>[mmbrs_capabilities]</li>\n<li>[mmbrs_user_meta]</li>\n</ul>\n<h3>[mmbrs_logged_in]</h3>\n<blockquote>\n<p>[mmbrs_logged_in]Content.[/mmbrs_logged_in]</p>\n</blockquote>\n<ul>\n<li><em>Attribute: none</em>\n<ul>\n<li>Shows content to logged in users.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_logged_in is=&#8217;not&#8217;]Content.[/mmbrs_logged_in]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Shows content to logged out users.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_logged_in showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_logged_in]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li><strong>showinfeed</strong> only accepts <strong>yes</strong>.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h3>[mmbrs_roles]</h3>\n<blockquote>\n<p>[mmbrs_roles]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: none\n<ul>\n<li>Returns nothing.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_roles equals=&#8217;subscriber&#8217;]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: equals\n<ul>\n<li>Required.</li>\n<li>Accepts multiple. e.g. equals=&#8217;subscriber,contributor&#8217;</li>\n<li>Shows content to users with the &#8216;subscriber&#8217; role.</li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_roles is=&#8217;not&#8217; equals=&#8217;subscriber&#8217;]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li>Shows content to users who do not have the &#8216;subscriber&#8217; role.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_roles showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li><strong>showinfeed</strong> only accepts <strong>yes</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h3>[mmbrs_capabilities]</h3>\n<blockquote>\n<p>[mmbrs_capabilities]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: none\n<ul>\n<li>Returns nothing.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_capabilities can=&#8217;delete_others_posts&#8217;]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: can\n<ul>\n<li>Required.</li>\n<li>Shows content to users with the &#8216;delete_others_posts&#8217; capability.</li>\n<li>Accepts multiple. e.g. <strong>can=&#8217;delete_others_posts,edit_others_posts&#8217;</strong></li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_capabilities is=&#8217;not&#8217; can=&#8217;delete_others_posts&#8217;]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li>Shows content to users who do not have the &#8216;delete_others_posts&#8217; capability.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_capabilities showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li><strong>showinfeed</strong> only accepts <strong>yes</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h3>[mmbrs_user_meta]</h3>\n<blockquote>\n<p>[mmbrs_user_meta]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: none\n<ul>\n<li>Returns nothing.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta key=&#8217;first_name&#8217;][/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: key (with no content)\n<ul>\n<li>Required. (<strong>key</strong> attribute is required. Content is not required.)</li>\n<li>Shows a logged-in user&#8217;s <strong>first_name</strong> meta value.</li>\n<li>Does NOT accept multiple values when content is null/empty.</li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta key=&#8217;first_name&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: key (with content)\n<ul>\n<li>Required. (<strong>key</strong> attribute is required. Content is not required.)</li>\n<li>Shows content to logged-in user with the <strong>first_name</strong> meta value.</li>\n<li>Accepts multiple as OR. e.g. <strong>key=&#8217;first_name,last_name&#8217;</strong></li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta is=&#8217;not&#8217; key=&#8217;first_name&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li>Shows content to users who do not have the <strong>first_name</strong> meta value.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta is=&#8217;not&#8217; key=&#8217;first_name&#8217; equals=&#8217;Ben&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: equals\n<ul>\n<li>Required.</li>\n<li>Shows content to users who do not have the <strong>first_name</strong> user meta of &#8216;Ben&#8217;.</li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li><strong>showinfeed</strong> only accepts &#8216;yes&#8217;.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h4>Other Notes:</h4>\n<p>For every shortcode, except <strong>[mmbrs_logged_in]</strong>, if a user is not logged in, the shortcode will return nothing. The exception is when using <strong>is=&#8217;not&#8217;</strong> in <strong>[mmbrs_logged_in]</strong>, as in <strong>[mmbrs_logged_in is=&#8217;not&#8217;]Content.[/mmbrs_logged_in]</strong></p>\n<p>By default, everything is hidden from feeds unless <strong>showinfeed=&#8217;yes&#8217;</strong> is defined.</p>\n<h4>Motivation for this plugin:</h4>\n<p>I wrote this plugin to fill some holes, reduce some unnecessary functions, and fix some minor bugs I found in other plugins. I now use this, and only this, to control all shortcode-based content access on my membership-style websites.</p>\n<p>The Members plugin checks roles by checking capabilities. You are not supposed to do that. The proper way of checking roles is included here. Notes on this:</p>\n<ul>\n<li><a href=\"https://codex.wordpress.org/Function_Reference/current_user_can#Notes\" rel=\"nofollow ugc\">WordPress current_user_can() Notes</a></li>\n</ul>\n<p>Aside from that, I love and use the Members plugin and suggest you check it out for other role- and capability-based content access management.</p>\n<p>I removed a bunch of stuff from the User Meta Shortcodes plugin that I didn&#8217;t want. If you want the additional functionality, I recommend that plugin.</p>\n<p>In the end, I wanted very clear control of in-post content via shortcodes. I wasn&#8217;t finding anything that was totally stripped down. So I wrote this.</p>\n<h4>Inspiration and Credits:</h4>\n<ul>\n<li><a href=\"https://wordpress.org/plugins/members/\" rel=\"ugc\">Members Plugin</a></li>\n<li><a href=\"https://wordpress.org/plugins/user-meta-shortcodes/\" rel=\"ugc\">User Meta Shortcodes Plugin</a></li>\n<li><a href=\"http://docs.appthemes.com/tutorials/wordpress-check-user-role-function/\" rel=\"nofollow ugc\">AppThemes User Role Function</a></li>\n</ul>\n<p>&nbsp;</p>\n",
        "installation": "<ol>\n<li>Upload <strong>plugin-name.php</strong> to the <strong>/wp-content/plugins/</strong> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "faq": "<p>None. Yet.</p>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>2014.10.01</li>\n<li>Released</li>\n</ul>\n"
    },
    "short_description": "Restrict content access using shortcodes; based on roles, capabilities, user meta, and logged in status.",
    "description": "<p>The mmbrs plugin allows you to restrict content access using shortcodes.</p>\n<p>Content may be restricted based on role, capability, user meta, and logged-in status.</p>\n<h3>What makes mmbrs different:</h3>\n<ul>\n<li>Restriction based on role, capability, user meta, and logged-in status is<br />\nall in one place.</li>\n<li>You are able to restrict content based on if a user <strong>is=&#8217;not&#8217;</strong>. For<br />\nexample, <em>Show this content if a user is not an administrator.</em></li>\n<li>You can pass multiple variables to the roles and capabilities shortcodes.<br />\nFor example, <em>Show this content to users who are subscribers,<br />\ncontributors, or editors.</em></li>\n<li>By default, any content within these four shortcodes is not displayed in<br />\nfeeds. You may also set the <strong>showinfeed=&#8217;yes&#8217;</strong> attribute to show the<br />\ncontent in feeds.</li>\n<li>It is as lean as I could get it, with logic ordering to cut down on<br />\nprocessing. Which isn&#8217;t saying much, but if you&#8217;ve got suggestions, I&#8217;m<br />\nopen to hearing them.</li>\n</ul>\n<h3>The four mmbrs shortcodes are:</h3>\n<ul>\n<li>[mmbrs_logged_in]</li>\n<li>[mmbrs_roles]</li>\n<li>[mmbrs_capabilities]</li>\n<li>[mmbrs_user_meta]</li>\n</ul>\n<h3>[mmbrs_logged_in]</h3>\n<blockquote>\n<p>[mmbrs_logged_in]Content.[/mmbrs_logged_in]</p>\n</blockquote>\n<ul>\n<li><em>Attribute: none</em>\n<ul>\n<li>Shows content to logged in users.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_logged_in is=&#8217;not&#8217;]Content.[/mmbrs_logged_in]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Shows content to logged out users.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_logged_in showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_logged_in]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li><strong>showinfeed</strong> only accepts <strong>yes</strong>.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h3>[mmbrs_roles]</h3>\n<blockquote>\n<p>[mmbrs_roles]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: none\n<ul>\n<li>Returns nothing.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_roles equals=&#8217;subscriber&#8217;]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: equals\n<ul>\n<li>Required.</li>\n<li>Accepts multiple. e.g. equals=&#8217;subscriber,contributor&#8217;</li>\n<li>Shows content to users with the &#8216;subscriber&#8217; role.</li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_roles is=&#8217;not&#8217; equals=&#8217;subscriber&#8217;]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li>Shows content to users who do not have the &#8216;subscriber&#8217; role.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_roles showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_roles]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li><strong>showinfeed</strong> only accepts <strong>yes</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h3>[mmbrs_capabilities]</h3>\n<blockquote>\n<p>[mmbrs_capabilities]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: none\n<ul>\n<li>Returns nothing.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_capabilities can=&#8217;delete_others_posts&#8217;]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: can\n<ul>\n<li>Required.</li>\n<li>Shows content to users with the &#8216;delete_others_posts&#8217; capability.</li>\n<li>Accepts multiple. e.g. <strong>can=&#8217;delete_others_posts,edit_others_posts&#8217;</strong></li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_capabilities is=&#8217;not&#8217; can=&#8217;delete_others_posts&#8217;]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li>Shows content to users who do not have the &#8216;delete_others_posts&#8217; capability.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_capabilities showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_capabilities]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li><strong>showinfeed</strong> only accepts <strong>yes</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h3>[mmbrs_user_meta]</h3>\n<blockquote>\n<p>[mmbrs_user_meta]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: none\n<ul>\n<li>Returns nothing.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta key=&#8217;first_name&#8217;][/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: key (with no content)\n<ul>\n<li>Required. (<strong>key</strong> attribute is required. Content is not required.)</li>\n<li>Shows a logged-in user&#8217;s <strong>first_name</strong> meta value.</li>\n<li>Does NOT accept multiple values when content is null/empty.</li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta key=&#8217;first_name&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: key (with content)\n<ul>\n<li>Required. (<strong>key</strong> attribute is required. Content is not required.)</li>\n<li>Shows content to logged-in user with the <strong>first_name</strong> meta value.</li>\n<li>Accepts multiple as OR. e.g. <strong>key=&#8217;first_name,last_name&#8217;</strong></li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta is=&#8217;not&#8217; key=&#8217;first_name&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: is\n<ul>\n<li>Optional.</li>\n<li>Shows content to users who do not have the <strong>first_name</strong> meta value.</li>\n<li><strong>is</strong> only accepts <strong>not</strong>.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta is=&#8217;not&#8217; key=&#8217;first_name&#8217; equals=&#8217;Ben&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: equals\n<ul>\n<li>Required.</li>\n<li>Shows content to users who do not have the <strong>first_name</strong> user meta of &#8216;Ben&#8217;.</li>\n<li>Case sensitive.</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>[mmbrs_user_meta showinfeed=&#8217;yes&#8217;]Content.[/mmbrs_user_meta]</p>\n</blockquote>\n<ul>\n<li>Attribute: showinfeed\n<ul>\n<li>Optional.</li>\n<li>Shows content in the feed and ignores all other attributes when displaying in the feed. (If it is not being displayed in a feed, all of the attributes take effect.)</li>\n<li><strong>showinfeed</strong> only accepts &#8216;yes&#8217;.</li>\n<li>Case insensitive.</li>\n</ul>\n</li>\n</ul>\n<h4>Other Notes:</h4>\n<p>For every shortcode, except <strong>[mmbrs_logged_in]</strong>, if a user is not logged in, the shortcode will return nothing. The exception is when using <strong>is=&#8217;not&#8217;</strong> in <strong>[mmbrs_logged_in]</strong>, as in <strong>[mmbrs_logged_in is=&#8217;not&#8217;]Content.[/mmbrs_logged_in]</strong></p>\n<p>By default, everything is hidden from feeds unless <strong>showinfeed=&#8217;yes&#8217;</strong> is defined.</p>\n<h4>Motivation for this plugin:</h4>\n<p>I wrote this plugin to fill some holes, reduce some unnecessary functions, and fix some minor bugs I found in other plugins. I now use this, and only this, to control all shortcode-based content access on my membership-style websites.</p>\n<p>The Members plugin checks roles by checking capabilities. You are not supposed to do that. The proper way of checking roles is included here. Notes on this:</p>\n<ul>\n<li><a href=\"https://codex.wordpress.org/Function_Reference/current_user_can#Notes\" rel=\"nofollow ugc\">WordPress current_user_can() Notes</a></li>\n</ul>\n<p>Aside from that, I love and use the Members plugin and suggest you check it out for other role- and capability-based content access management.</p>\n<p>I removed a bunch of stuff from the User Meta Shortcodes plugin that I didn&#8217;t want. If you want the additional functionality, I recommend that plugin.</p>\n<p>In the end, I wanted very clear control of in-post content via shortcodes. I wasn&#8217;t finding anything that was totally stripped down. So I wrote this.</p>\n<h4>Inspiration and Credits:</h4>\n<ul>\n<li><a href=\"https://wordpress.org/plugins/members/\" rel=\"ugc\">Members Plugin</a></li>\n<li><a href=\"https://wordpress.org/plugins/user-meta-shortcodes/\" rel=\"ugc\">User Meta Shortcodes Plugin</a></li>\n<li><a href=\"http://docs.appthemes.com/tutorials/wordpress-check-user-role-function/\" rel=\"nofollow ugc\">AppThemes User Role Function</a></li>\n</ul>\n<p>&nbsp;</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/mmbrs.zip",
    "upgrade_notice": {
        "": "<p>None.</p>"
    },
    "screenshots": [],
    "tags": {
        "access": "access",
        "capabilities": "capabilities",
        "capability": "capability",
        "content-access": "content access",
        "member": "member"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://compassionate.co/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/mmbrs.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}