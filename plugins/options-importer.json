{
    "name": "WP Options Importer",
    "slug": "options-importer",
    "version": "7",
    "author": "<a href=\"https://www.alley.com/\">Matthew Boynes</a>",
    "author_profile": "https://profiles.wordpress.org/mboynes/",
    "contributors": {
        "mboynes": {
            "profile": "https://profiles.wordpress.org/mboynes/",
            "avatar": "https://secure.gravatar.com/avatar/6b5e3a6a664bcb435216ecba76c9ed90?s=96&d=monsterid&r=g",
            "display_name": "Matthew Boynes"
        },
        "alleyinteractive": {
            "profile": "https://profiles.wordpress.org/alleyinteractive/",
            "avatar": "https://secure.gravatar.com/avatar/09436109e0f3eb40bb5a05068f23417c?s=96&d=monsterid&r=g",
            "display_name": "Alley"
        }
    },
    "requires": "3.8",
    "tested": "6.1.7",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 98,
    "ratings": {
        "5": 8,
        "4": 1,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 9,
    "support_url": "https://wordpress.org/support/plugin/options-importer/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 9000,
    "downloaded": 89690,
    "last_updated": "2023-03-03 2:46pm GMT",
    "added": "2014-04-21",
    "homepage": "https://github.com/alleyinteractive/options-importer",
    "sections": {
        "description": "<p>WordPress can presently export all of its content via WXR, and then import that<br />\nthrough the WordPress Importer plugin. That process includes all posts, terms,<br />\nmenus, comments, and users, but it doesn&#8217;t touch options. In addition to<br />\ngeneral settings, options can include widget configurations, plugin settings,<br />\ntheme settings, and lots more. This can be very time-consuming to migrate<br />\nmanually. WP Options Importer aims to fill that void and save us all a lot of<br />\ntime.</p>\n<p>WP Options Importer allows you to export all options to a JSON file, and then<br />\nyou can selectively import them into another WordPress installation. The import<br />\nprocess is very transparent, and it even shows you what data you&#8217;ll be<br />\nimporting. Lastly, it gives you the option to override existing settings or to<br />\nskip options that already exist.</p>\n",
        "installation": "<ol>\n<li>Upload the plugin to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Navigate to <strong>Tools &rarr; Export</strong> and choose &#8220;Settings&#8221; to export options,<br />\nor navigate to <strong>Tools &rarr; Import</strong> and choose &#8220;Settings&#8221; to import options.</li>\n</ol>\n",
        "faq": "\n<dt id='when%20i%20import%20the%20default%20options%2C%20%5Bsome%20plugin%5D%27s%20settings%20don%27t%20transfer.%20what%20gives%3F'>\nWhen I import the default options, [some plugin]&#8217;s settings don&#8217;t transfer. What gives?\n</h4>\n<p>\n<p>The default options are core options, or those which a plugin has indicated<br />\nare safe to import. You can choose &#8220;Specific Options&#8221; when importing to<br />\nmanually select those which you need to import.</p>\n</p>\n<dt id='i%27m%20the%20author%20of%20%5Bsome%20plugin%5D.%20can%20you%20add%20my%20settings%20to%20the%20default%20list%3F'>\nI&#8217;m the author of [some plugin]. Can you add my settings to the default list?\n</h4>\n<p>\n<p>No, but you can! We provide a filter, <code>options_import_allowlist</code> for you to add<br />\nyour options to the default list. Here&#8217;s an example one might add to their<br />\nplugin:</p>\n<pre><code>function my_awesome_plugin_options( $options ) {\n    $options[] = 'my_awesome_plugin';\n    return $options;\n}\nadd_filter( 'options_import_allowlist', 'my_awesome_plugin_options' );\n</code></pre>\n<p>Similarly, if you don&#8217;t want someone to ever import an option, you can add it<br />\nto the denylist using the <code>options_import_denylist</code> filter. As above, it<br />\nwould look something like this:</p>\n<pre><code>function my_awesome_plugin_denylist_options( $options ) {\n    $options[] = 'my_awesome_plugin_edit_lock';\n    return $options;\n}\nadd_filter( 'options_import_denylist', 'my_awesome_plugin_denylist_options' );\n</code></pre>\n</p>\n<dt id='i%20operate%20a%20multisite%20network%20and%20some%20options%20should%20%2Anever%2A%20be%20able%20to%20be%20exported%20or%20imported%20by%20the%20site%20owner.%20can%20i%20prevent%20that%3F'>\nI operate a multisite network and some options should *never* be able to be exported or imported by the site owner. Can I prevent that?\n</h4>\n<p>\n<p>You have two options for both exports and imports.</p>\n<p><strong>Imports</strong></p>\n<p>First, you can use the <code>options_import_denylist</code> filter<br />\nand add any options to that array (which is empty by default). If your users<br />\nhave access to theme or plugin code, this isn&#8217;t 100% safe, because they could<br />\noverride your denylist using the same filter. In those cases, there&#8217;s an<br />\nemergency ripcord where you can disable options from ever being imported. To<br />\nuse this, define the constant <code>WP_OPTION_IMPORT_DENYLIST_REGEX</code> (you&#8217;ll<br />\nprobably want to do this in an mu-plugin) and set it to a regular expression.<br />\nAnything matching this expression will be skipped. For example:</p>\n<pre><code>define( 'WP_OPTION_IMPORT_DENYLIST_REGEX', '/^(home|siteurl)$/' );\n</code></pre>\n<p><strong>Exports</strong></p>\n<p>Exactly the same as with imports. The filter is <code>options_export_denylist</code>,<br />\nand the constant is <code>WP_OPTION_EXPORT_DENYLIST_REGEX</code>.</p>\n</p>\n\n",
        "changelog": "<h4>7</h4>\n<ul>\n<li>SECURITY: Add proper escaping to all echo functions</li>\n<li>SECURITY: Add nonce checks</li>\n<li>SECURITY: Sanitize option name values during import</li>\n<li>ENHANCEMENT: Use wp_remote_get instead of file_get_contents</li>\n<li>INFO: Deprecate the use of blacklist and whitlelist in favor of denylist and allowlist</li>\n<li>INFO: Move class into new file</li>\n<li>INFO: Enable phpcs against the WordPress standard</li>\n</ul>\n<h4>6</h4>\n<ul>\n<li>Remove multisite site-specific exclusions</li>\n</ul>\n<h4>5</h4>\n<ul>\n<li>Added WP_OPTION_EXPORT_BLACKLIST_REGEX</li>\n<li>Breaking: Changed the <code>options_export_exclude</code> filter to <code>options_export_blacklist</code> to be consistent with imports.</li>\n</ul>\n<h4>4</h4>\n<ul>\n<li>After file upload, store data in transient and immediately delete the file so it doesn&#8217;t linger on the server.</li>\n</ul>\n<h4>3</h4>\n<ul>\n<li>Added blacklists</li>\n<li>Fixing bug where plugin wouldn&#8217;t show in multisite when WP Importer wasn&#8217;t active.</li>\n<li>Misc bug fixes</li>\n</ul>\n<h4>2</h4>\n<ul>\n<li>Spit &amp; polish</li>\n<li>Improved error handling</li>\n<li>Added file cleanup on completion</li>\n<li>Misc bug fixes</li>\n</ul>\n<h4>1</h4>\n<ul>\n<li>Brand new!</li>\n</ul>\n"
    },
    "short_description": "Export and import WordPress Options.",
    "description": "<p>WordPress can presently export all of its content via WXR, and then import that<br />\nthrough the WordPress Importer plugin. That process includes all posts, terms,<br />\nmenus, comments, and users, but it doesn&#8217;t touch options. In addition to<br />\ngeneral settings, options can include widget configurations, plugin settings,<br />\ntheme settings, and lots more. This can be very time-consuming to migrate<br />\nmanually. WP Options Importer aims to fill that void and save us all a lot of<br />\ntime.</p>\n<p>WP Options Importer allows you to export all options to a JSON file, and then<br />\nyou can selectively import them into another WordPress installation. The import<br />\nprocess is very transparent, and it even shows you what data you&#8217;ll be<br />\nimporting. Lastly, it gives you the option to override existing settings or to<br />\nskip options that already exist.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/options-importer.7.zip",
    "upgrade_notice": {
        "5": "<p><strong>Breaking:</strong> Changed the <code>options_export_exclude</code> filter to <code>options_export_blacklist</code> to be consistent with imports.</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/options-importer/assets/screenshot-1.png?rev=899744",
            "caption": "\"Options\" is seamlessly integrated as a choice when exporting."
        },
        {
            "src": "https://ps.w.org/options-importer/assets/screenshot-2.png?rev=899744",
            "caption": "\"Options\" is seamlessly included in the list of importers."
        },
        {
            "src": "https://ps.w.org/options-importer/assets/screenshot-3.png?rev=899744",
            "caption": "Once you upload the JSON file, you're presented with a choice of which\noptions you want to import and if you want to override existing options."
        },
        {
            "src": "https://ps.w.org/options-importer/assets/screenshot-4.png?rev=899744",
            "caption": "If you choose to import \"Specific Options\", you're provided with a list of\neverything in the JSON file. Check the box next to those you want included, or\nuncheck those which you don't want to include."
        }
    ],
    "tags": {
        "export": "export",
        "exporter": "exporter",
        "import": "import",
        "importer": "importer",
        "options": "options"
    },
    "stable_tag": "7",
    "versions": {
        "4": "https://downloads.wordpress.org/plugin/options-importer.4.zip",
        "5": "https://downloads.wordpress.org/plugin/options-importer.5.zip",
        "7": "https://downloads.wordpress.org/plugin/options-importer.7.zip",
        "trunk": "https://downloads.wordpress.org/plugin/options-importer.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/options-importer.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 98,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}