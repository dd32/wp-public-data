{
    "name": "Remote API",
    "slug": "remote-api",
    "version": "0.2",
    "author": "<a href=\"http://automattic.com\">Thorsten Ott</a>",
    "author_profile": "https://profiles.wordpress.org/tott/",
    "contributors": {
        "tott": {
            "profile": "https://profiles.wordpress.org/tott/",
            "avatar": "https://secure.gravatar.com/avatar/9e8f7fd87fd2163010f98280f3e45a35?s=96&d=monsterid&r=g",
            "display_name": "Thorsten Ott"
        },
        "automattic": {
            "profile": "https://profiles.wordpress.org/automattic/",
            "avatar": "https://secure.gravatar.com/avatar/687b3bf96c41800814e3b93766444283?s=96&d=monsterid&r=g",
            "display_name": "Automattic"
        }
    },
    "requires": "3.0",
    "tested": "3.04",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/remote-api/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3260,
    "last_updated": "2011-02-23 1:01pm GMT",
    "added": "2011-02-01",
    "homepage": "http://wordpress.org/extend/plugins/remote-api/",
    "sections": {
        "description": "<p>A basic use case for this plugin would be lazy loading content segments or performing cross-blog actions.<br />\nIt includes a simple example for lazy loading widgets, but is mainly aimed for developers who like to built on top of this functionality.</p>\n<p>Features:</p>\n<ul>\n<li>Url Format in form of <code>http://&lt;blogname&gt;/&lt;server_entry_key&gt;/&lt;request_string&gt;/&lt;server_format_key&gt;/&lt;format&gt;</code> in order to allow server side caching of requests without setting up a huge set of rewrite rules. The request string contains all request parameters</li>\n<li>Variable response formats. Comes with xml and json bundled in response.php but can be extended to your needs</li>\n<li>Exceptions with custom exception handler are used throughout the classes to allow error feedback in the requested response format.</li>\n</ul>\n<p>Please have a look at the inline documentation starting from <code>remote-api.php</code>. To get a sense of the usage have a look at the examples</p>\n<h3>Lazy Loading Widget Example</h3>\n<p>The Lazy Loading Widget example is a basic use case for this script. It&#8217;s UI is still not very tuned, but should give an impression on what can be done with this remote-api.</p>\n<p>When you visit your widget administration at <code>/wp-admin/widgets.php</code> you&#8217;ll notice a widget called &#8220;Remote_API_Lazy_Widget&#8221;. Drag it to one of your sidebars where you would like to have some asynchronously loaded widget appear and give it a Title. Then reload the widgets.php page.</p>\n<p>A new sidebar should appear in which you can drop other widgets. The widgets you&#8217;ll drop in this sidebar will be loaded asynchronously via a ajax request in place of the placeholder widget.</p>\n",
        "changelog": "<h4>0.2</h4>\n<ul>\n<li>Add support for full stops (.) in server parameters and switch to <code>remote.api</code> as default url to avoid conflicts with page names.</li>\n<li>Switching to hash_hmac instead of crypt for request format validation string.</li>\n</ul>\n<h4>0.1</h4>\n<ul>\n<li>Basic implementation</li>\n</ul>\n"
    },
    "short_description": "A set of extendable classes that allow the creation of a remote API.",
    "description": "<p>A basic use case for this plugin would be lazy loading content segments or performing cross-blog actions.<br />\nIt includes a simple example for lazy loading widgets, but is mainly aimed for developers who like to built on top of this functionality.</p>\n<p>Features:</p>\n<ul>\n<li>Url Format in form of <code>http://&lt;blogname&gt;/&lt;server_entry_key&gt;/&lt;request_string&gt;/&lt;server_format_key&gt;/&lt;format&gt;</code> in order to allow server side caching of requests without setting up a huge set of rewrite rules. The request string contains all request parameters</li>\n<li>Variable response formats. Comes with xml and json bundled in response.php but can be extended to your needs</li>\n<li>Exceptions with custom exception handler are used throughout the classes to allow error feedback in the requested response format.</li>\n</ul>\n<p>Please have a look at the inline documentation starting from <code>remote-api.php</code>. To get a sense of the usage have a look at the examples</p>\n<h3>Lazy Loading Widget Example</h3>\n<p>The Lazy Loading Widget example is a basic use case for this script. It&#8217;s UI is still not very tuned, but should give an impression on what can be done with this remote-api.</p>\n<p>When you visit your widget administration at <code>/wp-admin/widgets.php</code> you&#8217;ll notice a widget called &#8220;Remote_API_Lazy_Widget&#8221;. Drag it to one of your sidebars where you would like to have some asynchronously loaded widget appear and give it a Title. Then reload the widgets.php page.</p>\n<p>A new sidebar should appear in which you can drop other widgets. The widgets you&#8217;ll drop in this sidebar will be loaded asynchronously via a ajax request in place of the placeholder widget.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/remote-api.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/remote-api/trunk/screenshot-1.jpg?rev=1573780",
            "caption": "Widget admin interface showing the widget (left), the placeholder widget in the primary sidebar (top-right) and the resulting sidebar / dropzone for the placeholder widget (bottom-right)"
        }
    ],
    "tags": {
        "api": "api",
        "lazy-loading": "Lazy Loading",
        "lazy-widget": "lazy widget",
        "remote-access": "remote access",
        "remote-api": "remote API"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/remote-api.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}