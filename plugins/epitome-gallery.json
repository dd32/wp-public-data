{
    "name": "Epitome Gallery",
    "slug": "epitome-gallery",
    "version": "1.0",
    "author": "<a href=\"http://www.freddessaint.com/\">Fred Dessaint</a>",
    "author_profile": "https://profiles.wordpress.org/freddessaint2/",
    "contributors": {
        "freddessaint2": {
            "profile": "https://profiles.wordpress.org/freddessaint2/",
            "avatar": "https://secure.gravatar.com/avatar/973e601e90fd7898cd928f57eec2348b?s=96&d=monsterid&r=g",
            "display_name": "Fred Dessaint"
        }
    },
    "requires": "3.5",
    "tested": "4.3.34",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/epitome-gallery/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 938,
    "last_updated": "2015-12-04 18:37:00",
    "added": "2015-12-07",
    "homepage": "http://www.freddessaint.com/",
    "sections": {
        "description": "<p>Epitome Gallery aims to bring new possibilites to the native WordPress gallery. From the Edit Gallery panel in the Gallery Settings sidebar, you will find new fields for selecting the gallery type and optionaly applying a custom class. Available gallery types are the following: Slider, Featured Slider, Callout. You manage your gallery (selection, sorting, description) as usual. Epitome Gallery is great to create complex layouts based on a simple WordPress gallery.</p>\n<p>When saving, the plugin add custom attributes in the WordPress gallery shortcode. The first one is <code>epitome_type=\"name\"</code> that define the type of gallery (optional if the type is set to default). The second one is optional <code>epitome_class=\"name\"</code> and contains one or more class names to apply.</p>\n<h4>Gallery types</h4>\n<ul>\n<li>Slider &#8211; Transform a WordPress gallery to a interactive slider. Works fine in the body of an article.</li>\n<li>Featured Slider &#8211; Same as Slider, but provides titles, caption and/or description. Works fine at the top of an article as a featured content.</li>\n<li>Callout &#8211; Transfom a WordPress gallery to a set of columns containing images with title, caption and/or description. No need to use a column shortcode or a composer, just use this type of gallery for building this kind of layout.</li>\n</ul>\n<h4>JavaScript</h4>\n<p>Epitome Gallery use a JavaScript file (coded with jQuery) to handle the slider. You can use to customize your own slider. Parameters are the following:</p>\n<pre><code>`javascript </code></pre>\n<p>pauseTime: 3000, // Delay between 2 slides pauseOnHover: true, // Pause slider on hover autoSlide: false, // Start sliding automatically startSlide: 1, // Initial slide number at start width: 640, // In pixel, or keyword &#8216;auto&#8217;, &#8216;viewport&#8217; height: 360, // In pixel, or keyword &#8216;auto&#8217;, &#8216;viewport&#8217; prefetch: true, // Load adjacent slides sitOnTop: false, // Scroll at the top on slider when clicking on it prevText: &#8220;Prev&#8221;, // Direction of previous button label nextText: &#8220;Next&#8221;, // Direction of next button label directionNav: true, // Display direction button (arrows at the egdge of slider) paginationNav: true, // Display pagination button (dots at bottom of slider) prevHandle: null, // Callback function when clicking previous button nextHandle: null, // Callback function when clicking next button itemHandle: null, // Callback function to filter dot elements beforeChange: null, // Callback function to launch action before a slide changes afterChange: null, // Callback function to launch action after a slide changes resize: null // Callback function when catching a window resize event.     `</p>\n<h4>Usage</h4>\n<p>You can replace the default event initialized by the Epitome Gallery in the main JavaScript file of your theme. Instanciate the EpitomeSlider JavaScript object through a custom event and with custom parameters used for this theme. This is similar to the WordPress function <code>do_action()</code>. That&#8217;s important to declare this event outside a <code>ready</code> event.</p>\n<pre><code>`javascript </code></pre>\n<p>$(document).on(&#8216;epitome_slider_init&#8217;, function(e) {     // Instanciate for a regular slider     $(&#8216;.gallery.slider[data-type=&#8221;regular-slider&#8221;]&#8217;).EpitomeSlider({         width: &#8216;auto&#8217;,         height: &#8216;auto&#8217;     });     // Instanciate for a featured slider     $(&#8216;.gallery.slider[data-type=&#8221;featured-slider&#8221;]&#8217;).EpitomeSlider({         width: &#8216;auto&#8217;,         height: &#8216;viewport&#8217;     }); });     `</p>\n",
        "installation": "<ol>\n<li>Upload the <code>epitome-gallery</code> folder to the <code>/wp-content/plugins/</code> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n</ol>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Initial release.</li>\n</ul>\n"
    },
    "short_description": "Add new styles to your WordPress gallery of images that showcase a fully different look for complex layouts.",
    "description": "<p>Epitome Gallery aims to bring new possibilites to the native WordPress gallery. From the Edit Gallery panel in the Gallery Settings sidebar, you will find new fields for selecting the gallery type and optionaly applying a custom class. Available gallery types are the following: Slider, Featured Slider, Callout. You manage your gallery (selection, sorting, description) as usual. Epitome Gallery is great to create complex layouts based on a simple WordPress gallery.</p>\n<p>When saving, the plugin add custom attributes in the WordPress gallery shortcode. The first one is <code>epitome_type=\"name\"</code> that define the type of gallery (optional if the type is set to default). The second one is optional <code>epitome_class=\"name\"</code> and contains one or more class names to apply.</p>\n<h4>Gallery types</h4>\n<ul>\n<li>Slider &#8211; Transform a WordPress gallery to a interactive slider. Works fine in the body of an article.</li>\n<li>Featured Slider &#8211; Same as Slider, but provides titles, caption and/or description. Works fine at the top of an article as a featured content.</li>\n<li>Callout &#8211; Transfom a WordPress gallery to a set of columns containing images with title, caption and/or description. No need to use a column shortcode or a composer, just use this type of gallery for building this kind of layout.</li>\n</ul>\n<h4>JavaScript</h4>\n<p>Epitome Gallery use a JavaScript file (coded with jQuery) to handle the slider. You can use to customize your own slider. Parameters are the following:</p>\n<pre><code>`javascript </code></pre>\n<p>pauseTime: 3000, // Delay between 2 slides pauseOnHover: true, // Pause slider on hover autoSlide: false, // Start sliding automatically startSlide: 1, // Initial slide number at start width: 640, // In pixel, or keyword &#8216;auto&#8217;, &#8216;viewport&#8217; height: 360, // In pixel, or keyword &#8216;auto&#8217;, &#8216;viewport&#8217; prefetch: true, // Load adjacent slides sitOnTop: false, // Scroll at the top on slider when clicking on it prevText: &#8220;Prev&#8221;, // Direction of previous button label nextText: &#8220;Next&#8221;, // Direction of next button label directionNav: true, // Display direction button (arrows at the egdge of slider) paginationNav: true, // Display pagination button (dots at bottom of slider) prevHandle: null, // Callback function when clicking previous button nextHandle: null, // Callback function when clicking next button itemHandle: null, // Callback function to filter dot elements beforeChange: null, // Callback function to launch action before a slide changes afterChange: null, // Callback function to launch action after a slide changes resize: null // Callback function when catching a window resize event.     `</p>\n<h4>Usage</h4>\n<p>You can replace the default event initialized by the Epitome Gallery in the main JavaScript file of your theme. Instanciate the EpitomeSlider JavaScript object through a custom event and with custom parameters used for this theme. This is similar to the WordPress function <code>do_action()</code>. That&#8217;s important to declare this event outside a <code>ready</code> event.</p>\n<pre><code>`javascript </code></pre>\n<p>$(document).on(&#8216;epitome_slider_init&#8217;, function(e) {     // Instanciate for a regular slider     $(&#8216;.gallery.slider[data-type=&#8221;regular-slider&#8221;]&#8217;).EpitomeSlider({         width: &#8216;auto&#8217;,         height: &#8216;auto&#8217;     });     // Instanciate for a featured slider     $(&#8216;.gallery.slider[data-type=&#8221;featured-slider&#8221;]&#8217;).EpitomeSlider({         width: &#8216;auto&#8217;,         height: &#8216;viewport&#8217;     }); });     `</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/epitome-gallery.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "columns": "columns",
        "gallery": "gallery",
        "layout": "layout",
        "slider": "slider",
        "subtitle": "subtitle"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/epitome-gallery.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}