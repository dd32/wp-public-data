{
    "name": "Rock The Slackbot",
    "slug": "rock-the-slackbot",
    "version": "1.1.2",
    "author": "<a href=\"https://bamadesigner.com\">Rachel Carden</a>",
    "author_profile": "https://profiles.wordpress.org/bamadesigner/",
    "contributors": {
        "bamadesigner": {
            "profile": "https://profiles.wordpress.org/bamadesigner/",
            "avatar": "https://secure.gravatar.com/avatar/cf04cca68135ce6bce0e0c1224250baf?s=96&d=monsterid&r=g",
            "display_name": "Rachel Cherry"
        }
    },
    "requires": "3.0",
    "tested": "4.7.29",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 98,
    "ratings": {
        "5": 14,
        "4": 1,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 15,
    "support_url": "https://wordpress.org/support/plugin/rock-the-slackbot/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 200,
    "downloaded": 6152,
    "last_updated": "2017-01-10 07:51:00",
    "added": "2015-11-03",
    "homepage": "https://wordpress.org/plugins/rock-the-slackbot/",
    "sections": {
        "description": "<h4>What is Slack?</h4>\n<p><a href=\"https://slack.com/is\" rel=\"nofollow ugc\">Slack</a> is a team collaboration tool that offers chat rooms organized by topic, as well as private groups and direct messaging. It&#8217;s a great way to be productive with your team without clogging up your inbox.</p>\n<h4>What is A Slackbot?</h4>\n<p><a href=\"https://slack.zendesk.com/hc/en-us/articles/202026038-Slackbot-your-assistant-notepad-programmable-bot\" rel=\"nofollow ugc\">Slackbot</a> is Slack&#8217;s built-in robot, which helps us send messages to you and your team inside your Slack account.</p>\n<h4>Why Rock The Slackbot?</h4>\n<p>Because it can help you manage your websites, and stay on top of changes, by sending notifications (following numerous WordPress events) to your Slackbot who will pass them along to a channel or direct message in your Slack account.</p>\n<p><strong>Rock the Slackbot is multisite-friendly.</strong></p>\n<p><strong>Rock the Slackbot sends customizable notifications</strong> for the following events:</p>\n<ul>\n<li>When a post is published</li>\n<li>When a post is unpublished</li>\n<li>When a post is updated</li>\n<li>When a post is deleted</li>\n<li>When a post is trashed</li>\n<li>When a comment is added</li>\n<li>When a comment is approved</li>\n<li>When a comment is unapproved</li>\n<li>When a comment is marked as spam</li>\n<li>When a comment is trashed</li>\n<li>When a 404 error is thrown</li>\n<li>When a menu item is deleted</li>\n<li>When media is added</li>\n<li>When media is edited</li>\n<li>When media is deleted</li>\n<li>When a user is added</li>\n<li>When a user is deleted</li>\n<li>When a user&#8217;s role is changed</li>\n<li>When a plugin, theme, or core update is available</li>\n<li>When a plugin, theme, or core is updated</li>\n</ul>\n<p><strong>I&#8217;m working to add the following events:</strong></p>\n<ul>\n<li>When menu item is added</li>\n<li>When plugins or themes are uploaded</li>\n<li>When plugins or themes are activated</li>\n</ul>\n<p><strong>Each event can be customized to allow you to send different event notifications to different Slack channels</strong>, e.g. you can send core, theme and plugin updates to your &#8220;wp-development&#8221; channel while all of your post changes go to your &#8220;wp-content&#8221; channel.</p>\n<p>Please use <a href=\"https://github.com/bamadesigner/rock-the-slackbot/issues\" rel=\"nofollow ugc\">the Issues section of this plugin&#8217;s GitHub repo</a> to suggest features, like other notification events.</p>\n<p><strong>A Slack account is required to use this plugin</strong> and is free to use for as long as you want and with an unlimited number of people. <a href=\"https://slack.com/\" rel=\"nofollow ugc\">Visit the Slack website</a> to learn more and sign up.</p>\n<h3>Send A Simple Slack Message</h3>\n<p>You can use the following send_webhook_message() function to send a simple message to your Slack account.</p>\n<p><strong>The function accepts the following parameters:</strong></p>\n<ol>\n<li>$webhook_id_or_url &#8211; provide the webhook URL or the ID of one stored in settings</li>\n<li>$message &#8211; the message you want to send</li>\n<li>\n<p>$channel &#8211; OPTIONAL &#8211; the channel you want to send message to. Prefix with # for a specific channel or @ for a specific user. Will use default channel if nothing is passed.</p>\n<p>// Use this function to send a simple message to Slack<br />\nrock_the_slackbot()-&gt;send_webhook_message( &#8216;564d3c1cdf52d&#8217;, &#8216;this is a test&#8217;, &#8216;#testchannel&#8217; );</p>\n<h3>Filters</h3>\n<p>Rock The Slackbot has filters setup to allow you to tweak each WordPress notification before it&#8217;s sent. You can setup a filter for all notifications or drill down by event or specific webhook.</p>\n</li>\n</ol>\n<p><strong>Each notification filter passes three arguments:</strong></p>\n<ol>\n<li>$notification &#8211; an array containing the notification information: webhook URL (the URL for your Slack account) and the payload (all of the information being sent to Slack) for the notification</li>\n<li>$notification_event &#8211; the slug of the notification event\n<ul>\n<li>Will be false if you send a custom Slack notification that doesn&#8217;t involve a WordPress event</li>\n</ul>\n</li>\n<li>$event_args &#8211; an array containing notification event specific information\n<ul>\n<li>Will be false if you send a custom Slack notification that doesn&#8217;t involve a WordPress event</li>\n</ul>\n</li>\n</ol>\n<p><strong>See <em>Notification Events</em> below to learn which information is passed to the filters for each notification event.</strong></p>\n<h4>Filter all WordPress notifications</h4>\n<pre><code>add_filter( 'rock_the_slackbot_notification', 'filter_rock_the_slackbot_notification', 10, 3 );\nfunction filter_rock_the_slackbot_notification( $notification, $notification_event, $event_args ) {\n\n    // Change the pieces\n\n    // Return the notification\n    return $notification;\n}\n</code></pre>\n<h4>Filter WordPress notifications by webhook ID</h4>\n<pre><code>// You can find the ID for each of your webhooks on their edit screen in the admin\nadd_filter( 'rock_the_slackbot_notification_(webhook_id)', 'filter_rock_the_slackbot_notification_webhook', 10, 3 );\nfunction filter_rock_the_slackbot_notification_webhook( $notification, $notification_event, $event_args ) {\n\n  // Change the pieces\n\n  // Return the notification\n  return $notification;\n}\n</code></pre>\n<h4>Filter WordPress notifications by event slug</h4>\n<pre><code>// The event slugs are listed below\nadd_filter( 'rock_the_slackbot_notification_(notification_event)', 'filter_rock_the_slackbot_notification_event', 10, 3 );\nfunction filter_rock_the_slackbot_notification_event( $notification, $notification_event, $event_args ) {\n\n  // Change the pieces\n\n  // Return the notification\n  return $notification;\n}\n</code></pre>\n<h4>Filter all outgoing webhook payloads that are sent to Slack</h4>\n<p>Whether it&#8217;s a WordPress notification or a simple Slack message, all messages to Slack are sent as a payload in an outgoing webhook. This filter allows you to change any payload sent to Slack in an outgoing webhook.</p>\n<pre><code>add_filter( 'rock_the_slackbot_outgoing_webhook_payload', 'filter_rock_the_slackbot_outgoing_webhook_payload', 10, 2 );\nfunction filter_rock_the_slackbot_outgoing_webhook_payload( $payload, $webhook_url ) {\n\n    // Change the payload\n\n    // Return the payload\n    return $notification;\n}&lt;h3&gt;Notification Events&lt;/h3&gt;\n</code></pre>\n<p>Including event specific information passed to filters for each notification event.</p>\n<h4>Content</h4>\n<ul>\n<li>post_published\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was published</li>\n<li>old_post_status &#8211; the status of the post before it was published</li>\n<li>new_post_status &#8211; the current status of the published post</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_unpublished\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was unpublished</li>\n<li>old_post_status &#8211; the status of the post before it was unpublished</li>\n<li>new_post_status &#8211; the current status of the unpublished post</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post_id &#8211; the post ID of the post you updated</li>\n<li>post_before &#8211; the WP_Post object data of the post before it was updated</li>\n<li>post_after &#8211; the WP_Post object data of the post after it was updated</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_deleted\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_trashed\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was trashed</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>is_404\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>url &#8211; the URL that threw the 404 error</li>\n<li>referer &#8211; the HTTP referer (may not always be defined)</li>\n<li>ip_address &#8211; the IP address of the user who visited the URL (may not always be defined)</li>\n<li>user_agent &#8211; the user agent of the user who visited the URL (may not always be defined)</li>\n<li>wp_query &#8211; the WordPress query variables</li>\n<li>mysql_request &#8211; the MySQL query request</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Menus</h4>\n<ul>\n<li>menu_item_deleted\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>menu &#8211; the WP_Post object data of the menu that held the menu item</li>\n<li>menu_item_id &#8211; the post ID of the menu item that was deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Media</h4>\n<ul>\n<li>add_attachment\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>attachment_post &#8211; the WP_Post object data for the attachment you added</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>edit_attachment\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>attachment_post &#8211; the WP_Post object data for the attachment you edited</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>delete_attachment\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>attachment_post &#8211; the WP_Post object data for the attachment you deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Users</h4>\n<ul>\n<li>user_added\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>user &#8211; the WP_User data for the user you added</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>user_deleted\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>user &#8211; the WP_User data for the user you deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>set_user_role\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>user &#8211; the WP_User data for the user whose role was changed</li>\n<li>current_user_roles &#8211; the current user roles for the user whose role was changed</li>\n<li>old_user_roles &#8211; the old user roles for the user whose role was changed</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Updates</h4>\n<ul>\n<li>core_update_available\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>current_version &#8211; the current version number of WordPress core</li>\n<li>new_version &#8211; the version number for the WordPress core update</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>core_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>current_version &#8211; the current version number of WordPress core after the update</li>\n<li>old_version &#8211; the old version number for WordPress core before the update</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>plugin_update_available\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>plugins &#8211; includes an array of the plugins who have updates available</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>plugin_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>plugin &#8211; includes an array of the plugin(s) that were updated</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>theme_update_available\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>themes &#8211; includes an array of the themes who have updates available</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>theme_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>theme &#8211; includes an array of the theme(s) that were updated</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Filter Examples</h3>\n<p>You can use a filter to change the Slack notification to go to a different Slack channel according to post information, like the post category:</p>\n<pre><code>add_filter( 'rock_the_slackbot_notification', 'filter_rock_the_slackbot_notification', 10, 3 );\nfunction filter_rock_the_slackbot_notification( $notification, $notification_event, $event_args ) {\n\n   // Only run filter for specific events\n   switch ( $notification_event ) {\n\n       // This way you can set which events you want to use\n       case 'post_published':\n       case 'post_unpublished':\n       case 'post_updated':\n       case 'post_deleted':\n       case 'post_trashed':\n\n           // Get category names\n           $categories = wp_get_post_categories( $event_args[ 'post_id' ], array( 'fields' =&gt; 'names' ) );\n\n           // Replace 'CategoryName' with the category you're looking for\n           if ( in_array( 'CategoryName', $categories ) ) {\n\n               // Change the channel in the payload\n               // Make sure you prefix the channel name with #\n               $notification[ 'payload' ][ 'channel' ] = '#newchannel';\n\n           }\n           break;\n   }\n\n   // Return the notification\n   return $notification;\n}\n</code></pre>\n",
        "installation": "<ol>\n<li>Upload &#8216;rock-the-slackbot&#8217; to the &#8216;/wp-content/plugins/&#8217; directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Go to Tools &gt; Rock The Slackbot</li>\n</ol>\n",
        "changelog": "<h4>1.1.2</h4>\n<ul>\n<li>You can now cancel sending the notification by returning false to &#8220;rock_the_slackbot_notification&#8221; or &#8220;rock_the_slackbot_outgoing_webhook_payload&#8221; filter.</li>\n<li>Added &#8220;When Slack Notifications Fail&#8221; setting so users can control whether or not emails are sent when Slack notifications fail.</li>\n<li>Added &#8216;rock_the_slackbot_error_email&#8217; filter which allows you to customize the error &#8220;didn&#8217;t send to Slack&#8221; email.</li>\n<li>Added notifications for &#8216;When a post is drafted&#8217;, &#8216;When a post is pending review&#8217;, and &#8216;When a post is scheduled&#8217;.</li>\n<li>Added notifications for when a comment is added, approved, unapproved, marked as spam, and trashed.</li>\n<li>Fixed issue where channel had to be set for messages to send.</li>\n<li>Added translations for English (Australia), French (France), German, Portuguese (Brazil), and Spanish (Spain).</li>\n<li>Added messaging to clarify use of WordPress icon in Slack messages.</li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>Added process to test webhook URL on settings page.</li>\n<li>Can now send the same notification to multiple Slack channels.</li>\n<li>Added event-specific information to go with each filter.</li>\n<li>Created rock_the_slackbot()-&gt;send_webhook_message() to make it easy for users to send simple, custom messages to Slack via webhook.</li>\n<li>Updated the notification filters so they include the notification pieces, the slug of the notification event, and event specific information so you can make adjustments according to the event.</li>\n<li>Fixed bug where filters weren&#8217;t &#8220;inheriting&#8221; each other.</li>\n<li>Added &#8216;rock_the_slackbot_outgoing_webhook_payload&#8217; filter which allows you to change any payload sent to Slack in an outgoing webhook.</li>\n<li>Fixed where the webhook URL wasn&#8217;t being sent to the filters.</li>\n<li>If you use send_notification() from the Rock_The_Slackbot_Notifications class, that class has been heavily changed. You can now use rock_the_slackbot()-&gt;send_webhook_message() to send a custom message.</li>\n</ul>\n<h4>1.1.0</h4>\n<ul>\n<li>Rock The Slackbot is now multisite compatible!</li>\n<li>Setup Slack notification when a plugin, theme, or core update is available &#8211; will need to enable</li>\n<li>Setup Slack notification when a user&#8217;s role has changed &#8211; will need to enable</li>\n<li>Adding wp_get_referer(), IP address, and HTTP_USER_AGENT fields to the 404 notification.</li>\n</ul>\n<h4>1.0.0</h4>\n<p>Plugin launch</p>\n"
    },
    "short_description": "Rock The Slackbot helps you stay on top of changes by sending notifications straight to you and your team inside your Slack account.",
    "description": "<h4>What is Slack?</h4>\n<p><a href=\"https://slack.com/is\" rel=\"nofollow ugc\">Slack</a> is a team collaboration tool that offers chat rooms organized by topic, as well as private groups and direct messaging. It&#8217;s a great way to be productive with your team without clogging up your inbox.</p>\n<h4>What is A Slackbot?</h4>\n<p><a href=\"https://slack.zendesk.com/hc/en-us/articles/202026038-Slackbot-your-assistant-notepad-programmable-bot\" rel=\"nofollow ugc\">Slackbot</a> is Slack&#8217;s built-in robot, which helps us send messages to you and your team inside your Slack account.</p>\n<h4>Why Rock The Slackbot?</h4>\n<p>Because it can help you manage your websites, and stay on top of changes, by sending notifications (following numerous WordPress events) to your Slackbot who will pass them along to a channel or direct message in your Slack account.</p>\n<p><strong>Rock the Slackbot is multisite-friendly.</strong></p>\n<p><strong>Rock the Slackbot sends customizable notifications</strong> for the following events:</p>\n<ul>\n<li>When a post is published</li>\n<li>When a post is unpublished</li>\n<li>When a post is updated</li>\n<li>When a post is deleted</li>\n<li>When a post is trashed</li>\n<li>When a comment is added</li>\n<li>When a comment is approved</li>\n<li>When a comment is unapproved</li>\n<li>When a comment is marked as spam</li>\n<li>When a comment is trashed</li>\n<li>When a 404 error is thrown</li>\n<li>When a menu item is deleted</li>\n<li>When media is added</li>\n<li>When media is edited</li>\n<li>When media is deleted</li>\n<li>When a user is added</li>\n<li>When a user is deleted</li>\n<li>When a user&#8217;s role is changed</li>\n<li>When a plugin, theme, or core update is available</li>\n<li>When a plugin, theme, or core is updated</li>\n</ul>\n<p><strong>I&#8217;m working to add the following events:</strong></p>\n<ul>\n<li>When menu item is added</li>\n<li>When plugins or themes are uploaded</li>\n<li>When plugins or themes are activated</li>\n</ul>\n<p><strong>Each event can be customized to allow you to send different event notifications to different Slack channels</strong>, e.g. you can send core, theme and plugin updates to your &#8220;wp-development&#8221; channel while all of your post changes go to your &#8220;wp-content&#8221; channel.</p>\n<p>Please use <a href=\"https://github.com/bamadesigner/rock-the-slackbot/issues\" rel=\"nofollow ugc\">the Issues section of this plugin&#8217;s GitHub repo</a> to suggest features, like other notification events.</p>\n<p><strong>A Slack account is required to use this plugin</strong> and is free to use for as long as you want and with an unlimited number of people. <a href=\"https://slack.com/\" rel=\"nofollow ugc\">Visit the Slack website</a> to learn more and sign up.</p>\n<h3>Send A Simple Slack Message</h3>\n<p>You can use the following send_webhook_message() function to send a simple message to your Slack account.</p>\n<p><strong>The function accepts the following parameters:</strong></p>\n<ol>\n<li>$webhook_id_or_url &#8211; provide the webhook URL or the ID of one stored in settings</li>\n<li>$message &#8211; the message you want to send</li>\n<li>\n<p>$channel &#8211; OPTIONAL &#8211; the channel you want to send message to. Prefix with # for a specific channel or @ for a specific user. Will use default channel if nothing is passed.</p>\n<p>// Use this function to send a simple message to Slack<br />\nrock_the_slackbot()-&gt;send_webhook_message( &#8216;564d3c1cdf52d&#8217;, &#8216;this is a test&#8217;, &#8216;#testchannel&#8217; );</p>\n<h3>Filters</h3>\n<p>Rock The Slackbot has filters setup to allow you to tweak each WordPress notification before it&#8217;s sent. You can setup a filter for all notifications or drill down by event or specific webhook.</p>\n</li>\n</ol>\n<p><strong>Each notification filter passes three arguments:</strong></p>\n<ol>\n<li>$notification &#8211; an array containing the notification information: webhook URL (the URL for your Slack account) and the payload (all of the information being sent to Slack) for the notification</li>\n<li>$notification_event &#8211; the slug of the notification event\n<ul>\n<li>Will be false if you send a custom Slack notification that doesn&#8217;t involve a WordPress event</li>\n</ul>\n</li>\n<li>$event_args &#8211; an array containing notification event specific information\n<ul>\n<li>Will be false if you send a custom Slack notification that doesn&#8217;t involve a WordPress event</li>\n</ul>\n</li>\n</ol>\n<p><strong>See <em>Notification Events</em> below to learn which information is passed to the filters for each notification event.</strong></p>\n<h4>Filter all WordPress notifications</h4>\n<pre><code>add_filter( 'rock_the_slackbot_notification', 'filter_rock_the_slackbot_notification', 10, 3 );\nfunction filter_rock_the_slackbot_notification( $notification, $notification_event, $event_args ) {\n\n    // Change the pieces\n\n    // Return the notification\n    return $notification;\n}\n</code></pre>\n<h4>Filter WordPress notifications by webhook ID</h4>\n<pre><code>// You can find the ID for each of your webhooks on their edit screen in the admin\nadd_filter( 'rock_the_slackbot_notification_(webhook_id)', 'filter_rock_the_slackbot_notification_webhook', 10, 3 );\nfunction filter_rock_the_slackbot_notification_webhook( $notification, $notification_event, $event_args ) {\n\n  // Change the pieces\n\n  // Return the notification\n  return $notification;\n}\n</code></pre>\n<h4>Filter WordPress notifications by event slug</h4>\n<pre><code>// The event slugs are listed below\nadd_filter( 'rock_the_slackbot_notification_(notification_event)', 'filter_rock_the_slackbot_notification_event', 10, 3 );\nfunction filter_rock_the_slackbot_notification_event( $notification, $notification_event, $event_args ) {\n\n  // Change the pieces\n\n  // Return the notification\n  return $notification;\n}\n</code></pre>\n<h4>Filter all outgoing webhook payloads that are sent to Slack</h4>\n<p>Whether it&#8217;s a WordPress notification or a simple Slack message, all messages to Slack are sent as a payload in an outgoing webhook. This filter allows you to change any payload sent to Slack in an outgoing webhook.</p>\n<pre><code>add_filter( 'rock_the_slackbot_outgoing_webhook_payload', 'filter_rock_the_slackbot_outgoing_webhook_payload', 10, 2 );\nfunction filter_rock_the_slackbot_outgoing_webhook_payload( $payload, $webhook_url ) {\n\n    // Change the payload\n\n    // Return the payload\n    return $notification;\n}&lt;h3&gt;Notification Events&lt;/h3&gt;\n</code></pre>\n<p>Including event specific information passed to filters for each notification event.</p>\n<h4>Content</h4>\n<ul>\n<li>post_published\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was published</li>\n<li>old_post_status &#8211; the status of the post before it was published</li>\n<li>new_post_status &#8211; the current status of the published post</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_unpublished\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was unpublished</li>\n<li>old_post_status &#8211; the status of the post before it was unpublished</li>\n<li>new_post_status &#8211; the current status of the unpublished post</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post_id &#8211; the post ID of the post you updated</li>\n<li>post_before &#8211; the WP_Post object data of the post before it was updated</li>\n<li>post_after &#8211; the WP_Post object data of the post after it was updated</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_deleted\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>post_trashed\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>post &#8211; the WP_Post object data of the post that was trashed</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>is_404\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>url &#8211; the URL that threw the 404 error</li>\n<li>referer &#8211; the HTTP referer (may not always be defined)</li>\n<li>ip_address &#8211; the IP address of the user who visited the URL (may not always be defined)</li>\n<li>user_agent &#8211; the user agent of the user who visited the URL (may not always be defined)</li>\n<li>wp_query &#8211; the WordPress query variables</li>\n<li>mysql_request &#8211; the MySQL query request</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Menus</h4>\n<ul>\n<li>menu_item_deleted\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>menu &#8211; the WP_Post object data of the menu that held the menu item</li>\n<li>menu_item_id &#8211; the post ID of the menu item that was deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Media</h4>\n<ul>\n<li>add_attachment\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>attachment_post &#8211; the WP_Post object data for the attachment you added</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>edit_attachment\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>attachment_post &#8211; the WP_Post object data for the attachment you edited</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>delete_attachment\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>attachment_post &#8211; the WP_Post object data for the attachment you deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Users</h4>\n<ul>\n<li>user_added\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>user &#8211; the WP_User data for the user you added</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>user_deleted\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>user &#8211; the WP_User data for the user you deleted</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>set_user_role\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>user &#8211; the WP_User data for the user whose role was changed</li>\n<li>current_user_roles &#8211; the current user roles for the user whose role was changed</li>\n<li>old_user_roles &#8211; the old user roles for the user whose role was changed</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4>Updates</h4>\n<ul>\n<li>core_update_available\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>current_version &#8211; the current version number of WordPress core</li>\n<li>new_version &#8211; the version number for the WordPress core update</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>core_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>current_version &#8211; the current version number of WordPress core after the update</li>\n<li>old_version &#8211; the old version number for WordPress core before the update</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>plugin_update_available\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>plugins &#8211; includes an array of the plugins who have updates available</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>plugin_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>plugin &#8211; includes an array of the plugin(s) that were updated</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>theme_update_available\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>themes &#8211; includes an array of the themes who have updates available</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>theme_updated\n<ul>\n<li><strong>Passed To Filters</strong>\n<ul>\n<li>theme &#8211; includes an array of the theme(s) that were updated</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>Filter Examples</h3>\n<p>You can use a filter to change the Slack notification to go to a different Slack channel according to post information, like the post category:</p>\n<pre><code>add_filter( 'rock_the_slackbot_notification', 'filter_rock_the_slackbot_notification', 10, 3 );\nfunction filter_rock_the_slackbot_notification( $notification, $notification_event, $event_args ) {\n\n   // Only run filter for specific events\n   switch ( $notification_event ) {\n\n       // This way you can set which events you want to use\n       case 'post_published':\n       case 'post_unpublished':\n       case 'post_updated':\n       case 'post_deleted':\n       case 'post_trashed':\n\n           // Get category names\n           $categories = wp_get_post_categories( $event_args[ 'post_id' ], array( 'fields' =&gt; 'names' ) );\n\n           // Replace 'CategoryName' with the category you're looking for\n           if ( in_array( 'CategoryName', $categories ) ) {\n\n               // Change the channel in the payload\n               // Make sure you prefix the channel name with #\n               $notification[ 'payload' ][ 'channel' ] = '#newchannel';\n\n           }\n           break;\n   }\n\n   // Return the notification\n   return $notification;\n}\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/rock-the-slackbot.1.1.2.zip",
    "upgrade_notice": {
        "1.1.2": "<ul>\n<li>You can now cancel sending the notification by returning false to &quot;rock_the_slackbot_notification&quot; or &quot;rock_the_slackbot_outgoing_webhook_payload&quot; filter.</li>\n<li>Added &quot;When Slack Notifications Fail&quot; setting so users can control whether or not emails are sent when Slack notifications fail.</li>\n<li>Added &#039;rock_the_slackbot_error_email&#039; filter which allows you to customize the error &quot;didn&#039;t send to Slack&quot; email.</li>\n<li>Added notifications for &#039;When a post is drafted&#039;, &#039;When a post is pending review&#039;, and &#039;When a post is scheduled&#039;.</li>\n<li>Added notifications for when a comment is added, approved, unapproved, marked as spam, and trashed.</li>\n<li>Fixed issue where channel had to be set for messages to send.</li>\n<li>Added translations for English (Australia), French (France), German, Portuguese (Brazil), and Spanish (Spain).</li>\n<li>Added messaging to clarify use of WordPress icon in Slack messages.</li>\n</ul>",
        "1.1.1": "<ul>\n<li>Added process to test webhook URL on settings page.</li>\n<li>Can now send the same notification to multiple Slack channels.</li>\n<li>Added event-specific information to go with each filter.</li>\n<li>Created rock_the_slackbot()-&gt;send_webhook_message() to make it easy for users to send simple, custom messages to Slack via webhook.</li>\n<li>Updated the notification filters so they include the notification pieces, the slug of the notification event, and event specific information so you can make adjustments according to the event.</li>\n<li>Fixed bug where filters weren&#039;t &quot;inheriting&quot; each other.</li>\n<li>Added &#039;rock_the_slackbot_outgoing_webhook_payload&#039; filter which allows you to change any payload sent to Slack in an outgoing webhook.</li>\n<li>Fixed where the webhook URL wasn&#039;t being sent to the filters.</li>\n<li>If you use send_notification() from the Rock_The_Slackbot_Notifications class, that class has been heavily changed. You can now use rock_the_slackbot()-&gt;send_webhook_message() to send a custom message.</li>\n</ul>",
        "1.1.0": "<ul>\n<li>Rock The Slackbot is now multisite compatible!</li>\n<li>Setup Slack notification when a plugin, theme, or core update is available - will need to enable</li>\n<li>Setup Slack notification when a user&#039;s role has changed - will need to enable</li>\n<li>Adding wp_get_referer(), IP address, and HTTP_USER_AGENT fields to the 404 notification.</li>\n</ul>"
    },
    "screenshots": [],
    "tags": {
        "chat": "chat",
        "collaboration": "collaboration",
        "notification": "notification",
        "slack": "slack",
        "slackbot": "slackbot"
    },
    "stable_tag": "1.1.2",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/rock-the-slackbot.1.0.0.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/rock-the-slackbot.1.1.0.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/rock-the-slackbot.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/rock-the-slackbot.1.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/rock-the-slackbot.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=ZCAN2UX7QHZPL&lc=US&item_name=Rachel%20Carden%20%28Rock%20The%20Slackbot%29&currency_code=USD&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted",
    "banners": {
        "low": "https://ps.w.org/rock-the-slackbot/assets/banner-772x250.png?rev=1278286",
        "high": "https://ps.w.org/rock-the-slackbot/assets/banner-1544x500.png?rev=1278286"
    },
    "icons": {
        "1x": "https://ps.w.org/rock-the-slackbot/assets/icon-128x128.png?rev=1278291",
        "2x": "https://ps.w.org/rock-the-slackbot/assets/icon-256x256.png?rev=1278291"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 98,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "rock-the-slackbot",
            "language": "en_NZ",
            "version": "1.1.2",
            "updated": "2017-01-10 08:25:42",
            "package": "http://downloads.wordpress.org/translation/plugin/rock-the-slackbot/1.1.2/en_NZ.zip"
        },
        {
            "type": "plugin",
            "slug": "rock-the-slackbot",
            "language": "en_AU",
            "version": "1.1.2",
            "updated": "2017-01-29 13:01:03",
            "package": "http://downloads.wordpress.org/translation/plugin/rock-the-slackbot/1.1.2/en_AU.zip"
        }
    ]
}