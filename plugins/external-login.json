{
    "name": "External Login",
    "slug": "external-login",
    "version": "1.11.2",
    "author": "<a href=\"http://tom.benyon.io\">Tom Benyon</a>",
    "author_profile": "https://profiles.wordpress.org/tbenyon/",
    "contributors": {
        "tbenyon": {
            "profile": "https://profiles.wordpress.org/tbenyon/",
            "avatar": "https://secure.gravatar.com/avatar/f99aafdd58d61d7868927f5eef3f5a9a?s=96&d=monsterid&r=g",
            "display_name": "tbenyon"
        }
    },
    "requires": "4.6",
    "tested": "5.6.14",
    "requires_php": "5.6.34",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 38,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 38,
    "support_url": "https://wordpress.org/support/plugin/external-login/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 4000,
    "downloaded": 19799,
    "last_updated": "2021-02-07 12:01:00",
    "added": "2018-02-04",
    "homepage": "http://tom.benyon.io/plugins/external-login",
    "sections": {
        "description": "<p>External Login allows you to login to your WordPress site using an &#8216;external database&#8217; instead of the WordPress database. This means if you already have a login system you can integrate that into your WordPress site. The &#8216;external database&#8217; that you would like to use does not have to be a WordPress database.</p>\n<p>The plugin will re-create users in the WordPress database which has has two benefits:<br />\n    1. It will allow you to use WordPress correctly with other plugins that require a named user to be logged in.<br />\n    2. If the &#8216;external database&#8217; is not available, you can allow the plugin to log them in with the local WordPress version of their user.</p>\n<h3>Features</h3>\n<ul>\n<li>Use your current table of users in a different database to login to WordPress</li>\n<li>Map the names for your database fields against the required WordPress fields</li>\n<li>Map roles from your &#8216;external database&#8217; to those found in WordPress e.g. a student in the &#8216;external database&#8217; becomes an editor in the WordPress database.</li>\n<li>Every time a user logs in, their WordPress user will be updated with the details from the &#8216;external database&#8217;.</li>\n<li>Exclude certain users from accessing the WordPress admin area based on any field in the Users table on the External Database</li>\n<li>Ability to fall back to the generated WordPress user for login if the &#8216;external database&#8217; is unavailable.</li>\n<li>Block users based on their role</li>\n<li>Block a user based on any field in your users table</li>\n<li>Redirect the user after being successfully authenticated</li>\n<li>Support for different database types:\n<ul>\n<li>MySQL</li>\n<li>PostgreSQL</li>\n<li>Microsoft SQL</li>\n</ul>\n</li>\n<li>Many password hashing methods are supported including:\n<ul>\n<li>bcrypt</li>\n<li>md2</li>\n<li>md4</li>\n<li>md5</li>\n<li>sha1</li>\n<li>sha256</li>\n<li>sha384</li>\n<li>sha512</li>\n<li>no hashing</li>\n<li>and more&#8230;</li>\n</ul>\n</li>\n<li>Support for separate password salts for each password</li>\n<li>Support for one salt for all passwords</li>\n<li>Support for salts being prepended or appended to the password</li>\n<li>Test the connection in the settings menu to make sure your data is being pulled correctly</li>\n<li>Option to delete plugin data on plugin deactivation</li>\n</ul>\n<h3>Is this plugin what I need?</h3>\n<p>To give an idea of whether this plugin does the job you need it to, here is the basic logic flow:<br />\n1. User logs in to the normal WordPress login screen.<br />\n2. We hash the users password with the method and salt (if given) that is chosen in the settings<br />\n3. We so a simple SQL query to the external database to see if their username and the hashed password match a user.<br />\n4. We create or update the details of the new user.<br />\n5. We log that user in<br />\n6. When the user logs out of WordPress the WordPress session ends</p>\n<p>Please note that this system is built for the login process to be a completely different login process to anything else.<br />\nIf you are looking for Single Sign On (log in to one website and you&#8217;re logged in else where) you should be looking for a OAuth solution in my opinion.</p>\n<h3>FUNCTIONALITY WARNINGS AND LIMITATIONS</h3>\n<ol>\n<li>ALWAYS take a backup of your database and test the functionality before using this plugin in production.</li>\n<li>Users created in WordPress will be overwritten if users in the external database have the same username. This could be fixed by appending usernames with a separate string.</li>\n<li>Edits to a user made in WordPress will be overwritten when the user logs back in with the &#8216;external database&#8217;. This is only the case for fields that are being pulled from the external database.</li>\n</ol>\n<h3>Security Notes</h3>\n<p><strong>Database User</strong><br />\nIt is recommended that you create a new Database user to access the external database. This way you can set appropriate permissions to the user so that they do not have write access.</p>\n<p><strong>Hashing</strong><br />\nFor the security of your users, your &#8216;external database&#8217; should be hashing your users passwords. Although support is given for other hashing methods, &#8216;bcrypt&#8217; is advised as it uses SLOW hashing. Without this it would be far easier for someone to derive your users password through a brute force attack if they gained access to your database.</p>\n<p>It is also highly recommended that a salt is used. This is done by default with &#8216;bcrypt&#8217;. Using one salt for all passwords is supported but it is recommended to use a separate salt for each password as a different field in your database. This helps prevent the use of &#8216;rainbow tables&#8217; to derive your users passwords.</p>\n<p>For explanation and more information on this I recommend <a href=\"https://martinfowler.com/articles/web-security-basics.html\" rel=\"nofollow ugc\">this article</a> starting from the section &#8220;Hash and Salt Your Users&#8217; Passwords&#8221;.</p>\n<p><strong>Storing Settings in wp-config.php</strong><br />\nYou may prefer to store your settings in &#8216;wp-config.php&#8217;. This could have security benefits, so long as you are careful not to store your code in a publicly accessible repository and you ensure your wp-config file cannot be accessed on the server.</p>\n<p>Below is an example of code that can be added to &#8216;wp-config.php&#8217;.</p>\n<pre><code>// ** EXTERNAL LOGIN SETTINGS ** //\n/** EXLOG - The External Database Name */\ndefine('EXTERNAL_LOGIN_OPTION_DB_NAME', 'dojo2016');\n\n/** EXLOG - The External Database Host */\ndefine('EXTERNAL_LOGIN_OPTION_DB_HOST', 'localhost');\n\n/** EXLOG - The External Database Port */\ndefine('EXTERNAL_LOGIN_OPTION_DB_PORT', '3306');\n\n/** EXLOG - The External Database Username */\ndefine('EXTERNAL_LOGIN_OPTION_DB_USERNAME', 'root');\n\n/** EXLOG - The External Database Password */\ndefine('EXTERNAL_LOGIN_OPTION_DB_PASSWORD', 'root');\n\n/** EXLOG - The External Database Type */\ndefine('EXTERNAL_LOGIN_OPTION_DB_TYPE', 'mysql');\n\n/** EXLOG - Password Salt */\ndefine('EXTERNAL_LOGIN_OPTION_DB_SALT', 'ksjefh2lkrh2r2oh23');\n</code></pre>\n<p>You can of course set these with environment variables if you wish in the following way:</p>\n<pre><code>/** EXLOG - The External Database Name */\ndefine('EXTERNAL_LOGIN_OPTION_DB_NAME', getenv('MY_EXLOG_DB_NAME_ENVIRONMENT_VARIABLE'));\n</code></pre>\n<p>All settings (except from those mapping roles) can currently be set this way. For a full list and possible settings see the &#8220;FAQ&#8221; question &#8211; &#8220;What values can I set in wp-config.php?&#8221;.</p>\n<h3>Special Thanks</h3>\n<p>A special thank you to Ben Lobaugh for a <a href=\"https://ben.lobaugh.net/blog/7175/wordpress-replace-built-in-user-authentication\" rel=\"nofollow ugc\">great article</a> which I used heavily for this plugin.</p>\n<h3>DONATE</h3>\n<p>Like the plugin and want to <a href=\"https://www.paypal.me/tombenyon\" rel=\"nofollow ugc\">buy me a beer</a>? Well, thank you!</p>\n",
        "installation": "<ol>\n<li>Install the plugin through the WordPress plugins screen directly, or upload the plugin files to the <code>/wp-content/plugins/external-login</code> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress</li>\n<li>Take a backup of your WordPress Database</li>\n<li>Access the plugin settings by clicking the link on the plugins page or via wp-admin -&gt; settings -&gt; External Login (see first screenshot).</li>\n<li>Begin to fill out the settings page.</li>\n<li>BEFORE TICKING THE &#8216;Enable External Login&#8217; BOX &#8211; Test the connection using the &#8220;Test&#8221; button.</li>\n</ol>\n",
        "faq": "\n<dt id='how%20does%20the%20plugin%20log%20someone%20in%3F'>\nHow does the plugin log someone in?\n</h4>\n<p>\n<p>To give an idea of whether this plugin does the job you need it to, here is the basic logic flow:<br />\n1. User logs in using the normal WordPress login screen.<br />\n2. We hash the users password with the method and salt (if given) that is chosen in the settings<br />\n3. We do a simple database query to the external database to see if their username and the hashed password match a user.<br />\n4. We create or update the details of the new user.<br />\n5. We log that user in<br />\n6. When the user logs out of WordPress, the WordPress session ends</p>\n<p>Please note that this system is built for the login process to be a completely different login process to anything else.<br />\nIf you are looking for Single Sign On (log in to one website and you&#8217;re logged in else where) you should be looking for an OAuth solution in my opinion.</p>\n</p>\n<dt id='how%20do%20i%20add%20a%20port%20to%20the%20database%20connection%3F'>\nHow do I add a port to the database connection?\n</h4>\n<p>\n<p>For ports that differ the standard 3306, add them to the end of the host separated by a colon eg: &#8216;localhost:3306&#8217;.</p>\n</p>\n<dt id='what%20hashes%20are%20available%20and%20which%20does%20my%20external%20database%20use%3F'>\nWhat hashes are available and which does my external database use?\n</h4>\n<p>\n<p>Below is a list of the available hashing options. Within each there are examples of what the hashed string might look like.</p>\n<ul>\n<li>bcrypt\n<ul>\n<li>$2b$10$MaTFwF7Ov2JRTTPnV.I4X.q0KQ3VVAiwTzULlPnBYeSBkBztnXfJO</li>\n<li>$2y$10$fEg5j9N5zrrqq9Bjm7yoB.Xprd9iZZfO3pgHZNl0FiLMnqMDlSQh.</li>\n<li>$2a$06$qAOKdDYnSWcSp6UI1Hpkau/8sRfsvahYvRPq5vpDxMRMzPdQNGw8m</li>\n</ul>\n</li>\n<li>phpass\n<ul>\n<li>$P$BEldufbwSc73mu/epnZsHmmnX7/.Ni0</li>\n</ul>\n</li>\n<li>phpcrypt\n<ul>\n<li>This is for use with other algorithms that store the algorithm, salt and hash in the same field in the external databse. These are:\n<ul>\n<li>Standard DES:\n<ul>\n<li>rl.3StKT.4T8M</li>\n</ul>\n</li>\n<li>Extended DES:\n<ul>\n<li>_J9..rasmBYk8r9AiWNc</li>\n</ul>\n</li>\n<li>MD5:\n<ul>\n<li>$1$rasmusle$rISCgZzpwk3UhDidwXvin0</li>\n</ul>\n</li>\n<li>Blowfish:\n<ul>\n<li>$2a$07$usesomesillystringfore2uDLvp1Ii2e./U9C8sBjqp8I90dH6hi</li>\n</ul>\n</li>\n<li>SHA-256:\n<ul>\n<li>$5$rounds=5000$usesomesillystri$KqJWpanXZHKq2BOB43TSaYhEWsQ1Lr5QNyPCDH/Tp.6</li>\n</ul>\n</li>\n<li>SHA-512:\n<ul>\n<li>$6$rounds=5000$usesomesillystri$D4IrlXatmP7rx3P3InaxBeoomnAihCKRVQP22JZ6EY47Wc6BkroIuUUBOov1i.S5KPgErtP/EN5mcO.ChWQW21</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>md2\n<ul>\n<li>f03881a88c6e39135f0ecc60efd609b9</li>\n</ul>\n</li>\n<li>md4\n<ul>\n<li>8a9d093f14f8701df17732b2bb182c74</li>\n</ul>\n</li>\n<li>md5\n<ul>\n<li>5f4dcc3b5aa765d61d8327deb882cf99</li>\n</ul>\n</li>\n<li>sha1\n<ul>\n<li>5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8</li>\n</ul>\n</li>\n<li>sha256\n<ul>\n<li>5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8</li>\n</ul>\n</li>\n<li>sha384\n<ul>\n<li>9c1565e99afa2ce7800e96a73c125363c06697c5674d59f227b3368fd00b85ead506eefa90702673d873cb2c9357eafc</li>\n</ul>\n</li>\n<li>sha512\n<ul>\n<li>b109f3bbbc244eb82441917ed06d618b9008dd09b3befd1b5e07394c706a8bb980b1d7785e5976ec049b46df5f1326af5a2ea6d103fd07c95385ffab0cacbc86</li>\n</ul>\n</li>\n<li>ripemd128\n<ul>\n<li>c9c6d316d6dc4d952a789fd4b8858ed7</li>\n</ul>\n</li>\n<li>ripemd160\n<ul>\n<li>2c08e8f5884750a7b99f6f2f342fc638db25ff31</li>\n</ul>\n</li>\n<li>ripemd256\n<ul>\n<li>f94cf96c79103c3ccad10d308c02a1db73b986e2c48962e96ecd305e0b80ef1b</li>\n</ul>\n</li>\n<li>ripemd320\n<ul>\n<li>c571d82e535de67ff5f87e417b3d53125f2d83ed7598b89d74483e6c0dfe8d86e88b380249fc8fb4</li>\n</ul>\n</li>\n<li>whirlpool\n<ul>\n<li>74dfc2b27acfa364da55f93a5caee29ccad3557247eda238831b3e9bd931b01d77fe994e4f12b9d4cfa92a124461d2065197d8cf7f33fc88566da2db2a4d6eae</li>\n</ul>\n</li>\n<li>tiger128,3\n<ul>\n<li>d476a6b8b5c35ce912781497d02d09fa</li>\n</ul>\n</li>\n<li>tiger160,3\n<ul>\n<li>d476a6b8b5c35ce912781497d02d09faeb8aa05a</li>\n</ul>\n</li>\n<li>tiger192,3\n<ul>\n<li>d476a6b8b5c35ce912781497d02d09faeb8aa05a489223f5</li>\n</ul>\n</li>\n<li>tiger128,4\n<ul>\n<li>b1e057f1b2e82506f13d4d43fd17d8b8</li>\n</ul>\n</li>\n<li>tiger160,4\n<ul>\n<li>b1e057f1b2e82506f13d4d43fd17d8b843e173a8</li>\n</ul>\n</li>\n<li>tiger192,4\n<ul>\n<li>b1e057f1b2e82506f13d4d43fd17d8b843e173a8a1ea3f7c</li>\n</ul>\n</li>\n<li>snefru\n<ul>\n<li>8ec80c31fab12b5f7930e6c9288c3076852aeef8f560a9ed91fb2e33838e6871</li>\n</ul>\n</li>\n<li>gost\n<ul>\n<li>db4d9992897eda89b50f1d3208db607902da7e79c6f3bc6e6933cc5919068564</li>\n</ul>\n</li>\n<li>adler32\n<ul>\n<li>0f910374</li>\n</ul>\n</li>\n<li>crc32\n<ul>\n<li>35c246d5</li>\n</ul>\n</li>\n<li>crc32b\n<ul>\n<li>4fa7edbb</li>\n</ul>\n</li>\n<li>haval128,3\n<ul>\n<li>2221b19499669a2da53c49caf3c5e5be</li>\n</ul>\n</li>\n<li>haval160,3\n<ul>\n<li>9e997134ef585a1b143574ddc38cb8617c597230</li>\n</ul>\n</li>\n<li>haval192,3\n<ul>\n<li>d8d7e2b0c045418daf3e696f1c819f3da8b751fb539780a0</li>\n</ul>\n</li>\n<li>haval224,3\n<ul>\n<li>46f2dff67ec34847e71128386569438e9186f9b0f993f77c06f4794e</li>\n</ul>\n</li>\n<li>haval256,3\n<ul>\n<li>502ef024050f4b58d9cdf57b9d1e847ca53b7cdbbbe31071bb2f2176824ca4aa</li>\n</ul>\n</li>\n<li>haval128,4\n<ul>\n<li>a2ac4348ff7caf14d2a16a9bb207315a</li>\n</ul>\n</li>\n<li>haval160,4\n<ul>\n<li>757921aaa14a05363dd9bea6a5cafa622333d191</li>\n</ul>\n</li>\n<li>haval192,4\n<ul>\n<li>7670901e6a800b1787e08555e62ae0e68310b0d66e3ad4d4</li>\n</ul>\n</li>\n<li>haval224,4\n<ul>\n<li>5857f727b00252f6bd7abf6569d658bdab66003407b6db8989805a03</li>\n</ul>\n</li>\n<li>haval256,4\n<ul>\n<li>68e61bcce9204cf87e8c7563bd32074124205299d43205d1a086d3566adda324</li>\n</ul>\n</li>\n<li>haval128,5\n<ul>\n<li>9bec7b503c2680c94cefcadee5c72c93</li>\n</ul>\n</li>\n<li>haval160,5\n<ul>\n<li>756700c90d00421529549def07a3512b258c42f4</li>\n</ul>\n</li>\n<li>haval192,5\n<ul>\n<li>e7218675e85e01c85cc196ab4aabc99cc218749b7944a788</li>\n</ul>\n</li>\n<li>haval224,5\n<ul>\n<li>b21cbe5ac421cce98ee10a5d2f65607d59095c3777de339c1e978efd</li>\n</ul>\n</li>\n<li>haval256,5\n<ul>\n<li>a7dac1b901376073284fbe145b37ffe6bcf6fc1ae94728186939ce91bcf73e51</li>\n</ul>\n</li>\n<li>none</li>\n</ul>\n</p>\n<dt id='my%20plugin%20uses%20a%20different%20or%20custom%20hashing%20algorithm%2C%20can%20the%20plugin%20handle%20this%3F'>\nMy plugin uses a different or custom hashing algorithm, can the plugin handle this?\n</h4>\n<p>\n<p>Yes. It will require you to use a built in hook (exlog_hook_filter_authenticate_hash) that you can add to your functions.php file.</p>\n<p>Documentation on how to use this and other hooks can be found in the <a href=\"https://wordpress.org/plugins/external-login/#what%20hooks%20are%20available%20in%20the%20external%20login%20flow%3F\" rel=\"ugc\">FAQ section</a>.</p>\n</p>\n<dt id='what%20values%20can%20i%20set%20in%20wp-config.php%3F'>\nWhat values can I set in wp-config.php?\n</h4>\n<p>\n<p>Here is a full listing of possible fields and values.</p>\n<ul>\n<li>\n<p>Enable External Login</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_ENABLE_EXTERNAL_LOGIN</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>on</li>\n<li>off</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Disable Local Login</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DISABLE_LOCAL_LOGIN</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>on</li>\n<li>off</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Migration Mode</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_MIGRATION_MODE</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>on</li>\n<li>off</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Delete Settings on Plugin Deactivation</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DELETE_PLUGIN_SETTINGS</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>on</li>\n<li>off</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_NAME</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Host</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_HOST</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Port</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_PORT</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Username</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_USERNAME</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Password</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_PASSWORD</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Type</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_TYPE</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>mysql</li>\n<li>postgresql</li>\n<li>mssql</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Database Hash Type</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_HASH_ALGORITHM</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>bcrypt</li>\n<li>phpass</li>\n<li>phpcrypt</li>\n<li>md2</li>\n<li>md4</li>\n<li>md5</li>\n<li>sha1</li>\n<li>sha256</li>\n<li>sha384</li>\n<li>sha512</li>\n<li>ripemd128</li>\n<li>ripemd160</li>\n<li>ripemd256</li>\n<li>ripemd320</li>\n<li>whirlpool</li>\n<li>tiger128,3</li>\n<li>tiger160,3</li>\n<li>tiger192,3</li>\n<li>tiger128,4</li>\n<li>tiger160,4</li>\n<li>tiger192,4</li>\n<li>snefru</li>\n<li>gost</li>\n<li>adler32</li>\n<li>crc32</li>\n<li>crc32b</li>\n<li>haval128,3</li>\n<li>haval160,3</li>\n<li>haval192,3</li>\n<li>haval224,3</li>\n<li>haval256,3</li>\n<li>haval128,4</li>\n<li>haval160,4</li>\n<li>haval192,4</li>\n<li>haval224,4</li>\n<li>haval256,4</li>\n<li>haval128,5</li>\n<li>haval160,5</li>\n<li>haval192,5</li>\n<li>haval224,5</li>\n<li>haval256,5</li>\n<li>none</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Salting Method</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_SALTING_METHOD</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>none</li>\n<li>one</li>\n<li>all</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Salt Location</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_SALT_LOCATION</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>before</li>\n<li>after</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Password Salt</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXTERNAL_LOGIN_OPTION_DB_SALT</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Table Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_TABLE</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Username Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_USERNAME</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Password Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_PASSWORD</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Salt Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_SALT</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>E-mail Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_EMAIL</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>First Name Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_FIRST_NAME</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Last Name Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_LAST_NAME</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Role Field Name</p>\n<ul>\n<li>Constant Name\n<ul>\n<li>EXLOG_DBSTRUCTURE_ROLE</li>\n</ul>\n</li>\n<li>Possible Values\n<ul>\n<li>Any String</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</p>\n<dt id='what%20hooks%20are%20available%20in%20the%20external%20login%20flow%3F'>\nWhat hooks are available in the External Login flow?\n</h4>\n<p>\n<ul>\n<li>exlog_hook_filter_authenticate_hash</li>\n</ul>\n<p>You can use this hook to check if the password is correct in a custom way. For example, if you use a hashing algorithm not supported by the plugin by default.</p>\n<p>This hook provides you with a range of different information:<br />\n&#8211; <code>$password</code> &#8211; the password that was typed in at the login screen<br />\n&#8211; <code>$hashFromDatabase</code> &#8211; the hash stored in the database<br />\n&#8211; <code>$username</code> &#8211; the username that was typed in in the login screen<br />\n&#8211; <code>$externalUserData</code> &#8211; the rest of the data retrieved from the external database for the user that was found</p>\n<p>Returning <code>true</code> will authenticate the user and returning <code>false</code> will treat them as unauthorised.</p>\n<p>The below example shows how you could use the filter:</p>\n<pre><code>function myExlogHashAuthenticator($password, $hashFromDatabase, $username, $externalUserData) {\n    return password_verify($password, $hashFromDatabase);\n}\nadd_filter('exlog_hook_filter_authenticate_hash', 'myExlogHashAuthenticator', 10, 4);\n</code></pre>\n<ul>\n<li>exlog_hook_action_authenticated<br />\nThis hook is run after the user has been authenticated from the external database.</li>\n</ul>\n<p>This will not run if the user is authenticated from the local WordPress database.</p>\n<p>Below is an example of code that could be added to your <code>functions.php</code> file to add additional fields from the users<br />\ntable on the external database as user meta data in WordPress.</p>\n<p>Please note the use of the third parameter $rawResponse that returns all fields from the users table in the external<br />\ndatabase.</p>\n<pre><code>/**\n * Example function to do something after External Login has authenticated a user\n */\nfunction exlog_add_additional_user_data($wp_user, $exlog_user_data, $rawResponse) {\n    update_user_meta(\n        $wp_user-&gt;ID,                       // User ID\n        'someKeyForUserMetaData',           // WP Meta field key\n        $rawResponse['someExternalField'],  // External table data\n        false                               // Not unique\n    );\n}\n\nadd_action('exlog_hook_action_authenticated', 'exlog_add_additional_user_data', 10, 3);\n</code></pre>\n<p>Below is a different example that deletes a user from the external database after they have logged in for the first time.</p>\n<pre><code>/**\n * Example function to do something after External Login has authenticated a user\n *\n * In this case we are deleting the user from the external database\n *\n * WP User Object $wp_user The WordPress user object for the authenticated user.\n *\n * Array $exlog_user_data An associative array of user data generated when attempting to authenticate the user\n */\nfunction my_function_to_do_something_after_authentication($wp_user, $exlog_user_data) {\n  // Uses the data provided to the plugin to create the database object and data required for a query\n  $db_data = exlog_get_external_db_instance_and_fields('mysql');\n\n  // A query of your choice\n  $rows = $db_data[\"db_instance\"]-&gt;delete(\n    esc_sql($db_data[\"dbstructure_table\"]),\n    array( esc_sql($db_data[\"dbstructure_username\"]) =&gt; esc_sql($exlog_user_data['user_login']) )\n  );\n\n  // Checking if the user was deleted\n  if ($rows) {\n    error_log('User Successfully deleted from external database');\n  } else {\n    error_log('Unable to delete user from external database');\n  }\n}\n\nadd_action('exlog_hook_action_authenticated', 'my_function_to_do_something_after_authentication', 10, 2);\n</code></pre>\n<ul>\n<li>exlog_hook_filter_custom_should_exclude</li>\n</ul>\n<p>This hook allows you to add custom logic to exclude users.</p>\n<p>It provides you with all the data for the user that is stored in the external database users table.<br />\nIf you return <code>true</code> (or a string &#8211; see below regarding custom error messages) from this function it will prevent the<br />\nuser logging in, and returning <code>false</code> will bypass this exclusion.</p>\n<p>For example, let&#8217;s say your external users table had a field called <code>expiry</code> which stored a date. In this example we<br />\nwant to block users if they login after their expiry date.</p>\n<p>Adding the following to your <code>functions.php</code> would achieve this:</p>\n<pre><code>function myExlogCustomExcluder($userData) {\n    return strtotime($userData['expiry']) &lt; strtotime('now');\n}\nadd_filter('exlog_hook_filter_custom_should_exclude', 'myExlogCustomExcluder', 10, 1);\n</code></pre>\n<p>Alternatively if you provide a string the user will be blocked and the string will be used as the error for the user.</p>\n<pre><code>function myExlogCustomExcluder($userData) {\n    return strtotime($userData['expiry']) &lt; strtotime('now') ? 'Your account has expired' : false;\n}\nadd_filter('exlog_hook_filter_custom_should_exclude', 'myExlogCustomExcluder', 10, 1);\n</code></pre>\n</p>\n<dt id='how%20do%20i%20add%20additional%20fields%20from%20my%20external%20database%20in%20to%20wordpress%3F'>\nHow do I add additional fields from my external database in to WordPress?\n</h4>\n<p>\n<p>The <code>exlog_hook_action_authenticated</code> hook can be used to achieve this. It is only run if the user is authenticated<br />\nwith the external database and not the local WordPress database.</p>\n<p>If you are unfamiliar with where to put such code, at the top of your <code>functions.php</code> file in your them folder is a<br />\ngood place to start. My personal preference is to store this type of code in &#8220;must use plugins&#8221; but that is your own<br />\ndecision. Alternatively you could use a plugin like <code>Code Snippets</code> to add the code.</p>\n<p>If the additional data you require is in the users table achiving your goal is slightly easier. Below is an example<br />\nwhere by there is a field in the external database called <code>someExternalField</code> and we want to store that as user meta<br />\ndata in WordPress under the name <code>someKeyForUserMetaData</code>.</p>\n<pre><code>/**\n * Example function to do something after External Login has authenticated a user\n */\nfunction exlog_add_additional_user_data($wp_user, $exlog_user_data, $rawResponse) {\n    update_user_meta(\n        $wp_user-&gt;ID,                       // User ID\n        'someKeyForUserMetaData',           // WP Meta field key\n        $rawResponse['someExternalField'],  // External table data\n        false                               // Not unique\n    );\n}\n\nadd_action('exlog_hook_action_authenticated', 'exlog_add_additional_user_data', 10, 3);\n</code></pre>\n<p>If you needed multiple fields you could add multiple calls to <code>update_user_meta</code>.</p>\n<p>If the additional data you require is not in the users table of your external database you will have to write your own<br />\nquery to access the data you require.</p>\n<p>If you wish to fetch the connection details from the plugin, the below code snippet shows how you can use an External<br />\nLogin function to get the connection details you require and also shows an example query:</p>\n<pre><code>// Uses the data provided to the plugin to create the database object and data required for a query\n$db_data = exlog_get_external_db_instance_and_fields('mysql');\n\n// A query of your choice\n$query_string = \"SELECT * FROM someTable\";\n$result = $db_data[\"db_instance\"]-&gt;get_results($query_string, ARRAY_A);\n</code></pre>\n<p>You may need to pass the string &#8220;mssql&#8221; or &#8220;postgresql&#8221; instead of &#8220;mysql&#8221; depending on your database.</p>\n<ul>\n<li>exlog_hook_filter_assign_roles<br />\nThis hook is used to add additional roles to a user with custom logic and potentially custom queries.</li>\n</ul>\n<p>This hook provides the user with a range of different information:<br />\n&#8211; <code>$roles</code> &#8211; the array of roles already mapped using the built in logic based on data set it the admin panel<br />\n&#8211; <code>$username</code> &#8211; the username that was typed in the login screen<br />\n&#8211; <code>$userData</code> &#8211; the data that was originally queried for the user</p>\n<p>It is expected that you will return an array of roles.</p>\n<p>The below is a very simple example that adds the role &#8216;everyoneRole&#8217;, to all users who are authenticated with the plugin.<br />\nThe below example assumes that you want to use the roles derived from the built in logic and add to it.<br />\nFor this reason new roles are added onto the passed array and that is returned.<br />\nIf you ONLY want roles from your logic, you could return your own array.</p>\n<pre><code>function myExlogRolesMapper($roles, $username, $userData) {\n    array_push($roles, \"everyoneRole\");\n    return $roles;\n}\nadd_filter('exlog_hook_filter_assign_roles', 'myExlogRolesMapper', 10, 3);\n</code></pre>\n<p>The below is a relatively complex example that shows how you could write your own query to fetch data and use that to add WordPress roles.</p>\n<pre><code>function myExlogRolesMapper($roles, $username, $userData) {\n    // Uses the data provided to the plugin to create the database object and data required for a query\n    $db_data = exlog_get_external_db_instance_and_fields();\n\n    // Start building a query to fetch the user\n    // This is the start of the query that you may want to use if you require additional data from your database\n    // It may well be that all the data you need is in the passed $userData\n    $query_string =\n        'SELECT *' .\n        // This is specifying the table specified in the settings panel, you can hard code these if you rather\n        ' FROM ' . esc_sql($db_data[\"dbstructure_table\"]) .\n        // This finds the correct user based on the username field set in the settings and the username that they typed in\n        ' WHERE (' . esc_sql($db_data[\"dbstructure_username\"]) . '=\"' . esc_sql($username) . '\"';\n\n    if ($db_data[\"dbstructure_email\"]) {\n        // Because the username they type in can be an e-mail, if you have set an e-mail field in the settings panel we will also try and find the user by e-mail\n        $query_string .= ' OR ' . esc_sql($db_data[\"dbstructure_email\"]) . '=\"' . esc_sql($username) . '\")';\n    } else {\n        $query_string .= ')';\n    }\n\n    // Use the above computed query actually fetch the data\n    $rows = $db_data[\"db_instance\"]-&gt;get_results($query_string, ARRAY_A);\n\n    // Checking if a user was found\n    if ($rows &amp;&amp; count($rows) &gt; 0) {\n        $foundData = $rows[0];\n        // If the custom field in your database called 'myCustomRoleField' has 'editingKing' stored in it\n        if ($foundData['myCustomRoleField'] == 'editingKing') {\n            // Add the wordpress role 'editor' to the user\n            array_push($roles, \"editor\");\n        }\n    }\n\n    // return the array of roles as WordPress supports multiple roles in the backend even though their settings pane only shows one\n    return $roles;\n}\nadd_filter('exlog_hook_filter_assign_roles', 'myExlogRolesMapper', 10, 3);\n</code></pre>\n</p>\n<dt id='i%20need%20an%20extra%20feature.%20can%20you%20add%20it%3F'>\nI need an extra feature. Can you add it?\n</h4>\n<p>\n<p>Get in contact on the support forum and we can discuss it 🙂</p>\n</p>\n\n",
        "changelog": "<h4>1.11.2</h4>\n<ul>\n<li>Add hook to allow custom manipulation of roles</li>\n<li>Fix bug that meant preventing fall back to the WordPress login only worked from username logins and not e-mails</li>\n<li>Add better explanation regarding cropped strings in the test connection output</li>\n</ul>\n<h4>1.11.1</h4>\n<ul>\n<li>Add additional safeguards as some users were unable to use the blocking users based on roles feature</li>\n</ul>\n<h4>1.11.0</h4>\n<ul>\n<li>Allow custom error messages to be returned from the exlog_hook_filter_custom_should_exclude hook</li>\n<li>Allow users to have multiple sessions (so long as their password has not changed)</li>\n<li>Prevent error thrown for some users when an external user was not found in the WordPress database</li>\n</ul>\n<h4>1.10.0</h4>\n<ul>\n<li>Fix inconsistencies with logic for MS SQL Server connections</li>\n<li>Modify the exlog_hook_action_authenticated hook to provide more data from the external database users table</li>\n<li>Prevent a couple of harmless PHP Notices that clog up error logs. Needs further work</li>\n</ul>\n<h4>1.9.0</h4>\n<ul>\n<li>Add exlog_hook_filter_custom_should_exclude hook to allow custom coded user exclusions</li>\n<li>Fix bug that prevented &#8216;Role Settings&#8217; for mapping roles being saved in the database</li>\n<li>Fix but that prevented &#8216;Exclude Users&#8217; settings saving</li>\n</ul>\n<h4>1.8.4</h4>\n<ul>\n<li>Update deployment process</li>\n</ul>\n<h4>1.8.3</h4>\n<ul>\n<li>Pass additional data to the authenticating hash hook</li>\n<li>Remove deprecated method (screen_icon())</li>\n<li>Make the plugin easier for other developers to work on (integrating docker and an improved README.md)</li>\n</ul>\n<h4>1.7.3</h4>\n<ul>\n<li>Fix issue that prevented the BETA feature of excluding users based on custom data in the users table from functioning</li>\n<li>Update plugin details and screenshots</li>\n</ul>\n<h4>1.7.2</h4>\n<ul>\n<li>Add redirection tool that allows internal or external sites to be redirected to once a user is authenticated</li>\n<li>Add Microsoft SQL Server support (BETA)</li>\n<li>Add ability to validate a users password based on custom custom code using the &#8216;exlog_hook_filter_authenticate_hash&#8217; hook</li>\n<li>Fix issue that caused using the &#8216;None&#8217; hash setting to have the password always set to be lower case</li>\n<li>Remove code that causes a warning in debug mode</li>\n</ul>\n<h4>1.7.1</h4>\n<ul>\n<li>Allow mysql databases to accept username or e-mail address for the new username</li>\n<li>Fixed missing logo on production (Hopefully 😛 )</li>\n</ul>\n<h4>1.7.0</h4>\n<ul>\n<li>Add Migration Mode setting</li>\n<li>Add action hook &#8216;exlog_hook_action_authenticated&#8217; that is triggered when the user is authenticated with the external database</li>\n</ul>\n<h4>1.6.0</h4>\n<ul>\n<li>Prevent password change e-mail coming through when a users details are updated in WordPress in the External Login flow</li>\n<li>Add feature to block users based on their role</li>\n<li>Fix for the admin area form on repeater items</li>\n<li>Fix a nested function error that appeared for some users</li>\n</ul>\n<h4>1.5.0</h4>\n<ul>\n<li>Add feature to exclude users based on another field in the database</li>\n<li>Add feature to get multiple roles from the external database roles field (Requires additional plugin for admin manipulation)</li>\n<li>Improve cosmetic bugs in admin area</li>\n</ul>\n<h4>1.4.1</h4>\n<ul>\n<li>Fix Test button on WP installs in sub directories</li>\n<li>Improve error descriptions to the end user</li>\n</ul>\n<h4>1.4.0</h4>\n<ul>\n<li>Add PostgreSQL functionality</li>\n<li>Add support links to options page</li>\n<li>Add additional styling to options page</li>\n</ul>\n<h4>1.3.1</h4>\n<ul>\n<li>Fix broken link from plugin page to settings that caused plugin failure for some users.</li>\n</ul>\n<h4>1.3.0</h4>\n<ul>\n<li>Make plugin compatible with PHP 5.6.34.</li>\n</ul>\n<h4>1.2.1</h4>\n<ul>\n<li>Fix broken Test button and improve options page description link.</li>\n</ul>\n<h4>1.2.0</h4>\n<ul>\n<li>Add new hashing methods.</li>\n</ul>\n<h4>1.1.2</h4>\n<ul>\n<li>Remove old data from the DB if you switch to using wp-config to store your settings.</li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>Improve plugin documentation</li>\n</ul>\n<h4>1.1.0</h4>\n<ul>\n<li>Add ability to store settings in wp-config</li>\n</ul>\n<h4>1.0.3</h4>\n<ul>\n<li>Add further sanitisation of data in SQL command</li>\n<li>Refactor code</li>\n</ul>\n<h4>1.0.2</h4>\n<ul>\n<li>Update readme.txt to better present plugin information again.</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>Update readme.txt to better present plugin information.</li>\n</ul>\n<h4>1.0.0</h4>\n<ul>\n<li>Initial production version</li>\n</ul>\n"
    },
    "short_description": "External Login allows users to log in to the WordPress site with a different database of users.",
    "description": "<p>External Login allows you to login to your WordPress site using an &#8216;external database&#8217; instead of the WordPress database. This means if you already have a login system you can integrate that into your WordPress site. The &#8216;external database&#8217; that you would like to use does not have to be a WordPress database.</p>\n<p>The plugin will re-create users in the WordPress database which has has two benefits:<br />\n    1. It will allow you to use WordPress correctly with other plugins that require a named user to be logged in.<br />\n    2. If the &#8216;external database&#8217; is not available, you can allow the plugin to log them in with the local WordPress version of their user.</p>\n<h3>Features</h3>\n<ul>\n<li>Use your current table of users in a different database to login to WordPress</li>\n<li>Map the names for your database fields against the required WordPress fields</li>\n<li>Map roles from your &#8216;external database&#8217; to those found in WordPress e.g. a student in the &#8216;external database&#8217; becomes an editor in the WordPress database.</li>\n<li>Every time a user logs in, their WordPress user will be updated with the details from the &#8216;external database&#8217;.</li>\n<li>Exclude certain users from accessing the WordPress admin area based on any field in the Users table on the External Database</li>\n<li>Ability to fall back to the generated WordPress user for login if the &#8216;external database&#8217; is unavailable.</li>\n<li>Block users based on their role</li>\n<li>Block a user based on any field in your users table</li>\n<li>Redirect the user after being successfully authenticated</li>\n<li>Support for different database types:\n<ul>\n<li>MySQL</li>\n<li>PostgreSQL</li>\n<li>Microsoft SQL</li>\n</ul>\n</li>\n<li>Many password hashing methods are supported including:\n<ul>\n<li>bcrypt</li>\n<li>md2</li>\n<li>md4</li>\n<li>md5</li>\n<li>sha1</li>\n<li>sha256</li>\n<li>sha384</li>\n<li>sha512</li>\n<li>no hashing</li>\n<li>and more&#8230;</li>\n</ul>\n</li>\n<li>Support for separate password salts for each password</li>\n<li>Support for one salt for all passwords</li>\n<li>Support for salts being prepended or appended to the password</li>\n<li>Test the connection in the settings menu to make sure your data is being pulled correctly</li>\n<li>Option to delete plugin data on plugin deactivation</li>\n</ul>\n<h3>Is this plugin what I need?</h3>\n<p>To give an idea of whether this plugin does the job you need it to, here is the basic logic flow:<br />\n1. User logs in to the normal WordPress login screen.<br />\n2. We hash the users password with the method and salt (if given) that is chosen in the settings<br />\n3. We so a simple SQL query to the external database to see if their username and the hashed password match a user.<br />\n4. We create or update the details of the new user.<br />\n5. We log that user in<br />\n6. When the user logs out of WordPress the WordPress session ends</p>\n<p>Please note that this system is built for the login process to be a completely different login process to anything else.<br />\nIf you are looking for Single Sign On (log in to one website and you&#8217;re logged in else where) you should be looking for a OAuth solution in my opinion.</p>\n<h3>FUNCTIONALITY WARNINGS AND LIMITATIONS</h3>\n<ol>\n<li>ALWAYS take a backup of your database and test the functionality before using this plugin in production.</li>\n<li>Users created in WordPress will be overwritten if users in the external database have the same username. This could be fixed by appending usernames with a separate string.</li>\n<li>Edits to a user made in WordPress will be overwritten when the user logs back in with the &#8216;external database&#8217;. This is only the case for fields that are being pulled from the external database.</li>\n</ol>\n<h3>Security Notes</h3>\n<p><strong>Database User</strong><br />\nIt is recommended that you create a new Database user to access the external database. This way you can set appropriate permissions to the user so that they do not have write access.</p>\n<p><strong>Hashing</strong><br />\nFor the security of your users, your &#8216;external database&#8217; should be hashing your users passwords. Although support is given for other hashing methods, &#8216;bcrypt&#8217; is advised as it uses SLOW hashing. Without this it would be far easier for someone to derive your users password through a brute force attack if they gained access to your database.</p>\n<p>It is also highly recommended that a salt is used. This is done by default with &#8216;bcrypt&#8217;. Using one salt for all passwords is supported but it is recommended to use a separate salt for each password as a different field in your database. This helps prevent the use of &#8216;rainbow tables&#8217; to derive your users passwords.</p>\n<p>For explanation and more information on this I recommend <a href=\"https://martinfowler.com/articles/web-security-basics.html\" rel=\"nofollow ugc\">this article</a> starting from the section &#8220;Hash and Salt Your Users&#8217; Passwords&#8221;.</p>\n<p><strong>Storing Settings in wp-config.php</strong><br />\nYou may prefer to store your settings in &#8216;wp-config.php&#8217;. This could have security benefits, so long as you are careful not to store your code in a publicly accessible repository and you ensure your wp-config file cannot be accessed on the server.</p>\n<p>Below is an example of code that can be added to &#8216;wp-config.php&#8217;.</p>\n<pre><code>// ** EXTERNAL LOGIN SETTINGS ** //\n/** EXLOG - The External Database Name */\ndefine('EXTERNAL_LOGIN_OPTION_DB_NAME', 'dojo2016');\n\n/** EXLOG - The External Database Host */\ndefine('EXTERNAL_LOGIN_OPTION_DB_HOST', 'localhost');\n\n/** EXLOG - The External Database Port */\ndefine('EXTERNAL_LOGIN_OPTION_DB_PORT', '3306');\n\n/** EXLOG - The External Database Username */\ndefine('EXTERNAL_LOGIN_OPTION_DB_USERNAME', 'root');\n\n/** EXLOG - The External Database Password */\ndefine('EXTERNAL_LOGIN_OPTION_DB_PASSWORD', 'root');\n\n/** EXLOG - The External Database Type */\ndefine('EXTERNAL_LOGIN_OPTION_DB_TYPE', 'mysql');\n\n/** EXLOG - Password Salt */\ndefine('EXTERNAL_LOGIN_OPTION_DB_SALT', 'ksjefh2lkrh2r2oh23');\n</code></pre>\n<p>You can of course set these with environment variables if you wish in the following way:</p>\n<pre><code>/** EXLOG - The External Database Name */\ndefine('EXTERNAL_LOGIN_OPTION_DB_NAME', getenv('MY_EXLOG_DB_NAME_ENVIRONMENT_VARIABLE'));\n</code></pre>\n<p>All settings (except from those mapping roles) can currently be set this way. For a full list and possible settings see the &#8220;FAQ&#8221; question &#8211; &#8220;What values can I set in wp-config.php?&#8221;.</p>\n<h3>Special Thanks</h3>\n<p>A special thank you to Ben Lobaugh for a <a href=\"https://ben.lobaugh.net/blog/7175/wordpress-replace-built-in-user-authentication\" rel=\"nofollow ugc\">great article</a> which I used heavily for this plugin.</p>\n<h3>DONATE</h3>\n<p>Like the plugin and want to <a href=\"https://www.paypal.me/tombenyon\" rel=\"nofollow ugc\">buy me a beer</a>? Well, thank you!</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/external-login.1.11.2.zip",
    "upgrade_notice": {
        "1.11.2": "<ul>\n<li>Add hook to allow custom manipulation of roles</li>\n<li>Fix bug that meant preventing fall back to the WordPress login only worked from username logins and not e-mails</li>\n<li>Add better explanation regarding cropped strings in the test connection output</li>\n</ul>",
        "1.11.1": "<ul>\n<li>Add additional safeguards as some users were unable to use the blocking users based on roles feature</li>\n</ul>",
        "1.11.0": "<ul>\n<li>Allow custom error messages to be returned from the exlog_hook_filter_custom_should_exclude hook</li>\n<li>Allow users to have multiple sessions (so long as their password has not changed)</li>\n<li>Prevent error thrown for some users when an external user was not found in the WordPress database</li>\n</ul>",
        "1.10.0": "<ul>\n<li>Fix inconsistencies with logic for MS SQL Server connections</li>\n<li>Modify the exlog_hook_action_authenticated hook to provide more data from the external database users table</li>\n<li>Prevent a couple of harmless PHP Notices that clog up error logs. Needs further work</li>\n</ul>",
        "1.9.0": "<ul>\n<li>Add exlog_hook_filter_custom_should_exclude hook to allow custom coded user exclusions</li>\n<li>Fix bug that prevented &#039;Role Settings&#039; for mapping roles being saved in the database</li>\n<li>Fix but that prevented &#039;Exclude Users&#039; settings saving</li>\n</ul>",
        "1.8.4": "<ul>\n<li>Update deployment process</li>\n</ul>",
        "1.8.3": "<ul>\n<li>Pass additional data to the authenticating hash hook</li>\n<li>Remove deprecated method (screen_icon())</li>\n<li>Make the plugin easier for other developers to work on (integrating docker and an improved README.md)</li>\n</ul>",
        "1.7.3": "<ul>\n<li>Fix issue that prevented the BETA feature of excluding users based on custom data in the users table from functioning</li>\n<li>Update plugin details and screenshots</li>\n</ul>",
        "1.7.2": "<ul>\n<li>Add redirection tool that allows internal or external sites to be redirected to once a user is authenticated</li>\n<li>Add Microsoft SQL Server support (BETA)</li>\n<li>Add ability to validate a users password based on custom custom code using the &#039;exlog_hook_filter_authenticate_hash&#039; hook</li>\n<li>Fix issue that caused using the &#039;None&#039; hash setting to have the password always set to be lower case</li>\n<li>Remove code that causes a warning in debug mode</li>\n</ul>",
        "1.7.1": "<ul>\n<li>Allow mysql databases to accept username or e-mail address for the new username</li>\n<li>Fixed missing logo on production (Hopefully :P )</li>\n</ul>",
        "1.7.0": "<ul>\n<li>Add Migration Mode setting</li>\n<li>Add action hook &#039;exlog_hook_action_authenticated&#039; that is triggered when the user is authenticated with the external database</li>\n</ul>",
        "1.6.0": "<ul>\n<li>Prevent password change e-mail coming through when a users details are updated in WordPress in the External Login flow</li>\n<li>Add feature to block users based on their role</li>\n<li>Fix for the admin area form on repeater items</li>\n<li>Fix a nested function error that appeared for some users</li>\n</ul>",
        "1.5.0": "<ul>\n<li>Add feature to exclude users based on another field in the database</li>\n<li>Add feature to get multiple roles from the external database roles field (Requires additional plugin for admin manipulation)</li>\n<li>Improve cosmetic bugs in admin area</li>\n</ul>",
        "1.4.1": "<ul>\n<li>Fix Test button on WP installs in sub directories</li>\n<li>Improve error descriptions to the end user</li>\n</ul>",
        "1.4.0": "<ul>\n<li>Add PostgreSQL functionality</li>\n<li>Add support links to options page</li>\n<li>Add additional styling to options page</li>\n</ul>",
        "1.3.1": "<ul>\n<li>Fix broken link from plugin page to settings that caused plugin failure for some users.</li>\n</ul>",
        "1.3.0": "<ul>\n<li>Make plugin compatible with PHP 5.6.34.</li>\n</ul>",
        "1.2.1": "<ul>\n<li>Fix broken Test button and improve options page description link.</li>\n</ul>",
        "1.2.0": "<ul>\n<li>Add new hashing methods.</li>\n</ul>",
        "1.1.2": "<ul>\n<li>Remove old data from the DB if you switch to using wp-config to store your settings.</li>\n</ul>",
        "1.1.1": "<ul>\n<li>Improve plugin documentation</li>\n</ul>",
        "1.1.0": "<ul>\n<li>Add ability to store settings in wp-config</li>\n</ul>",
        "1.0.3": "<ul>\n<li>Add further sanitisation of data in SQL command</li>\n<li>Refactor code</li>\n</ul>",
        "1.0.2": "<ul>\n<li>Update readme.txt to better present plugin information again.</li>\n</ul>",
        "1.0.1": "<ul>\n<li>Update readme.txt to better present plugin information.</li>\n</ul>",
        "1.0.0": "<ul>\n<li>Initial production version</li>\n</ul>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-1.png?rev=1815326",
            "caption": "Main Settings View"
        },
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-2.png?rev=1815326",
            "caption": "Functionality Settings"
        },
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-3.png?rev=1815326",
            "caption": "Database Connection Settings"
        },
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-4.png?rev=1815326",
            "caption": "Password Hashing Settings"
        },
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-5.png?rev=1815326",
            "caption": "Database Table Mapping Settings"
        },
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-6.png?rev=1815326",
            "caption": "Role Settings"
        },
        {
            "src": "https://ps.w.org/external-login/assets/screenshot-7.png?rev=1815326",
            "caption": "Exclude Users"
        }
    ],
    "tags": {
        "database": "database",
        "external": "external",
        "external-login": "external login",
        "login": "login",
        "users": "users"
    },
    "stable_tag": "1.11.2",
    "versions": {
        "1.0.0": "https://downloads.wordpress.org/plugin/external-login.1.0.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/external-login.1.0.1.zip",
        "1.0.2": "https://downloads.wordpress.org/plugin/external-login.1.0.2.zip",
        "1.0.3": "https://downloads.wordpress.org/plugin/external-login.1.0.3.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/external-login.1.1.0.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/external-login.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/external-login.1.1.2.zip",
        "1.10.0": "https://downloads.wordpress.org/plugin/external-login.1.10.0.zip",
        "1.11.0": "https://downloads.wordpress.org/plugin/external-login.1.11.0.zip",
        "1.11.1": "https://downloads.wordpress.org/plugin/external-login.1.11.1.zip",
        "1.11.2": "https://downloads.wordpress.org/plugin/external-login.1.11.2.zip",
        "1.2.0": "https://downloads.wordpress.org/plugin/external-login.1.2.0.zip",
        "1.2.1": "https://downloads.wordpress.org/plugin/external-login.1.2.1.zip",
        "1.3.0": "https://downloads.wordpress.org/plugin/external-login.1.3.0.zip",
        "1.3.1": "https://downloads.wordpress.org/plugin/external-login.1.3.1.zip",
        "1.4.0": "https://downloads.wordpress.org/plugin/external-login.1.4.0.zip",
        "1.4.1": "https://downloads.wordpress.org/plugin/external-login.1.4.1.zip",
        "1.5.0": "https://downloads.wordpress.org/plugin/external-login.1.5.0.zip",
        "1.6.0": "https://downloads.wordpress.org/plugin/external-login.1.6.0.zip",
        "1.7.0": "https://downloads.wordpress.org/plugin/external-login.1.7.0.zip",
        "1.7.1": "https://downloads.wordpress.org/plugin/external-login.1.7.1.zip",
        "1.7.2": "https://downloads.wordpress.org/plugin/external-login.1.7.2.zip",
        "1.7.3": "https://downloads.wordpress.org/plugin/external-login.1.7.3.zip",
        "1.8.0": "https://downloads.wordpress.org/plugin/external-login.1.8.0.zip",
        "1.8.1": "https://downloads.wordpress.org/plugin/external-login.1.8.1.zip",
        "1.8.3": "https://downloads.wordpress.org/plugin/external-login.1.8.3.zip",
        "1.8.4": "https://downloads.wordpress.org/plugin/external-login.1.8.4.zip",
        "1.9.0": "https://downloads.wordpress.org/plugin/external-login.1.9.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/external-login.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.me/tombenyon",
    "banners": {
        "low": "https://ps.w.org/external-login/assets/banner-772x250.jpg?rev=1815326",
        "high": "https://ps.w.org/external-login/assets/banner-1544x500.jpg?rev=1815326"
    },
    "icons": {
        "1x": "https://ps.w.org/external-login/assets/icon-128x128.jpg?rev=1815326",
        "2x": "https://ps.w.org/external-login/assets/icon-256x256.jpg?rev=1815326"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "external-login",
            "language": "de_DE",
            "version": "1.11.2",
            "updated": "2020-09-06 07:42:06",
            "package": "https://downloads.wordpress.org/translation/plugin/external-login/1.11.2/de_DE.zip"
        },
        {
            "type": "plugin",
            "slug": "external-login",
            "language": "de_DE_formal",
            "version": "1.11.2",
            "updated": "2023-02-16 13:28:00",
            "package": "https://downloads.wordpress.org/translation/plugin/external-login/1.11.2/de_DE_formal.zip"
        },
        {
            "type": "plugin",
            "slug": "external-login",
            "language": "es_ES",
            "version": "1.11.2",
            "updated": "2020-12-18 08:37:01",
            "package": "https://downloads.wordpress.org/translation/plugin/external-login/1.11.2/es_ES.zip"
        },
        {
            "type": "plugin",
            "slug": "external-login",
            "language": "ko_KR",
            "version": "1.11.2",
            "updated": "2023-06-23 01:30:27",
            "package": "https://downloads.wordpress.org/translation/plugin/external-login/1.11.2/ko_KR.zip"
        },
        {
            "type": "plugin",
            "slug": "external-login",
            "language": "sv_SE",
            "version": "1.11.2",
            "updated": "2021-07-17 11:59:09",
            "package": "https://downloads.wordpress.org/translation/plugin/external-login/1.11.2/sv_SE.zip"
        }
    ]
}