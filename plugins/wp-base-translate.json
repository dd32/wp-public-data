{
    "name": "WP Base Translate",
    "slug": "wp-base-translate",
    "version": "3.1",
    "author": "<a href=\"http://geronikolov.com\">GeroNikolov</a>",
    "author_profile": "https://profiles.wordpress.org/geronikolov/",
    "contributors": {
        "geronikolov": {
            "profile": "https://profiles.wordpress.org/geronikolov/",
            "avatar": "https://secure.gravatar.com/avatar/ec8dc076222f06a93a9b8297b88ffd11?s=96&d=monsterid&r=g",
            "display_name": "GeroNikolov"
        }
    },
    "requires": "3.1",
    "tested": "5.4.16",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wp-base-translate/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1108,
    "last_updated": "2020-05-22 09:35:00",
    "added": "2017-02-24",
    "homepage": "",
    "sections": {
        "description": "<p>Most of the translation plugins are built in very complicated and messy way&#8230;<br />\nThat&#8217;s why with WP_BASE_TRANSLATE you can <strong>create</strong>, <strong>edit</strong> or <strong>remove</strong> new languages in just a few clicks!</p>\n<p>When the plugin is installed it performs the following things:</p>\n<ul>\n<li>Registers the <strong>Language Custom Post Type (CPT)</strong></li>\n<li>Creates the <strong>_WP_PREFIX_page_language_relations</strong> table in your installation Database</li>\n<li>Adds page language metabox to Post / Page (it works with all CPTs as well)</li>\n<li>Adds avalilable languages metabox on which your page can be translated</li>\n</ul>\n<p>How to add a new language?</p>\n<p>The languages are registered in your database as Posts from <strong>Language CPT</strong>.<br />\nSo to create a new language just go to <em><strong>Languages</strong> &gt; <strong>Add new</strong> &gt; <strong>Enter name (as title of the post)</strong> &gt; <strong>Choose the icon of the language (optional as featured image)</strong></em>.</p>\n<p>That&#8217;s it!</p>\n<p>How to translate?</p>\n<p>As we mentioned above you can translate <strong>every</strong> post from a CPT in your WordPress installation.</p>\n<p>To achieve that the plugin is registering a meta box called <em><strong>Available Languages</strong></em>, which represents the list of all available languages (as active buttons) on which you can translate the specific page.<br />\nBefore you can start translating, you have to choose the current language of the page from the <em><strong>Page Language</strong></em> dropdown box. That will tell the plugin which is the parent language and connect the translated versions with it.<br />\nOnce you do that, you just have to select the language on which you want to see your page and start translate the content in it.</p>\n<p>That&#8217;s all!</p>\n<p>How it works on the front?</p>\n<p>WP_BASE_TRANSLATE is meant to be easy, so if you currently have a language menu option connected on your website it&#8217;ll work with it.<br />\nThe only requirement for the plugin to work properly is to add <em><strong>lang</strong></em> parameter in your page URL.</p>\n<p><strong>Example:</strong> http://geronikolov.com/blog &#8212;&gt; http://geronikolov.com/blog?lang=bg (that will call the Blog page translated in Bulgarian)</p>\n<p>What happens if I don&#8217;t have that language implementation in my site?</p>\n<p>WP_BASE_TRANSLATE gives you a simple language dropdown menu, which can be placed everywhere you want it!<br />\nDo add to your Posts, Pages or Code, just use this shortcode &#8211; <strong>[language_menu]</strong></p>\n<p>How to build the Language listing menu?</p>\n<p>Since the plugin doesn&#8217;t provide a hardcoded menu, it provides a very flexible back-end method for implementing it with your website.<br />\nThe core of the plugin gives you a function called <strong>get_registered_languages()</strong> which returns an <strong>Array</strong> of <strong>Objects</strong> which represent the registered <strong>Language objects</strong>.</p>\n<p>Every language object has:</p>\n<ul>\n<li>Language ID: That&#8217;s the ID of the Post in the database</li>\n<li>Language Name: That&#8217;s the Title of the Post</li>\n<li>Language Code: That&#8217;s the small version of your language title, for example if you have <strong>EN</strong> as title, the code will be <strong>en</strong>. In the navigation menu you should use it as value of the <strong>lang</strong> parameter.</li>\n<li>Language Full Name: That&#8217;s the full name of the language. Example: EN = English; ES = Espanol;</li>\n<li>Language Slug: That&#8217;s the post slug you&#8217;ve choosed from the WordPress Dashboard. By default it&#8217;s smaller version of the title equal to the <strong>Language Code</strong></li>\n<li>Language Link: That&#8217;s the permalink of the <strong>Language Post Object</strong>.</li>\n<li>Language Author: That&#8217;s the ID of the Administrator who created the language in your WordPress installation.</li>\n<li>Language Icon: That&#8217;s the link to the language icon, which was selected from the WP Dashboard. Usually it&#8217;s the flag of the <strong>Parent Country of the language</strong>.</li>\n</ul>\n<p>The <strong>wpbt_get_registered_languages()</strong> function can be found in the <strong>functions.php</strong> file positioned in the root folder of the plugin.</p>\n<p>Functions list: functions.php<br />\nwpbt_get_registered_languages()<br />\nwpbt_get_translation_id()</p>\n<p>How to contribute?</p>\n<p>You just have to clone the repository and build!</p>\n<p>If you want to extend the <strong>WP_BASE_TRANSLATE Core</strong> make sure to add small comment block above each of your functions.</p>\n<p><strong>The code block should look like:</strong></p>\n<pre>\n/*\n*   Function name: example_function\n*   Function arguments: $post_id [ INT ]\n*   Function purpose: This function is just for an example.\n*/\nfunction example_function( $post_id ) { return \"John Snow is alive!\"; }\n</pre>\n<p><a href=\"https://github.com/Gero0Nikolov/wp-base-translate\" rel=\"nofollow ugc\">Join the contributions!</a></p>\n",
        "installation": "<p>This section describes how to install the plugin and get it working.</p>\n<p>e.g.</p>\n<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/plugin-name</code> directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress</li>\n<li>Use the Settings-&gt;Plugin Name screen to configure the plugin</li>\n<li>(Make your instructions match the desired user flow for activating and installing your plugin. Include any steps that might be needed for explanatory purposes)</li>\n</ol>\n"
    },
    "short_description": "This plugin will allow you to create a multilingual website in just a few clicks.",
    "description": "<p>Most of the translation plugins are built in very complicated and messy way&#8230;<br />\nThat&#8217;s why with WP_BASE_TRANSLATE you can <strong>create</strong>, <strong>edit</strong> or <strong>remove</strong> new languages in just a few clicks!</p>\n<p>When the plugin is installed it performs the following things:</p>\n<ul>\n<li>Registers the <strong>Language Custom Post Type (CPT)</strong></li>\n<li>Creates the <strong>_WP_PREFIX_page_language_relations</strong> table in your installation Database</li>\n<li>Adds page language metabox to Post / Page (it works with all CPTs as well)</li>\n<li>Adds avalilable languages metabox on which your page can be translated</li>\n</ul>\n<p>How to add a new language?</p>\n<p>The languages are registered in your database as Posts from <strong>Language CPT</strong>.<br />\nSo to create a new language just go to <em><strong>Languages</strong> &gt; <strong>Add new</strong> &gt; <strong>Enter name (as title of the post)</strong> &gt; <strong>Choose the icon of the language (optional as featured image)</strong></em>.</p>\n<p>That&#8217;s it!</p>\n<p>How to translate?</p>\n<p>As we mentioned above you can translate <strong>every</strong> post from a CPT in your WordPress installation.</p>\n<p>To achieve that the plugin is registering a meta box called <em><strong>Available Languages</strong></em>, which represents the list of all available languages (as active buttons) on which you can translate the specific page.<br />\nBefore you can start translating, you have to choose the current language of the page from the <em><strong>Page Language</strong></em> dropdown box. That will tell the plugin which is the parent language and connect the translated versions with it.<br />\nOnce you do that, you just have to select the language on which you want to see your page and start translate the content in it.</p>\n<p>That&#8217;s all!</p>\n<p>How it works on the front?</p>\n<p>WP_BASE_TRANSLATE is meant to be easy, so if you currently have a language menu option connected on your website it&#8217;ll work with it.<br />\nThe only requirement for the plugin to work properly is to add <em><strong>lang</strong></em> parameter in your page URL.</p>\n<p><strong>Example:</strong> http://geronikolov.com/blog &#8212;&gt; http://geronikolov.com/blog?lang=bg (that will call the Blog page translated in Bulgarian)</p>\n<p>What happens if I don&#8217;t have that language implementation in my site?</p>\n<p>WP_BASE_TRANSLATE gives you a simple language dropdown menu, which can be placed everywhere you want it!<br />\nDo add to your Posts, Pages or Code, just use this shortcode &#8211; <strong>[language_menu]</strong></p>\n<p>How to build the Language listing menu?</p>\n<p>Since the plugin doesn&#8217;t provide a hardcoded menu, it provides a very flexible back-end method for implementing it with your website.<br />\nThe core of the plugin gives you a function called <strong>get_registered_languages()</strong> which returns an <strong>Array</strong> of <strong>Objects</strong> which represent the registered <strong>Language objects</strong>.</p>\n<p>Every language object has:</p>\n<ul>\n<li>Language ID: That&#8217;s the ID of the Post in the database</li>\n<li>Language Name: That&#8217;s the Title of the Post</li>\n<li>Language Code: That&#8217;s the small version of your language title, for example if you have <strong>EN</strong> as title, the code will be <strong>en</strong>. In the navigation menu you should use it as value of the <strong>lang</strong> parameter.</li>\n<li>Language Full Name: That&#8217;s the full name of the language. Example: EN = English; ES = Espanol;</li>\n<li>Language Slug: That&#8217;s the post slug you&#8217;ve choosed from the WordPress Dashboard. By default it&#8217;s smaller version of the title equal to the <strong>Language Code</strong></li>\n<li>Language Link: That&#8217;s the permalink of the <strong>Language Post Object</strong>.</li>\n<li>Language Author: That&#8217;s the ID of the Administrator who created the language in your WordPress installation.</li>\n<li>Language Icon: That&#8217;s the link to the language icon, which was selected from the WP Dashboard. Usually it&#8217;s the flag of the <strong>Parent Country of the language</strong>.</li>\n</ul>\n<p>The <strong>wpbt_get_registered_languages()</strong> function can be found in the <strong>functions.php</strong> file positioned in the root folder of the plugin.</p>\n<p>Functions list: functions.php<br />\nwpbt_get_registered_languages()<br />\nwpbt_get_translation_id()</p>\n<p>How to contribute?</p>\n<p>You just have to clone the repository and build!</p>\n<p>If you want to extend the <strong>WP_BASE_TRANSLATE Core</strong> make sure to add small comment block above each of your functions.</p>\n<p><strong>The code block should look like:</strong></p>\n<pre>\n/*\n*   Function name: example_function\n*   Function arguments: $post_id [ INT ]\n*   Function purpose: This function is just for an example.\n*/\nfunction example_function( $post_id ) { return \"John Snow is alive!\"; }\n</pre>\n<p><a href=\"https://github.com/Gero0Nikolov/wp-base-translate\" rel=\"nofollow ugc\">Join the contributions!</a></p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-base-translate.3.1.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-base-translate/assets/screenshot-1.png?rev=1605426",
            "caption": "Language registering"
        },
        {
            "src": "https://ps.w.org/wp-base-translate/assets/screenshot-2.png?rev=1605426",
            "caption": "Page setup"
        },
        {
            "src": "https://ps.w.org/wp-base-translate/assets/screenshot-3.png?rev=1605426",
            "caption": "Translated Page setup"
        }
    ],
    "tags": {
        "modern": "modern",
        "simple": "simple",
        "translate": "translate",
        "translating": "translating",
        "translation": "translation"
    },
    "stable_tag": "3.1",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/wp-base-translate.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/wp-base-translate.1.1.zip",
        "2.0": "https://downloads.wordpress.org/plugin/wp-base-translate.2.0.zip",
        "3.0": "https://downloads.wordpress.org/plugin/wp-base-translate.3.0.zip",
        "3.1": "https://downloads.wordpress.org/plugin/wp-base-translate.3.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-base-translate.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://geronikolov.com",
    "banners": {
        "low": "https://ps.w.org/wp-base-translate/assets/banner-772x250.png?rev=1605426",
        "high": "https://ps.w.org/wp-base-translate/assets/banner-1544x500.png?rev=1605426"
    },
    "icons": {
        "1x": "https://ps.w.org/wp-base-translate/assets/icon-128x128.png?rev=1605426",
        "2x": "https://ps.w.org/wp-base-translate/assets/icon-256x256.png?rev=1605426"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}