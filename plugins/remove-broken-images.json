{
    "name": "Remove Broken Images",
    "slug": "remove-broken-images",
    "version": "1.4.1",
    "author": "<a href=\"http://room34.com\">Room 34 Creative Services, LLC</a>",
    "author_profile": "https://profiles.wordpress.org/room34/",
    "contributors": {
        "room34": {
            "profile": "https://profiles.wordpress.org/room34/",
            "avatar": "https://secure.gravatar.com/avatar/4d327cd4c103d340130ad2d40f902c0c?s=96&d=monsterid&r=g",
            "display_name": "room34"
        }
    },
    "requires": "4.9",
    "tested": "6.5.5",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 3,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 3,
    "support_url": "https://wordpress.org/support/plugin/remove-broken-images/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 1000,
    "downloaded": 8373,
    "last_updated": "2024-04-23 21:45:00",
    "added": "2021-11-22",
    "homepage": "https://room34.com",
    "sections": {
        "description": "<p>This is an extremely simple plugin that uses jQuery to remove broken images from displaying on your pages.</p>\n<p>Note that version 1 does <em>not</em> alter any content in the database, nor does it remove the image tags from the initial HTML output of the page, so it doesn&#8217;t stop 404 errors, nor does it benefit SEO or PageSpeed scores. It does, however, prevent the dreaded &#8220;broken image&#8221; icon from appearing in your pages, and in most cases it will remove the blank space some browsers allocate for images as they are loading.</p>\n<p><strong>Coming in version 2:</strong> We&#8217;ll be adding an admin tool to let you see a list of posts and pages containing broken images, along with a tool to automatically remove their <code>img</code> tags from the database.</p>\n",
        "faq": "\n<dt id='i%20installed%20and%20activated%20the%20plugin.%20now%20what%3F'>\nI installed and activated the plugin. Now what?\n</h4>\n<p>\n<p>That&#8217;s it! There is no configuration necessary. The plugin adds a compact bit of JavaScript that detects if an image is returning a 404 error, and removes its HTML code from displaying on the page.</p>\n</p>\n<dt id='does%20this%20plugin%20delete%20the%20image%20code%20from%20my%20page%2Fpost%20in%20the%20wordpress%20database%3F'>\nDoes this plugin delete the image code from my page/post in the WordPress database?\n</h4>\n<p>\n<p>No, version 1 does not make any changes whatsoever to your database. It also does not remove the missing image file&#8217;s URL from the HTML that is sent to the user&#8217;s web browser; it removes the tags from the DOM (Document Object Model) <em>after</em> the page has been loaded, using JavaScript, to prevent &#8220;broken image&#8221; icons, extra white space, and links/captions associated with those missing images from displaying.</p>\n</p>\n<dt id='how%20can%20i%20redirect%20to%20the%20home%20page%20when%20an%20image%20is%20missing%20on%20a%20post%3F'>\nHow can I redirect to the home page when an image is missing on a post?\n</h4>\n<p>\n<p>The <code>r34rbi_missing_image</code> jQuery hook (added in version 1.4.0) allows you to modify the plugin&#8217;s behavior with custom code, whenever a missing image is encountered. It is used by the <code>r34rbi_redirect_on_missing_image</code> PHP filter (also added in version 1.4.0) to easily redirect to the home page in this situation, by adding this snippet of PHP code to your theme:</p>\n<pre><code>add_filter('r34rbi_redirect_on_missing_image', '__return_true');\n</code></pre>\n<p>You can replace <code>'__return_true'</code> with a custom callback function to change the redirect URL to something other than your site&#8217;s home page.</p>\n</p>\n\n",
        "changelog": "<h4>1.4.1 &#8211; 2024.04.23</h4>\n<ul>\n<li>Added logic to prevent plugin&#8217;s code from loading on admin or login pages.</li>\n</ul>\n<h4>1.4.0 &#8211; 2024.04.09</h4>\n<ul>\n<li>Added <code>r34rbi_missing_image</code> jQuery hook to allow custom functionality to override the plugin&#8217;s default behavior when a missing image is encountered. Also added <code>r34rbi_redirect_on_missing_image</code> PHP filter, to allow for an easy application of this functionality in your theme. See FAQs for code example.</li>\n<li>Bumped &#8220;Tested up to&#8221; to 6.5.</li>\n</ul>\n<h4>1.3.1 &#8211; 2023.07.23</h4>\n<ul>\n<li>Re-minified JS.</li>\n<li>Bumped &#8220;Tested up to&#8221; to 6.3.</li>\n</ul>\n<h4>1.3.0 &#8211; 2021.12.21</h4>\n<ul>\n<li>Added handling for <code>img</code> tags inserted dynamically into the DOM via AJAX.</li>\n<li>Added minified <code>script.min.js</code> file to reduce page payload.</li>\n<li>Reformatted source JavaScript code for legibility and added comments.</li>\n</ul>\n<h4>1.2.0 &#8211; 2021.11.22</h4>\n<ul>\n<li>Refactored all of the plugin&#8217;s logic into jQuery, eliminating the need for using <code>the_content</code> filter to insert <code>onerror</code> into all <code>img</code> tags.</li>\n</ul>\n<h4>1.1.0 &#8211; 2021.11.22</h4>\n<ul>\n<li>Added separate <code>script.js</code> file; moved JavaScript logic from inline <code>onerror</code> attribute to a function that will also remove parent <code>a</code> element and ancestor <code>.wp-caption</code> element from the DOM, in addition to the <code>img</code> tag itself.</li>\n</ul>\n<h4>1.0.0 &#8211; 2021.11.20</h4>\n<ul>\n<li>Original version.</li>\n</ul>\n"
    },
    "short_description": "Very simply, uses JavaScript to remove broken images from page display.",
    "description": "<p>This is an extremely simple plugin that uses jQuery to remove broken images from displaying on your pages.</p>\n<p>Note that version 1 does <em>not</em> alter any content in the database, nor does it remove the image tags from the initial HTML output of the page, so it doesn&#8217;t stop 404 errors, nor does it benefit SEO or PageSpeed scores. It does, however, prevent the dreaded &#8220;broken image&#8221; icon from appearing in your pages, and in most cases it will remove the blank space some browsers allocate for images as they are loading.</p>\n<p><strong>Coming in version 2:</strong> We&#8217;ll be adding an admin tool to let you see a list of posts and pages containing broken images, along with a tool to automatically remove their <code>img</code> tags from the database.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/remove-broken-images.1.4.1.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "broken-images": "broken images",
        "deleted-images": "deleted images",
        "media-library": "media library",
        "missing-images": "missing images",
        "remove": "remove"
    },
    "stable_tag": "1.4.1",
    "versions": {
        "1.1.0": "https://downloads.wordpress.org/plugin/remove-broken-images.1.1.0.zip",
        "1.2.0": "https://downloads.wordpress.org/plugin/remove-broken-images.1.2.0.zip",
        "1.3.0": "https://downloads.wordpress.org/plugin/remove-broken-images.1.3.0.zip",
        "1.3.1": "https://downloads.wordpress.org/plugin/remove-broken-images.1.3.1.zip",
        "1.4.0": "https://downloads.wordpress.org/plugin/remove-broken-images.1.4.0.zip",
        "1.4.1": "https://downloads.wordpress.org/plugin/remove-broken-images.1.4.1.zip",
        "1.4.2-beta-1": "https://downloads.wordpress.org/plugin/remove-broken-images.1.4.2-beta-1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/remove-broken-images.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://room34.com/payments",
    "banners": {
        "low": "https://ps.w.org/remove-broken-images/assets/banner-772x250.png?rev=2633771",
        "high": "https://ps.w.org/remove-broken-images/assets/banner-1544x500.png?rev=2633771"
    },
    "icons": {
        "1x": "https://ps.w.org/remove-broken-images/assets/icon.svg?rev=2633771",
        "svg": "https://ps.w.org/remove-broken-images/assets/icon.svg?rev=2633771"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}