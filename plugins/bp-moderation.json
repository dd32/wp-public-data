{
    "name": "BuddyPress Moderation",
    "slug": "bp-moderation",
    "version": "0.1.7",
    "author": "<a href=\"http://flweb.it\">Francesco Laffi</a>",
    "author_profile": "https://profiles.wordpress.org/francescolaffi/",
    "contributors": {
        "francescolaffi": {
            "profile": "https://profiles.wordpress.org/francescolaffi/",
            "avatar": "https://secure.gravatar.com/avatar/225d14114dc6e632c0fa4d7a86b61225?s=96&d=monsterid&r=g",
            "display_name": "francescolaffi"
        },
        "saurabhshukla": {
            "profile": "https://profiles.wordpress.org/saurabhshukla/",
            "avatar": "https://secure.gravatar.com/avatar/da8204773edbc215373fb72b78d9fe03?s=96&d=monsterid&r=g",
            "display_name": "Saurabh"
        }
    },
    "requires": false,
    "tested": false,
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 46,
    "ratings": {
        "5": 3,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 6
    },
    "num_ratings": 9,
    "support_url": "https://wordpress.org/support/plugin/bp-moderation/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 20,
    "downloaded": 25873,
    "last_updated": "2014-11-18 5:57pm GMT",
    "added": "2010-05-02",
    "homepage": "http://buddypress.org/community/groups/bp-moderation/",
    "sections": {
        "description": "<h4>LATEST VERSION REQUIRE PHP 5.3+</h4>\n<p>Site admins can already edit or delete every content in a BP community, but<br />\nanalyzing every content posted could be a crazy/impossible work in big communities.<br />\nThis plugin use crowdsourcing to help site admins finding contents to moderate.</p>\n<p>It adds links/buttons to flag inappropriate user generated content in the site,<br />\nso members can easily flag contents as inappropriate. Admins can then see all the<br />\nreported contents in an organized table in the wp backend, order/filter them and<br />\ntake actions (ignore, delete, mark/unmark the content author as spammer, &#8230;).</p>\n<p>Another table show members, how many posts from them have been reported/moderated,<br />\nhow many posts have they reported and moderated from admin. Here find bad/good<br />\nmembers and take action on them.</p>\n<p>Note on private messages:<br />\n* private message sender: reporting this will flag the sender, not the thread, but the admin is not able to see the messages, effective against bulk spammer<br />\n* private message: in this case a sender is reported in a specific thread, the admin can see the messages, more useful for moderation (eg k-12 communities)<br />\nthe latter is a bit hackish and could be less solid on future bp upgrades, the first one is based on apis that should be more stable</p>\n<p>Use <a href=\"https://wordpress.org/support/plugin/bp-moderation\" rel=\"ugc\">support forum on wordpress.org</a><br />\nfor support and discussion.</p>\n<p>The default style uses one icon from http://www.famfamfam.com/lab/icons/silk/<br />\n(cc-by-2.5) and one from http://damieng.com/creative/icons/silk-companion-1-icons<br />\n(cc-by-3.0), so if you use default style give credit to them somewhere in your site.</p>\n<h3>Moderator panel</h3>\n<p>You can access the backend panel from the &#8220;BP Moderation&#8221; link in your<br />\nWordpress admin menu.</p>\n<p>There are three tabs on the top: &#8220;contents&#8221;, &#8220;users&#8221;, &#8220;settings&#8221;.</p>\n<h4>Contents view</h4>\n<p>In this view you can see the reported contents.</p>\n<p>Use the custom query filter/order contents.</p>\n<p>The contents table has three columns:</p>\n<ol>\n<li>info on the content author</li>\n<li>info on the content itself ( and link to take actions on it on mouseover )</li>\n<li>info on the flags on this content</li>\n</ol>\n<h4>Users view</h4>\n<p>In this view you can see users that reported a content or users whom contents<br />\nhave been reported.</p>\n<p>Use the custom query filter/order contents.</p>\n<p>The contents table has three columns:</p>\n<ol>\n<li>info on the user itself</li>\n<li>info on the contents generated by the user and flagged by others</li>\n<li>info on the contents generated by others and flagged by the user</li>\n</ol>\n<h4>Hotkeys</h4>\n<p>You can enable and disable hotkeys with the link displayed under contents and users tables.</p>\n<p>I tried to make hotkeys similar wordpress comments table hotkeys, if you never<br />\nused them, give a look to <a href=\"https://codex.wordpress.org/Keyboard_Shortcuts\" rel=\"nofollow ugc\">this codex page</a>.</p>\n<p>When a row is selected with hotkeys the possible keys will be shown next to the actions links.</p>\n<p>Hotkeys in both tables:</p>\n<ul>\n<li>j/k: moves down/up</li>\n<li>x: check current row for bulk actions</li>\n<li>shift+x: invert row selection</li>\n<li>c: direct contact selected user (or selected content author)</li>\n<li>s/u: mark as spammer selected user (or selected content author) / unmark him</li>\n</ul>\n<p>Only in contents table:</p>\n<ul>\n<li>v: view content</li>\n<li>a: approve (ignore)</li>\n<li>e: edit</li>\n<li>m: mark as moderated</li>\n<li>d: delete</li>\n</ul>\n<p>Only in user table:</p>\n<ul>\n<li>b: see the contents generated by the selected user and flagged by others in the content view</li>\n<li>g: see the contents generated by others and flagged by the selected user in the content view</li>\n</ul>\n<p>Bulk hotkeys:</p>\n<p>Some keys can be triggered on all selected rows if pressed with shift.<br />\nThose keys are s,u,a,m,d.</p>\n<h3>Integration guide</h3>\n<p>= Introduction =<br />\nThis guide aims to explain how integrate bp-moderation with custom content types,<br />\nwp/bp core content types are already covered by the plugin, but you can write your<br />\nown custom content type definitions also for them.</p>\n<p>It&#8217;s important to understand how bp-moderation differentiate/recognize contents:<br />\neach content have to be identified by an internal content type slug (you choose<br />\nit in your custom content type definition) and one or two bigint ids.</p>\n<p>Decide a convention with 2 ids for your content type, is not something you can change<br />\nlater. You have to call bp-moderation methods using always the same convention and<br />\nbp-moderation will use the same one when referring to your contents.<br />\nIf your contents are tied with the activity stream you already have chosen a convention<br />\nfor primary and secondary ids, using the same convention you use with activities<br />\nwill make things easier. If you only have one id use 0 for the secondary id.</p>\n<h4>Register a content type</h4>\n<p>The main entry point in bp-moderation is bpModeration::register_content_type(), it<br />\nallows you to register a content type and has to be called at every page load.</p>\n<p>You&#8217;ll need to provide:</p>\n<ul>\n<li>a slug: used to differentiate between content types  (alfanumeric and underscore only)</li>\n<li>a label: human readable name of the content type (used in backend)</li>\n<li>some callbacks: called by bp-moderation to request information/operations on your contents</li>\n<li>activity types: the activity types that your content are posted on the activity stream with (if any)</li>\n</ul>\n<h4>Code sample</h4>\n<pre><code>examples/bpMod_ContentType_BlogPostExample.php is a code sample that shows\n</code></pre>\n<p>how to integrate content types with bp-moderation taking blog posts as an example,<br />\nyou can also modify and adapt it to your content type.</p>\n<p>Other informations are in the doc of <code>bpModeration::register_content_type()</code> and<br />\n    bpModFrontend::get_link(), those are most likely the only two bp-moderation<br />\nmethods you need to use.</p>\n<p>All core content types are in bpModDefaultContentTypes.php, but they are hardcoded<br />\nfor speed reasons, so don&#8217;t use them as an example.</p>\n<h4>Advanced integration with activities</h4>\n<p>If you use the same primary and secondary id convention for activities and bp-moderation<br />\nyou only have to tell the activity types of your content when registering,<br />\nbp-moderation is already hooked in the activity loop and will print the links<br />\nfor your contents too.</p>\n<p>Instead if some reason you cat use the same convention or you want to customize<br />\nthe activity loop flag button, you can use the filter</p>\n<pre><code>    bp_moderation_activity_loop_link_args_{the activity type}\n</code></pre>\n<p>where <code>{the activity type}</code> is the activity type you&#8217;d like to filter.<br />\nLook in <code>bpModFrontend::activity_loop_link()</code> to see what to filter.</p>\n<h4>Contents generated by non members</h4>\n<p>It&#8217;s possible to have contents generated by not members (e.g. blog comments).<br />\nIf you have to provide a user id to bp-moderation give 0 for it, but you&#8217;ll also<br />\nneed to filter author information for displaying them in backend table. Use the filter</p>\n<pre><code>    bp_moderation_author_details_for_{slug used in content type registration}\n</code></pre>\n<p>to add missing info, look in <code>bpModBackend::author_details()</code> to see info needed.</p>\n<h4>OK I coded my custom content type, and now?</h4>\n<p>If you have coded a custom content type and you think that could be widely useful,<br />\ncontact me and it could easily get included in the bp-moderation plugin.</p>\n<p>If you integrated your plugin and you prefer to keep the custom content type in<br />\nyour plugin it&#8217;s fine, I guess is more convenient and you can update it together<br />\nwith your plugin.<br />\nRemember to check if bp-moderation is active before including unnecessary code<br />\nor calling non-existing functions: safest way is to use the action <code>bp_moderation_init</code><br />\nfor including/registering it.</p>\n<p>If none of the above this is the easier way to get a custom content type loaded:</p>\n<ul>\n<li>place your custom content type php file in <code>wp-content/plugins/bp-moderation-content-types/</code></li>\n<li>copy this line in wp-config.php <code>define('BPMOD_LOAD_CUSTOM_CONTENT_TYPES', true);</code></li>\n</ul>\n<h4>Possible future content type system features</h4>\n<ul>\n<li>differentiate between trash, untrash and delete, or maybe custom actions on content</li>\n<li>methods to be called when a content is edited/trashed/untrashed/deleted so bp-moderation<br />\ncan display also what happen outside of it</li>\n</ul>\n",
        "installation": "<ol>\n<li>Install, activate and configure <a href=\"https://buddypress.org/download/\" rel=\"nofollow ugc\">BuddyPress</a>.</li>\n<li>Install BuddyPress Moderation either by:\n<ul>\n<li>using the <a href=\"http://coveredwebservices.com/wp-plugin-install/?plugin=bp-moderation\" rel=\"nofollow ugc\">installer wizard</a>;</li>\n<li>search bp-moderation in the built in WordPress plugin installer;</li>\n<li>download it manually and upload it to <code>/wp-content/plugins/bp-moderation/</code>.</li>\n</ul>\n</li>\n<li>Activate BuddyPress Moderation in the &#8220;Plugins&#8221; admin panel using the &#8220;Activate&#8221; link.</li>\n<li>Configure settings: go to &#8220;BuddyPress&#8221; &gt; &#8220;Moderation&#8221; from the WordPress admin menu,<br />\nthen select the &#8220;Settings&#8221; tab on the top.</li>\n<li>For a quick start you can read the &#8220;Moderator panel&#8221; section of this readme/webpage.</li>\n</ol>\n",
        "faq": "\n<h4>Where do flags show up?</h4>\n<p>\n<p>Flags show up in &#8220;BP Moderation&#8221; from the WordPress admin menu.<br />\nRead the &#8220;Moderator panel&#8221; section of this guide for more information.</p>\n</p>\n<h4>How can I use keyboard shortcuts?</h4>\n<p>\n<p>Read the &#8220;Moderator panel &gt; Hotkeys&#8221; section of this guide.</p>\n</p>\n\n",
        "changelog": "<h4>0.1.1</h4>\n<ul>\n<li>first stable release</li>\n</ul>\n<h4>0.1.2</h4>\n<ul>\n<li>bugfixes</li>\n</ul>\n<h4>0.1.4</h4>\n<ul>\n<li>wp 3.1 compatibility</li>\n</ul>\n<h4>0.1.5</h4>\n<ul>\n<li>bp 1.5 compatibility</li>\n</ul>\n<h4>0.1.7</h4>\n<ul>\n<li>bp 1.7 and 1.8 compatibility</li>\n<li>requires PHP 5.3</li>\n</ul>\n"
    },
    "short_description": "Adds links/buttons to flag inappropriate content and gives a convenient way to moderators to view reports and take actions.",
    "description": "<h4>LATEST VERSION REQUIRE PHP 5.3+</h4>\n<p>Site admins can already edit or delete every content in a BP community, but<br />\nanalyzing every content posted could be a crazy/impossible work in big communities.<br />\nThis plugin use crowdsourcing to help site admins finding contents to moderate.</p>\n<p>It adds links/buttons to flag inappropriate user generated content in the site,<br />\nso members can easily flag contents as inappropriate. Admins can then see all the<br />\nreported contents in an organized table in the wp backend, order/filter them and<br />\ntake actions (ignore, delete, mark/unmark the content author as spammer, &#8230;).</p>\n<p>Another table show members, how many posts from them have been reported/moderated,<br />\nhow many posts have they reported and moderated from admin. Here find bad/good<br />\nmembers and take action on them.</p>\n<p>Note on private messages:<br />\n* private message sender: reporting this will flag the sender, not the thread, but the admin is not able to see the messages, effective against bulk spammer<br />\n* private message: in this case a sender is reported in a specific thread, the admin can see the messages, more useful for moderation (eg k-12 communities)<br />\nthe latter is a bit hackish and could be less solid on future bp upgrades, the first one is based on apis that should be more stable</p>\n<p>Use <a href=\"https://wordpress.org/support/plugin/bp-moderation\" rel=\"ugc\">support forum on wordpress.org</a><br />\nfor support and discussion.</p>\n<p>The default style uses one icon from http://www.famfamfam.com/lab/icons/silk/<br />\n(cc-by-2.5) and one from http://damieng.com/creative/icons/silk-companion-1-icons<br />\n(cc-by-3.0), so if you use default style give credit to them somewhere in your site.</p>\n<h3>Moderator panel</h3>\n<p>You can access the backend panel from the &#8220;BP Moderation&#8221; link in your<br />\nWordpress admin menu.</p>\n<p>There are three tabs on the top: &#8220;contents&#8221;, &#8220;users&#8221;, &#8220;settings&#8221;.</p>\n<h4>Contents view</h4>\n<p>In this view you can see the reported contents.</p>\n<p>Use the custom query filter/order contents.</p>\n<p>The contents table has three columns:</p>\n<ol>\n<li>info on the content author</li>\n<li>info on the content itself ( and link to take actions on it on mouseover )</li>\n<li>info on the flags on this content</li>\n</ol>\n<h4>Users view</h4>\n<p>In this view you can see users that reported a content or users whom contents<br />\nhave been reported.</p>\n<p>Use the custom query filter/order contents.</p>\n<p>The contents table has three columns:</p>\n<ol>\n<li>info on the user itself</li>\n<li>info on the contents generated by the user and flagged by others</li>\n<li>info on the contents generated by others and flagged by the user</li>\n</ol>\n<h4>Hotkeys</h4>\n<p>You can enable and disable hotkeys with the link displayed under contents and users tables.</p>\n<p>I tried to make hotkeys similar wordpress comments table hotkeys, if you never<br />\nused them, give a look to <a href=\"https://codex.wordpress.org/Keyboard_Shortcuts\" rel=\"nofollow ugc\">this codex page</a>.</p>\n<p>When a row is selected with hotkeys the possible keys will be shown next to the actions links.</p>\n<p>Hotkeys in both tables:</p>\n<ul>\n<li>j/k: moves down/up</li>\n<li>x: check current row for bulk actions</li>\n<li>shift+x: invert row selection</li>\n<li>c: direct contact selected user (or selected content author)</li>\n<li>s/u: mark as spammer selected user (or selected content author) / unmark him</li>\n</ul>\n<p>Only in contents table:</p>\n<ul>\n<li>v: view content</li>\n<li>a: approve (ignore)</li>\n<li>e: edit</li>\n<li>m: mark as moderated</li>\n<li>d: delete</li>\n</ul>\n<p>Only in user table:</p>\n<ul>\n<li>b: see the contents generated by the selected user and flagged by others in the content view</li>\n<li>g: see the contents generated by others and flagged by the selected user in the content view</li>\n</ul>\n<p>Bulk hotkeys:</p>\n<p>Some keys can be triggered on all selected rows if pressed with shift.<br />\nThose keys are s,u,a,m,d.</p>\n<h3>Integration guide</h3>\n<p>= Introduction =<br />\nThis guide aims to explain how integrate bp-moderation with custom content types,<br />\nwp/bp core content types are already covered by the plugin, but you can write your<br />\nown custom content type definitions also for them.</p>\n<p>It&#8217;s important to understand how bp-moderation differentiate/recognize contents:<br />\neach content have to be identified by an internal content type slug (you choose<br />\nit in your custom content type definition) and one or two bigint ids.</p>\n<p>Decide a convention with 2 ids for your content type, is not something you can change<br />\nlater. You have to call bp-moderation methods using always the same convention and<br />\nbp-moderation will use the same one when referring to your contents.<br />\nIf your contents are tied with the activity stream you already have chosen a convention<br />\nfor primary and secondary ids, using the same convention you use with activities<br />\nwill make things easier. If you only have one id use 0 for the secondary id.</p>\n<h4>Register a content type</h4>\n<p>The main entry point in bp-moderation is bpModeration::register_content_type(), it<br />\nallows you to register a content type and has to be called at every page load.</p>\n<p>You&#8217;ll need to provide:</p>\n<ul>\n<li>a slug: used to differentiate between content types  (alfanumeric and underscore only)</li>\n<li>a label: human readable name of the content type (used in backend)</li>\n<li>some callbacks: called by bp-moderation to request information/operations on your contents</li>\n<li>activity types: the activity types that your content are posted on the activity stream with (if any)</li>\n</ul>\n<h4>Code sample</h4>\n<pre><code>examples/bpMod_ContentType_BlogPostExample.php is a code sample that shows\n</code></pre>\n<p>how to integrate content types with bp-moderation taking blog posts as an example,<br />\nyou can also modify and adapt it to your content type.</p>\n<p>Other informations are in the doc of <code>bpModeration::register_content_type()</code> and<br />\n    bpModFrontend::get_link(), those are most likely the only two bp-moderation<br />\nmethods you need to use.</p>\n<p>All core content types are in bpModDefaultContentTypes.php, but they are hardcoded<br />\nfor speed reasons, so don&#8217;t use them as an example.</p>\n<h4>Advanced integration with activities</h4>\n<p>If you use the same primary and secondary id convention for activities and bp-moderation<br />\nyou only have to tell the activity types of your content when registering,<br />\nbp-moderation is already hooked in the activity loop and will print the links<br />\nfor your contents too.</p>\n<p>Instead if some reason you cat use the same convention or you want to customize<br />\nthe activity loop flag button, you can use the filter</p>\n<pre><code>    bp_moderation_activity_loop_link_args_{the activity type}\n</code></pre>\n<p>where <code>{the activity type}</code> is the activity type you&#8217;d like to filter.<br />\nLook in <code>bpModFrontend::activity_loop_link()</code> to see what to filter.</p>\n<h4>Contents generated by non members</h4>\n<p>It&#8217;s possible to have contents generated by not members (e.g. blog comments).<br />\nIf you have to provide a user id to bp-moderation give 0 for it, but you&#8217;ll also<br />\nneed to filter author information for displaying them in backend table. Use the filter</p>\n<pre><code>    bp_moderation_author_details_for_{slug used in content type registration}\n</code></pre>\n<p>to add missing info, look in <code>bpModBackend::author_details()</code> to see info needed.</p>\n<h4>OK I coded my custom content type, and now?</h4>\n<p>If you have coded a custom content type and you think that could be widely useful,<br />\ncontact me and it could easily get included in the bp-moderation plugin.</p>\n<p>If you integrated your plugin and you prefer to keep the custom content type in<br />\nyour plugin it&#8217;s fine, I guess is more convenient and you can update it together<br />\nwith your plugin.<br />\nRemember to check if bp-moderation is active before including unnecessary code<br />\nor calling non-existing functions: safest way is to use the action <code>bp_moderation_init</code><br />\nfor including/registering it.</p>\n<p>If none of the above this is the easier way to get a custom content type loaded:</p>\n<ul>\n<li>place your custom content type php file in <code>wp-content/plugins/bp-moderation-content-types/</code></li>\n<li>copy this line in wp-config.php <code>define('BPMOD_LOAD_CUSTOM_CONTENT_TYPES', true);</code></li>\n</ul>\n<h4>Possible future content type system features</h4>\n<ul>\n<li>differentiate between trash, untrash and delete, or maybe custom actions on content</li>\n<li>methods to be called when a content is edited/trashed/untrashed/deleted so bp-moderation<br />\ncan display also what happen outside of it</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.7.zip",
    "upgrade_notice": {
        "0.1.1": "<p>First bp-moderation release</p>",
        "0.1.2": "<p>Fixes some bugs</p>",
        "0.1.3": "<p>Other fixes</p>",
        "0.1.4": "<p>wp 3.1 compatibility: tested with wp3.1+bp1.2.8, not tested with previous versions</p>",
        "0.1.5": "<p>bp 1.5 compatibility</p>",
        "0.1.7": "<p>Requires PHP 5.3\nModeration page has now a top-level menu item</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/bp-moderation/assets/screenshot-1.png?rev=745024",
            "caption": "<strong>Activity Loop Integration</strong> — contents can be flagged directly from the activity that represent them"
        },
        {
            "src": "https://ps.w.org/bp-moderation/assets/screenshot-2.png?rev=745024",
            "caption": "<strong>Ajax Flagging</strong> — the flagging animation"
        }
    ],
    "tags": {
        "buddypress": "buddypress",
        "flagging": "flagging",
        "moderation": "moderation"
    },
    "stable_tag": "0.1.7",
    "versions": {
        "0": "https://downloads.wordpress.org/plugin/bp-moderation.0.zip",
        "0.1.0": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.0.zip",
        "0.1.1": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.1.zip",
        "0.1.2": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.2.zip",
        "0.1.3": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.3.zip",
        "0.1.4": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.4.zip",
        "0.1.5": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.5.zip",
        "0.1.6": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.6.zip",
        "0.1.7": "https://downloads.wordpress.org/plugin/bp-moderation.0.1.7.zip",
        "trunk": "https://downloads.wordpress.org/plugin/bp-moderation.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/bp-moderation.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 46,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}