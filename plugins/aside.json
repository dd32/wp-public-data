{
    "name": "Aside Widget",
    "slug": "aside",
    "version": "0.9",
    "author": "<a href=\"http://www.pdjr.eu/paulreeve/\">Paul Reeve</a>",
    "author_profile": "https://profiles.wordpress.org/preeve9534/",
    "contributors": {
        "preeve9534": {
            "profile": "https://profiles.wordpress.org/preeve9534/",
            "avatar": "https://secure.gravatar.com/avatar/10ddce45fd3d98247c8b4d77a9706551?s=96&d=monsterid&r=g",
            "display_name": "preeve9534"
        }
    },
    "requires": "2.8",
    "tested": "3.2.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/aside/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 3238,
    "last_updated": "2011-10-05 14:15:00",
    "added": "2010-12-20",
    "homepage": "http://wordpress.org/extend/plugins/aside/",
    "sections": {
        "description": "<p>Aside widget allows a page or post to insert arbitrary content into a<br />\nsidebar (or other dynamic widget area), supporting something similar to the<br />\ntypographic notion of a &#8216;pull-quote&#8217;.</p>\n<p>Aside widget is triggered by the presence, in those pages which require it,<br />\nof one or more &#8216;aside&#8217; custom fields with values that specify the content<br />\nof one or more widgets.  Shifting the locus of widget content control from<br />\nthe widget to the page makes for more natural authoring of conditional<br />\ncontent which needs to be associated with just a small number of pages.</p>\n<p>As well as text, an &#8216;aside&#8217; custom field may contain HTML and/or PHP code.<br />\nOf course, any HTML should be crafted so as not to break the containing<br />\npage structure.  PHP parsing must be explicitly enabled in the widget<br />\nadministration panel and any PHP in the &#8216;aside&#8217; field value must be enclosed<br />\nin the usual tags for it to be recognised.</p>\n<p>A little bit of short-form magic can be triggered by formatting the aside<br />\nfield value in the following way.</p>\n<pre><code>{#|!|!!}id[,prefix,suffix]\n</code></pre>\n<p>A value of the form #id (e.g. &#8216;#232&#8217;) causes the the page or post<br />\nidentified by the integer id to be used as the widget content.</p>\n<p>A value of the form !id (e.g. &#8216;!myasidediv&#8217;) causes the contents of the<br />\nHTML DIV identified by id to be used as the widget content.  The selected<br />\nDIV must reside withing the current page or post.  Normally, the selected<br />\nDIV is removed from display within the page proper, but a value of the form<br />\n!!id causes the DIV to remain in the normal page flow.  Processing of page<br />\ncontent for the identified DIV is unsophisticated: the DIV must not itself<br />\ncontain any other DIVs and the DIV id attribute must be the first attribute<br />\nafter the tag name.</p>\n<p>Prefix and suffix can be used to specify arbitrary text/HTML which will<br />\nbe used to bracket the selected widget content.  PHP can also be used, but<br />\nwill only work if parsing is enabled as described above.</p>\n<h3>Examples</h3>\n<p>A few examples of the use of magic values in the &#8216;aside&#8217; field.</p>\n<pre><code>#232  \n</code></pre>\n<p>Display page 232 in the aside widget.</p>\n<pre><code>!mydiv  \n</code></pre>\n<p>Remove the contents of <code>&lt;div id='mydiv'&gt;...&lt;/div&gt;</code> from the current<br />\npage and display it in the aside widget.</p>\n<pre><code>!!mydiv  \n</code></pre>\n<p>As above, but leave the content in the page.</p>\n<pre><code>!!mydiv,&lt;span style=”bigquote”&gt;,&lt;/span&gt;  \n</code></pre>\n<p>As above, but style the widget output in some special way.</p>\n",
        "installation": "<ol>\n<li>Place the zip archive in /wp-content/plugins.</li>\n<li>Unzip the archive (and then delete it if you wish).</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n<li>Use the widget like any other widget.</li>\n</ol>\n",
        "faq": "\n<h4>There&#8217;s some kind of error on line 43!</h4>\n<p>\n<p>That error means that your PHP code is incorrect or otherwise broken.</p>\n<p>Bugs in this widget on line 43 are not possible.  Any errors attributed to<br />\naside.php at line 43 are errors in code you put into an aside value field.<br />\nThe reason that it shows the error being in aside.php is because that is<br />\nwhere your code is actually being run from.  Please don&#8217;t email me about<br />\nerrors in aside.php on line 43.</p>\n</p>\n\n",
        "changelog": "<h4>0.9</h4>\n<p>Release.</p>\n"
    },
    "short_description": "Display arbitrary sidebar content conditional upon a particular post or page.",
    "description": "<p>Aside widget allows a page or post to insert arbitrary content into a<br />\nsidebar (or other dynamic widget area), supporting something similar to the<br />\ntypographic notion of a &#8216;pull-quote&#8217;.</p>\n<p>Aside widget is triggered by the presence, in those pages which require it,<br />\nof one or more &#8216;aside&#8217; custom fields with values that specify the content<br />\nof one or more widgets.  Shifting the locus of widget content control from<br />\nthe widget to the page makes for more natural authoring of conditional<br />\ncontent which needs to be associated with just a small number of pages.</p>\n<p>As well as text, an &#8216;aside&#8217; custom field may contain HTML and/or PHP code.<br />\nOf course, any HTML should be crafted so as not to break the containing<br />\npage structure.  PHP parsing must be explicitly enabled in the widget<br />\nadministration panel and any PHP in the &#8216;aside&#8217; field value must be enclosed<br />\nin the usual tags for it to be recognised.</p>\n<p>A little bit of short-form magic can be triggered by formatting the aside<br />\nfield value in the following way.</p>\n<pre><code>{#|!|!!}id[,prefix,suffix]\n</code></pre>\n<p>A value of the form #id (e.g. &#8216;#232&#8217;) causes the the page or post<br />\nidentified by the integer id to be used as the widget content.</p>\n<p>A value of the form !id (e.g. &#8216;!myasidediv&#8217;) causes the contents of the<br />\nHTML DIV identified by id to be used as the widget content.  The selected<br />\nDIV must reside withing the current page or post.  Normally, the selected<br />\nDIV is removed from display within the page proper, but a value of the form<br />\n!!id causes the DIV to remain in the normal page flow.  Processing of page<br />\ncontent for the identified DIV is unsophisticated: the DIV must not itself<br />\ncontain any other DIVs and the DIV id attribute must be the first attribute<br />\nafter the tag name.</p>\n<p>Prefix and suffix can be used to specify arbitrary text/HTML which will<br />\nbe used to bracket the selected widget content.  PHP can also be used, but<br />\nwill only work if parsing is enabled as described above.</p>\n<h3>Examples</h3>\n<p>A few examples of the use of magic values in the &#8216;aside&#8217; field.</p>\n<pre><code>#232  \n</code></pre>\n<p>Display page 232 in the aside widget.</p>\n<pre><code>!mydiv  \n</code></pre>\n<p>Remove the contents of <code>&lt;div id='mydiv'&gt;...&lt;/div&gt;</code> from the current<br />\npage and display it in the aside widget.</p>\n<pre><code>!!mydiv  \n</code></pre>\n<p>As above, but leave the content in the page.</p>\n<pre><code>!!mydiv,&lt;span style=”bigquote”&gt;,&lt;/span&gt;  \n</code></pre>\n<p>As above, but style the widget output in some special way.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/aside.0.9.zip",
    "upgrade_notice": {
        "0.9": "<p>Not a change - just a release!</p>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/aside/trunk/screenshot-1.png?rev=1566867",
            "caption": "Widgets admin page showing aside widget in use."
        }
    ],
    "tags": {
        "aside": "aside",
        "conditional": "conditional",
        "php": "php",
        "pull-quote": "pull-quote",
        "widget": "widget"
    },
    "stable_tag": "0.9",
    "versions": {
        "0.9": "https://downloads.wordpress.org/plugin/aside.0.9.zip",
        "trunk": "https://downloads.wordpress.org/plugin/aside.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=preeve%40pdjr%2eu",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/aside.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}