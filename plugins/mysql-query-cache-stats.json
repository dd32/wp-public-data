{
    "name": "MySQL query cache stats",
    "slug": "mysql-query-cache-stats",
    "version": "1.0.4",
    "author": "<a href=\"https://profiles.wordpress.org/morisdov\">Moris Dov</a>",
    "author_profile": "https://profiles.wordpress.org/morisdov/",
    "contributors": {
        "morisdov": {
            "profile": "https://profiles.wordpress.org/morisdov/",
            "avatar": "https://secure.gravatar.com/avatar/444758b33b67912db15bcca2b19af580?s=96&d=monsterid&r=g",
            "display_name": "Moris Papasmadov"
        }
    },
    "requires": "3.6",
    "tested": "6.4.5",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/mysql-query-cache-stats/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 30,
    "downloaded": 1120,
    "last_updated": "2024-03-31 8:59am GMT",
    "added": "2020-09-23",
    "homepage": "https://wordpress.org/plugins/mysql-query-cache-stats",
    "sections": {
        "description": "<p>Admin dashboard widget measuring and monitoring MySQL / MariaDB <a href=\"https://mariadb.com/resources/blog/flexible-mariadb-server-query-cache\" title=\"MariaDB Query Cache\" rel=\"nofollow ugc\">query cache</a> performance &amp; statistics &#8211; to optimize sizing configuration and highlight bottlenecks.</p>\n<h4>Why</h4>\n<p>Database Query for <a href=\"https://kinsta.com/knowledgebase/wp-options-autoloaded-data/#what-is-the-wp_options-table\" title=\"What is the wp_options table\" rel=\"nofollow ugc\">Options Autoload</a> is repeatedly executed for each WP page load and its poor performance has been identified as a good indicator for a poorly performing database resulting in slow site.</p>\n<h4>How</h4>\n<ul>\n<li>Use dashboard widget to measure and monitor <code>Options Autoload Query Time</code></li>\n<li>Use dashboard widget to measure and monitor <code>Options Autoload Query Size</code><br />\nThis query result size increases constantly over time, as WP site usage grows &#8211; but its oversized sudden growth or constant balooning must not be overlooked.</li>\n</ul>\n<p>Heavy plugins might rely heavily on adding data to <code>Options Autoload Query Size</code>.<br />\nPoorly written plugins causing WP performance degradation have been found to constantly increase this query result size.</p>\n<h4>Time Metrics</h4>\n<p>&#8216;Options Autoload Query Time&#8217; is measured in milliseconds (ms)</p>\n<p>0 ms &#8211; great performance below one millisecond<br />\n 1-2 ms &#8211; good performance<br />\n 3-5 ms &#8211; OK performance<br />\n 50+ ms &#8211; poor performance should be investigated</p>\n<h4>Size Metrics</h4>\n<p>&#8216;Options Autoload Size&#8217; is measured in Bytes<br />\nIf you have the control to enable the database server wide query cache &#8211; configure query_cache_limit to be larger than <code>Options Autoload Size</code></p>\n<p>20,000 Bytes &#8211; freshly installed clean wordpress site<br />\n 30,000 Bytes &#8211; small wordpress site<br />\n 50,000 Bytes &#8211; medium wordpress site<br />\n 250,000 Bytes &#8211; large wordpress site<br />\n 2,000,000+ Bytes &#8211; too large should be investigated<br />\n( <code>all above are rough metrics</code> )</p>\n",
        "faq": "\n<dt id='this%20plugin%20improves%20page%20load%20performance%20%3F'>\nThis plugin improves page load performance ?\n</h4>\n<p>\n<p>No, This plugin in itself does not improve performance by being installed, this plugin only measures time and size of database query.</p>\n</p>\n<dt id='this%20plugin%20improves%20database%20performance%20%3F'>\nThis plugin improves database performance ?\n</h4>\n<p>\n<p>No, This plugin in itself does not improve performance by being installed, an administrator should use the dashboard widget to measure, monitor and identify problems.</p>\n</p>\n<dt id='must%20database%20query%20cache%20be%20enabled%20%3F'>\nMust database query cache be enabled ?\n</h4>\n<p>\n<p>No, This plugin measures time and size of a very important database query and these measurements should be valuable to an administrator whether database query cache is enabled or not.</p>\n</p>\n\n",
        "changelog": "<h4>1.0.4</h4>\n<ul>\n<li>Added wp_options Autoload Query Time</li>\n</ul>\n<h4>1.0.3</h4>\n<ul>\n<li>Added wp_options Autoload Size</li>\n</ul>\n<h4>1.0.2</h4>\n<ul>\n<li>Added Database Size</li>\n<li>Added Refresh button</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>Added Questions, removed Queries<br />\nQuery cache does not cache statements executed within stored programs.<br />\nQueries differs from Questions in that it also counts statements executed within stored programs.<br />\nQuestions differs from Queries in that it doesn&#8217;t count statements executed within stored programs. </li>\n<li>Added widget button RESET QUERY CACHE<br />\nExecute database command RESET QUERY CACHE.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>First release</li>\n</ul>\n"
    },
    "short_description": "Admin dashboard widget measuring MySQL database performance &amp; query cache",
    "description": "<p>Admin dashboard widget measuring and monitoring MySQL / MariaDB <a href=\"https://mariadb.com/resources/blog/flexible-mariadb-server-query-cache\" title=\"MariaDB Query Cache\" rel=\"nofollow ugc\">query cache</a> performance &amp; statistics &#8211; to optimize sizing configuration and highlight bottlenecks.</p>\n<h4>Why</h4>\n<p>Database Query for <a href=\"https://kinsta.com/knowledgebase/wp-options-autoloaded-data/#what-is-the-wp_options-table\" title=\"What is the wp_options table\" rel=\"nofollow ugc\">Options Autoload</a> is repeatedly executed for each WP page load and its poor performance has been identified as a good indicator for a poorly performing database resulting in slow site.</p>\n<h4>How</h4>\n<ul>\n<li>Use dashboard widget to measure and monitor <code>Options Autoload Query Time</code></li>\n<li>Use dashboard widget to measure and monitor <code>Options Autoload Query Size</code><br />\nThis query result size increases constantly over time, as WP site usage grows &#8211; but its oversized sudden growth or constant balooning must not be overlooked.</li>\n</ul>\n<p>Heavy plugins might rely heavily on adding data to <code>Options Autoload Query Size</code>.<br />\nPoorly written plugins causing WP performance degradation have been found to constantly increase this query result size.</p>\n<h4>Time Metrics</h4>\n<p>&#8216;Options Autoload Query Time&#8217; is measured in milliseconds (ms)</p>\n<p>0 ms &#8211; great performance below one millisecond<br />\n 1-2 ms &#8211; good performance<br />\n 3-5 ms &#8211; OK performance<br />\n 50+ ms &#8211; poor performance should be investigated</p>\n<h4>Size Metrics</h4>\n<p>&#8216;Options Autoload Size&#8217; is measured in Bytes<br />\nIf you have the control to enable the database server wide query cache &#8211; configure query_cache_limit to be larger than <code>Options Autoload Size</code></p>\n<p>20,000 Bytes &#8211; freshly installed clean wordpress site<br />\n 30,000 Bytes &#8211; small wordpress site<br />\n 50,000 Bytes &#8211; medium wordpress site<br />\n 250,000 Bytes &#8211; large wordpress site<br />\n 2,000,000+ Bytes &#8211; too large should be investigated<br />\n( <code>all above are rough metrics</code> )</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/mysql-query-cache-stats.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/mysql-query-cache-stats/assets/screenshot-1.png?rev=2982947",
            "caption": "Active query cache stats"
        },
        {
            "src": "https://ps.w.org/mysql-query-cache-stats/assets/screenshot-2.png?rev=2983033",
            "caption": "Disabled query cache stats"
        },
        {
            "src": "https://ps.w.org/mysql-query-cache-stats/assets/screenshot-3.png?rev=2981933",
            "caption": "Execute database command RESET QUERY CACHE"
        }
    ],
    "tags": {
        "database": "database",
        "mariadb": "mariadb",
        "performance": "performance",
        "tuning": "tuning",
        "wp_options": "wp_options"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://www.childrensheartlink.org/donate",
    "banners": {
        "low": "https://ps.w.org/mysql-query-cache-stats/assets/banner-772x250.png?rev=2982519",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/mysql-query-cache-stats/assets/icon-128x128.png?rev=2403328",
        "2x": "https://ps.w.org/mysql-query-cache-stats/assets/icon-256x256.png?rev=2403328"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}