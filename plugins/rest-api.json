{
    "name": "WordPress REST API (Version 2)",
    "slug": "rest-api",
    "version": "2.0-beta15",
    "author": "<a href=\"http://v2.wp-api.org\">WP REST API Team</a>",
    "author_profile": "https://profiles.wordpress.org/rmccue/",
    "contributors": {
        "rmccue": {
            "profile": "https://profiles.wordpress.org/rmccue/",
            "avatar": "https://secure.gravatar.com/avatar/c57c8945079831fa3c19caef02e44614?s=96&d=monsterid&r=g",
            "display_name": "Ryan McCue"
        },
        "rachelbaker": {
            "profile": "https://profiles.wordpress.org/rachelbaker/",
            "avatar": "https://secure.gravatar.com/avatar/634b37a53babc18a5bda19722d5b41a3?s=96&d=monsterid&r=g",
            "display_name": "Rachel Baker"
        },
        "danielbachhuber": {
            "profile": "https://profiles.wordpress.org/danielbachhuber/",
            "avatar": "https://secure.gravatar.com/avatar/560b284fd021779ea4817470074133f1?s=96&d=monsterid&r=g",
            "display_name": "Daniel Bachhuber"
        },
        "joehoyle": {
            "profile": "https://profiles.wordpress.org/joehoyle/",
            "avatar": "https://secure.gravatar.com/avatar/0ceb885cc3d306af93c9764b2936d618?s=96&d=monsterid&r=g",
            "display_name": "Joe Hoyle"
        }
    },
    "requires": "4.6",
    "tested": "4.7.29",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 84,
    "ratings": {
        "5": 26,
        "4": 0,
        "3": 3,
        "2": 0,
        "1": 5
    },
    "num_ratings": 34,
    "support_url": "https://wordpress.org/support/plugin/rest-api/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 20000,
    "downloaded": 519007,
    "last_updated": "2016-10-19 2:05pm GMT",
    "added": "2009-04-25",
    "homepage": "https://github.com/WP-API/WP-API",
    "sections": {
        "description": "<p>WordPress is moving towards becoming a fully-fledged application framework, and we need new APIs. This project was born to create an easy-to-use, easy-to-understand and well-tested framework for creating these APIs, plus creating APIs for core.</p>\n<p>This plugin provides an easy to use REST API, available via HTTP. Grab your site&#8217;s data in simple JSON format, including users, posts, taxonomies and more. Retrieving or updating data is as simple as sending a HTTP request.</p>\n<p>Want to get your site&#8217;s posts? Simply send a <code>GET</code> request to <code>/wp-json/wp/v2/posts</code>. Update user with ID 4? Send a <code>PUT</code> request to <code>/wp-json/wp/v2/users/4</code>. Get all posts with the search term &#8220;awesome&#8221;? <code>GET /wp-json/wp/v2/posts?filter[s]=awesome</code>. It&#8217;s that easy.</p>\n<p>The WordPress REST API exposes a simple yet easy interface to WP Query, the posts API, post meta API, users API, revisions API and many more. Chances are, if you can do it with WordPress, the API will let you do it.</p>\n<p>The REST API also includes an easy-to-use JavaScript API based on Backbone models, allowing plugin and theme developers to get up and running without needing to know anything about the details of getting connected.</p>\n<p>Check out <a href=\"http://v2.wp-api.org/\" rel=\"nofollow ugc\">our documentation</a> for information on what&#8217;s available in the API and how to use it. We&#8217;ve also got documentation on extending the API with extra data for plugin and theme developers!</p>\n<p>All tickets for the project are being tracked on <a href=\"https://github.com/WP-API/WP-API\" rel=\"nofollow ugc\">GitHub</a>. You can also take a look at the <a href=\"http://make.wp-api.org/\" rel=\"nofollow ugc\">recent updates</a> for the project.</p>\n",
        "installation": "<p>Install the WP REST API via the plugin directory, or by uploading the files manually to your server.</p>\n<p>For full-flavoured API support, you&#8217;ll need to be using pretty permalinks to use the plugin, as it uses custom rewrite rules to power the API.</p>\n<p>Once you&#8217;ve installed and activated the plugin, <a href=\"http://v2.wp-api.org/\" rel=\"nofollow ugc\">check out the documentation</a> for details on your newly available endpoints.</p>\n",
        "changelog": "<h4>2.0 Beta 15.0 (October 07, 2016)</h4>\n<ul>\n<li>\n<p>Introduce support for Post Meta, Term Meta, User Meta, and Comment Meta in<br />\ntheir parent endpoints.</p>\n<p>For your meta fields to be exposed in the REST API, you need to register<br />\nthem. WordPress includes a <code>register_meta()</code> function which is not usually<br />\nrequired to get/set fields, but is required for API support.</p>\n<p>To register your field, simply call register_meta and set the show_in_rest<br />\nflag to true. Note: register_meta must be called separately for each meta<br />\nkey.</p>\n<p>(props @rmccue, @danielbachhuber, @kjbenk, @duncanjbrown, <a href=\"https://github.com/WP-API/WP-API/issues/2765\" rel=\"nofollow ugc\">#2765</a>)</p>\n</li>\n<li>\n<p>Introduce Settings endpoint.</p>\n<p>Expose options to the REST API with the <code>register_setting()</code> function, by<br />\npassing <code>$args = array( 'show_in_rest' =&gt; true )</code>. Note: WordPress 4.7 is<br />\nrequired. See changeset [38635][https://core.trac.wordpress.org/changeset/38635].</p>\n<p>(props @joehoyle, @fjarrett, @danielbachhuber, @jonathanbardo,<br />\n@greatislander, <a href=\"https://github.com/WP-API/WP-API/issues/2739\" rel=\"nofollow ugc\">#2739</a>)</p>\n</li>\n<li>\n<p>Attachments controller, change permissions check to match core.</p>\n<p>Check for the <code>upload_files</code> capability when creating an attachment.</p>\n<p>(props @nullvariable, @adamsilverstein, <a href=\"https://github.com/WP-API/WP-API/issues/2743\" rel=\"nofollow ugc\">#2743</a>)</p>\n</li>\n<li>\n<p>Add <code>?{taxonomy}_exclude=</code> query parameter</p>\n<p>This mirrors our existing support for ?{taxonomy}= filtering in the posts<br />\ncontroller (which allows querying for only records with are associated with<br />\nany of the provided term IDs for the specified taxonomy) by adding an<br />\nequivalent <code>_exclude</code> variant to list IDs of terms for which associated posts<br />\nshould NOT be returned.</p>\n<p>(props @kadamwhite, <a href=\"https://github.com/WP-API/WP-API/issues/2756\" rel=\"nofollow ugc\">#2756</a>)</p>\n</li>\n<li>\n<p>Use <code>get_comment_type()</code> when comparing updating comment status.</p>\n<p>Comments having a empty <code>comment_type</code> within WordPress bites us again.<br />\nFixes a bug where comments could not be updated because of bad comparison<br />\nlogic.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/2753\" rel=\"nofollow ugc\">#2753</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 13.0 (March 29, 2016)</h4>\n<ul>\n<li>\n<p>BREAKING CHANGE: Fix Content-Disposition header parsing.</p>\n<p>Allows regular form submissions from HTML forms, as well as properly formatted HTTP requests from clients. Note: this breaks backwards compatibility, as previously, the header parsing was completely wrong.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/2239\" rel=\"nofollow ugc\">#2239</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Use compact links for embedded responses if they are available.</p>\n<p>Introduces curies for sites running WordPress 4.5 or greater; no changes for those running WordPress 4.4.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/2412\" rel=\"nofollow ugc\">#2412</a>)</p>\n</li>\n<li>\n<p>JavaScript client updates:</p>\n<ul>\n<li>Support lodash, plus older and newer underscore: add an alias for <code>_.contains</code></li>\n<li>Add args and options on the model/collection prototypes</li>\n<li>Rework category/tag mixins to support new API structure</li>\n<li>Add workaround for the null/empty values returned by the API when creating a new post * these values are not accepted for subsequent updates/saves, so explicitly excluding them. See https://github.com/WP-API/WP-API/pull/2393</li>\n<li>Better handling of the (special) <code>me</code> endpoint</li>\n<li>Schema parsing cleanup</li>\n<li>Introduce <code>wp.api.loadPromise</code> so developers can ensure api load complete before using</li>\n</ul>\n<p>(props @adamsilverstein, <a href=\"https://github.com/WP-API/WP-API/pull/2403\" rel=\"nofollow ugc\">#2403</a>)</p>\n</li>\n<li>\n<p>Only adds alternate link header for publicly viewable CPTs.</p>\n<p>(props @bradyvercher, <a href=\"https://github.com/WP-API/WP-API/pull/2387\" rel=\"nofollow ugc\">#2387</a>)</p>\n</li>\n<li>\n<p>Adds <code>roles</code> param for <code>GET /wp/v2/users</code>.</p>\n<p>(props @BE-Webdesign, <a href=\"https://github.com/WP-API/WP-API/pull/2372\" rel=\"nofollow ugc\">#2372</a>)</p>\n</li>\n<li>\n<p>Declares <code>password</code> in user schema, but never displays it.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2386\" rel=\"nofollow ugc\">#2386</a>)</p>\n</li>\n<li>\n<p>Permits <code>edit</code> context for requests which can edit the user.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2383\" rel=\"nofollow ugc\">#2383</a>)</p>\n</li>\n<li>\n<p>Adds <code>rest_pre_insert_{$taxonomy}</code> filter for terms.</p>\n<p>(props @kjbenk, <a href=\"https://github.com/WP-API/WP-API/pull/2377\" rel=\"nofollow ugc\">#2377</a>)</p>\n</li>\n<li>\n<p>Supports taxonomy collection args on posts endpoint.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/2287\" rel=\"nofollow ugc\">#2287</a>)</p>\n</li>\n<li>\n<p>Removes post meta link from post response.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/2288\" rel=\"nofollow ugc\">#2288</a>)</p>\n</li>\n<li>\n<p>Registers <code>description</code> attribute when registering args from schema.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2362\" rel=\"nofollow ugc\">#2362</a>)</p>\n</li>\n<li>\n<p>Uses <code>$comment</code> from the database with <code>rest_insert_comment</code> action.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2349\" rel=\"nofollow ugc\">#2349</a>)</p>\n</li>\n<li>\n<p>Removes unnecessary global variables from users controller.</p>\n<p>(props @claudiosmweb, <a href=\"https://github.com/WP-API/WP-API/pull/2335\" rel=\"nofollow ugc\">#2335</a>)</p>\n</li>\n<li>\n<p>Ensures <code>GET /wp/v2/categories</code> with out of bounds offset doesn&#8217;t return results.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2313\" rel=\"nofollow ugc\">#2313</a>)</p>\n</li>\n<li>\n<p>Adds top-level support for date queries on posts and comments.</p>\n<p>(props @BE-Webdesign, <a href=\"https://github.com/WP-API/WP-API/pull/2266\" rel=\"nofollow ugc\">#2266</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2291\" rel=\"nofollow ugc\">#2291</a>)</p>\n</li>\n<li>\n<p>Respects <code>show_avatars</code> setting for comments.</p>\n<p>(props @BE-Webdesign, <a href=\"https://github.com/WP-API/WP-API/pull/2271\" rel=\"nofollow ugc\">#2271</a>)</p>\n</li>\n<li>\n<p>Uses cached <code>get_the_terms()</code> for terms-for-post for better performance.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/2257\" rel=\"nofollow ugc\">#2257</a>)</p>\n</li>\n<li>\n<p>Ensures comments search is an empty string.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/2256\" rel=\"nofollow ugc\">#2256</a>)</p>\n</li>\n<li>\n<p>If no title is provided in create attachment request or file metadata, falls back to filename.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2254\" rel=\"nofollow ugc\">#2254</a>)</p>\n</li>\n<li>\n<p>Removes unused <code>$img_url_basename</code> variable in attachments controller.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2250\" rel=\"nofollow ugc\">#2250</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 12.0 (February 9, 2016)</h4>\n<ul>\n<li>\n<p>BREAKING CHANGE: Removes meta endpoints from primary plugin.</p>\n<p>If your project depends on post meta endpoints, please install <a href=\"https://wordpress.org/plugins/rest-api-meta-endpoints/\" rel=\"ugc\">WP REST API Meta Endpoints</a>. For the gory history of meta, read <a href=\"https://github.com/WP-API/WP-API/issues/1425\" rel=\"nofollow ugc\">#1425</a> and linked issues. At this time, we recommend using <code>register_rest_field()</code> to expose meta (<a href=\"http://v2.wp-api.org/extending/modifying/\" rel=\"nofollow ugc\">docs</a>).</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2172\" rel=\"nofollow ugc\">#2172</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Returns original resource when deleting PTCU.</p>\n<p>Now that all resources require the <code>force</code> param, we don&#8217;t need to wrap delete responses with the <code>trash</code> state.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2163\" rel=\"nofollow ugc\">#2163</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Uses <code>roles</code> rather than <code>role</code> in the Users controller.</p>\n<p>Building the REST API gives us the opportunity to standardize on <code>roles</code>, instead of having both <code>roles</code> and <code>role</code>.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/2177\" rel=\"nofollow ugc\">#2177</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGES: Moves to consistent use of <code>context</code> throughout controllers.</p>\n<p>Contexts limit the data present in the response. Here&#8217;s how to think of them: <code>embed</code> correlates with sidebar representation, <code>view</code> represents the primary public view, and <code>edit</code> is the data expected for an editor.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2205\" rel=\"nofollow ugc\">#2205</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2204\" rel=\"nofollow ugc\">#2204</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2203\" rel=\"nofollow ugc\">#2203</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2218\" rel=\"nofollow ugc\">#2218</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2216\" rel=\"nofollow ugc\">#2216</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2230\" rel=\"nofollow ugc\">#2230</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2184\" rel=\"nofollow ugc\">#2184</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2235\" rel=\"nofollow ugc\">#2235</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Removes <code>post_*</code> query param support for <code>GET /wp/v2/comments</code>.</p>\n<p>The proper pattern is to use <code>GET /wp/v2/posts</code> to fetch the post IDs to limit the request to.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2165\" rel=\"nofollow ugc\">#2165</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Introduces <code>rest_validate_request_arg()</code>/<code>rest_sanitize_request_arg()</code>.</p>\n<p>Dedicated functions means we can use them for validating / sanitizing query args too. Removes <code>WP_REST_Controller::validate_schema_property()</code> and <code>WP_REST_Controller::sanitize_schema_property()</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2166\" rel=\"nofollow ugc\">#2166</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2213\" rel=\"nofollow ugc\">#2213</a>)</p>\n</li>\n<li>\n<p>Requires minimum value of 1 for <code>page</code> param.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2241\" rel=\"nofollow ugc\">#2241</a>)</p>\n</li>\n<li>\n<p>Introduces <code>media_type</code> and <code>mime_type</code> params for <code>GET /wp/v2/media</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2231\" rel=\"nofollow ugc\">#2231</a>)</p>\n</li>\n<li>\n<p>Uses the term cache for post data.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/2234\" rel=\"nofollow ugc\">#2234</a>)</p>\n</li>\n<li>\n<p>Supports for querying comments where <code>post=0</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1865\" rel=\"nofollow ugc\">#1865</a>)</p>\n</li>\n<li>\n<p>Exposes taxonomy and post type capabilities in <code>context=edit</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2216\" rel=\"nofollow ugc\">#2216</a>)</p>\n</li>\n<li>\n<p>Errors early when user can&#8217;t GET types or taxonomies when <code>context=edit</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2218\" rel=\"nofollow ugc\">#2218</a>)</p>\n</li>\n<li>\n<p>Passes original $request context to <code>prepare_items_query</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2211\" rel=\"nofollow ugc\">#2211</a>)</p>\n</li>\n<li>\n<p>Adds <code>parent</code> and <code>parent_exclude</code> params to GET Comments.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2206\" rel=\"nofollow ugc\">#2206</a>)</p>\n</li>\n<li>\n<p>Enforces minimum 1 and maximum 100 values for <code>per_page</code> parameter.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2209\" rel=\"nofollow ugc\">#2209</a>)</p>\n</li>\n<li>\n<p>Adds <code>author</code> and <code>author_exclude</code> params to GET Posts and Comments.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2202\" rel=\"nofollow ugc\">#2200</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2202\" rel=\"nofollow ugc\">#2200</a>)</p>\n</li>\n<li>\n<p>Adds <code>menu_order</code> param for <code>GET</code> Pages; support <code>menu_order</code> orderby.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2193\" rel=\"nofollow ugc\">#2193</a>)</p>\n</li>\n<li>\n<p>Only calls <code>sanitize_text_field()</code> when sanitizing <code>type=string,format=email</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2185\" rel=\"nofollow ugc\">#2185</a>)</p>\n</li>\n<li>\n<p>Validates <code>GET /wp/v2/comments</code> private query params.</p>\n<p>Returns an error when user doesn&#8217;t have permission to use them, instead of silently discarding.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2178\" rel=\"nofollow ugc\">#2178</a>)</p>\n</li>\n<li>\n<p>Explicitly prevents uploading attachments to other attachments or revisions.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2180\" rel=\"nofollow ugc\">#2180</a>)</p>\n</li>\n<li>\n<p>Permits user urls to be edited through the API.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2182\" rel=\"nofollow ugc\">#2182</a>)</p>\n</li>\n<li>\n<p>Marks all Status, Type and Taxonomy fields as <code>readonly</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2181\" rel=\"nofollow ugc\">#2181</a>)</p>\n</li>\n<li>\n<p>Adds validation callbacks to collection query params.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2170\" rel=\"nofollow ugc\">#2170</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2171\" rel=\"nofollow ugc\">#2171</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2176\" rel=\"nofollow ugc\">#2176</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2174\" rel=\"nofollow ugc\">#2174</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2175\" rel=\"nofollow ugc\">#2175</a>)</p>\n</li>\n<li>\n<p>Links taxonomy terms to the post type collections they support.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2167\" rel=\"nofollow ugc\">#2167</a>)</p>\n</li>\n<li>\n<p>Returns error when making a <code>GET</code> request with invalid context.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2169\" rel=\"nofollow ugc\">#2169</a>)</p>\n</li>\n<li>\n<p>Adds <code>trash</code> status to <code>GET /wp/v2/statuses</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2158\" rel=\"nofollow ugc\">#2158</a>)</p>\n</li>\n<li>\n<p>Indicates when fields have HTML in schema.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/2159\" rel=\"nofollow ugc\">#2159</a>)</p>\n</li>\n<li>\n<p>Permits viewing of User who has published any Public posts.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2155\" rel=\"nofollow ugc\">#2155</a>)</p>\n</li>\n<li>\n<p>Respects <code>show_avatars</code> option when adding avatars to Users.</p>\n<p>(props @nullvariable, <a href=\"https://github.com/WP-API/WP-API/pull/2151\" rel=\"nofollow ugc\">#2151</a>)</p>\n</li>\n<li>\n<p>Controllers use <code>$namespace</code> and <code>$rest_base</code> class variables for easier subclassing.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2119\" rel=\"nofollow ugc\">#2119</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2130\" rel=\"nofollow ugc\">#2130</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2131\" rel=\"nofollow ugc\">#2131</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2132\" rel=\"nofollow ugc\">#2132</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2133\" rel=\"nofollow ugc\">#2133</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2134\" rel=\"nofollow ugc\">#2134</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2139\" rel=\"nofollow ugc\">#2139</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2141\" rel=\"nofollow ugc\">#2141</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2142\" rel=\"nofollow ugc\">#2142</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 11.0 (January 25, 2016)</h4>\n<ul>\n<li>\n<p>BREAKING CHANGE: Moves Post-&gt;Term relations to the Post Resource</p>\n<p>Previously, a client would fetch a Post&#8217;s Tags with <code>GET /wp/v2/posts/&lt;id&gt;/tags</code>.</p>\n<p>In Beta 11, an array of term ids is included on the Post resource.</p>\n<p>The collection of terms for a Post can be fetched with <code>GET /wp/v2/tags?post=&lt;id&gt;</code>.</p>\n<p>The <code>WP_REST_Posts_Terms_Controller</code> class no longer exists.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/2063\" rel=\"nofollow ugc\">#2063</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Adds latest JS client including a minified version.</p>\n<p>See pull request for a summarized changelog.</p>\n<p>(props @adamsilverstein, <a href=\"https://github.com/WP-API/WP-API/pull/1981\" rel=\"nofollow ugc\">#1981</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Changes <code>featured_image</code> attribute on Posts to <code>featured_media</code>.</p>\n<p>While featuring other attachment types isn&#8217;t yet officially supported, this makes it easier for us to introduce the possibility in the future.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2044\" rel=\"nofollow ugc\">#2044</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Uses discrete schema title for categories and tags.</p>\n<p>If you&#8217;ve used <code>register_rest_field( 'term' )</code>, you&#8217;ll need to change <code>'term'</code> to <code>'tag'</code> and/or <code>'category'</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2005\" rel=\"nofollow ugc\">#2005</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Makes many filters dynamic based on the controller type.</p>\n<p>If you were using the <code>rest_prepare_term</code> filter, you&#8217;ll need to change it to <code>rest_prepare_post_tag</code> or <code>rest_prepare_category</code>.</p>\n<p>If you were using <code>rest_post_query</code> or <code>rest_terms_query</code>, you&#8217;ll need update your use to <code>rest_page_query</code>, etc.</p>\n<p>If you were using <code>rest_post_trashable</code>, <code>rest_insert_post</code> or <code>rest_delete_post</code>, they are now dynamic based on the post type slug.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2008\" rel=\"nofollow ugc\">#2008</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2010\" rel=\"nofollow ugc\">#2010</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2057\" rel=\"nofollow ugc\">#2057</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2058\" rel=\"nofollow ugc\">#2058</a>)</p>\n</li>\n<li>\n<p>Renames <code>GET /wp/v2/comments</code> <code>user</code> param to <code>author</code> to match resource attribute.</p>\n<p>Not a breaking change, because it didn&#8217;t work in the first place.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2105\" rel=\"nofollow ugc\">#2105</a>)</p>\n</li>\n<li>\n<p>Adds support for <code>GET /wp/v2/pages parent=1,2,3</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2101\" rel=\"nofollow ugc\">#2101</a>)</p>\n</li>\n<li>\n<p>Persists image metadata title and caption when not present in the request.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2079\" rel=\"nofollow ugc\">#2079</a>)</p>\n</li>\n<li>\n<p>Add <code>parent_exclude</code> param to <code>GET /wp/v2/posts</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2077\" rel=\"nofollow ugc\">#2077</a>)</p>\n</li>\n<li>\n<p>Adds <code>slug</code> param support for collections of Posts, Users, and Taxonomy Terms.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2071\" rel=\"nofollow ugc\">#2071</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2072\" rel=\"nofollow ugc\">#2072</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2103\" rel=\"nofollow ugc\">#2103</a>)</p>\n</li>\n<li>\n<p>When a comment is already trashed, returns <code>410:rest_already_trashed</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2069\" rel=\"nofollow ugc\">#2069</a>)</p>\n</li>\n<li>\n<p>Filter the responses by context after processing additional fields.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2067\" rel=\"nofollow ugc\">#2067</a>)</p>\n</li>\n<li>\n<p>Adds <code>offset</code> param support for collections of Posts, Users, Comments, and Taxonomy Terms.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2061\" rel=\"nofollow ugc\">#2061</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2062\" rel=\"nofollow ugc\">#2062</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2064\" rel=\"nofollow ugc\">#2064</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2076\" rel=\"nofollow ugc\">#2076</a>)</p>\n</li>\n<li>\n<p>Adds <code>rest_insert_{$taxonomy}</code> and <code>rest_delete_{$taxonomy}</code> actions.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2060\" rel=\"nofollow ugc\">#2060</a>)</p>\n</li>\n<li>\n<p>Provides more helpful error message/code on Post Create/Update fail.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2053\" rel=\"nofollow ugc\">#2053</a>)</p>\n</li>\n<li>\n<p>Forces <code>GET /wp/v2/media</code> to be limited to <code>'status' =&gt; [ inherit, private, trash ]</code></p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2026\" rel=\"nofollow ugc\">#2026</a>)</p>\n</li>\n<li>\n<p>Uses more correct error code for <code>Comment::delete</code> permission check.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2054\" rel=\"nofollow ugc\">#2054</a>)</p>\n</li>\n<li>\n<p>Calls <code>prepare_item_for_response()</code> directly in create and update methods.</p>\n<p>This lets us pass the original request through, giving the method and its filter genuine context, and avoids an<br />\nunnecessary call to <code>get_item()</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2038\" rel=\"nofollow ugc\">#2038</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2040\" rel=\"nofollow ugc\">#2040</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2041\" rel=\"nofollow ugc\">#2041</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2043\" rel=\"nofollow ugc\">#2043</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2042\" rel=\"nofollow ugc\">#2042</a>)</p>\n</li>\n<li>\n<p>Moves permission check methods across controllers.</p>\n<p>Placing them above the method they&#8217;re supposed to check makes the code more readable.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2030\" rel=\"nofollow ugc\">#2030</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2029\" rel=\"nofollow ugc\">#2029</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2034\" rel=\"nofollow ugc\">#2034</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2036\" rel=\"nofollow ugc\">#2036</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2037\" rel=\"nofollow ugc\">#2037</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2035\" rel=\"nofollow ugc\">#2035</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2039\" rel=\"nofollow ugc\">#2039</a>)</p>\n</li>\n<li>\n<p>Requires <code>force</code> argument for <code>DELETE /wp/v2/&lt;taxonomy&gt;/&lt;id&gt;</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2028\" rel=\"nofollow ugc\">#2028</a>)</p>\n</li>\n<li>\n<p>Conditionally requires and defines REST API classes and functions.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2023\" rel=\"nofollow ugc\">#2023</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2024\" rel=\"nofollow ugc\">#2024</a>)</p>\n</li>\n<li>\n<p>Avoid a duplicate query for the comment count.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/2015\" rel=\"nofollow ugc\">#2015</a>)</p>\n</li>\n<li>\n<p>Parses <code>$date</code> if available in <code>prepare_date_response()</code></p>\n<p>(props @adamsilverstein, <a href=\"https://github.com/WP-API/WP-API/pull/1951\" rel=\"nofollow ugc\">#1951</a>)</p>\n</li>\n<li>\n<p>Abstracts <code>POST /wp/v2/media</code> permissions check.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2003\" rel=\"nofollow ugc\">#2003</a>)</p>\n</li>\n<li>\n<p>Adds <code>exclude</code> param to getting collections of Posts, Users, Comments, and Taxonomy Terms.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1998\" rel=\"nofollow ugc\">#1998</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1999\" rel=\"nofollow ugc\">#1999</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2000\" rel=\"nofollow ugc\">#2000</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2002\" rel=\"nofollow ugc\">#2002</a>)</p>\n</li>\n<li>\n<p>Adds <code>rest_comment_query</code> for filtering <code>GET /wp/v2/comments</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2007\" rel=\"nofollow ugc\">#2007</a>)</p>\n</li>\n<li>\n<p>Uses HTTP status code <code>500</code> for <code>db_update_error</code> when creating an attachment.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1993\" rel=\"nofollow ugc\">#1993</a>)</p>\n</li>\n<li>\n<p>Adds helpful description to <code>force</code> param across all <code>DELETE</code> registrations</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/2004\" rel=\"nofollow ugc\">#2004</a>, <a href=\"https://github.com/WP-API/WP-API/pull/2027\" rel=\"nofollow ugc\">#2027</a>)</p>\n</li>\n<li>\n<p>In <code>GET /wp/v2/&lt;taxonomy&gt;</code>, drops support for <code>orderby=&gt;term_id</code>.</p>\n<p>Only one <code>id</code> is exposed through the REST API.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1990\" rel=\"nofollow ugc\">#1990</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 10.0 (January 11, 2016)</h4>\n<ul>\n<li>\n<p>SECURITY: Ensure media of private posts are private too.</p>\n<p>Reported by @danielbachhuber on 2016-01-08.</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Removes compatibility repo for WordPress 4.3.</p>\n<p>WordPress 4.4 is now the minimum supported WordPress version.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1848\" rel=\"nofollow ugc\">#1848</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Changes link relation for types and taxonomies.</p>\n<p>In Beta 9, this link relation was introduced as <code>item</code>, which isn&#8217;t correct. The relation has been changed to <code>https://api.w.org/items</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1853\" rel=\"nofollow ugc\">#1853</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Introduces <code>edit</code> context for <code>wp/v2/types</code> and <code>wp/v2/taxonomies</code>.</p>\n<p>Some fields have moved into this context, which require <code>edit_posts</code> and <code>manage_terms</code>, respectively.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1894\" rel=\"nofollow ugc\">#1894</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1864\" rel=\"nofollow ugc\">#1864</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Removes <code>post_format</code> as a term <code>_link</code> for Posts.</p>\n<p>Post formats aren&#8217;t a custom taxonomy in the eyes of the REST API.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1854\" rel=\"nofollow ugc\">#1854</a>)</p>\n</li>\n<li>\n<p>Declares <code>parent</code> query param for Pages.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1975\" rel=\"nofollow ugc\">#1975</a>)</p>\n</li>\n<li>\n<p>Permits logged-in users to query for media.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1973\" rel=\"nofollow ugc\">#1973</a>)</p>\n</li>\n<li>\n<p>Removes duplicated query params from Terms controller.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1963\" rel=\"nofollow ugc\">#1963</a>)</p>\n</li>\n<li>\n<p>Adds <code>include</code> param to <code>/wp/v2/posts</code>, <code>/wp/v2/users</code>, <code>/wp/v2/&lt;taxonomy&gt;</code> and <code>/wp/v2/comments</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1961\" rel=\"nofollow ugc\">#1961</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1964\" rel=\"nofollow ugc\">#1964</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1968\" rel=\"nofollow ugc\">#1968</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1971\" rel=\"nofollow ugc\">#1971</a>)</p>\n</li>\n<li>\n<p>Ensures <code>GET /wp/v2/posts</code> respects <code>order</code> and <code>orderby</code> params.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1962\" rel=\"nofollow ugc\">#1962</a>)</p>\n</li>\n<li>\n<p>Fixes fatal by loading <code>wp-admin/includes/user.php</code> to expose <code>wp_delete_user()</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1958\" rel=\"nofollow ugc\">#1958</a>)</p>\n</li>\n<li>\n<p>Permits making a post sticky when also supplying an empty password.</p>\n<p>(props @westonruter, <a href=\"https://github.com/WP-API/WP-API/pull/1949\" rel=\"nofollow ugc\">#1949</a>)</p>\n</li>\n<li>\n<p>Uses <code>WP_REST_Request</code> internally across controllers.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1933\" rel=\"nofollow ugc\">#1933</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1939\" rel=\"nofollow ugc\">#1939</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1934\" rel=\"nofollow ugc\">#1934</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1938\" rel=\"nofollow ugc\">#1938</a>)</p>\n</li>\n<li>\n<p>Cleans up permissions checks in <code>WP_REST_Terms_Controller</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1941\" rel=\"nofollow ugc\">#1941</a>)</p>\n</li>\n<li>\n<p>Uses <code>show_in_rest</code> to determine publicness for post types.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1942\" rel=\"nofollow ugc\">#1942</a>)</p>\n</li>\n<li>\n<p>Makes <code>description</code> strings available for translation.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1944\" rel=\"nofollow ugc\">#1944</a>)</p>\n</li>\n<li>\n<p>Checks <code>assign_terms</code> cap for taxonomy when managing post terms.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1940\" rel=\"nofollow ugc\">#1940</a>)</p>\n</li>\n<li>\n<p>Defer to <code>edit_posts</code> of the custom post type when accessing private query vars.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1886\" rel=\"nofollow ugc\">#1886</a>)</p>\n</li>\n<li>\n<p>Allows Terms collection params to be filtered.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1882\" rel=\"nofollow ugc\">#1882</a>)</p>\n</li>\n<li>\n<p>Renames post terms create/delete permissions callback.</p>\n<p>(props @wpsmith, <a href=\"https://github.com/WP-API/WP-API/pull/1923\" rel=\"nofollow ugc\">#1923</a>)</p>\n</li>\n<li>\n<p>Fixes invalid use of &#8216;uri&#8217; as schema <code>type</code>.</p>\n<p>(props @wpsmith, <a href=\"https://github.com/WP-API/WP-API/pull/1913\" rel=\"nofollow ugc\">#1913</a>)</p>\n</li>\n<li>\n<p>Casts integer with (int) over intval for speed.</p>\n<p>(props @wpsmith, <a href=\"https://github.com/WP-API/WP-API/pull/1907\" rel=\"nofollow ugc\">#1907</a>)</p>\n</li>\n<li>\n<p>Fixes PHP Doc typo for <code>validate_schema_property</code> and <code>sanitize_schema_property</code>.</p>\n<p>(props @wpsmith, @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1909\" rel=\"nofollow ugc\">#1909</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1910\" rel=\"nofollow ugc\">#1910</a>)</p>\n</li>\n<li>\n<p>Adds a helpful description to the <code>filter</code> argument.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1885\" rel=\"nofollow ugc\">#1885</a>)</p>\n</li>\n<li>\n<p>Changes order of Users response to match schema order.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1879\" rel=\"nofollow ugc\">#1879</a>)</p>\n</li>\n<li>\n<p>Adjusts Posts pagination headers for <code>filter</code> params.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1878\" rel=\"nofollow ugc\">#1878</a>)</p>\n</li>\n<li>\n<p>Uses proper status code when failing to get comments of private post.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1867\" rel=\"nofollow ugc\">#1866</a>)</p>\n</li>\n<li>\n<p>Fixes invalid capability for comments get items permissions callback.</p>\n<p>manage_comments doesn&#8217;t exist; <code>moderate_comments</code> does.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1866\" rel=\"nofollow ugc\">#1866</a>)</p>\n</li>\n<li>\n<p>Permits creating comments without an assigned post.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1857\" rel=\"nofollow ugc\">#1857</a>)</p>\n</li>\n<li>\n<p>Prevents error notice when <code>show_in_rest</code> isn&#8217;t set for a post type.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1852\" rel=\"nofollow ugc\">#1852</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 9.0 (December 11, 2015)</h4>\n<ul>\n<li>\n<p>BREAKING CHANGE: Move tags and categories to top-level endpoints.</p>\n<p>Tags are now accessible at <code>/wp/v2/tags</code>, and categories accessible at <code>/wp/v2/categories</code>. Post terms reside at <code>/wp/v2/posts/&lt;id&gt;/tags</code> and <code>/wp/v2/&lt;id&gt;/categories</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1802\" rel=\"nofollow ugc\">#1802</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Return object for requests to <code>/wp/v2/taxonomies</code>.</p>\n<p>This is consistent with <code>/wp/v2/types</code> and <code>/wp/v2/statuses</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1825\" rel=\"nofollow ugc\">#1825</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Remove <code>rest_get_timezone()</code>.</p>\n<p>json_get_timezone() was only ever used in v1. This function causes fatals, and shouldn&#8217;t be used.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1823\" rel=\"nofollow ugc\">#1823</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Rename <code>register_api_field()</code> to <code>register_rest_field()</code>.</p>\n<p>Introduces a <code>register_api_field()</code> function for backwards compat, which calls <code>_doing_it_wrong()</code>. However, <code>register_api_field()</code> won&#8217;t ever be committed to WordPress core, so you should update your function calls.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1824\" rel=\"nofollow ugc\">#1824</a>)</p>\n</li>\n<li>\n<p>BREAKING CHANGE: Change taxonomies&#8217; <code>post_type</code> argument to <code>type</code>.</p>\n<p>It&#8217;s consistent with how we&#8217;re exposing post types in the API.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1824\" rel=\"nofollow ugc\">#1824</a>)</p>\n</li>\n<li>\n<p>Sync infrastructure with shipped in WordPress 4.4.</p>\n<ul>\n<li><code>wp-includes/rest-api/rest-functions.php</code> is removed, and its functions moved into <code>wp-includes/rest-api.php</code>.</li>\n<li>Send nocache headers for REST requests. <a href=\"https://core.trac.wordpress.org/ticket/34832\" rel=\"nofollow ugc\">#34832</a></li>\n<li>Fix handling of HEAD requests. <a href=\"https://core.trac.wordpress.org/ticket/34837\" rel=\"nofollow ugc\">#34837</a></li>\n<li>Mark <code>WP_REST_Server::get_raw_data()</code> as static. <a href=\"https://core.trac.wordpress.org/ticket/34768\" rel=\"nofollow ugc\">#34768</a></li>\n<li>Unabbreviate error string. <a href=\"https://core.trac.wordpress.org/ticket/34818\" rel=\"nofollow ugc\">#34818</a></li>\n</ul>\n</li>\n<li>\n<p>Change terms endpoints to use <code>term_id</code> not <code>tt_id</code>.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1837\" rel=\"nofollow ugc\">#1837</a>)</p>\n</li>\n<li>\n<p>Standardize declaration of <code>context</code> param for <code>GET</code> requests across controllers.</p>\n<p>However, we&#8217;re still inconsistent in which controllers expose which params. Follow <a href=\"https://github.com/WP-API/WP-API/issues/1845\" rel=\"nofollow ugc\">#1845</a> for further discussion.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1795\" rel=\"nofollow ugc\">#1795</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1835\" rel=\"nofollow ugc\">#1835</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1838\" rel=\"nofollow ugc\">#1838</a>)</p>\n</li>\n<li>\n<p>Link types / taxonomies to their collections, and vice versa.</p>\n<p>Collections link to their type / taxonomy with the <code>about</code> relation; types / taxonomies link to their colletion with the <code>item</code> relation, which is imperfect and may change in the future.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1814\" rel=\"nofollow ugc\">#1814</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1817\" rel=\"nofollow ugc\">#1817</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1829\" rel=\"nofollow ugc\">#1829</a>. <a href=\"https://github.com/WP-API/WP-API/pull/1846\" rel=\"nofollow ugc\">#1846</a>)</p>\n</li>\n<li>\n<p>Add missing &#8216;wp/v2&#8217; in Location Response header when creating new Post Meta.</p>\n<p>(props @johanmynhardt, <a href=\"https://github.com/WP-API/WP-API/pull/1790\" rel=\"nofollow ugc\">#1790</a>)</p>\n</li>\n<li>\n<p>Expose Post collection query params, including <code>author</code>, <code>order</code>, <code>orderby</code> and <code>status</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1793\" rel=\"nofollow ugc\">#1793</a>)</p>\n</li>\n<li>\n<p>Ignore sticky posts by default.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1801\" rel=\"nofollow ugc\">#1801</a>)</p>\n</li>\n<li>\n<p>Include <code>full</code> image size in attachment <code>sizes</code> attribute.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1806\" rel=\"nofollow ugc\">#1806</a>)</p>\n</li>\n<li>\n<p>In text strings, use <code>id</code> instead of <code>ID</code>.</p>\n<p>ID is an implementation artifact. Our Resources use <code>id</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1803\" rel=\"nofollow ugc\">#1803</a>)</p>\n</li>\n<li>\n<p>Ensure <code>attachment.sizes[]</code> use <code>mime_type</code> instead of <code>mime-type</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1809\" rel=\"nofollow ugc\">#1809</a>)</p>\n</li>\n<li>\n<p>Introduce <code>rest_authorization_required_code()</code>.</p>\n<p>Many controllers returned incorrect HTTP codes, which this also fixes.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1808\" rel=\"nofollow ugc\">#1808</a>)</p>\n</li>\n<li>\n<p>Respect core&#8217;s <code>comment_registration</code> setting.</p>\n<p>If it&#8217;s enabled, require users to be logged in to comment.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1826\" rel=\"nofollow ugc\">#1826</a>)</p>\n</li>\n<li>\n<p>Default to wildcard when searching users.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1827\" rel=\"nofollow ugc\">#1827</a>)</p>\n</li>\n<li>\n<p>Bring the wp-api.js library up to date for v2 of the REST API.</p>\n<p>(props @adamsilverstein, <a href=\"https://github.com/WP-API/WP-API/pull/1828\" rel=\"nofollow ugc\">#1828</a>)</p>\n</li>\n<li>\n<p>Add <code>rest_prepare_status</code> filter.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1830\" rel=\"nofollow ugc\">#1830</a>)</p>\n</li>\n<li>\n<p>Make <code>prepare_*</code> filters more consistent.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1831\" rel=\"nofollow ugc\">#1831</a>)</p>\n</li>\n<li>\n<p>Add <code>rest_prepare_post_type</code> filter for post types.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1833\" rel=\"nofollow ugc\">#1833</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 8.0 (December 1, 2015)</h4>\n<ul>\n<li>\n<p>Prevent fatals when uploading attachment by including admin utilities.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1756\" rel=\"nofollow ugc\">#1756</a>)</p>\n</li>\n<li>\n<p>Return 201 status code when creating a term.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1753\" rel=\"nofollow ugc\">#1753</a>)</p>\n</li>\n<li>\n<p>Don&#8217;t permit requesting terms cross routes.</p>\n<p>Clients should only be able to request categories from the category route, and tags from the tag route.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1764\" rel=\"nofollow ugc\">#1764</a>)</p>\n</li>\n<li>\n<p>Set <code>fields=&gt;id</code> when using <code>WP_User_Query</code> to fix large memory usage</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1770\" rel=\"nofollow ugc\">#1770</a>)</p>\n</li>\n<li>\n<p>Fix Post <code>_link</code> to attached attachments.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1777\" rel=\"nofollow ugc\">#1777</a>)</p>\n</li>\n<li>\n<p>Add support for getting a post with a custom public status.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1765\" rel=\"nofollow ugc\">#1765</a>)</p>\n</li>\n<li>\n<p>Ensure post content doesn&#8217;t get double-slashed on update.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1772\" rel=\"nofollow ugc\">#1772</a>)</p>\n</li>\n<li>\n<p>Change &#8216;int&#8217; to &#8216;integer&#8217; for <code>WP_REST_Controller::validate_schema_property()</code></p>\n<p>(props @wpsmith, <a href=\"https://github.com/WP-API/WP-API/pull/1759\" rel=\"nofollow ugc\">#1759</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 7.0 (November 17, 2015)</h4>\n<ul>\n<li>\n<p>Sync infrastructure from WordPress core as of r35691.</p>\n<ul>\n<li>Remove <code>register_api_field()</code> because it&#8217;s conceptually tied to <code>WP_REST_Controller</code> <a href=\"https://core.trac.wordpress.org/ticket/34730\" rel=\"nofollow ugc\">#34730</a></li>\n<li>Update the REST API header links to use api.w.org <a href=\"https://core.trac.wordpress.org/ticket/34303\" rel=\"nofollow ugc\">#34303</a></li>\n<li>Require the <code>$namespace</code> argument in <code>register_rest_route()</code> <a href=\"https://core.trac.wordpress.org/ticket/34416\" rel=\"nofollow ugc\">#34416</a></li>\n<li>Include <code>enum</code> and <code>description</code> in help data <a href=\"https://core.trac.wordpress.org/ticket/34543\" rel=\"nofollow ugc\">#34543</a></li>\n<li>Save <code>preg_match</code> iterations in <code>WP_REST_Server</code> <a href=\"https://core.trac.wordpress.org/ticket/34488\" rel=\"nofollow ugc\">#34488</a></li>\n<li>Don&#8217;t return route URL in <code>WP_REST_Request:get_params()</code> <a href=\"https://core.trac.wordpress.org/ticket/34647\" rel=\"nofollow ugc\">#34647</a></li>\n</ul>\n</li>\n<li>\n<p>Restore <code>register_api_field()</code> within the plugin.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1748\" rel=\"nofollow ugc\">#1748</a>)</p>\n</li>\n<li>\n<p>Require admin functions for use of <code>wp_handle_upload()</code>, fixing fatal.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1746\" rel=\"nofollow ugc\">#1746</a>)</p>\n</li>\n<li>\n<p>Properly handle requesting terms where <code>parent=0</code> and <code>0</code> is a string.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1739\" rel=\"nofollow ugc\">#1739</a>)</p>\n</li>\n<li>\n<p>Prevent PHP error notice when <code>&amp;filter</code> isn&#8217;t an array.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1734\" rel=\"nofollow ugc\">#1734</a>)</p>\n</li>\n<li>\n<p>Change link relations to use api.w.org.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1726\" rel=\"nofollow ugc\">#1726</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 6.0 (November 12, 2015)</h4>\n<ul>\n<li>\n<p>Remove global inclusion of wp-admin/includes/admin.php</p>\n<p>For a long time, the REST API loaded wp-admin/includes/admin.php to make use of specific admin utilities. Now, it only loads those admin utilities when it needs them.</p>\n<p>If your custom endpoints make use of admin utilities, you&#8217;ll need to make sure to load wp-admin/includes/admin.php before you use them.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1696\" rel=\"nofollow ugc\">#1696</a>)</p>\n</li>\n<li>\n<p>Link directly to the featured image in a Post&#8217;s links.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/1563\" rel=\"nofollow ugc\">#1563</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1711\" rel=\"nofollow ugc\">#1711</a>)</p>\n</li>\n<li>\n<p>Provide object type as callback argument for custom API fields.</p>\n<p>(props @jtsternberg, <a href=\"https://github.com/WP-API/WP-API/pull/1714\" rel=\"nofollow ugc\">#1714</a>)</p>\n</li>\n<li>\n<p>Change users schema order to be order of importance instead of alpha.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1708\" rel=\"nofollow ugc\">#1708</a>)</p>\n</li>\n<li>\n<p>Clarify documentation for <code>date</code> and <code>modified</code> attributes.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1715\" rel=\"nofollow ugc\">#1715</a>)</p>\n</li>\n<li>\n<p>Update the wp-api.js client from the client-js repo.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1709\" rel=\"nofollow ugc\">#1709</a>)</p>\n</li>\n<li>\n<p>Fix the <code>format</code> enum to be an array of strings.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1707\" rel=\"nofollow ugc\">#1707</a>)</p>\n</li>\n<li>\n<p>Run revisions for collection through <code>prepare_response_for_collection()</code>.</p>\n<p>(props @danielbachhuber, @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1671\" rel=\"nofollow ugc\">#1671</a>)</p>\n</li>\n<li>\n<p>Expose <code>date_gmt</code> for <code>view</code> context of Posts and Comments.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1690\" rel=\"nofollow ugc\">#1690</a>)</p>\n</li>\n<li>\n<p>Fix PHP and JS docblock formatting.</p>\n<p>(props @ahmadawais, <a href=\"https://github.com/WP-API/WP-API/pull/1698\" rel=\"nofollow ugc\">#1699</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1699\" rel=\"nofollow ugc\">#1699</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1701\" rel=\"nofollow ugc\">#1701</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1700\" rel=\"nofollow ugc\">#1700</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1702\" rel=\"nofollow ugc\">#1702</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1703\" rel=\"nofollow ugc\">#1703</a>)</p>\n</li>\n<li>\n<p>Include <code>media_details</code> attribute for attachments in embed context.</p>\n<p>For image attachments, media_details includes a sizes array of image sizes, which is useful for templating.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1667\" rel=\"nofollow ugc\">#1667</a>)</p>\n</li>\n<li>\n<p>Make <code>WP_REST_Controller</code> error messages more helpful by specifying method to subclass.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1670\" rel=\"nofollow ugc\">#1670</a>)</p>\n</li>\n<li>\n<p>Expose <code>slug</code> in <code>embed</code> context for Users.</p>\n<p>user_nicename is a public attribute, used in user URLs, so this is safe data to present.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/pull/1666\" rel=\"nofollow ugc\">#1666</a>)</p>\n</li>\n<li>\n<p>Handle falsy value from <code>wp_count_terms()</code>, fixing fatal.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/pull/1641\" rel=\"nofollow ugc\">#1641</a>)</p>\n</li>\n<li>\n<p>Correct methods in <code>WP_REST_SERVER::EDITABLE</code> description.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1601\" rel=\"nofollow ugc\">#1601</a>)</p>\n</li>\n<li>\n<p>Add the embed context to Users collection query params.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1591\" rel=\"nofollow ugc\">#1591</a>)</p>\n</li>\n<li>\n<p>Add Terms Controller collection args details.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1603\" rel=\"nofollow ugc\">#1603</a>)</p>\n</li>\n<li>\n<p>Set comment author details from current user.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/pull/1580\" rel=\"nofollow ugc\">#1580</a>)</p>\n</li>\n<li>\n<p>More hook documentation.</p>\n<p>(props @adamsilverstein, <a href=\"https://github.com/WP-API/WP-API/pull/1556\" rel=\"nofollow ugc\">#1556</a>, <a href=\"https://github.com/WP-API/WP-API/pull/1560\" rel=\"nofollow ugc\">#1560</a>)</p>\n</li>\n<li>\n<p>Return the trashed status of deleted posts/comments.</p>\n<p>When a post or a comment is deleted, returns a flag to say whether it&#8217;s been trashed or properly deleted.</p>\n<p>(props @pento, <a href=\"https://github.com/WP-API/WP-API/pull/1499\" rel=\"nofollow ugc\">#1499</a>)</p>\n</li>\n<li>\n<p>In <code>WP_REST_Posts_Controller::update_item()</code>, check the post ID based on the proper post type.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/pull/1497\" rel=\"nofollow ugc\">#1497</a>)</p>\n</li>\n</ul>\n<h4>2.0 Beta 5.0 (October 23, 2015)</h4>\n<ul>\n<li>\n<p>Load api-core as a compatibility library</p>\n<p>Now api-core has been merged into WordPress trunk (for 4.4) we should no longer load the infrastructure code when it&#8217;s already available. This also fixes a fatal error for users who were on trunk.</p>\n<p>(props @rmccue)</p>\n</li>\n<li>\n<p>Switch to new mysql_to_rfc3339</p>\n<p>(props @rmccue)</p>\n</li>\n<li>\n<p>Double-check term taxonomy</p>\n<p>(props @rmccue)</p>\n</li>\n<li>\n<p>Load admin functions</p>\n<p>This was removed from the latest beta of WordPress in the REST API infrastructure, a more long term fix is planned.</p>\n<p>(props @joehoyle)</p>\n</li>\n<li>\n<p>Add Add compat shim for renamed <code>rest_mysql_to_rfc3339()</code></p>\n<p>(props @danielbachhuber)</p>\n</li>\n<li>\n<p>Compat shim for <code>wp_is_numeric_array()</code></p>\n<p>(props @danielbachhuber)</p>\n</li>\n<li>\n<p>Revert Switch to register_post_type_args filter</p>\n<p>(props @joehoyle)</p>\n</li>\n</ul>\n<h4>2.0 Beta 4.0 (August 14, 2015)</h4>\n<ul>\n<li>\n<p>Show public user information through the user controller.</p>\n<p>In WordPress as of <a href=\"https://core.trac.wordpress.org/changeset/32683\" rel=\"nofollow ugc\">r32683</a> (scheduled for 4.3), <code>WP_User_Query</code> now has support for getting users with published posts.</p>\n<p>To match current behaviour in WordPress themes and feeds, we now expose this public user information. This includes the avatar, description, user ID, custom URL, display name, and URL, for users who have published at least one post on the site. This information is available to all clients; other fields and data for all users are still only available when authenticated.</p>\n<p>(props @joehoyle, @rmccue, @Shelob9, <a href=\"https://github.com/WP-API/WP-API/issues/1397\" rel=\"nofollow ugc\">#1397</a>, <a href=\"https://github.com/WP-API/WP-API/issues/839\" rel=\"nofollow ugc\">#839</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1435\" rel=\"nofollow ugc\">#1435</a>)</p>\n</li>\n<li>\n<p>Send schema in OPTIONS requests and index.</p>\n<p>Rather than using separate <code>/schema</code> endpoints, the schema for items is now available through an OPTIONS request to the route. This means that full documentation is now available for endpoints through an OPTIONS request; this includes available methods, what data you can pass to the endpoint, and the data you&#8217;ll get back.</p>\n<p>This data is now also available in the main index and namespace indexes. Simply request the index with <code>context=help</code> to get full schema data. Warning: this response will be huge. The schema for single endpoints is also available in the collection&#8217;s OPTIONS response.</p>\n<p><strong>⚠️ This breaks backwards compatibility</strong> for clients relying on schemas being at their own routes. These clients should instead send <code>OPTIONS</code> requests.</p>\n<p>Custom endpoints can register their own schema via the <code>schema</code> option on the route. This option should live side-by-side with the endpoints (similar to <code>relation</code> in WP&#8217;s meta queries), so your registration call will look something like:</p>\n<p>`php<br />\nregister_rest_route( &#8216;test-ns&#8217;, &#8216;/test&#8217;, array(<br />\narray(<br />\n  &#8216;methods&#8217; =&gt; &#8216;GET&#8217;,<br />\n  &#8216;callback&#8217; =&gt; &#8216;my_test_callback&#8217;,<br />\n),</p>\n<p>&#8216;schema&#8217; =&gt; &#8216;my_schema_callback&#8217;,<br />\n) );<br />\n  `</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1415\" rel=\"nofollow ugc\">#1415</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1222\" rel=\"nofollow ugc\">#1222</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1305\" rel=\"nofollow ugc\">#1305</a>)</p>\n</li>\n<li>\n<p>Update JavaScript API for version 2.</p>\n<p>Our fantastic JavaScript API from version 1 is now available for version 2, refreshed with the latest and greatest changes.</p>\n<p>As a refresher: if you want to use it, simply make your script depend on <code>wp-api</code> when you enqueue it. If you want to enqueue the script manually, add <code>wp_enqueue_script( 'wp-api' )</code> to a callback on <code>wp_enqueue_scripts</code>.</p>\n<p>(props @tlovett1, @kadamwhite, @nathanrice, <a href=\"https://github.com/WP-API/WP-API/issues/1374\" rel=\"nofollow ugc\">#1374</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1320\" rel=\"nofollow ugc\">#1320</a>)</p>\n</li>\n<li>\n<p>Embed links inside items in a collection.</p>\n<p>Previously when fetching a collection of items, you only received the items themselves. To fetch the links as well via embedding, you needed to make a request to the single item with <code>_embed</code> set.</p>\n<p>No longer! You can now request a collection with embeds enabled (try <code>/wp/v2/posts?_embed</code>). This will embed links inside each item, allowing you to build interface items much easier (for example, post archive pages can get featured image data at the same time).</p>\n<p>This also applies to custom endpoints. Any endpoint that returns a list of objects will automatically have the embedding applied to objects inside the list.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1459\" rel=\"nofollow ugc\">#1459</a>, <a href=\"https://github.com/WP-API/WP-API/issues/865\" rel=\"nofollow ugc\">#865</a>)</p>\n</li>\n<li>\n<p>Fix potential XSS vulnerability.</p>\n<p>Requests from other origins could potentially run code on the API domain, allowing cross-origin access to authentication cookies or similar.</p>\n<p>Reported by @xknown on 2015-07-23.</p>\n</li>\n<li>\n<p>Move <code>/posts</code> <code>WP_Query</code> vars back to <code>filter</code> param.</p>\n<p>In version 1, we had internal <code>WP_Query</code> vars available via <code>filter</code> (e.g. <code>filter[s]=search+term</code>). For our first betas of version 2, we tried something different and exposed these directly on the endpoint. The experiment has now concluded; we didn&#8217;t like this that much, so <code>filter</code> is back.</p>\n<p>We plan on adding nicer looking arguments to collections in future releases, with a view towards being consistent across different collections. We also plan on opening up the underlying query vars via <code>filter</code> for users, comments, and terms as well.</p>\n<p><strong>⚠️ This breaks backwards compatibility</strong> for users using WP Query vars. Simply change your <code>x=y</code> parameter to <code>filter[x]=y</code>.</p>\n<p>(props @WP-API, <a href=\"https://github.com/WP-API/WP-API/issues/1420\" rel=\"nofollow ugc\">#1420</a>)</p>\n</li>\n<li>\n<p>Respect <code>rest_base</code> for taxonomies.</p>\n<p><strong>⚠️ This breaks backwards compatibility</strong> by changing the <code>/wp/v2/posts/{id}/terms/post_tag</code> endpoint to <code>/wp/v2/posts/{id}/tag</code>.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1466\" rel=\"nofollow ugc\">#1466</a>)</p>\n</li>\n<li>\n<p>Add permission check for retrieving the posts collection in edit context.</p>\n<p>By extension of the fact that getting any individual post yields a forbidden context error when the <code>context=edit</code> and the user is not authorized, the user should also not be permitted to list any post items when unauthorized.</p>\n<p>(props @danielpunkass, <a href=\"https://github.com/WP-API/WP-API/issues/1412\" rel=\"nofollow ugc\">#1412</a>)</p>\n</li>\n<li>\n<p>Ensure the REST API URL always has a trailing slash.</p>\n<p>Previously, when pretty permalinks were enabled, the API URL during autodiscovery looked like <code>/wp-json</code>, whereas the non-pretty permalink URL looked like <code>?rest_route=/</code>. These are now consistent, and always end with a slash character to simplify client URL building.</p>\n<p>(props @danielpunkass, @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1426\" rel=\"nofollow ugc\">#1426</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1442\" rel=\"nofollow ugc\">#1442</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1455\" rel=\"nofollow ugc\">#1455</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1467\" rel=\"nofollow ugc\">#1467</a>)</p>\n</li>\n<li>\n<p>Use <code>wp_json_encode</code> instead of <code>json_encode</code></p>\n<p>Since WordPress 4.1, <code>wp_json_encode</code> has been available to ensure encoded values are sane, and that non-UTF8 encodings are supported. We now use this function rather than doing the encode ourselves.</p>\n<p>(props @rmccue, @pento, <a href=\"https://github.com/WP-API/WP-API/issues/1417\" rel=\"nofollow ugc\">#1417</a>)</p>\n</li>\n<li>\n<p>Add <code>role</code> to schema for users.</p>\n<p>The available roles you can assign to a user are now available in the schema as an <code>enum</code>.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1400\" rel=\"nofollow ugc\">#1400</a>)</p>\n</li>\n<li>\n<p>Use the schema for validation inside the comments controller.</p>\n<p>Previously, the schema was merely a decorative element for documentation inside the comments controller. To bring it inline with our other controllers, the schema is now used internally for validation.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1422\" rel=\"nofollow ugc\">#1422</a>)</p>\n</li>\n<li>\n<p>Don&#8217;t set the Location header in update responses.</p>\n<p>Previously, the Location header was sent when updating resources due to some inadvertent copypasta. This header should only be sent when creating to direct clients to the new resource, and isn&#8217;t required when you&#8217;re already on the correct resource.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1441\" rel=\"nofollow ugc\">#1441</a>)</p>\n</li>\n<li>\n<p>Re-enable the <code>rest_insert_post</code> action hook for <code>WP_REST_Posts_Controller</code></p>\n<p>This was disabled during 2.0 development to avoid breaking lots of plugins on the <code>json_insert_post</code> action. Now that we&#8217;ve changed namespaces and are Mostly Stable &#8482;, we can re-enable the action.</p>\n<p>(props @jaredcobb, <a href=\"https://github.com/WP-API/WP-API/issues/1427\" rel=\"nofollow ugc\">#1427</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1424\" rel=\"nofollow ugc\">#1424</a>)</p>\n</li>\n<li>\n<p>Fix post taxonomy terms link URLs.</p>\n<p>When moving the routes in a previous beta, we forgot to correct the links on post objects to the new correct route. Sorry!</p>\n<p>(props @rachelbaker, @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1447\" rel=\"nofollow ugc\">#1447</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1383\" rel=\"nofollow ugc\">#1383</a>)</p>\n</li>\n<li>\n<p>Use <code>wp_get_attachment_image_src()</code> on the image sizes in attachments.</p>\n<p>Since the first versions of the API, we&#8217;ve been building attachment URLs via <code>str_replace</code>. Who knows why we were doing this, but it caused problems with custom attachment URLs (such as CDN-hosted images). This now correctly uses the internal functions and filters.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1462\" rel=\"nofollow ugc\">#1462</a>)</p>\n</li>\n<li>\n<p>Make the embed context a default, not forced.</p>\n<p>If you want embeds to bring in full data rather than with <code>context=edit</code>, you can now change the link to specify <code>context=view</code> explicitly.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1464\" rel=\"nofollow ugc\">#1464</a>)</p>\n</li>\n<li>\n<p>Ensure we always use the <code>term_taxonomy_id</code> and never expose <code>term_id</code> publicly.</p>\n<p>Previously, <code>term_id</code> was inadvertently exposed in some error responses.</p>\n<p>(props @jdolan, <a href=\"https://github.com/WP-API/WP-API/issues/1430\" rel=\"nofollow ugc\">#1430</a>)</p>\n</li>\n<li>\n<p>Fix adding alt text to attachments on creation.</p>\n<p>Previously, this could only be set when updating an attachment, not when creating one.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1398\" rel=\"nofollow ugc\">#1398</a>)</p>\n</li>\n<li>\n<p>Throw an error when registering routes without a namespace.</p>\n<p>Namespaces should <strong>always</strong> be provided when registering routes. We now throw a <code>doing_it_wrong</code> error when attempting to register one. (Previously, this caused a warning, or an invalid internal route.)</p>\n<p>If you <em>really</em> need to register namespaceless routes (e.g. to replicate an existing API), call <code>WP_REST_Server::register_route</code> directly rather than using the convenience function.</p>\n<p>(props @joehoyle, @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1355\" rel=\"nofollow ugc\">#1355</a>)</p>\n</li>\n<li>\n<p>Show links on embeds.</p>\n<p>Previously, links were accidentally stripped from embedded response data.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1472\" rel=\"nofollow ugc\">#1472</a>)</p>\n</li>\n<li>\n<p>Clarify insufficient permisssion error when editing posts.</p>\n<p>(props @danielpunkass, <a href=\"https://github.com/WP-API/WP-API/issues/1411\" rel=\"nofollow ugc\">#1411</a>)</p>\n</li>\n<li>\n<p>Improve @return inline docs for rest_ensure_response()</p>\n<p>(props @Shelob9, <a href=\"https://github.com/WP-API/WP-API/issues/1328\" rel=\"nofollow ugc\">#1328</a>)</p>\n</li>\n<li>\n<p>Check taxonomies exist before trying to set properties.</p>\n<p>(props @joehoyle, @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1354\" rel=\"nofollow ugc\">#1354</a>)</p>\n</li>\n<li>\n<p>Update controllers to ensure we use <code>sanitize_callback</code> wherever possible.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1399\" rel=\"nofollow ugc\">#1399</a>)</p>\n</li>\n<li>\n<p>Add more phpDoc documentation, and correct existing documentation.</p>\n<p>(props @Shelob9, @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1432\" rel=\"nofollow ugc\">#1432</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1433\" rel=\"nofollow ugc\">#1433</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1465\" rel=\"nofollow ugc\">#1465</a>)</p>\n</li>\n<li>\n<p>Update testing infrastructure.</p>\n<p>Travis now runs our coding standards tests in parallel, and now uses the new, faster container-based testing infrastructure.</p>\n<p>(props @ntwb, @frozzare, <a href=\"https://github.com/WP-API/WP-API/issues/1449\" rel=\"nofollow ugc\">#1449</a>, <a href=\"https://github.com/WP-API/WP-API/issues/1457\" rel=\"nofollow ugc\">#1457</a>)</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/WP-API/WP-API/compare/2.0-beta3...2.0-beta4\" rel=\"nofollow ugc\">View all changes</a></p>\n<h4>2.0 Beta 3.0 (July 1, 2015)</h4>\n<ul>\n<li>\n<p>Add ability to declare sanitization and default options for schema fields.</p>\n<p>The <code>arg_options</code> array can be used to declare the sanitization callback,<br />\ndefault value, or requirement of a field.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1345\" rel=\"nofollow ugc\">#1345</a>)<br />\n(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1346\" rel=\"nofollow ugc\">#1346</a>)</p>\n</li>\n<li>\n<p>Expand supported parameters for creating and updating Comments.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1245\" rel=\"nofollow ugc\">#1245</a>)</p>\n</li>\n<li>\n<p>Declare collection parameters for Terms of a Post.</p>\n<p>Define the available collection parameters in <code>get_collection_params()</code> and<br />\nallow Terms of a Post to be queried by term order.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1332\" rel=\"nofollow ugc\">#1332</a>)</p>\n</li>\n<li>\n<p>Improve the Attachment error message for an invalid Content-Disposition</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1317\" rel=\"nofollow ugc\">#1317</a>)</p>\n</li>\n<li>\n<p>Return 200 status when updating Attachments, Comments, and Users.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1348\" rel=\"nofollow ugc\">#1348</a>)</p>\n</li>\n<li>\n<p>Remove unnecessary <code>handle_format_param()</code> method.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1331\" rel=\"nofollow ugc\">#1331</a>)</p>\n</li>\n<li>\n<p>Add <code>author_avatar_url</code> field to the Comment response and schema.</p>\n<p>(props @rachelbaker <a href=\"https://github.com/WP-API/WP-API/issues/1327\" rel=\"nofollow ugc\">#1327</a>)</p>\n</li>\n<li>\n<p>Introduce <code>rest_do_request()</code> for making REST requests internally.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1333\" rel=\"nofollow ugc\">#1333</a>)</p>\n</li>\n<li>\n<p>Remove unused DateTime class.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1314\" rel=\"nofollow ugc\">#1314</a>)</p>\n</li>\n<li>\n<p>Add inline documentation for <code>$wp_rest_server</code> global.</p>\n<p>(props @Shelob9, <a href=\"https://github.com/WP-API/WP-API/issues/1324\" rel=\"nofollow ugc\">#1324</a>)</p>\n<p><a href=\"https://github.com/WP-API/WP-API/compare/2.0-beta2...2.0-beta3\" rel=\"nofollow ugc\">View all changes</a></p>\n<h4>2.0 Beta 2.0 (May 28, 2015)</h4>\n</p>\n</li>\n<li>\n<p>Load the WP REST API before the main query runs.</p>\n<p>The <code>rest_api_loaded</code> function now hooks into the <code>parse_request</code> action.<br />\nThis change prevents the main query from being run on every request and<br />\nallows sites to set <code>WP_USE_THEMES</code> to <code>false</code>.  Previously, the main query<br />\nwas always being run (<code>SELECT * FROM wp_posts LIMIT 10</code>), even though the<br />\nresult was never used and couldn&#8217;t be cached.</p>\n<p>(props @rmccue, <a href=\"https://github.com/WP-API/WP-API/issues/1270\" rel=\"nofollow ugc\">#1270</a>)</p>\n</li>\n<li>\n<p>Register a new field on an existing WordPress object type.</p>\n<p>Introduces <code>register_api_field()</code> to add a field to an object and<br />\nits schema.</p>\n<p>(props @joehoyle, @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/927\" rel=\"nofollow ugc\">#927</a>)<br />\n(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1207\" rel=\"nofollow ugc\">#1207</a>)<br />\n(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1243\" rel=\"nofollow ugc\">#1243</a>)</p>\n</li>\n<li>\n<p>Add endpoints for viewing, creating, updating, and deleting Terms for a Post.</p>\n<p>The new <code>WP_REST_Posts_Terms_Controller</code> class controller supports routes for<br />\nTerms that belong to a Post.</p>\n<p>(props @joehoyle, @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1216\" rel=\"nofollow ugc\">#1216</a>)</p>\n</li>\n<li>\n<p>Add pagination headers for collection queries.</p>\n<p>The <code>X-WP-Total</code> and <code>X-WP-TotalPages</code> are now present in terms, comments,<br />\nand users collection responses.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1182\" rel=\"nofollow ugc\">#1182</a>)<br />\n(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1191\" rel=\"nofollow ugc\">#1191</a>)<br />\n(props @danielbachhuber, @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1197\" rel=\"nofollow ugc\">#1197</a>)</p>\n</li>\n<li>\n<p>List registered namespaces in the index for feature detection.</p>\n<p>The index (<code>/wp-json</code> by default) now contains a list of the available<br />\nnamespaces. This allows for simple feature detection. You can grab the index<br />\nand check namespaces for <code>wp/v3</code> or <code>pluginname/v2</code>, which indicate the<br />\nsupported endpoints on the site.</p>\n<p>(props @rmccue,, <a href=\"https://github.com/WP-API/WP-API/issues/1283\" rel=\"nofollow ugc\">#1283</a>)</p>\n</li>\n<li>\n<p>Standardize link property relations and support embedding for all resources.</p>\n<p>Change link properties to use IANA-registered relations.  Also adds embedding<br />\nsupport to Attachments, Comments and Terms.</p>\n<p>(props @rmccue, @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1284\" rel=\"nofollow ugc\">#1284</a>)</p>\n</li>\n<li>\n<p>Add support for Composer dependency management.</p>\n<p>Allows you to recursively install/update the WP REST API inside of WordPress<br />\nplugins or themes.</p>\n<p>(props @QWp6t, <a href=\"https://github.com/WP-API/WP-API/issues/1157\" rel=\"nofollow ugc\">#1157</a>)</p>\n</li>\n<li>\n<p>Return full objects in the delete response.</p>\n<p>Instead of returning a random message when deleting a Post, Comment, Term, or<br />\nUser provide the original resource data.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1253\" rel=\"nofollow ugc\">#1253</a>)<br />\n(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1254\" rel=\"nofollow ugc\">#1254</a>)<br />\n(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1255\" rel=\"nofollow ugc\">#1255</a>)<br />\n(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1256\" rel=\"nofollow ugc\">#1256</a>)</p>\n</li>\n<li>\n<p>Return programmatically readable error messages for invalid or missing<br />\nrequired parameters.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1175\" rel=\"nofollow ugc\">#1175</a>)</p>\n</li>\n<li>\n<p>Declare supported arguments for Comment and User collection queries.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1211\" rel=\"nofollow ugc\">#1211</a>)<br />\n(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1217\" rel=\"nofollow ugc\">#1217</a>)</p>\n</li>\n<li>\n<p>Automatically validate parameters based on Schema data.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1128\" rel=\"nofollow ugc\">#1128</a>)</p>\n</li>\n<li>\n<p>Use the <code>show_in_rest</code> attributes for exposing Taxonomies.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1279\" rel=\"nofollow ugc\">#1279</a>)</p>\n</li>\n<li>\n<p>Handle <code>parent</code> when creating or updating a Term.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1221\" rel=\"nofollow ugc\">#1221</a>)</p>\n</li>\n<li>\n<p>Limit fields returned in <code>embed</code> context User responses.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1251\" rel=\"nofollow ugc\">#1251</a>)</p>\n</li>\n<li>\n<p>Only include <code>parent</code> in term response when tax is hierarchical.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1189\" rel=\"nofollow ugc\">#1189</a>)</p>\n</li>\n<li>\n<p>Fix bug in creating comments if <code>type</code> was not set.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1244\" rel=\"nofollow ugc\">#1244</a>)</p>\n</li>\n<li>\n<p>Rename <code>post_name</code> field to <code>post_slug</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1235\" rel=\"nofollow ugc\">#1235</a>)</p>\n</li>\n<li>\n<p>Add check when creating a user to verify the provided role is valid.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1267\" rel=\"nofollow ugc\">#1267</a>)</p>\n</li>\n<li>\n<p>Add link properties to the Post Status response.</p>\n<p>(props @joehoyle, <a href=\"https://github.com/WP-API/WP-API/issues/1243\" rel=\"nofollow ugc\">#1243</a>)</p>\n</li>\n<li>\n<p>Return <code>0</code> for <code>parent</code> in Post response instead of <code>null</code>.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1269\" rel=\"nofollow ugc\">#1269</a>)</p>\n</li>\n<li>\n<p>Only link <code>author</code> when there&#8217;s a valid author</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1203\" rel=\"nofollow ugc\">#1203</a>)</p>\n</li>\n<li>\n<p>Only permit querying by parent term when tax is hierarchical.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1219\" rel=\"nofollow ugc\">#1219</a>)</p>\n</li>\n<li>\n<p>Only permit deleting posts of the proper type</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1257\" rel=\"nofollow ugc\">#1257</a>)</p>\n</li>\n<li>\n<p>Set pagination headers even when no found posts.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1209\" rel=\"nofollow ugc\">#1209</a>)</p>\n</li>\n<li>\n<p>Correct prefix in <code>rest_request_parameter_order</code> filter.</p>\n<p>(props @quasel, <a href=\"https://github.com/WP-API/WP-API/issues/1158\" rel=\"nofollow ugc\">#1158</a>)</p>\n</li>\n<li>\n<p>Retool <code>WP_REST_Terms_Controller</code> to follow Posts controller pattern.</p>\n<p>(props @danielbachhuber, <a href=\"https://github.com/WP-API/WP-API/issues/1170\" rel=\"nofollow ugc\">#1170</a>)</p>\n</li>\n<li>\n<p>Remove unused <code>accept_json argument</code> from the <code>register_routes</code> method.</p>\n<p>(props @quasel, <a href=\"https://github.com/WP-API/WP-API/issues/1160\" rel=\"nofollow ugc\">#1160</a>)</p>\n</li>\n<li>\n<p>Fix typo in <code>sanitize_params</code> inline documentation.</p>\n<p>(props @Shelob9, <a href=\"https://github.com/WP-API/WP-API/issues/1226\" rel=\"nofollow ugc\">#1226</a>)</p>\n</li>\n<li>\n<p>Remove commented out code in dispatch method.</p>\n<p>(props @rachelbaker, <a href=\"https://github.com/WP-API/WP-API/issues/1162\" rel=\"nofollow ugc\">#1162</a>)</p>\n</li>\n</ul>\n<p><a href=\"https://github.com/WP-API/WP-API/compare/2.0-beta1.1...2.0-beta2\" rel=\"nofollow ugc\">View all changes</a></p>\n<h4>2.0 Beta 1.1</h4>\n</p>\n<ul>\n<li>\n<p>Fix user access security vulnerability.</p>\n<p>Authenticated users were able to escalate their privileges bypassing the<br />\nexpected capabilities check.</p>\n<p>Reported by @kacperszurek on 2015-05-16.</p>\n</li>\n</ul>\n<h4>2.0 Beta 1 (April 28, 2015)</h4>\n<p>Partial rewrite and evolution of the REST API to prepare for core integration.</p>\n<p>For versions 0.x through 1.x, see the <a href=\"https://wordpress.org/plugins/json-rest-api/changelog/\" rel=\"ugc\">legacy plugin changelog</a>.</p>\n",
        "faq": "\n<h4>Installation Instructions</h4>\n<p>\n<p>Install the WP REST API via the plugin directory, or by uploading the files manually to your server.</p>\n<p>For full-flavoured API support, you&#8217;ll need to be using pretty permalinks to use the plugin, as it uses custom rewrite rules to power the API.</p>\n<p>Once you&#8217;ve installed and activated the plugin, <a href=\"http://v2.wp-api.org/\" rel=\"nofollow ugc\">check out the documentation</a> for details on your newly available endpoints.</p>\n</p>\n\n"
    },
    "short_description": "Access your site&#039;s data through an easy-to-use HTTP REST API. (Version 2)",
    "description": "<p>WordPress is moving towards becoming a fully-fledged application framework, and we need new APIs. This project was born to create an easy-to-use, easy-to-understand and well-tested framework for creating these APIs, plus creating APIs for core.</p>\n<p>This plugin provides an easy to use REST API, available via HTTP. Grab your site&#8217;s data in simple JSON format, including users, posts, taxonomies and more. Retrieving or updating data is as simple as sending a HTTP request.</p>\n<p>Want to get your site&#8217;s posts? Simply send a <code>GET</code> request to <code>/wp-json/wp/v2/posts</code>. Update user with ID 4? Send a <code>PUT</code> request to <code>/wp-json/wp/v2/users/4</code>. Get all posts with the search term &#8220;awesome&#8221;? <code>GET /wp-json/wp/v2/posts?filter[s]=awesome</code>. It&#8217;s that easy.</p>\n<p>The WordPress REST API exposes a simple yet easy interface to WP Query, the posts API, post meta API, users API, revisions API and many more. Chances are, if you can do it with WordPress, the API will let you do it.</p>\n<p>The REST API also includes an easy-to-use JavaScript API based on Backbone models, allowing plugin and theme developers to get up and running without needing to know anything about the details of getting connected.</p>\n<p>Check out <a href=\"http://v2.wp-api.org/\" rel=\"nofollow ugc\">our documentation</a> for information on what&#8217;s available in the API and how to use it. We&#8217;ve also got documentation on extending the API with extra data for plugin and theme developers!</p>\n<p>All tickets for the project are being tracked on <a href=\"https://github.com/WP-API/WP-API\" rel=\"nofollow ugc\">GitHub</a>. You can also take a look at the <a href=\"http://make.wp-api.org/\" rel=\"nofollow ugc\">recent updates</a> for the project.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta15.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "api": "api",
        "json": "JSON",
        "rest": "rest",
        "rest-api": "rest-api"
    },
    "stable_tag": "2.0-beta15",
    "versions": {
        "2.0-beta10": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta10.zip",
        "2.0-beta11": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta11.zip",
        "2.0-beta12": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta12.zip",
        "2.0-beta12.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta12.1.zip",
        "2.0-beta13": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta13.zip",
        "2.0-beta13.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta13.1.zip",
        "2.0-beta14": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta14.zip",
        "2.0-beta15": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta15.zip",
        "2.0-beta3": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta3.zip",
        "2.0-beta3.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta3.1.zip",
        "2.0-beta4": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta4.zip",
        "2.0-beta4.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta4.1.zip",
        "2.0-beta5": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta5.zip",
        "2.0-beta5.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta5.1.zip",
        "2.0-beta6": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta6.zip",
        "2.0-beta6.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta6.1.zip",
        "2.0-beta7": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta7.zip",
        "2.0-beta7.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta7.1.zip",
        "2.0-beta8": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta8.zip",
        "2.0-beta8.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta8.1.zip",
        "2.0-beta9": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta9.zip",
        "2.0-beta9.1": "https://downloads.wordpress.org/plugin/rest-api.2.0-beta9.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/rest-api.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/rest-api/assets/banner-772x250.jpg?rev=1202542",
        "high": "https://ps.w.org/rest-api/assets/banner-1544x500.jpg?rev=1202542"
    },
    "icons": {
        "1x": "https://ps.w.org/rest-api/assets/icon-128x128.png?rev=1346297",
        "2x": "https://ps.w.org/rest-api/assets/icon-256x256.png?rev=1346297"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 84,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}