{
    "name": "Image Shortcake",
    "slug": "image-shortcake",
    "version": "0.1.0",
    "author": "<a href=\"https://github.com/fusioneng\">fusionengineering, goldenapples</a>",
    "author_profile": "https://profiles.wordpress.org/danielbachhuber/",
    "contributors": {
        "fusionengineering": {
            "profile": "https://profiles.wordpress.org/fusionengineering/",
            "avatar": "https://secure.gravatar.com/avatar/8b7ad57213249ef9bc657f62ebbe49d9?s=96&d=monsterid&r=g",
            "display_name": "fusionengineering"
        },
        "goldenapples": {
            "profile": "https://profiles.wordpress.org/goldenapples/",
            "avatar": "https://secure.gravatar.com/avatar/1f5554a4b5cbe76a16b5287c308a5be9?s=96&d=monsterid&r=g",
            "display_name": "goldenapples"
        },
        "danielbachhuber": {
            "profile": "https://profiles.wordpress.org/danielbachhuber/",
            "avatar": "https://secure.gravatar.com/avatar/560b284fd021779ea4817470074133f1?s=96&d=monsterid&r=g",
            "display_name": "Daniel Bachhuber"
        }
    },
    "requires": "3.0.1",
    "tested": "4.3.34",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/image-shortcake/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2477,
    "last_updated": "2015-08-27 12:17am GMT",
    "added": "2015-05-20",
    "homepage": "https://github.com/fusioneng/image-shortcake",
    "sections": {
        "description": "<p>When images are inserted into posts from the media library or media uploader, only the html of the <code>&lt;img&gt;</code> tag and the link around it (if any) are preserved. This means that themes which want to change the way images are marked up in content don&#8217;t have an easy way of doing this.</p>\n<p>Image Shortcake is an attempt to solve this problem, by saving images in post content as <em>shortcodes</em> rather than HTML. The output of shortcodes can be easily filtered in themes, plugins and templates, and since the original attachment data is preseved as attributes on the shortcode, it becomes much easier for modify the way images are marked up in themes.</p>\n<p>For best results, use this with the <a href=\"https://github.com/fusioneng/Shortcake\" rel=\"nofollow ugc\">Shortcake (Shortcode UI)</a> plugin. Shortcake offers an easy to use interface to manage shortcodes in post content.</p>\n<p>What could you use this for? Well, at <a href=\"http://fusion.net\" rel=\"nofollow ugc\">Fusion</a> we use this shortcode for:</p>\n<ul>\n<li>\n<p><strong>Responsive Images</strong>. By filtering the output of the <code>[img]</code> shortcode image tag, we&#8217;re able to insert the <code>srcset</code> attribute, so that all of<br />\nthe images on our site are served responsively to browsers that support that.</p>\n</li>\n<li>\n<p><strong>Inline sharing buttons</strong>. We&#8217;ve added share links to each of the images on our site. Because these are inserted through a filter on a shortcode and not in the post content, it&#8217;s easy to modify them on the fly. And having this logic in template files rather in on-page javascript that runs after page load makes it quicker for users.</p>\n</li>\n<li>\n<p><strong>Photo credits</strong>. We&#8217;ve added &#8220;credit&#8221; as an image meta field, and we use a filter on &#8216;img_shortcode_output_after_linkify&#8217; to display it on all images.</p>\n</li>\n</ul>\n<p>See the <a href=\"#Installation\" rel=\"nofollow ugc\">Installation</a> section for more ideas and tips for custom image templates. <a href=\"https://github.com/fusioneng/image-shortcake\" rel=\"nofollow ugc\">Get involved with the project</a> on Github.</p>\n",
        "installation": "<h4>Customizing Output</h4>\n<p>The whole point of using shortcodes rather than HTML tags for images is that you can customize the markup of images in your theme. This plugin offers three primary hooks to modify the output:</p>\n<ul>\n<li><code>img_shortcode_output_img_tag</code>: Filters the output of the  tag before wrapping it in link or caption</li>\n<li><code>img_shortcode_output_after_linkify</code>: Filters the output of the  tag after wrapping in link</li>\n<li><code>img_shortcode_output_after_captionify</code>: Filters the output of the  tag after wrapping in link and attaching caption</li>\n</ul>\n<p>You can, of course, disregard the markup generated by this plugin altogether and use a template part for images if you want. This example adds EXIF data below all images containing those fields, in all post content:</p>\n<p>in the theme&#8217;s <code>functions.php</code>:</p>\n<pre><code>    `\nadd_filter( 'img_shortcode_output_img_tag', 'load_image_template', 10, 2 );\n\nfunction load_image_template( $_, $attributes ) {\n    ob_start();\n    get_template_part( 'inline-image' );\n    return ob_get_clean();\n}\n    `\n</code></pre>\n<p>in a template file called <code>inline-image.php</code>:</p>\n<pre><code>    `\n&lt;?php\n\n$attachment = $attributes['attachment'];\n$size       = $attributes['size'];\n$class      = $attributes['classes'];\n$align      = $attributes['align']\n$alt        = $attributes['alt']\n$linkto     = $attributes['linkto']\n\n$attachment_meta = wp_get_attachment_metadata( intval( $attachment ) );\n$exif_data = ( $attachment_meta['image_meta']['camera'];\n\necho wp_get_attachment_image( $attachment, $size, null,\n    array(\n        'class' =&gt; \"$class $align attachment-$size\",\n        'alt'   =&gt; $alt,\n    )\n);\n\nif ( is_array( $exif_data ) ) {\n    echo '&lt;ul class=\"image-meta\"&gt;';\n    foreach ( $exif_data as $field =&gt; $value ) {\n        echo '&lt;li&gt;' . $field . ': ' . $value . '&lt;/li&gt;';\n    }\n    echo '&lt;/ul&gt;';\n}\n    `\n</code></pre>\n<h4>Data Migration</h4>\n<p>The plugin comes with two <a href=\"http://wp-cli.org\" rel=\"nofollow ugc\">WP-CLI</a> commands to migrate images in your existing content into the <code>[img]</code> shortcode format used by<br />\nthis plugin. <em>Note: if it isn&#8217;t clear, this is an early release &#8212; use at your own risk, and make sure you&#8217;ve backed up your posts before migrating!</em></p>\n<pre><code>wp image-shortcake migrate &lt;ids&gt; [--dry-run]\n</code></pre>\n<p>This command searches the post content of the posts specified in <code>&lt;ids&gt;</code>, and replaces any <code>&lt;img&gt;</code> tags or <code>[caption]</code> shortcodes with <code>[img]</code><br />\nshortcodes. Currently it only catches images added through the media library; custom img tags will not be converted.</p>\n<p>If you add the <code>--dry-run</code> flag, no replacements will actually be performed, just a summary report of the changes which would have been made.</p>\n<pre><code>wp image-shortcake revert &lt;ids&gt; [--dry-run]\n</code></pre>\n<p>This command finds all <code>[img]</code> shortcodes in the content of any of the posts specified in <code>&lt;ids&gt;</code>, and replaces them with the markup that would be generated by those shortcodes. Note that this runs any filters in your theme, so that if you have filtered the output of the shortcodes at any output, those filters will be reflected in the coverted post content.</p>\n",
        "changelog": "<h4>0.1.0 (May 1, 2015)</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n"
    },
    "short_description": "When images are inserted into posts from the media library or media uploader, only the html of the `` tag and the link around it (if any) are preserve &hellip;",
    "description": "<p>When images are inserted into posts from the media library or media uploader, only the html of the <code>&lt;img&gt;</code> tag and the link around it (if any) are preserved. This means that themes which want to change the way images are marked up in content don&#8217;t have an easy way of doing this.</p>\n<p>Image Shortcake is an attempt to solve this problem, by saving images in post content as <em>shortcodes</em> rather than HTML. The output of shortcodes can be easily filtered in themes, plugins and templates, and since the original attachment data is preseved as attributes on the shortcode, it becomes much easier for modify the way images are marked up in themes.</p>\n<p>For best results, use this with the <a href=\"https://github.com/fusioneng/Shortcake\" rel=\"nofollow ugc\">Shortcake (Shortcode UI)</a> plugin. Shortcake offers an easy to use interface to manage shortcodes in post content.</p>\n<p>What could you use this for? Well, at <a href=\"http://fusion.net\" rel=\"nofollow ugc\">Fusion</a> we use this shortcode for:</p>\n<ul>\n<li>\n<p><strong>Responsive Images</strong>. By filtering the output of the <code>[img]</code> shortcode image tag, we&#8217;re able to insert the <code>srcset</code> attribute, so that all of<br />\nthe images on our site are served responsively to browsers that support that.</p>\n</li>\n<li>\n<p><strong>Inline sharing buttons</strong>. We&#8217;ve added share links to each of the images on our site. Because these are inserted through a filter on a shortcode and not in the post content, it&#8217;s easy to modify them on the fly. And having this logic in template files rather in on-page javascript that runs after page load makes it quicker for users.</p>\n</li>\n<li>\n<p><strong>Photo credits</strong>. We&#8217;ve added &#8220;credit&#8221; as an image meta field, and we use a filter on &#8216;img_shortcode_output_after_linkify&#8217; to display it on all images.</p>\n</li>\n</ul>\n<p>See the <a href=\"#Installation\" rel=\"nofollow ugc\">Installation</a> section for more ideas and tips for custom image templates. <a href=\"https://github.com/fusioneng/image-shortcake\" rel=\"nofollow ugc\">Get involved with the project</a> on Github.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/image-shortcake.0.1.0.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/image-shortcake/trunk/screenshot-1.png?rev=1573839",
            "caption": "This is the shortcode UI form as accessed from <strong>Insert Media &gt; Insert Post Element</strong>. (Note that you can also insert images as usual, by inserting them in the Media Library - they will be transparently converted into shortcodes behind the scenes for you.)"
        },
        {
            "src": "https://ps.w.org/image-shortcake/trunk/screenshot-2.png?rev=1573839",
            "caption": "Once inserted into a post, the image preview renders in the editor just as it normally would. The Shortcake plugin's edit/delete buttons are available to modify the shortcode through the provided UI."
        }
    ],
    "tags": {
        "images": "images",
        "shortcodes": "shortcodes"
    },
    "stable_tag": "0.1.0",
    "versions": {
        "0.1.0": "https://downloads.wordpress.org/plugin/image-shortcake.0.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/image-shortcake.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/image-shortcake.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}