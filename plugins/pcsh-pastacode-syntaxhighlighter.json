{
    "name": "PCSH (PastaCode and SyntaxHighlighter)",
    "slug": "pcsh-pastacode-syntaxhighlighter",
    "version": "0.4.2",
    "author": "<a href=\"http://www.overscale.net\">Yury Pavlov</a>",
    "author_profile": "https://profiles.wordpress.org/webaib/",
    "contributors": {
        "webaib": {
            "profile": "https://profiles.wordpress.org/webaib/",
            "avatar": "https://secure.gravatar.com/avatar/2ac8482157a018e68b852a3158f23ace?s=96&d=monsterid&r=g",
            "display_name": "Oleg Soromin"
        }
    },
    "requires": "3.1",
    "tested": "4.4.33",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 60,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 1
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/pcsh-pastacode-syntaxhighlighter/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2065,
    "last_updated": "2015-12-10 13:11:00",
    "added": "2014-11-19",
    "homepage": "https://github.com/Webaib/PastacodeAndSyntaxHighlighter",
    "sections": {
        "description": "<p>With PCSH (based on the Pastacode plugin), you can easily add code into your posts with the awesome SyntaxHighlighter js-library.<br />\nYou can insert source code into the post editor, from a file, or from webservices like GitHub, Gist, Pastebin or BitBucket. Webservices responses are cached in order to avoid too many HTTP requests.</p>\n<p>Don&#8217;t worry about posts updates while upgrading codes!</p>\n<p>PCSH allows to enhance your snippets using SyntaxHighlighter plugins (highlightning lines, link functions&#8230;).</p>\n<p>8 different color schemes are included, and you can build yours.</p>\n<p>Available programming languages:</p>\n<ul>\n<li>AppleScript</li>\n<li>ActionScript3</li>\n<li>Bash</li>\n<li>CoffeeScript</li>\n<li>C++</li>\n<li>C#</li>\n<li>CSS</li>\n<li>Pascal</li>\n<li>Diff</li>\n<li>Erlang</li>\n<li>Groovy</li>\n<li>Haxe</li>\n<li>Java</li>\n<li>JavaFX</li>\n<li>JavaScript</li>\n<li>Perl</li>\n<li>PHP</li>\n<li>Plain</li>\n<li>Python</li>\n<li>Ruby</li>\n<li>Scala</li>\n<li>SQL</li>\n<li>VisualBasic</li>\n<li>XML</li>\n</ul>\n",
        "installation": "<ol>\n<li>Unzip PCSH into your plugin folder</li>\n<li>Go to PCSH settings, and configure your color scheme and cache expiration</li>\n<li>Host your snippets on repositories (or localy)</li>\n<li>Editing a post, use <em>PCSH</em> button to embed your source code into articles</li>\n</ol>\n<h4>Ajax compatibility</h4>\n<p>To enable PCSH on ajax based websites, it need two steps :</p>\n<ol>\n<li>Paste this line into your functions.php theme file : &#8220;add_filter( &#8216;pcsh_ajax&#8217;, &#8216;__return_true&#8217; );&#8221;</li>\n<li>After each change on your DOM, you will have to run this javascript function : &#8220;SyntaxHighlighter.all();&#8221;</li>\n</ol>\n",
        "faq": "\n<h4>How to setup a custom cache expiration ?</h4>\n<p>\n<p>Paste these lines into your functions.php theme file :<br />\n&#8220;add_filter( &#8216;option_pcsh_cache_duration&#8217;, &#8216;my_pcsh_cache_duration&#8217; );<br />\nfunction my_pcsh_cache_duration( $duration ) {<br />\n    $duration = DAY_IN_SECOND*3; // 3 days<br />\n    return $duration;<br />\n}&#8221;</p>\n</p>\n<h4>How define a custom color scheme ?</h4>\n<p>\n<p>Paste these lines into your functions.php theme file :<br />\n&#8220;add_filter( &#8216;option_pcsh_style&#8217;, &#8216;my_pcsh_style&#8217; );<br />\nfunction my_pcsh_style( $scheme ) {<br />\n    $scheme = &#8216;my_awesome_style&#8217;; //CSS filename into the plugin css directory<br />\n    return $scheme;<br />\n}&#8221;</p>\n</p>\n<h4>How to filter supported languages ?</h4>\n<p>\n<p>Paste these lines into your functions.php theme file :<br />\n&#8220;//If you just want php, html, css and javascript support<br />\nadd_filter( &#8216;pcsh_langs&#8217;, &#8216;_pcsh_langs&#8217; );<br />\nfunction _pcsh_langs( $langs ) {<br />\n    $langs  = array(<br />\n        &#8216;php&#8217;          =&gt; &#8216;PHP&#8217;,<br />\n        &#8216;markup&#8217;       =&gt; &#8216;HTML&#8217;,<br />\n        &#8216;css&#8217;          =&gt; &#8216;CSS&#8217;,<br />\n        &#8216;javascript&#8217;   =&gt; &#8216;JavaScript&#8217;<br />\n    );</p>\n<pre><code>return $langs;\n</code></pre>\n<p>}&#8221;</p>\n</p>\n<h4>How to add a new provider ?</h4>\n<p>\n<p>Paste these lines into your functions.php theme file :<br />\n&#8220;//Take WordPress SVN, for example<br />\n//register a provider<br />\nadd_filter( &#8216;pcsh_services&#8217;, &#8216;_pcsh_services&#8217; );<br />\nfunction _pcsh_services( $services ) {<br />\n    $services[&#8216;wordpress&#8217;] = &#8216;core.svn.wordpress.org&#8217;;<br />\n    return $services;<br />\n}</p>\n<p>//Define pastabox lightbox inputs<br />\nadd_action( &#8216;pcsh_fields&#8217;, &#8216;_pcsh_fields&#8217; );<br />\nfunction _pcsh_fields( $fields ) {<br />\n    $fields[&#8216;wordpress&#8217;] = array(  // &#8216;wordpress&#8217; or &#8216;whatever&#8217;<br />\n        &#8216;classes&#8217;     =&gt; array( &#8216;wordpress&#8217; ), // same value as the key<br />\n        &#8216;label&#8217;       =&gt; sprintf( __(&#8216;File path relative to %s&#8217;, &#8216;pcsh&#8217;), &#8216;https://core.svn.wordpress.org/&#8217; ),<br />\n        &#8216;placeholder&#8217; =&gt;&#8217;trunk/wp-config-sample.php&#8217;, //if placeholder isn&#8217;t defined, it will be a textarea<br />\n        &#8216;name&#8217;        =&gt; &#8216;path_id&#8217; //these value return shortcode attribute (path_id, repos, name, user, version)<br />\n        );<br />\n    return $fields;<br />\n}</p>\n<p>//Build the function to retrieve the code<br />\n// &#8220;pcsh_wordpress&#8221; hook name (1st param) = &#8220;pcsh_&#8221; + &#8220;wordpress&#8221; or &#8220;whatever&#8221;<br />\nadd_action( &#8216;pcsh_wordpress&#8217;, &#8216;_pcsh_wordpress&#8217;, 10, 2 );<br />\nfunction _pcsh_wordpress( $source, $atts ) {<br />\n    extract( $atts );<br />\n    if( $path_id ) {<br />\n        $req  = wp_sprintf( &#8216;https://core.svn.wordpress.org/%s&#8217;, str_replace( &#8216;https://core.svn.wordpress.org/&#8217;, &#8221;, $path_id ) );<br />\n        $code = wp_remote_get( $req );<br />\n        if( ! is_wp_error( $code ) &amp;&amp; 200 == wp_remote_retrieve_response_code( $code ) ) {<br />\n            $data = wp_remote_retrieve_body( $code );<br />\n            $source[ &#8216;url&#8217; ]  = $req; //url to view source<br />\n            $source[ &#8216;name&#8217; ] = basename( $req ); //filename<br />\n            $source[ &#8216;code&#8217; ] = esc_html( $data ); //the code !!<br />\n            //$source[ &#8216;raw&#8217; ] contain raw source code. But there are no raw source code delivered by WordPress SVN<br />\n        }<br />\n    }<br />\n    return $source;<br />\n}&#8221;</p>\n<p>Do not add you root website!! A contributor can add the shortcode to point your &#8220;wp-config.php&#8221; to read it!!</p>\n</p>\n\n",
        "changelog": "<h4>0.4.2</h4>\n<ul>\n<li>10 December 2015</li>\n<li>Checked for Compatibility with WP 4.4 </li>\n</ul>\n<h4>0.4.1</h4>\n<ul>\n<li>19 August 2015</li>\n<li>Checked for Compatibility with WP 4.3 </li>\n</ul>\n<h4>0.4</h4>\n<ul>\n<li>29 April 2015</li>\n<li>Checked for Compatibility with WP 4.2.1</li>\n<li>Add a linehighlighting for a range of lines (e.g. 3-7) </li>\n</ul>\n<h4>0.3</h4>\n<ul>\n<li>2x December 2015</li>\n<li>Minor update in the plugin description</li>\n</ul>\n<h4>0.2</h4>\n<ul>\n<li>20 November 2014</li>\n<li>Add russian translation</li>\n</ul>\n<h4>0.1</h4>\n<ul>\n<li>19 November 2014</li>\n<li>Prism replaced by SyntaxHighlighter</li>\n<li>Renamed all settings, functions and co. to eliminate any conflicts with the original plugin.  </li>\n</ul>\n<h4>1.3*</h4>\n<ul>\n<li>5 may 2014</li>\n<li>TinyMCE Editor support improvment (visual placeholder on editor mode, new tinyMCE button&#8230;)</li>\n<li>Github API restriction fallback (support now more than 30 requests / hour)</li>\n<li>New ajax compatibility (using hook pcsh_ajax)</li>\n<li>Fix bug: No more disgracefull linebreaks on code view.</li>\n</ul>\n<h4>1.2.1*</h4>\n<ul>\n<li>21 nov 2013</li>\n<li>Fix bug: when manual provider is selected, no cache.</li>\n</ul>\n<h4>1.2*</h4>\n<ul>\n<li>15 oct 2013</li>\n<li>The modification of the cache duration do not purge cache anymore</li>\n<li>New button &#8220;Purge Cache&#8221; in option page, use it to delete all transients (they contains the responded source codes)</li>\n<li>Fix bug when updating option</li>\n</ul>\n<h4>1.1*</h4>\n<ul>\n<li>12 oct 2013</li>\n<li>Hooks, hooks and hooks.</li>\n<li>Update shortcode format (&#8220;type&#8221; became &#8220;provider&#8221;, and add &#8220;/&#8221; before the closing tag)</li>\n</ul>\n<h4>1.0*</h4>\n<ul>\n<li>10 oct 2013</li>\n<li>Initial release</li>\n<li>Insert codes using a nice lightbox</li>\n<li>Import codes from file, Github, Gist, Pastebin or BitBucket</li>\n<li>13 languages available</li>\n<li>6 color schemes</li>\n<li>Cache support for webservices (default duration : 1 week)</li>\n</ul>\n"
    },
    "short_description": "Use PCSH to add code into your posts with the awesome SyntaxHighlighter plugin. So, past&#039;a code!",
    "description": "<p>With PCSH (based on the Pastacode plugin), you can easily add code into your posts with the awesome SyntaxHighlighter js-library.<br />\nYou can insert source code into the post editor, from a file, or from webservices like GitHub, Gist, Pastebin or BitBucket. Webservices responses are cached in order to avoid too many HTTP requests.</p>\n<p>Don&#8217;t worry about posts updates while upgrading codes!</p>\n<p>PCSH allows to enhance your snippets using SyntaxHighlighter plugins (highlightning lines, link functions&#8230;).</p>\n<p>8 different color schemes are included, and you can build yours.</p>\n<p>Available programming languages:</p>\n<ul>\n<li>AppleScript</li>\n<li>ActionScript3</li>\n<li>Bash</li>\n<li>CoffeeScript</li>\n<li>C++</li>\n<li>C#</li>\n<li>CSS</li>\n<li>Pascal</li>\n<li>Diff</li>\n<li>Erlang</li>\n<li>Groovy</li>\n<li>Haxe</li>\n<li>Java</li>\n<li>JavaFX</li>\n<li>JavaScript</li>\n<li>Perl</li>\n<li>PHP</li>\n<li>Plain</li>\n<li>Python</li>\n<li>Ruby</li>\n<li>Scala</li>\n<li>SQL</li>\n<li>VisualBasic</li>\n<li>XML</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.0.4.2.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-1.png?rev=1028508",
            "caption": "View of the PCSH code lightbox"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-2.png?rev=1028508",
            "caption": "Default color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-3.png?rev=1028508",
            "caption": "<em>Django</em> color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-4.png?rev=1028508",
            "caption": "<em>Eclipse</em> color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-5.png?rev=1028508",
            "caption": "<em>Emacs</em> color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-6.png?rev=1028508",
            "caption": "<em>FadeToGrey</em> color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-7.png?rev=1028508",
            "caption": "<em>MDUltra</em> color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-8.png?rev=1028508",
            "caption": "<em>Midnight</em> color scheme"
        },
        {
            "src": "https://ps.w.org/pcsh-pastacode-syntaxhighlighter/assets/screenshot-9.png?rev=1028508",
            "caption": "<em>RDark</em> color scheme"
        }
    ],
    "tags": {
        "bitbucket": "Bitbucket",
        "code": "code",
        "embed": "embed",
        "github": "Github",
        "version": "version"
    },
    "stable_tag": "0.4.2",
    "versions": {
        "0.2": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.0.2.zip",
        "0.3": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.0.3.zip",
        "0.4": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.0.4.zip",
        "0.4.1": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.0.4.1.zip",
        "0.4.2": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.0.4.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/pcsh-pastacode-syntaxhighlighter.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/pcsh-pastacode-syntaxhighlighter.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 60,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}