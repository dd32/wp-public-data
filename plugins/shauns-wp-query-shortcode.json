{
    "name": "Shaun&#039;s WP Query Shortcode",
    "slug": "shauns-wp-query-shortcode",
    "version": "1.2",
    "author": "<a href=\"http://shaunscovil.com/\">Shaun Scovil</a>",
    "author_profile": "https://profiles.wordpress.org/sscovil/",
    "contributors": {
        "sscovil": {
            "profile": "https://profiles.wordpress.org/sscovil/",
            "avatar": "https://secure.gravatar.com/avatar/57001cc4703d49e29d9548fcd6656cf8?s=96&d=monsterid&r=g",
            "display_name": "Shaun Scovil"
        }
    },
    "requires": "3.0",
    "tested": "3.4.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/shauns-wp-query-shortcode/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 2048,
    "last_updated": "2012-10-20 14:06:00",
    "added": "2012-06-24",
    "homepage": "http://mynewsitepreview.com/shauns-wp-query-shortcode/",
    "sections": {
        "description": "<p>Written as a platform for plugin developers, this simple-yet-powerful plugin allows you to run a custom WP_Query using shortcode, then display the results any way imaginable using compatible nested shortcodes.</p>\n<h4>How It Works</h4>\n<p>Add the following shortcode to any WordPress post or page:</p>\n<pre><code>[wpquery orderby=\"rand\"] [wpq_index] [/wpquery]\n</code></pre>\n<p>In the example above, the <code>[wpquery]</code> shortcode performs a WP_Query using <strong>orderby=&#8221;rand&#8221;</strong> to display the results in random order. A full list of query parameters can be found here: <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query#Parameters\" title=\"WP_Query\" rel=\"nofollow ugc\">WP_Query</a>.</p>\n<p>Next, the nested <code>[wpq_index]</code> shortcode displays the results of the custom WP_Query as an unordered list of post title links.</p>\n<h4>Why It Rocks</h4>\n<p>Written as a platform for plugin developers, this simple-yet-powerful plugin allows developers to write compatible plugins that manipulate the way post data is displayed &#8211; without needing to write functions and shortcode parameters to first retrieve the post data.</p>\n<p>The <code>[wpq_index]</code> shortcode function included in this plugin is just a simple example of what it can do. Any plugin that performs a WP_Query could be rewrtitten and optimized to work with this plugin, eliminating a lot of unnecessary code.</p>\n<p>Best of all, this plugin gives users total control over the WP_Query being performed!</p>\n",
        "installation": "<ol>\n<li>Upload <code>shauns-wp-query-shortcode.php</code> to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>In a post or page, place the nested shortcode: <code>[wpquery] [wpq_index] [/wpquery]</code></li>\n<li>Replace <code>[wpq_index]</code> with shortcode from any other compatible plugin</li>\n</ol>\n",
        "faq": "\n<h4>Why did you develop this plugin?</h4>\n<p>\n<p>Two of my earlier plugins &#8211; <a href=\"https://wordpress.org/extend/plugins/sorttable-post/\" title=\"SortTable Post\" rel=\"ugc\">SortTable Post</a> and <a href=\"https://wordpress.org/extend/plugins/jqdock-post-thumbs/\" title=\"jqDock Post Thumbs\" rel=\"ugc\">jqDock Post Thumbs</a> &#8211; essentially did the same thing: They got post data via WP_Query, then used a Javascript library to display certain information in a unique and interesting way.</p>\n<p>Many of the feature requests I received for those plugins came from folks who wanted more granular control over the data that was retrieved by WP_Query (e.g. only show posts of a particular category / tag / post-type / taxonomy).</p>\n<p>The only way I could accommodate those feature requests was to add more shortcode parameters to the plugin, but I was also adding shortcode parameters to handle how the post data was displayed. After a while, things started getting out of hand.</p>\n<p>This plugin was the solution.</p>\n<p>By separating the shortcode for &#8216;getting post data&#8217; from the shortcode for &#8216;displaying post data&#8217;, I was able to simplify the shortcodes for users.</p>\n</p>\n<h4>What shortcode parameters does `[wpquery]` accept?</h4>\n<p>\n<p>It accepts all of the same parameters as <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query#Parameters\" title=\"WP_Query\" rel=\"nofollow ugc\">WP_Query</a>.</p>\n</p>\n<h4>Where can I find compatible plugins?</h4>\n<p>\n<p>Going forward, all of my plugins that use WP_Query will require this plugin to be installed. You can find my plugins here: <a href=\"https://profiles.wordpress.org/sscovil\" title=\"Shaun's Profile\" rel=\"nofollow ugc\">Shaun&#8217;s Profile</a></p>\n<p>To find compatible plugins written by other authors, try searching the WP Plugin Repository for &#8220;Shaun&#8217;s WP Query Shortcode&#8221;.</p>\n<p>If you&#8217;re real savvy, you can even write your own compatible plugins! Just use the <code>mnsp_wpq_index</code> function that comes with this plugin as a template&#8230;and if you upload it to the repository, make sure you let people know that it requires Shaun&#8217;s WP Query Shortcode to work!</p>\n</p>\n<h4>How can I request support or report a bug?</h4>\n<p>\n<p>Please post your question as a comment on the apporpriate plugin page of my website: <a href=\"http://mnsp.co/\" title=\"MyNewSitePreview.com\" rel=\"nofollow ugc\">MyNewSitePreview.com</a></p>\n</p>\n\n",
        "changelog": "<h4>1.2</h4>\n<ul>\n<li>Modified the <code>wpq_index</code> shortcode function to exclude the current post/page from the list.</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Added function to detect array expressions in shortcode parameters and convert them to arrays. This allows you to set WP_Query parameters such as <code>category__and</code>, <code>category__in</code>, <code>category__not_in</code>, etc.</li>\n<li>Thanks to <a href=\"http://stackoverflow.com/users/492901/netcoder\" title=\"Netcoder\" rel=\"nofollow ugc\">Netcoder</a> for providing this <a href=\"http://stackoverflow.com/questions/11267434/php-how-to-turn-a-string-that-contains-an-array-expression-in-an-actual-array/11267511#comment14814921_11267511\" title=\"solution\" rel=\"nofollow ugc\">solution</a>!</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>First public release.</li>\n</ul>\n"
    },
    "short_description": "This extensible plugin allows you to run a custom WP_Query using a simple shortcode, then display the results using compatible nested shortcodes.",
    "description": "<p>Written as a platform for plugin developers, this simple-yet-powerful plugin allows you to run a custom WP_Query using shortcode, then display the results any way imaginable using compatible nested shortcodes.</p>\n<h4>How It Works</h4>\n<p>Add the following shortcode to any WordPress post or page:</p>\n<pre><code>[wpquery orderby=\"rand\"] [wpq_index] [/wpquery]\n</code></pre>\n<p>In the example above, the <code>[wpquery]</code> shortcode performs a WP_Query using <strong>orderby=&#8221;rand&#8221;</strong> to display the results in random order. A full list of query parameters can be found here: <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query#Parameters\" title=\"WP_Query\" rel=\"nofollow ugc\">WP_Query</a>.</p>\n<p>Next, the nested <code>[wpq_index]</code> shortcode displays the results of the custom WP_Query as an unordered list of post title links.</p>\n<h4>Why It Rocks</h4>\n<p>Written as a platform for plugin developers, this simple-yet-powerful plugin allows developers to write compatible plugins that manipulate the way post data is displayed &#8211; without needing to write functions and shortcode parameters to first retrieve the post data.</p>\n<p>The <code>[wpq_index]</code> shortcode function included in this plugin is just a simple example of what it can do. Any plugin that performs a WP_Query could be rewrtitten and optimized to work with this plugin, eliminating a lot of unnecessary code.</p>\n<p>Best of all, this plugin gives users total control over the WP_Query being performed!</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/shauns-wp-query-shortcode.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/shauns-wp-query-shortcode/trunk/screenshot-1.png?rev=1539300",
            "caption": "A basic example of how to use this plugin"
        },
        {
            "src": "https://ps.w.org/shauns-wp-query-shortcode/trunk/screenshot-2.png?rev=1539300",
            "caption": "Code that can be used as a template to write a compatible plugin"
        }
    ],
    "tags": {
        "custom": "custom",
        "page": "page",
        "post": "post",
        "query": "query",
        "type": "type"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://mynewsitepreview.com/donate/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/shauns-wp-query-shortcode.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}