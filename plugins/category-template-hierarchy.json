{
    "name": "Category Template Hierarchy",
    "slug": "category-template-hierarchy",
    "version": "1.3.2.1",
    "author": "Eddie Moya",
    "author_profile": "https://profiles.wordpress.org/eddiemoya/",
    "contributors": {
        "eddiemoya": {
            "profile": "https://profiles.wordpress.org/eddiemoya/",
            "avatar": "https://secure.gravatar.com/avatar/56406b3128a7c0e1bf7282c26536a7cf?s=96&d=monsterid&r=g",
            "display_name": "Eddie Moya"
        }
    },
    "requires": "3.0",
    "tested": "3.3.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 3,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 3,
    "support_url": "https://wordpress.org/support/plugin/category-template-hierarchy/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 18294,
    "last_updated": "2012-03-24 03:12:00",
    "added": "2011-12-13",
    "homepage": "http://eddiemoya.com/",
    "sections": {
        "description": "<p>Adds several new templates to the template hierarchy:</p>\n<ul>\n<li>child-of-category-{slug}.php</li>\n<li>category-{slug}.php</li>\n<li>child-of-category-{id}.php</li>\n<li>category-{term_id}.php</li>\n<li>parent-category.php</li>\n<li>child-category.php</li>\n<li>category.php</li>\n<li>archive.php</li>\n<li>index.php</li>\n</ul>\n<p>This greatly extends the native hierarchy of theme templates with regard to<br />\ncategories. Theme developers can now easily create separate templates for<br />\ncategories with children, with parents, and children of specific parents.</p>\n<p>Additionally makes available four (4) new conditional template tags:</p>\n<ul>\n<li>is_child_category();</li>\n<li>is_parent_category();</li>\n<li>is_child_of_category();</li>\n<li>is_parent_of_category();</li>\n</ul>\n<p>These functions are available for use in any theme or plugin as along as this<br />\nplugin is active. For detailed documentation of these functions see the<br />\n&#8216;Developer Notes: Conditional Tags&#8217; section of this readme file.</p>\n<p>Note: This plugin does not actually create parent-category.php, child-category.php<br />\nor any of their related templates &#8211; rather it modifies the native <a href=\"https://codex.wordpress.org/Template_Hierarchy\" rel=\"nofollow ugc\">template hierarchy</a><br />\nto allow theme developers to create specific templates for parent and child categories.</p>\n<h3>Developer Notes: Template Hierarchy</h3>\n<p>What follows are is the modified list of templates available for category pages.<br />\nThese expand upon the native <a href=\"https://codex.wordpress.org/Template_Hierarchy#Visual_Overview\" rel=\"nofollow ugc\">Template Hierarchy</a>.</p>\n<ul>\n<li>child-of-category-{slug}.php</li>\n<li>category-{slug}.php</li>\n<li>child-of-category-{id}.php</li>\n<li>category-{term_id}.php</li>\n<li>parent-category.php</li>\n<li>child-category.php</li>\n<li>category.php</li>\n<li>archive.php</li>\n<li>index.php</li>\n</ul>\n<p>The parent and child templates only become available if the current category is<br />\na parent or a child respectively.</p>\n<p>Note: This plugin does not actually create parent-category.php, child-category.php<br />\nor any of their related templates &#8211; rather it modifies the native <a href=\"https://codex.wordpress.org/Template_Hierarchy\" rel=\"nofollow ugc\">template hierarchy</a><br />\nto allow theme developers to create specific templates for parent and child categories.</p>\n<h3>Developer Notes: Conditional Tags</h3>\n<p>With this plugin comes two additional <a href=\"https://codex.wordpress.org/Conditional_Tags\" rel=\"nofollow ugc\">conditional tags</a><br />\nwhich behave much like any other in WordPress. In a similar fashion to how one<br />\nmight use <a href=\"https://codex.wordpress.org/Function_Reference/is_category\" rel=\"nofollow ugc\">is_category()</a> or <a href=\"https://codex.wordpress.org/Function_Reference/cat_is_ancestor_of\" rel=\"nofollow ugc\">cat_is_ancestory_of()</a>,<br />\ndevelopers may, with this plugin, use the following functions:</p>\n<ul>\n<li>is_parent_category()</li>\n<li>is_child_category()</li>\n<li>is_child_of_category()</li>\n<li>is_parent_of_category()</li>\n</ul>\n<h4>Description (part 1)</h4>\n<p>The <code>is_parent_category()</code> and <code>is_child_category()</code> conditional tags check if<br />\nthe page being displayed (or passed as an argument) is of a category that has<br />\nchildren (e.g. is a parent category)  has a parent (is a child), respectively.<br />\nThey are boolean functions, meaning they return either TRUE or FALSE.</p>\n<h4>Usage</h4>\n<pre><code>&lt;?php is_parent_category( $category ); ?&gt;\n&lt;?php is_child_category( $category ); ?&gt;\n</code></pre>\n<h4>Parameters</h4>\n<p>$category (integer/string/object) (optional) Category ID, Category Slug, Category Object. Default: Current Category</p>\n<p>Note: Unlike is_category(), these functions will not take arrays of categories or category titles. I&#8217;ll work on that. Sorry.</p>\n<h4>Return Values</h4>\n<p>(boolean) True on success, false on failure.</p>\n<h4>Examples</h4>\n<pre><code>is_parent_category()\nis_child_category()\n// When any parent/child category archive page is being displayed\n\nis_parent_category( '9' );\nis_child_category( '9' );\n// When the archive page for Category 9 is being displayed AND its a parent/child.\n\nis_parent_category( 'blue-cheese' );\nis_child_category( 'blue-cheese' );\n// When the archive page for the Category with Category Slug \"blue-cheese\" is being displayed AND its a parent/child.\n</code></pre>\n<h4>Description (part 2)</h4>\n<p>The <code>is_parent_of_category()</code> and <code>is_child_of_category()</code> conditional tags<br />\ncheck if a given category has a parent or child relationship to the current<br />\ncategory or a category passed as its second parameter. They are<br />\nboolean functions, meaning they return either TRUE or FALSE.</p>\n<h4>Usage</h4>\n<pre><code>&lt;?php is_parent_of_category($child_category, $parent_category, $direct_descendant); ?&gt;\n&lt;?php is_child_of_category($parent_category, $child_category, $direct_descendant);?&gt;\n</code></pre>\n<h4>Parameters</h4>\n<p>(object/string/integer) (required) Category of the would-be parent/child respectively.<br />\n(object/string/integer) (optional) Category of the would-be child/parent respectfully. Default: Current Category<br />\n(boolean) (optional) Whether or not the child should be a direct child of the parent. Default: True<br />\n *</p>\n<h4>Return Values</h4>\n<p>(boolean) If the $direct_descendant flag set to true, function returns true if the child is a direct descendant of the parent, if child is no direct it will return false. If $direct_descendant is set to false it will return the same results as cat_is_ancestor_of().</p>\n<h4>Examples</h4>\n<p>The following function will return True&#8230;</p>\n<pre><code>is_child_of_category(0);\n// When a top level category is being displayed, zero being the parent id value for top level categories (e.g. categories with no parents).\n\nis_child_of_category(12);\n// When the current category is a direct child of the category whose ID is '12'.\n\nis_child_of_category('tv-shows')\n// When the current category is a direct child of the category with the slug 'tv-shows' (can also be category ID's).\n\nis_child_of_category('tv-shows', 'dexter');\n// When the category with slug 'dexter' is a direct child of the category with the slug 'tv-shows' (can also be category ID's). This may come in handy when manipulating categories while not in a category template.\n\nis_child_of_category('tv-shows', 'dexter', false);\n// When the category with the slug 'dexter' is a descendant of the category 'tv-shows' at any level. (uses cat_is_ancestor_of())\n\nis_child_of_category('tv-shows', null, false);\n// When the current category is a descendant of the 'tv-shows' category at any level. (uses cat_is_ancestor_of())\n\nis_parent_of_category(13);\n// When the current category is the direct parent of a category with the ID '13'.\n\nis_parent_of_category('dexter');\n// When the current category is the direct parent of the category with the slug 'dexter'.\n</code></pre>\n<h3>Backward Compatibility</h3>\n<p>The changes this plugin makes to the template hierarchy are significantly different<br />\nfrom that in 1.0.5 and before. If you prefer to use that version please find it<br />\nin the Older Versions in the WordPress plugins directory, it is tagged as 1.0.5.</p>\n<p>While I do not actively support to QA the older version, I would gladly take a<br />\nlook at any future bugs that crop up and are reported.</p>\n",
        "installation": "<ol>\n<li>Upload <code>plugin-name.php</code> to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "faq": "\n<h4>Do you have any Frequently Asked Questions?</h4>\n<p>\n<p>No.</p>\n</p>\n<h4>Why not?</h4>\n<p>\n<p>Because I only just recently released the plugin. I feel that I&#8217;ve done a decent<br />\njob of documentation, so I can&#8217;t guess what people may ask on this broadly<br />\napplicable plugin.</p>\n</p>\n<h4>Can I ask you a question</h4>\n<p>\n<p>Please do! Feel free to ask on the tools provided right in the WordPress plugin<br />\ndirectory, or on my website <a href=\"http://eddiemoya.com/\" rel=\"nofollow ugc\">eddiemoya.com</a>.</p>\n</p>\n<h4>I liked the old hierarchy, with parent-category-{slug|id}.php and child-category-{slug|id}.php, where can I find that?</h4>\n<p>\n<p>The last version that used the old hierarchical model was 1.0.5, it was tagged<br />\nas such and can be found in the WordPress directory by looking for Older Versions.</p>\n</p>\n<h4>You just said you have no frequently asked questions, wasn&#8217;t that just a frequently asked question?</h4>\n<p>\n<p>Nope, no one has actually asked, just anticipating.</p>\n</p>\n<h4>What does the narwhal do at midnight?</h4>\n<p>\n<p>Bacon.</p>\n</p>\n\n",
        "changelog": "<h4>1.3.2.1</h4>\n<ul>\n<li>Changes made in 1.3.2 were not properly checked in &#8211; this version is a re-release of 1.3.2 &#8211; apologies for the inconvenience.</li>\n</ul>\n<h4>1.3.2</h4>\n<ul>\n<li>Bug: [FIXED] <code>category-slug.php</code> and <code>category-id.php</code> were being excluded from the list of templates if the current category was neither a parent or a child.</li>\n</ul>\n<h4>1.3.1</h4>\n<ul>\n<li>Bug: [FIXED] Plugin was not finding &#8216;category.php&#8217; when it was available.</li>\n</ul>\n<h4>1.3</h4>\n<ul>\n<li>Bug: [FIXED] Template Hierarchy manipulation was interfering with other parts of the native Template Hierarchy, now uses &#8216;category_template&#8217; filter instead of &#8216;template_redirect&#8217;.</li>\n<li>Bug: [FIXED] Child and Parent categories were not pulling $post and other normal globals into scope during the loop.</li>\n<li>Minor Logic Change: <code>is_child_of_category()</code> and <code>is_parent_of_category</code> now check specifically for <code>$category_parent-&gt;parent</code> and <code>$parent_category-&gt;term_id</code>, because the way it was before, honestly did not make much sense. </li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>Performance enhancement: Added a simple check to <code>is_child_of_category_()</code> and <code>is_parent_of_category()</code> to return false if empty, before bothering to check if there are relationships. Prevents a PHP notice caused by attempting to get the property of a non-object &#8211; this would occur when either function is called and the page is not a category at all.</li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>Fixed &#8216;print_pre&#8217; bug caused by a debugging function which I failed to remove when debugging was completed.</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Completely restructured the hierarchical modifications this plugin creates.</li>\n<li>Added child-of-category-{slug}.php and child-of-category-{id}.php templates</li>\n<li>Added is_child_of_category() and is_parent_of_category() functions.</li>\n<li>Removed child-category-{slug}.php, child-category-{id}.php, parent-category-{slug}.php, parent-category-{id}.php because they aren&#8217;t very useful and just dont fit into the cool crowd.</li>\n<li>Fixed all known bugs, and a few that were not known.</li>\n</ul>\n<h4>1.0.5</h4>\n<ul>\n<li>First actually stable release</li>\n<li>Packaging problem fixed &#8211; the plugin was incorrectly packaged, such that it failed on activation.</li>\n<li>Fixed several other very bad bugs</li>\n</ul>\n<h4>1.0.3</h4>\n<ul>\n<li>Fixed problems with the is_parent_category() and is_child_category() functions where they returned <code>null</code> if called from a non-category page. </li>\n<li>Removed the &#8216;happy accident&#8217; wherein a category which is both a parent and a child results in a hierarchy based on parent-child-categroy.php. This reveals a more important problem which I plan to fix for version 1.1.</li>\n<li>Fixed a silly bug. Misspelled <code>is_numberic</code> rather than <code>is_numeric</code>.</li>\n<li>Removed unnecessary <code>exit</code>.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Initial commit.</li>\n</ul>\n"
    },
    "short_description": "Adds parent-category.php, child-category.php, and child-category-{slug|id} templates to the hierarchy and conditional tags to match.",
    "description": "<p>Adds several new templates to the template hierarchy:</p>\n<ul>\n<li>child-of-category-{slug}.php</li>\n<li>category-{slug}.php</li>\n<li>child-of-category-{id}.php</li>\n<li>category-{term_id}.php</li>\n<li>parent-category.php</li>\n<li>child-category.php</li>\n<li>category.php</li>\n<li>archive.php</li>\n<li>index.php</li>\n</ul>\n<p>This greatly extends the native hierarchy of theme templates with regard to<br />\ncategories. Theme developers can now easily create separate templates for<br />\ncategories with children, with parents, and children of specific parents.</p>\n<p>Additionally makes available four (4) new conditional template tags:</p>\n<ul>\n<li>is_child_category();</li>\n<li>is_parent_category();</li>\n<li>is_child_of_category();</li>\n<li>is_parent_of_category();</li>\n</ul>\n<p>These functions are available for use in any theme or plugin as along as this<br />\nplugin is active. For detailed documentation of these functions see the<br />\n&#8216;Developer Notes: Conditional Tags&#8217; section of this readme file.</p>\n<p>Note: This plugin does not actually create parent-category.php, child-category.php<br />\nor any of their related templates &#8211; rather it modifies the native <a href=\"https://codex.wordpress.org/Template_Hierarchy\" rel=\"nofollow ugc\">template hierarchy</a><br />\nto allow theme developers to create specific templates for parent and child categories.</p>\n<h3>Developer Notes: Template Hierarchy</h3>\n<p>What follows are is the modified list of templates available for category pages.<br />\nThese expand upon the native <a href=\"https://codex.wordpress.org/Template_Hierarchy#Visual_Overview\" rel=\"nofollow ugc\">Template Hierarchy</a>.</p>\n<ul>\n<li>child-of-category-{slug}.php</li>\n<li>category-{slug}.php</li>\n<li>child-of-category-{id}.php</li>\n<li>category-{term_id}.php</li>\n<li>parent-category.php</li>\n<li>child-category.php</li>\n<li>category.php</li>\n<li>archive.php</li>\n<li>index.php</li>\n</ul>\n<p>The parent and child templates only become available if the current category is<br />\na parent or a child respectively.</p>\n<p>Note: This plugin does not actually create parent-category.php, child-category.php<br />\nor any of their related templates &#8211; rather it modifies the native <a href=\"https://codex.wordpress.org/Template_Hierarchy\" rel=\"nofollow ugc\">template hierarchy</a><br />\nto allow theme developers to create specific templates for parent and child categories.</p>\n<h3>Developer Notes: Conditional Tags</h3>\n<p>With this plugin comes two additional <a href=\"https://codex.wordpress.org/Conditional_Tags\" rel=\"nofollow ugc\">conditional tags</a><br />\nwhich behave much like any other in WordPress. In a similar fashion to how one<br />\nmight use <a href=\"https://codex.wordpress.org/Function_Reference/is_category\" rel=\"nofollow ugc\">is_category()</a> or <a href=\"https://codex.wordpress.org/Function_Reference/cat_is_ancestor_of\" rel=\"nofollow ugc\">cat_is_ancestory_of()</a>,<br />\ndevelopers may, with this plugin, use the following functions:</p>\n<ul>\n<li>is_parent_category()</li>\n<li>is_child_category()</li>\n<li>is_child_of_category()</li>\n<li>is_parent_of_category()</li>\n</ul>\n<h4>Description (part 1)</h4>\n<p>The <code>is_parent_category()</code> and <code>is_child_category()</code> conditional tags check if<br />\nthe page being displayed (or passed as an argument) is of a category that has<br />\nchildren (e.g. is a parent category)  has a parent (is a child), respectively.<br />\nThey are boolean functions, meaning they return either TRUE or FALSE.</p>\n<h4>Usage</h4>\n<pre><code>&lt;?php is_parent_category( $category ); ?&gt;\n&lt;?php is_child_category( $category ); ?&gt;\n</code></pre>\n<h4>Parameters</h4>\n<p>$category (integer/string/object) (optional) Category ID, Category Slug, Category Object. Default: Current Category</p>\n<p>Note: Unlike is_category(), these functions will not take arrays of categories or category titles. I&#8217;ll work on that. Sorry.</p>\n<h4>Return Values</h4>\n<p>(boolean) True on success, false on failure.</p>\n<h4>Examples</h4>\n<pre><code>is_parent_category()\nis_child_category()\n// When any parent/child category archive page is being displayed\n\nis_parent_category( '9' );\nis_child_category( '9' );\n// When the archive page for Category 9 is being displayed AND its a parent/child.\n\nis_parent_category( 'blue-cheese' );\nis_child_category( 'blue-cheese' );\n// When the archive page for the Category with Category Slug \"blue-cheese\" is being displayed AND its a parent/child.\n</code></pre>\n<h4>Description (part 2)</h4>\n<p>The <code>is_parent_of_category()</code> and <code>is_child_of_category()</code> conditional tags<br />\ncheck if a given category has a parent or child relationship to the current<br />\ncategory or a category passed as its second parameter. They are<br />\nboolean functions, meaning they return either TRUE or FALSE.</p>\n<h4>Usage</h4>\n<pre><code>&lt;?php is_parent_of_category($child_category, $parent_category, $direct_descendant); ?&gt;\n&lt;?php is_child_of_category($parent_category, $child_category, $direct_descendant);?&gt;\n</code></pre>\n<h4>Parameters</h4>\n<p>(object/string/integer) (required) Category of the would-be parent/child respectively.<br />\n(object/string/integer) (optional) Category of the would-be child/parent respectfully. Default: Current Category<br />\n(boolean) (optional) Whether or not the child should be a direct child of the parent. Default: True<br />\n *</p>\n<h4>Return Values</h4>\n<p>(boolean) If the $direct_descendant flag set to true, function returns true if the child is a direct descendant of the parent, if child is no direct it will return false. If $direct_descendant is set to false it will return the same results as cat_is_ancestor_of().</p>\n<h4>Examples</h4>\n<p>The following function will return True&#8230;</p>\n<pre><code>is_child_of_category(0);\n// When a top level category is being displayed, zero being the parent id value for top level categories (e.g. categories with no parents).\n\nis_child_of_category(12);\n// When the current category is a direct child of the category whose ID is '12'.\n\nis_child_of_category('tv-shows')\n// When the current category is a direct child of the category with the slug 'tv-shows' (can also be category ID's).\n\nis_child_of_category('tv-shows', 'dexter');\n// When the category with slug 'dexter' is a direct child of the category with the slug 'tv-shows' (can also be category ID's). This may come in handy when manipulating categories while not in a category template.\n\nis_child_of_category('tv-shows', 'dexter', false);\n// When the category with the slug 'dexter' is a descendant of the category 'tv-shows' at any level. (uses cat_is_ancestor_of())\n\nis_child_of_category('tv-shows', null, false);\n// When the current category is a descendant of the 'tv-shows' category at any level. (uses cat_is_ancestor_of())\n\nis_parent_of_category(13);\n// When the current category is the direct parent of a category with the ID '13'.\n\nis_parent_of_category('dexter');\n// When the current category is the direct parent of the category with the slug 'dexter'.\n</code></pre>\n<h3>Backward Compatibility</h3>\n<p>The changes this plugin makes to the template hierarchy are significantly different<br />\nfrom that in 1.0.5 and before. If you prefer to use that version please find it<br />\nin the Older Versions in the WordPress plugins directory, it is tagged as 1.0.5.</p>\n<p>While I do not actively support to QA the older version, I would gladly take a<br />\nlook at any future bugs that crop up and are reported.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/category-template-hierarchy.zip",
    "upgrade_notice": {
        "1.3.2.1": "<p>Important Update: v1.3.2 did not save correctly - v1.3.2.1 includes: Bug Fixes: 1. Fixed missing &#039;category.php&#039; template, and fixed missing <code>category-{slug}.php</code> and <code>category-{id}</code> if category was neither parent or child.</p>",
        "1.3.2": "<p>Important update: Bug Fixes: 1. Fixed missing &#039;category.php&#039; template, and fixed missing <code>category-{slug}.php</code> and <code>category-{id}</code> if category was neither parent or child.</p>",
        "1.3.1": "<p>Important Update - Bug Fix: Missing &#039;category.php&#039; template fixed.</p>",
        "1.3": "<p>Multiple Bug Fixes - [Fixed] global scope variables not being available in scope, and fixed bug where plugin was interfering with other non-category parts of the native Template Hierarchy. See changelog for details.</p>",
        "1.2": "<p>Performance: Minor changes for <code>is_child_of_category_()</code> and <code>is_parent_of_category()</code>, no behavior change for either</p>",
        "1.1.1": "<p>Bug fix &#039;print_pre&#039; error fixed.</p>",
        "1.1": "<p>Upgrade immediately - New hierarchy, better, more reliable functionality.</p>",
        "1.0.5": "<p>Please upgrade to 1.0.5 - Packaging problem fixed. Several basic bug fixes</p>",
        "1.0.3": "<p>Please upgrade to 1.0.3. is_parent_category() and is_child_category() bugs fixed.</p>",
        "1.0.2": "<p>Please upgrade to 1.0.2. Bugs in 1.0.1 and below may cause some category templates to map incorrectly.</p>",
        "1.0.1": "<p>Please upgrade to 1.0.1. Bugs in 1.0 may cause a white screen.</p>"
    },
    "screenshots": [],
    "tags": {
        "category": "category",
        "hierarchy": "hierarchy",
        "template": "template",
        "theme": "theme",
        "theme-development": "theme development"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.0.5": "https://downloads.wordpress.org/plugin/category-template-hierarchy.1.0.5.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://eddiemoya.com",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/category-template-hierarchy.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}