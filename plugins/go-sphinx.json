{
    "name": "Gigaom Sphinx",
    "slug": "go-sphinx",
    "version": "0.1",
    "author": "<a href=\"http://maisonbisson.com/blog/\">Casey Bisson</a>",
    "author_profile": "https://profiles.wordpress.org/misterbisson/",
    "contributors": {
        "misterbisson": {
            "profile": "https://profiles.wordpress.org/misterbisson/",
            "avatar": "https://secure.gravatar.com/avatar/0f756e1de29bab208e6cf438fb24e67b?s=96&d=monsterid&r=g",
            "display_name": "Casey Bisson"
        }
    },
    "requires": "3.7",
    "tested": "4.0.38",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/go-sphinx/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1260,
    "last_updated": "2014-11-04 1:49am GMT",
    "added": "2014-11-04",
    "homepage": "http://kitchen.gigaom.com/",
    "sections": {
        "description": "<p><a href=\"http://sphinxsearch.com/\" rel=\"nofollow ugc\">Sphinx</a> is a blazing fast index of content. This plugin makes it easy get WordPress posts into Sphinx, then query them using <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query\" rel=\"nofollow ugc\">standard WP Query</a>. This approach improves the performance of queries in core WordPress and even in plugins without having to implement a new API or rewrite the queries.</p>\n<p>See it in use at <a href=\"http://search.gigaom.com/\" rel=\"nofollow ugc\">search.gigaom.com</a>. Each search result is a post in WordPress, Sphinx does the work to find the matching results. The filters in the sidebar are powered by <a href=\"https://github.com/misterbisson/scriblio\" rel=\"nofollow ugc\">Scriblio</a> based on taxonomy data on each post.</p>\n<h4>What it accellerates</h4>\n<p>The plugin accellerates most WP Queries, including search, tag/taxonomy, author, and date, among others. The full list of supported query vars is:</p>\n<ol>\n<li>author</li>\n<li>author_name</li>\n<li>authors</li>\n<li>category__and</li>\n<li>category__in</li>\n<li>category__not_in</li>\n<li>exclude</li>\n<li>feed</li>\n<li>fields</li>\n<li>ignore_sticky_posts</li>\n<li>include</li>\n<li>no_found_rows</li>\n<li>numberposts</li>\n<li>numberposts</li>\n<li>offset</li>\n<li>order</li>\n<li>orderby</li>\n<li>output</li>\n<li>paged</li>\n<li>post__in</li>\n<li>post__not_in</li>\n<li>post_parent</li>\n<li>post_status</li>\n<li>post_type</li>\n<li>posts_per_page</li>\n<li>s</li>\n<li>suppress_filters</li>\n<li>tag</li>\n<li>tag__and</li>\n<li>tag__in</li>\n<li>tag__not_in</li>\n<li>tag_id</li>\n<li>tag_slug__and</li>\n<li>tag_slug__in</li>\n<li>tax_query</li>\n<li>wijax</li>\n</ol>\n<p>See those <a href=\"https://github.com/GigaOM/go-sphinx/blob/master/components/class-go-sphinx.php#L45\" rel=\"nofollow ugc\">in the code</a>.</p>\n<h4>What it doesn&#8217;t</h4>\n<p>One of the only class of queries <em>not</em> supported are queries against metadata. Those are ignored by this plugin and WP Query handles those as usual.</p>\n<p>go-sphinx automatically detects if other plugins have modified the SQL outside WP Query and steps out of the way if so. That allows the query to execute against the MySQL database as usual, but without the performance benefits of Sphinx.</p>\n<h4>In the WordPress.org plugin repo</h4>\n<p>Eventually: https://wordpress.org/plugins/go-sphinx/</p>\n<h4>Fork me!</h4>\n<p>This plugin is on Github: https://github.com/gigaOM/go-sphinx</p>\n",
        "installation": "<ol>\n<li>Install <a href=\"http://sphinxsearch.com/docs/current/\" rel=\"nofollow ugc\">Sphinx</a>.</li>\n<li>Install and activate this plugin.</li>\n<li>Go to your WordPress dashboard -&gt; Settings -&gt; Sphinx where you&#8217;ll find a sample Sphinx config file with the paramters to index the blog content.</li>\n<li>Use the configuration template to start indexing in Sphinx.</li>\n<li>Enjoy the performance boost.</li>\n</ol>\n<p>Note: the plugin expects the Sphinx server IP:port to be <code>127.0.0.1:9306</code>. For now, changing that requires <a href=\"https://github.com/GigaOM/go-sphinx/blob/master/components/class-go-sphinx.php#L148\" rel=\"nofollow ugc\">filtering <code>go_config</code></a> to replace <a href=\"https://github.com/GigaOM/go-sphinx/blob/master/components/class-go-sphinx.php#L158\" rel=\"nofollow ugc\">the defaults</a>.</p>\n"
    },
    "short_description": "Improve WP Query performance using Sphinx.",
    "description": "<p><a href=\"http://sphinxsearch.com/\" rel=\"nofollow ugc\">Sphinx</a> is a blazing fast index of content. This plugin makes it easy get WordPress posts into Sphinx, then query them using <a href=\"https://codex.wordpress.org/Class_Reference/WP_Query\" rel=\"nofollow ugc\">standard WP Query</a>. This approach improves the performance of queries in core WordPress and even in plugins without having to implement a new API or rewrite the queries.</p>\n<p>See it in use at <a href=\"http://search.gigaom.com/\" rel=\"nofollow ugc\">search.gigaom.com</a>. Each search result is a post in WordPress, Sphinx does the work to find the matching results. The filters in the sidebar are powered by <a href=\"https://github.com/misterbisson/scriblio\" rel=\"nofollow ugc\">Scriblio</a> based on taxonomy data on each post.</p>\n<h4>What it accellerates</h4>\n<p>The plugin accellerates most WP Queries, including search, tag/taxonomy, author, and date, among others. The full list of supported query vars is:</p>\n<ol>\n<li>author</li>\n<li>author_name</li>\n<li>authors</li>\n<li>category__and</li>\n<li>category__in</li>\n<li>category__not_in</li>\n<li>exclude</li>\n<li>feed</li>\n<li>fields</li>\n<li>ignore_sticky_posts</li>\n<li>include</li>\n<li>no_found_rows</li>\n<li>numberposts</li>\n<li>numberposts</li>\n<li>offset</li>\n<li>order</li>\n<li>orderby</li>\n<li>output</li>\n<li>paged</li>\n<li>post__in</li>\n<li>post__not_in</li>\n<li>post_parent</li>\n<li>post_status</li>\n<li>post_type</li>\n<li>posts_per_page</li>\n<li>s</li>\n<li>suppress_filters</li>\n<li>tag</li>\n<li>tag__and</li>\n<li>tag__in</li>\n<li>tag__not_in</li>\n<li>tag_id</li>\n<li>tag_slug__and</li>\n<li>tag_slug__in</li>\n<li>tax_query</li>\n<li>wijax</li>\n</ol>\n<p>See those <a href=\"https://github.com/GigaOM/go-sphinx/blob/master/components/class-go-sphinx.php#L45\" rel=\"nofollow ugc\">in the code</a>.</p>\n<h4>What it doesn&#8217;t</h4>\n<p>One of the only class of queries <em>not</em> supported are queries against metadata. Those are ignored by this plugin and WP Query handles those as usual.</p>\n<p>go-sphinx automatically detects if other plugins have modified the SQL outside WP Query and steps out of the way if so. That allows the query to execute against the MySQL database as usual, but without the performance benefits of Sphinx.</p>\n<h4>In the WordPress.org plugin repo</h4>\n<p>Eventually: https://wordpress.org/plugins/go-sphinx/</p>\n<h4>Fork me!</h4>\n<p>This plugin is on Github: https://github.com/gigaOM/go-sphinx</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/go-sphinx.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "full-text-searching": "full text searching",
        "fulltext": "fulltext",
        "keyword-search": "keyword search",
        "performance": "performance",
        "sphinx": "sphinx",
        "taxonomy-queries": "taxonomy queries",
        "wpquery": "wpquery"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/go-sphinx.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}