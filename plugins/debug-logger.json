{
    "name": "Debug Logger",
    "slug": "debug-logger",
    "version": "0.3.0",
    "author": "<a href=\"https://andrewwoods.net\">awoods</a>",
    "author_profile": "https://profiles.wordpress.org/awoods/",
    "contributors": {
        "awoods": {
            "profile": "https://profiles.wordpress.org/awoods/",
            "avatar": "https://secure.gravatar.com/avatar/a300f85f65ea9d3056f04348a802c603?s=96&d=monsterid&r=g",
            "display_name": "Andrew Woods"
        }
    },
    "requires": "5.7",
    "tested": "5.7.12",
    "requires_php": "7.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/debug-logger/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 487,
    "last_updated": "2021-05-03 20:02:00",
    "added": "2021-04-30",
    "homepage": "https://github.com/andrewwoods/wp-debug-logger",
    "sections": {
        "description": "<p>As PHP moves forward, so must WordPress. This plugin helps WordPress use the tools of modern PHP. Monolog — PHP&#8217;s most popular logging package — is a composer package. Since WordPress doesn&#8217;t currently have a universal way to support composer, this WordPress plugin is meant to start bridging the gap. This logger is <a href=\"https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\" rel=\"nofollow ugc\">PSR-3</a> compliant, a PHP standard which Monolog also uses.</p>\n<h3>Logging Levels</h3>\n<p>There are 8 logging levels available, <a href=\"https://tools.ietf.org/html/rfc5424\" rel=\"nofollow ugc\">defined by RFC 5424</a>. The levels specified in<br />\norder from the most severe to the least severe:</p>\n<ul>\n<li><strong>Emergency</strong>: system is unusable</li>\n<li><strong>Alert</strong>: action must be taken immediately</li>\n<li><strong>Critical</strong>: critical conditions</li>\n<li><strong>Error</strong>: error conditions</li>\n<li><strong>Warning</strong>: warning conditions</li>\n<li><strong>Notice</strong>: normal but significant condition</li>\n<li><strong>Info</strong>: informational messages</li>\n<li><strong>Debug</strong>: debug-level messages</li>\n</ul>\n",
        "installation": "<p>This section describes how to install the plugin and get it working.</p>\n<ol>\n<li>Upload the <code>wp-debug-logger</code> folder to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>\n<p>Enable debugging in your <code>wp-config.php</code></p>\n<p>// in your wp-config.php<br />\ndefine( &#8216;WP_DEBUG&#8217;, true );<br />\ndefine( &#8216;WP_DEBUG_DISPLAY&#8217;, false );<br />\ndefine( &#8216;WP_DEBUG_LOG&#8217;, true );<br />\ndefine( &#8216;WP_DEBUG_MINIMUM_LEVEL&#8217;, &#8216;debug&#8217; );</p>\n<p>// For good measure, this will hide errors from being displayed on-screen<br />\n@ini_set(&#8216;display_errors&#8217;, 0);</p>\n</li>\n<li>\n<p>As you write your code, sprinkle in these Log methods.</p>\n</li>\n</ol>\n<h4>Minimum Level</h4>\n<p>WP_DEBUG_MINIMUM_LEVEL is a new constant that determines the minimum severity level you wish to write to your <em>wp-content/debug.log</em> file. In your <em>development</em> environment, I recommend using <code>debug</code> so you can see all the errors being written. For your <em>production</em> environment, I&#8217;d recommend the <code>error</code> level, so you can capture all the significant problems. Here are the values to use: <strong>emergency, alert, critical, error, warning, notice, info, debug</strong>. Note: they&#8217;re all lowercase, as the value is case-sensitive.</p>\n<h4>Displaying Errors</h4>\n<p>In your <strong>development</strong> environment, you may choose to set <code>WP_DEBUG_DISPLAY</code> to <code>true</code>, so the error messages show in your browser. However, I <strong>strongly recommend</strong> that you do not change it, for your <em>production</em> environment. These settings can be placed anywhere above the line.</p>\n<pre><code>/* That’s all, stop editing! Happy blogging. */\n</code></pre>\n",
        "faq": "\n<dt id='why%20not%20just%20use%20the%20error_log%20function%3F'>\nWhy not just use the error_log function?\n</h4>\n<p>\n<p>You still can. However, the plugin will add value to your logging efforts. Using this logger will add structure io the debug.log file, <em>and</em> give you a modern PHP interface to control the amount of logging in your website. The logging methods in this plugin also provide information about the severity of the error.</p>\n</p>\n<dt id='where%20can%20i%20find%20more%20documentation%3F'>\nWhere can I find more documentation?\n</h4>\n<p>\n<p>This project is <a href=\"https://github.com/andrewwoods/wp-debug-logger\" rel=\"nofollow ugc\">developed on Github</a>. There is a more complete readme there, with links to supplemental information.</p>\n</p>\n<dt id='why%20use%20psr-3%3F'>\nWhy use PSR-3?\n</h4>\n<p>\n<p>A PSR is a PHP Standard Recommendation. PSRs are use to create and maintain interoperability between PHP-based frameworks and content management systems.</p>\n</p>\n\n",
        "changelog": "<h4>0.3.0</h4>\n<ul>\n<li>Add the ability to log WP_Error objects\n<ul>\n<li>Add <code>Log::wp_error()</code> and its corresponding <code>Logger-&gt;log_wp_error</code> method</li>\n<li>Add method Logger-&gt;has_level() to ensure a level exists</li>\n</ul>\n</li>\n</ul>\n<h4>0.2.0</h4>\n<ul>\n<li>Add <code>Log::print()</code> and <code>Log::dump()</code> methods</li>\n<li>Improve documentation</li>\n</ul>\n<h4>0.1.0</h4>\n<ul>\n<li>Import PSR-3 from PHP FIG into <code>lib</code> directory</li>\n<li>Create Logger class to write log</li>\n<li>Create Log class to statically interact with Logger class</li>\n<li>Add usage instructions and logging levels</li>\n</ul>\n"
    },
    "short_description": "Provide a PSR-3 compatible logger for WordPress core that writes to the debug.log",
    "description": "<p>As PHP moves forward, so must WordPress. This plugin helps WordPress use the tools of modern PHP. Monolog — PHP&#8217;s most popular logging package — is a composer package. Since WordPress doesn&#8217;t currently have a universal way to support composer, this WordPress plugin is meant to start bridging the gap. This logger is <a href=\"https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md\" rel=\"nofollow ugc\">PSR-3</a> compliant, a PHP standard which Monolog also uses.</p>\n<h3>Logging Levels</h3>\n<p>There are 8 logging levels available, <a href=\"https://tools.ietf.org/html/rfc5424\" rel=\"nofollow ugc\">defined by RFC 5424</a>. The levels specified in<br />\norder from the most severe to the least severe:</p>\n<ul>\n<li><strong>Emergency</strong>: system is unusable</li>\n<li><strong>Alert</strong>: action must be taken immediately</li>\n<li><strong>Critical</strong>: critical conditions</li>\n<li><strong>Error</strong>: error conditions</li>\n<li><strong>Warning</strong>: warning conditions</li>\n<li><strong>Notice</strong>: normal but significant condition</li>\n<li><strong>Info</strong>: informational messages</li>\n<li><strong>Debug</strong>: debug-level messages</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/debug-logger.0.3.0.zip",
    "upgrade_notice": {
        "0.3.0": "<p>Gain the ability to log WP_Error objects</p>"
    },
    "screenshots": [],
    "tags": {
        "debug": "debug",
        "logging": "logging",
        "logs": "logs",
        "monolog": "monolog",
        "psr-3": "psr-3"
    },
    "stable_tag": "0.3.0",
    "versions": {
        "0.2.0": "https://downloads.wordpress.org/plugin/debug-logger.0.2.0.zip",
        "0.3.0": "https://downloads.wordpress.org/plugin/debug-logger.0.3.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/debug-logger.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/debug-logger.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}