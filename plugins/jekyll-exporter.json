{
    "name": "Jekyll Exporter",
    "slug": "jekyll-exporter",
    "version": "2.4.1",
    "author": "<a href=\"https://ben.balter.com\">Ben Balter</a>",
    "author_profile": "https://profiles.wordpress.org/benbalter/",
    "contributors": {
        "benbalter": {
            "profile": "https://profiles.wordpress.org/benbalter/",
            "avatar": "https://secure.gravatar.com/avatar/ea353bd28baa1aefaefae736a19fcf2a?s=96&d=monsterid&r=g",
            "display_name": "Ben Balter"
        }
    },
    "requires": "4.4",
    "tested": "6.6.2",
    "requires_php": "7.2",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 74,
    "ratings": {
        "5": 6,
        "4": 1,
        "3": 1,
        "2": 1,
        "1": 2
    },
    "num_ratings": 11,
    "support_url": "https://wordpress.org/support/plugin/jekyll-exporter/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 800,
    "last_updated": "2024-10-16 15:51:00",
    "added": "2014-12-12",
    "homepage": "https://github.com/benbalter/wordpress-to-jekyll-exporter/",
    "sections": {
        "changelog": "<p><a href=\"https://github.com/benbalter/wordpress-to-jekyll-exporter/releases\" rel=\"nofollow ugc\">View Past Releases</a></p>\n",
        "description": "<h3>Features</h3>\n<ul>\n<li>Converts all posts, pages, and settings from WordPress to Markdown and YAML for use in Jekyll (or Hugo or any other Markdown and YAML based site engine)</li>\n<li>Export what your users see, not what the database stores (runs post content through <code>the_content</code> filter prior to export, allowing third-party plugins to modify the output)</li>\n<li>Converts all <code>post_content</code> to Markdown</li>\n<li>Converts all <code>post_meta</code> and fields within the <code>wp_posts</code> table to YAML front matter for parsing by Jekyll</li>\n<li>Generates a <code>_config.yml</code> with all settings in the <code>wp_options</code> table</li>\n<li>Outputs a single zip file with <code>_config.yml</code>, pages, and <code>_posts</code> folder containing <code>.md</code> files for each post in the proper Jekyll naming convention</li>\n<li>No settings. Just a single click.</li>\n</ul>\n<h3>Usage</h3>\n<ol>\n<li>Place plugin in <code>/wp-content/plugins/</code> folder</li>\n<li>Activate plugin in WordPress dashboard</li>\n<li>Select <code>Export to Jekyll</code> from the <code>Tools</code> menu</li>\n</ol>\n<h3>More information</h3>\n<p>See <a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter\" rel=\"nofollow ugc\">the full documentation</a>:</p>\n<ul>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/changelog/\" rel=\"nofollow ugc\">Changelog</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/command-line-usage/\" rel=\"nofollow ugc\">Command-line-usage</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/custom-post-types/\" rel=\"nofollow ugc\">Custom post types</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/custom-fields/\" rel=\"nofollow ugc\">Custom fields</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/developing-locally/\" rel=\"nofollow ugc\">Developing locally</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/required-php-version/\" rel=\"nofollow ugc\">Minimum required PHP version</a></li>\n</ul>\n<h3>Security Policy</h3>\n<p>To report a security vulnerability, please email <a href=\"mailto:&#x62;&#x65;&#110;&#064;&#098;&#097;&#108;&#x74;&#x65;&#x72;&#x2e;c&#111;&#109;\" rel=\"nofollow ugc\">ben@balter.com</a>.</p>\n<h3>Where to get help or report an issue</h3>\n<ul>\n<li>For getting started and general documentation, please browse, and feel free to contribute to <a href=\"http://ben.balter.com/wordpress-to-jekyll-exporter/\" rel=\"nofollow ugc\">the project documentation</a>.</li>\n<li>For support questions (&#8220;How do I&#8221;, &#8220;I can&#8217;t seem to&#8221;, etc.) please search and if not already answered, open a thread in the <a href=\"https://wordpress.org/support/plugin/jekyll-exporter\" rel=\"ugc\">Support Forums</a>.</li>\n<li>For technical issues (e.g., to submit a bug or feature request) please search and if not already filed, <a href=\"https://github.com/benbalter//wordpress-to-jekyll-exporter/issues\" rel=\"nofollow ugc\">open an issue on GitHub</a>.</li>\n</ul>\n<h3>Things to check before reporting an issue</h3>\n<ul>\n<li>Are you using the latest version of WordPress?</li>\n<li>Are you using the latest version of the plugin?</li>\n<li>Does the problem occur even when you deactivate all plugins and use the default theme?</li>\n<li>Have you tried deactivating and reactivating the plugin?</li>\n<li>Has your issue <a href=\"https://github.com/benbalter/wordpress-to-jekyll-exporter/issues\" rel=\"nofollow ugc\">already been reported</a>?</li>\n</ul>\n<h3>What to include in an issue</h3>\n<ul>\n<li>What steps can another user take to recreate the issue?</li>\n<li>What is the expected outcome of that action?</li>\n<li>What is the actual outcome of that action?</li>\n<li>Are there any screenshots or screencasts that may be helpful to include?</li>\n<li>Only include one bug per issue. If you have discovered two bugs, please file two issues.</li>\n</ul>\n<h3>Command-line Usage</h3>\n<p>If you&#8217;re having trouble with your web server timing out before the export is complete, or if you just like terminal better, you may enjoy the command-line tool.</p>\n<p>It works just like the plugin, but produces the zipfile on STDOUT:</p>\n<pre><code>`\n</code></pre>\n<p>php jekyll-export-cli.php &gt; jekyll-export.zip<br />\n    `</p>\n<p>If using this method, you must run first <code>cd</code> into the wordpress-to-jekyll-exporter directory.</p>\n<p>Alternatively, if you have <a href=\"http://wp-cli.org\" rel=\"nofollow ugc\">WP-CLI</a> installed, you can run:</p>\n<pre><code>`\n</code></pre>\n<p>wp jekyll-export &gt; export.zip<br />\n    `</p>\n<p>The WP-CLI version will provide greater compatibility for alternate WordPress environments, such as when <code>wp-content</code> isn&#8217;t in the usual location.</p>\n<h3>Custom fields</h3>\n<p>When using custom fields (e.g. with the Advanced Custom fields plugin) you might have to register a filter to convert array style configs to plain values.</p>\n<p>By default, the plugin saves custom fields in an array structure that is exported as:</p>\n<pre><code>`php\n</code></pre>\n<p>[&#8220;my-bool&#8221;]=&gt;<br />\n    array(1) {<br />\n        [0] =&gt; string(1) &#8220;1&#8221;<br />\n    }<br />\n[&#8220;location&#8221;]=&gt;<br />\n    array(1) {<br />\n        [0] =&gt; string(88) &#8220;My address&#8221;<br />\n    }<br />\n    `</p>\n<p>And this leads to a YAML structure like:</p>\n<pre><code>`yaml\n</code></pre>\n<p>my-bool:<br />\n&#8211; &#8220;1&#8221;<br />\nlocation:<br />\n&#8211; &#8216;My address&#8217;<br />\n    `</p>\n<p>This is likely not the structure you expect or want to work with. You can convert it using a filter:</p>\n<pre><code>`php\n</code></pre>\n<p>add_filter( &#8216;jekyll_export_meta&#8217;, function($meta) {<br />\n    foreach ($meta as $key =&gt; $value) {<br />\n        if (is_array($value) &amp;&amp; count($value) === 1 &amp;&amp; array_key_exists(0, $value)) {<br />\n            $meta[$key] = $value[0];<br />\n        }<br />\n    }</p>\n<pre><code>return $meta;\n</code></pre>\n<p>});<br />\n    `</p>\n<p>A more complete solution could look like that:</p>\n<pre><code>`php\n</code></pre>\n<p>add_filter( &#8216;jekyll_export_meta&#8217;, function($meta) {<br />\n    foreach ($meta as $key =&gt; $value) {<br />\n        // Advanced Custom Fields<br />\n        if (is_array($value) &amp;&amp; count($value) === 1 &amp;&amp; array_key_exists(0, $value)) {<br />\n            $value = maybe_unserialize($value[0]);<br />\n            // Advanced Custom Fields: NextGEN Gallery Field add-on<br />\n            if (is_array($value) &amp;&amp; count($value) === 1 &amp;&amp; array_key_exists(0, $value)) {<br />\n                $value = $value[0];<br />\n            }<br />\n        }<br />\n        // convert types<br />\n        $value = match ($key) {<br />\n            // Advanced Custom Fields: &#8220;true_false&#8221; type<br />\n            &#8216;my-bool&#8217; =&gt; (bool) $value,<br />\n            default =&gt; $value<br />\n        };<br />\n        $meta[$key] = $value;<br />\n    }</p>\n<pre><code>return $meta;\n</code></pre>\n<p>});<br />\n    `</p>\n<h3>Custom post types</h3>\n<p>To export custom post types, you&#8217;ll need to add a filter (w.g. to your themes config file) to do the following:</p>\n<pre><code>`php\n</code></pre>\n<p>add_filter( &#8216;jekyll_export_post_types&#8217;, function() {<br />\n    return array(&#8216;post&#8217;, &#8216;page&#8217;, &#8216;you-custom-post-type&#8217;);<br />\n});<br />\n    `</p>\n<p>The custom post type will be exported as a Jekyll collection. You&#8217;ll need to initialize it in the resulting Jekyll site&#8217;s <code>_config.yml</code>.</p>\n<h3>Developing locally</h3>\n<h4>Prerequisites</h4>\n<ol>\n<li><code>sudo apt-get update</code></li>\n<li><code>sudo apt-get install composer</code></li>\n<li><code>sudo apt-get install php7.3-xml</code></li>\n<li><code>sudo apt-get install php7.3-mysql</code></li>\n<li><code>sudo apt-get install php7.3-zip</code></li>\n<li><code>sudo apt-get install php-mbstring</code></li>\n<li><code>sudo apt-get install subversion</code></li>\n<li><code>sudo apt-get install mysql-server</code></li>\n<li><code>sudo apt-get install php-pear</code></li>\n<li><code>sudo pear install PHP_CodeSniffer</code></li>\n</ol>\n<h4>Bootstrap &amp; Setup</h4>\n<ol>\n<li><code>git clone https://github.com/benbalter/wordpress-to-jekyll-exporter</code></li>\n<li><code>cd wordpress-to-jekyll-exporter</code></li>\n<li><code>script/bootstrap</code></li>\n<li><code>script/setup</code></li>\n</ol>\n<h4>Running tests</h4>\n<pre><code>script/cibuild&lt;h3&gt;Testing locally via Docker&lt;/h3&gt;\n</code></pre>\n<p>1. <code>git clone https://github.com/benbalter/wordpress-to-jekyll-exporter</code><br />\n2. <code>docker-compose up</code><br />\n3. <code>open localhost:8088</code></p>\n<h3>Minimum required PHP version</h3>\n<p>Many shared hosts may use an outdated version of PHP by default. <strong>WordPress to Jekyll Export requires PHP 5.6 or greater.</strong></p>\n<p>If you get an error message that looks like <code>unexpected T_STRING</code>, <code>unexpected '['</code> or <code>expecting T_CONSTANT_ENCAPSED_STRING</code>, you need to update your PHP version. In a shared hosting environment, you should be able to change the version of PHP used by simply toggling the setting in the host&#8217;s control panel.</p>\n<p>PHP 5.4 lost support from the PHP project itself in 2015. You&#8217;ll need to be running at least PHP 5.5 which adds namespace support (the reason it&#8217;s breaking), but I&#8217;d recommend at least 7.3 (or the latest your host supports) as it&#8217;s the <a href=\"https://www.php.net/supported-versions.php\" rel=\"nofollow ugc\">oldest supported version</a>.</p>\n<h4>How to determine which version of PHP you&#8217;re running</h4>\n<ul>\n<li>Try <a href=\"https://wordpress.org/plugins/display-php-version/\" rel=\"ugc\">this plugin</a></li>\n<li>Follow <a href=\"https://codex.wordpress.org/Finding_Server_Info\" rel=\"nofollow ugc\">WordPress&#8217;s tutorial</a> or <a href=\"https://www.wikihow.com/Check-PHP-Version\" rel=\"nofollow ugc\">this wikihow</a></li>\n</ul>\n<h4>How to upgrade your version of PHP</h4>\n<p>If you are using a shared hosting environment, upgrading to a newer version of PHP should be a matter of changing a setting in your host&#8217;s control panel. You&#8217;ll have to follow your host specific documentation to determine how to access it or where the setting lives. Check out <a href=\"https://kb.yoast.com/kb/how-to-update-your-php-version/\" rel=\"nofollow ugc\">this list of common hosts</a> for more details.</p>\n"
    },
    "short_description": "Features",
    "description": "<h3>Features</h3>\n<ul>\n<li>Converts all posts, pages, and settings from WordPress to Markdown and YAML for use in Jekyll (or Hugo or any other Markdown and YAML based site engine)</li>\n<li>Export what your users see, not what the database stores (runs post content through <code>the_content</code> filter prior to export, allowing third-party plugins to modify the output)</li>\n<li>Converts all <code>post_content</code> to Markdown</li>\n<li>Converts all <code>post_meta</code> and fields within the <code>wp_posts</code> table to YAML front matter for parsing by Jekyll</li>\n<li>Generates a <code>_config.yml</code> with all settings in the <code>wp_options</code> table</li>\n<li>Outputs a single zip file with <code>_config.yml</code>, pages, and <code>_posts</code> folder containing <code>.md</code> files for each post in the proper Jekyll naming convention</li>\n<li>No settings. Just a single click.</li>\n</ul>\n<h3>Usage</h3>\n<ol>\n<li>Place plugin in <code>/wp-content/plugins/</code> folder</li>\n<li>Activate plugin in WordPress dashboard</li>\n<li>Select <code>Export to Jekyll</code> from the <code>Tools</code> menu</li>\n</ol>\n<h3>More information</h3>\n<p>See <a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter\" rel=\"nofollow ugc\">the full documentation</a>:</p>\n<ul>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/changelog/\" rel=\"nofollow ugc\">Changelog</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/command-line-usage/\" rel=\"nofollow ugc\">Command-line-usage</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/custom-post-types/\" rel=\"nofollow ugc\">Custom post types</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/custom-fields/\" rel=\"nofollow ugc\">Custom fields</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/developing-locally/\" rel=\"nofollow ugc\">Developing locally</a></li>\n<li><a href=\"https://ben.balter.com/wordpress-to-jekyll-exporter/./docs/required-php-version/\" rel=\"nofollow ugc\">Minimum required PHP version</a></li>\n</ul>\n<h3>Security Policy</h3>\n<p>To report a security vulnerability, please email <a href=\"mailto:&#x62;&#x65;&#110;&#064;&#098;&#097;&#108;&#x74;&#x65;&#x72;&#x2e;c&#111;&#109;\" rel=\"nofollow ugc\">ben@balter.com</a>.</p>\n<h3>Where to get help or report an issue</h3>\n<ul>\n<li>For getting started and general documentation, please browse, and feel free to contribute to <a href=\"http://ben.balter.com/wordpress-to-jekyll-exporter/\" rel=\"nofollow ugc\">the project documentation</a>.</li>\n<li>For support questions (&#8220;How do I&#8221;, &#8220;I can&#8217;t seem to&#8221;, etc.) please search and if not already answered, open a thread in the <a href=\"https://wordpress.org/support/plugin/jekyll-exporter\" rel=\"ugc\">Support Forums</a>.</li>\n<li>For technical issues (e.g., to submit a bug or feature request) please search and if not already filed, <a href=\"https://github.com/benbalter//wordpress-to-jekyll-exporter/issues\" rel=\"nofollow ugc\">open an issue on GitHub</a>.</li>\n</ul>\n<h3>Things to check before reporting an issue</h3>\n<ul>\n<li>Are you using the latest version of WordPress?</li>\n<li>Are you using the latest version of the plugin?</li>\n<li>Does the problem occur even when you deactivate all plugins and use the default theme?</li>\n<li>Have you tried deactivating and reactivating the plugin?</li>\n<li>Has your issue <a href=\"https://github.com/benbalter/wordpress-to-jekyll-exporter/issues\" rel=\"nofollow ugc\">already been reported</a>?</li>\n</ul>\n<h3>What to include in an issue</h3>\n<ul>\n<li>What steps can another user take to recreate the issue?</li>\n<li>What is the expected outcome of that action?</li>\n<li>What is the actual outcome of that action?</li>\n<li>Are there any screenshots or screencasts that may be helpful to include?</li>\n<li>Only include one bug per issue. If you have discovered two bugs, please file two issues.</li>\n</ul>\n<h3>Command-line Usage</h3>\n<p>If you&#8217;re having trouble with your web server timing out before the export is complete, or if you just like terminal better, you may enjoy the command-line tool.</p>\n<p>It works just like the plugin, but produces the zipfile on STDOUT:</p>\n<pre><code>`\n</code></pre>\n<p>php jekyll-export-cli.php &gt; jekyll-export.zip<br />\n    `</p>\n<p>If using this method, you must run first <code>cd</code> into the wordpress-to-jekyll-exporter directory.</p>\n<p>Alternatively, if you have <a href=\"http://wp-cli.org\" rel=\"nofollow ugc\">WP-CLI</a> installed, you can run:</p>\n<pre><code>`\n</code></pre>\n<p>wp jekyll-export &gt; export.zip<br />\n    `</p>\n<p>The WP-CLI version will provide greater compatibility for alternate WordPress environments, such as when <code>wp-content</code> isn&#8217;t in the usual location.</p>\n<h3>Custom fields</h3>\n<p>When using custom fields (e.g. with the Advanced Custom fields plugin) you might have to register a filter to convert array style configs to plain values.</p>\n<p>By default, the plugin saves custom fields in an array structure that is exported as:</p>\n<pre><code>`php\n</code></pre>\n<p>[&#8220;my-bool&#8221;]=&gt;<br />\n    array(1) {<br />\n        [0] =&gt; string(1) &#8220;1&#8221;<br />\n    }<br />\n[&#8220;location&#8221;]=&gt;<br />\n    array(1) {<br />\n        [0] =&gt; string(88) &#8220;My address&#8221;<br />\n    }<br />\n    `</p>\n<p>And this leads to a YAML structure like:</p>\n<pre><code>`yaml\n</code></pre>\n<p>my-bool:<br />\n&#8211; &#8220;1&#8221;<br />\nlocation:<br />\n&#8211; &#8216;My address&#8217;<br />\n    `</p>\n<p>This is likely not the structure you expect or want to work with. You can convert it using a filter:</p>\n<pre><code>`php\n</code></pre>\n<p>add_filter( &#8216;jekyll_export_meta&#8217;, function($meta) {<br />\n    foreach ($meta as $key =&gt; $value) {<br />\n        if (is_array($value) &amp;&amp; count($value) === 1 &amp;&amp; array_key_exists(0, $value)) {<br />\n            $meta[$key] = $value[0];<br />\n        }<br />\n    }</p>\n<pre><code>return $meta;\n</code></pre>\n<p>});<br />\n    `</p>\n<p>A more complete solution could look like that:</p>\n<pre><code>`php\n</code></pre>\n<p>add_filter( &#8216;jekyll_export_meta&#8217;, function($meta) {<br />\n    foreach ($meta as $key =&gt; $value) {<br />\n        // Advanced Custom Fields<br />\n        if (is_array($value) &amp;&amp; count($value) === 1 &amp;&amp; array_key_exists(0, $value)) {<br />\n            $value = maybe_unserialize($value[0]);<br />\n            // Advanced Custom Fields: NextGEN Gallery Field add-on<br />\n            if (is_array($value) &amp;&amp; count($value) === 1 &amp;&amp; array_key_exists(0, $value)) {<br />\n                $value = $value[0];<br />\n            }<br />\n        }<br />\n        // convert types<br />\n        $value = match ($key) {<br />\n            // Advanced Custom Fields: &#8220;true_false&#8221; type<br />\n            &#8216;my-bool&#8217; =&gt; (bool) $value,<br />\n            default =&gt; $value<br />\n        };<br />\n        $meta[$key] = $value;<br />\n    }</p>\n<pre><code>return $meta;\n</code></pre>\n<p>});<br />\n    `</p>\n<h3>Custom post types</h3>\n<p>To export custom post types, you&#8217;ll need to add a filter (w.g. to your themes config file) to do the following:</p>\n<pre><code>`php\n</code></pre>\n<p>add_filter( &#8216;jekyll_export_post_types&#8217;, function() {<br />\n    return array(&#8216;post&#8217;, &#8216;page&#8217;, &#8216;you-custom-post-type&#8217;);<br />\n});<br />\n    `</p>\n<p>The custom post type will be exported as a Jekyll collection. You&#8217;ll need to initialize it in the resulting Jekyll site&#8217;s <code>_config.yml</code>.</p>\n<h3>Developing locally</h3>\n<h4>Prerequisites</h4>\n<ol>\n<li><code>sudo apt-get update</code></li>\n<li><code>sudo apt-get install composer</code></li>\n<li><code>sudo apt-get install php7.3-xml</code></li>\n<li><code>sudo apt-get install php7.3-mysql</code></li>\n<li><code>sudo apt-get install php7.3-zip</code></li>\n<li><code>sudo apt-get install php-mbstring</code></li>\n<li><code>sudo apt-get install subversion</code></li>\n<li><code>sudo apt-get install mysql-server</code></li>\n<li><code>sudo apt-get install php-pear</code></li>\n<li><code>sudo pear install PHP_CodeSniffer</code></li>\n</ol>\n<h4>Bootstrap &amp; Setup</h4>\n<ol>\n<li><code>git clone https://github.com/benbalter/wordpress-to-jekyll-exporter</code></li>\n<li><code>cd wordpress-to-jekyll-exporter</code></li>\n<li><code>script/bootstrap</code></li>\n<li><code>script/setup</code></li>\n</ol>\n<h4>Running tests</h4>\n<pre><code>script/cibuild&lt;h3&gt;Testing locally via Docker&lt;/h3&gt;\n</code></pre>\n<p>1. <code>git clone https://github.com/benbalter/wordpress-to-jekyll-exporter</code><br />\n2. <code>docker-compose up</code><br />\n3. <code>open localhost:8088</code></p>\n<h3>Minimum required PHP version</h3>\n<p>Many shared hosts may use an outdated version of PHP by default. <strong>WordPress to Jekyll Export requires PHP 5.6 or greater.</strong></p>\n<p>If you get an error message that looks like <code>unexpected T_STRING</code>, <code>unexpected '['</code> or <code>expecting T_CONSTANT_ENCAPSED_STRING</code>, you need to update your PHP version. In a shared hosting environment, you should be able to change the version of PHP used by simply toggling the setting in the host&#8217;s control panel.</p>\n<p>PHP 5.4 lost support from the PHP project itself in 2015. You&#8217;ll need to be running at least PHP 5.5 which adds namespace support (the reason it&#8217;s breaking), but I&#8217;d recommend at least 7.3 (or the latest your host supports) as it&#8217;s the <a href=\"https://www.php.net/supported-versions.php\" rel=\"nofollow ugc\">oldest supported version</a>.</p>\n<h4>How to determine which version of PHP you&#8217;re running</h4>\n<ul>\n<li>Try <a href=\"https://wordpress.org/plugins/display-php-version/\" rel=\"ugc\">this plugin</a></li>\n<li>Follow <a href=\"https://codex.wordpress.org/Finding_Server_Info\" rel=\"nofollow ugc\">WordPress&#8217;s tutorial</a> or <a href=\"https://www.wikihow.com/Check-PHP-Version\" rel=\"nofollow ugc\">this wikihow</a></li>\n</ul>\n<h4>How to upgrade your version of PHP</h4>\n<p>If you are using a shared hosting environment, upgrading to a newer version of PHP should be a matter of changing a setting in your host&#8217;s control panel. You&#8217;ll have to follow your host specific documentation to determine how to access it or where the setting lives. Check out <a href=\"https://kb.yoast.com/kb/how-to-update-your-php-version/\" rel=\"nofollow ugc\">this list of common hosts</a> for more details.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.4.1.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "export": "export",
        "github": "Github",
        "github-pages": "github pages",
        "jekyll": "jekyll",
        "yaml": "yaml"
    },
    "stable_tag": "2.4.1",
    "versions": {
        "2.0": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.0.zip",
        "2.0.1": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.0.1.zip",
        "2.1.0": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.1.0.zip",
        "2.1.1": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.1.1.zip",
        "2.2.0": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.2.0.zip",
        "2.2.1": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.2.1.zip",
        "2.2.2": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.2.2.zip",
        "2.2.3": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.2.3.zip",
        "2.3.0": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.0.zip",
        "2.3.1": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.1.zip",
        "2.3.2": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.2.zip",
        "2.3.3": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.3.zip",
        "2.3.4": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.4.zip",
        "2.3.5": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.5.zip",
        "2.3.6": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.3.6.zip",
        "2.4.0": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.4.0.zip",
        "2.4.1": "https://downloads.wordpress.org/plugin/jekyll-exporter.2.4.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/jekyll-exporter.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/jekyll-exporter/assets/banner-772x250.png?rev=3073421",
        "high": "https://ps.w.org/jekyll-exporter/assets/banner-1544x500.png?rev=3073421"
    },
    "icons": {
        "1x": "https://ps.w.org/jekyll-exporter/assets/icon-128x128.png?rev=3073421",
        "2x": "https://ps.w.org/jekyll-exporter/assets/icon-256x256.png?rev=3073421"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 74,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}