{
    "name": "Kint PHP Debugger",
    "slug": "kint-php-debugger",
    "version": "2.0.2",
    "author": "<a href=\"https://KnowTheCode.io/\">hellofromTonya</a>",
    "author_profile": "https://profiles.wordpress.org/hellofromtonya/",
    "contributors": {
        "hellofromtonya": {
            "profile": "https://profiles.wordpress.org/hellofromtonya/",
            "avatar": "https://secure.gravatar.com/avatar/8a37821f6ce67e02ce73e3774e218ec2?s=96&d=monsterid&r=g",
            "display_name": "Tonya Mork"
        }
    },
    "requires": "3.5",
    "tested": "5.1.19",
    "requires_php": "5.3",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 12,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 12,
    "support_url": "https://wordpress.org/support/plugin/kint-php-debugger/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 11958,
    "last_updated": "2019-03-11 17:29:00",
    "added": "2015-07-28",
    "homepage": "https://github.com/KnowTheCode/kint-php-debugger",
    "sections": {
        "description": "<p>This WordPress plugin is a wrapper for the <a href=\"https://kint-php.github.io/kint/\" rel=\"nofollow ugc\">Kint</a> PHP Debugger utility version 1.x.  Now instead of using var_dump() or print_r(), you simply use d() with zero, nadda, no formatting required.</p>\n<p>Use this tool when you are debugging your website, in place of <strong><a href=\"http://php.net/manual/en/function.var-dump.php\" rel=\"nofollow ugc\">var_dump()</a></strong>, <strong><a href=\"http://php.net/manual/en/function.print-r.php\" rel=\"nofollow ugc\">print_r()</a></strong> and <strong><a href=\"http://php.net/manual/en/function.debug-backtrace.php\" rel=\"nofollow ugc\">debug_backtrace()</a></strong>.</p>\n<h4>Handy Tools</h4>\n<p>Some handy tools just for the PHP Developer:</p>\n<ul>\n<li><code>d( $var );</code> to render a collapsible UI container which displays your variable data in &#8220;the most informative way&#8221;</li>\n<li><code>ddd( $var );</code> same as d() except that it also executes <code>die()</code> to halt execution.</li>\n</ul>\n<p>Here are some variations of <code>d()</code> to give you the display you want:</p>\n<ul>\n<li><code>~d( $var );</code> outputs in plain text format.</li>\n<li><code>+d( $var );</code> disregards depth level limits and outputs everything</li>\n<li><code>!d( $var );</code> shows expanded rich output</li>\n<li><code>-d( $var );</code> attempts to ob_clean() the previous output (dump something inside of HTML)</li>\n</ul>\n<h4>Profiler</h4>\n<p>Kint even includes a naïve profiler, which can help you analyze which blocks of code take longer than others:</p>\n<pre><code>Kint::dump( microtime() ); // just pass microtime()\nsleep( 1 );\nKint::dump( microtime(), 'after sleep(1)' );\nsleep( 2 );\nddd( microtime(), 'final call, after sleep(2)' );\n</code></pre>\n<p>See <a href=\"https://wordpress.org/extend/plugins/kint-php-debugger/screenshots/\" rel=\"ugc\">screenshot 2</a> for what is rendered out in your browser.</p>\n<h3>Admin Bar</h3>\n<p>&#8220;KINT ACTIVE&#8221; indicator displays in the WordPress admin bar to alert you when the plugin is active.</p>\n",
        "installation": "<h4>From your WordPress dashboard</h4>\n<ol>\n<li>Visit &#8216;Plugins &gt; Add New&#8217;</li>\n<li>Search for &#8216;Kint PHP Debugger&#8217;</li>\n<li>Activate Kint PHP Debugger from your Plugins page.</li>\n</ol>\n<h4>Once Activated</h4>\n<p>Whenever you want to dump out the data within a variable, simply use <code>d( $var )</code> to replace when you do pre + var_dump().</p>\n<p>To dump and die, you use <code>ddd( $var );</code>.</p>\n",
        "faq": "\n<h4>How do I use this utility?</h4>\n<p>\n<p>When you are testing your code, you use d( $var ) in place of var_dump( $var ) and print_r( $var ).  No need to wrap it in pre&#8217;s either.</p>\n</p>\n<h4>What does it render in the browser?</h4>\n<p>\n<p>Kint provides a handy UI that wraps up the data within the variable.  Click to open it up and see the data.</p>\n<p>See the <a href=\"https://wordpress.org/extend/plugins/kint-php-debugger/screenshots/\" rel=\"ugc\">screenshot 1</a> for an example.</p>\n</p>\n<h4>What else does Kint provide to help me debug?</h4>\n<p>\n<p>As you can see the <a href=\"https://wordpress.org/extend/plugins/kint-php-debugger/screenshots/\" rel=\"ugc\">screenshot 1</a>, besides the handy UI, it also provides you with a full call stack.  Click on the text below the UI to expand it out.</p>\n</p>\n<h4>Can I run this on a live site?</h4>\n<p>\n<p>I wouldn&#8217;t unless you are testing.  This tool is for debug only.  Once you push the site live, deactivate and delete this plugin.</p>\n</p>\n<h4>What should I do when the site goes live?</h4>\n<p>\n<p>Deactivate and delete this plugin.</p>\n</p>\n\n",
        "changelog": "<h4>Version 2.0.2</h4>\n<ul>\n<li>Bump to sync versions.</li>\n</ul>\n<h4>Version 2.0.1</h4>\n<ul>\n<li>Removed changing the admin color palette to coffee.</li>\n<li>Removed changing the admin bar background color.</li>\n</ul>\n<h4>Version 2.0.0</h4>\n<ul>\n<li>Updated Kint version.</li>\n<li>Tested against WP 5.1</li>\n</ul>\n<h4>Version 1.2.1</h4>\n<ul>\n<li>Added &#8220;KINT ACTIVE&#8221; indicator to the WordPress admin bar to alert the plugin is activated.</li>\n</ul>\n<h4>Version 1.2.0</h4>\n<ul>\n<li>Excluded Composer files.</li>\n<li>Tested with WordPress 5.1.</li>\n</ul>\n<h4>Version 1.1.0 to 1.1.4</h4>\n<ul>\n<li>Changed to the kint-php package</li>\n<li>Upgraded Kint to v1.1</li>\n</ul>\n<h4>Version 1.0.1</h4>\n<ul>\n<li>Upgraded Kint to v1.0.10</li>\n</ul>\n<h4>Version 1.0.0</h4>\n<ul>\n<li>First release</li>\n</ul>\n"
    },
    "short_description": "Kint is a modern and powerful PHP debugging helper, which requires zero-setup and replaces var_dump(), print_r() and debug_backtrace().",
    "description": "<p>This WordPress plugin is a wrapper for the <a href=\"https://kint-php.github.io/kint/\" rel=\"nofollow ugc\">Kint</a> PHP Debugger utility version 1.x.  Now instead of using var_dump() or print_r(), you simply use d() with zero, nadda, no formatting required.</p>\n<p>Use this tool when you are debugging your website, in place of <strong><a href=\"http://php.net/manual/en/function.var-dump.php\" rel=\"nofollow ugc\">var_dump()</a></strong>, <strong><a href=\"http://php.net/manual/en/function.print-r.php\" rel=\"nofollow ugc\">print_r()</a></strong> and <strong><a href=\"http://php.net/manual/en/function.debug-backtrace.php\" rel=\"nofollow ugc\">debug_backtrace()</a></strong>.</p>\n<h4>Handy Tools</h4>\n<p>Some handy tools just for the PHP Developer:</p>\n<ul>\n<li><code>d( $var );</code> to render a collapsible UI container which displays your variable data in &#8220;the most informative way&#8221;</li>\n<li><code>ddd( $var );</code> same as d() except that it also executes <code>die()</code> to halt execution.</li>\n</ul>\n<p>Here are some variations of <code>d()</code> to give you the display you want:</p>\n<ul>\n<li><code>~d( $var );</code> outputs in plain text format.</li>\n<li><code>+d( $var );</code> disregards depth level limits and outputs everything</li>\n<li><code>!d( $var );</code> shows expanded rich output</li>\n<li><code>-d( $var );</code> attempts to ob_clean() the previous output (dump something inside of HTML)</li>\n</ul>\n<h4>Profiler</h4>\n<p>Kint even includes a naïve profiler, which can help you analyze which blocks of code take longer than others:</p>\n<pre><code>Kint::dump( microtime() ); // just pass microtime()\nsleep( 1 );\nKint::dump( microtime(), 'after sleep(1)' );\nsleep( 2 );\nddd( microtime(), 'final call, after sleep(2)' );\n</code></pre>\n<p>See <a href=\"https://wordpress.org/extend/plugins/kint-php-debugger/screenshots/\" rel=\"ugc\">screenshot 2</a> for what is rendered out in your browser.</p>\n<h3>Admin Bar</h3>\n<p>&#8220;KINT ACTIVE&#8221; indicator displays in the WordPress admin bar to alert you when the plugin is active.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/kint-php-debugger.2.0.2.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/kint-php-debugger/trunk/screenshot-1.png?rev=2048487",
            "caption": "An example of what gets rendered in the browser when using 'd( $var )'."
        },
        {
            "src": "https://ps.w.org/kint-php-debugger/trunk/screenshot-2.png?rev=2048487",
            "caption": "Profile example from Kint."
        },
        {
            "src": "https://ps.w.org/kint-php-debugger/trunk/screenshot-3.png?rev=2048487",
            "caption": "\"KINT ACTIVE\" indicator in the WordPress admin bar."
        }
    ],
    "tags": {
        "debug": "debug",
        "debugger": "debugger",
        "kint": "kint",
        "print_r": "print_r",
        "var_dump": "var_dump"
    },
    "stable_tag": "2.0.2",
    "versions": {
        "1.0.1": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.0.1.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.1.2.zip",
        "1.1.3": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.1.3.zip",
        "1.1.4": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.1.4.zip",
        "1.2.1": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.2.1.zip",
        "1.2.2": "https://downloads.wordpress.org/plugin/kint-php-debugger.1.2.2.zip",
        "2.0.0": "https://downloads.wordpress.org/plugin/kint-php-debugger.2.0.0.zip",
        "2.0.1": "https://downloads.wordpress.org/plugin/kint-php-debugger.2.0.1.zip",
        "2.0.2": "https://downloads.wordpress.org/plugin/kint-php-debugger.2.0.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/kint-php-debugger.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://hellofromtonya.com",
    "banners": {
        "low": "https://ps.w.org/kint-php-debugger/assets/banner-772x250.jpg?rev=1439496",
        "high": false
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/kint-php-debugger_e1e8f0.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}