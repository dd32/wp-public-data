{
    "name": "Timed Content",
    "slug": "timed-content",
    "version": "2.90",
    "author": "<a href=\"http://wordpress.org/plugins/timed-content/\">K. Tough, Arno Welzel, Enrico Bacis</a>",
    "author_profile": "https://profiles.wordpress.org/awelzel/",
    "contributors": {
        "kjvtough": {
            "profile": "https://profiles.wordpress.org/kjvtough/",
            "avatar": "https://secure.gravatar.com/avatar/d8498a2ccce7b384c9a3b5de6552f693?s=96&d=monsterid&r=g",
            "display_name": "K. Tough"
        },
        "awelzel": {
            "profile": "https://profiles.wordpress.org/awelzel/",
            "avatar": "https://secure.gravatar.com/avatar/143af22c25cf7412322f97607afdd830?s=96&d=monsterid&r=g",
            "display_name": "Arno Welzel"
        }
    },
    "requires": "3.8",
    "tested": "6.6.1",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 92,
    "ratings": {
        "5": 34,
        "4": 2,
        "3": 1,
        "2": 2,
        "1": 2
    },
    "num_ratings": 41,
    "support_url": "https://wordpress.org/support/plugin/timed-content/",
    "support_threads": 3,
    "support_threads_resolved": 2,
    "active_installs": 7000,
    "downloaded": 177510,
    "last_updated": "2024-08-21 09:21:00",
    "added": "2011-03-01",
    "homepage": "http://wordpress.org/plugins/timed-content/",
    "sections": {
        "description": "<p>The Timed Content plugin allows users to specify that a portion of a Page or Post should appear/be visible or disappear/be invisible based on given time characteristics. You can also make portions of a Post or Page be visible at certain dates and times; you can even set up a schedule!</p>\n<p>The plugin adds the following:</p>\n<ul>\n<li>A &#8220;client-side&#8221; shortcode that allows the marking of content to appear or disappear after a given time interval; a &#8220;fade&#8221; effect is included.  This functionality is intended to be used for special effects only, as content marked in this manner is still visible in the HTML source and, therefore, not a secure method of hiding content.</li>\n<li>Two &#8220;server-side&#8221; shortcodes that allow the marking of content to be visible only during specified date/time intervals.  This functionality <strong>can</strong> be used as a secure method of hiding content, because the marked content will be included in the Page/Post <strong>only</strong> when viewed in the specified date/time intervals.</li>\n</ul>\n<p>A TinyMCE dialog is included to help users build the shortcodes. See the Screenshots tab for more info.</p>\n<h3>Examples</h3>\n<pre><code>[timed-content-client show=\"1:00\"]Show me after one minute.  Since we don't want a fade-in, we can leave it out of the \"show\" attribute completely.[/timed-content-client]\n\n[timed-content-client show=\"1:00:1000\"]Show me after one minute with a 1000 millisecond (1 second) fade-in.[/timed-content-client]\n\n[timed-content-client hide=\"1:00:1000\"]Hide me after one minute with a 1000 millisecond (1 second) fade-out.[/timed-content-client]\n\n[timed-content-client show=\"1:00:500\" hide=\"5:00:2000\"]Show me after one minute with a 500 millisecond (a half-second) fade-in, then hide me after five minutes with a 2000 millisecond (2 seconds) fade-out.[/timed-content-client]\n\n[timed-content-server show=\"2013-09-13 20:30:00 -0600\"]Show me starting at 8:30 PM Central Standard Time on September 13th, 2013. I will not be displayed before then.[/timed-content-server]\n\n[timed-content-server hide=\"2013-09-13 20:30:00 America/Chicago\"]Hide me starting at 8:30 PM Central Daylight Time (i.e., the same timezone as Chicago) on September 13th, 2013.  I will not be displayed after then[/timed-content-server]\n\n[timed-content-server show=\"2013-09-13 20:30:00 -0600\" hide=\"2013-09-13 21:30:00 -0600\"]Show me starting at 8:30 PM Central Standard Time on September 13th, 2013, then hide me an hour later. I will not be displayed before or after then.[/timed-content-server]\n\n[timed-content-rule id=\"164\"]Display me based on the settings for the Timed Content Rule whoseID is 164.[/timed-content-rule]&lt;h3&gt;Usage&lt;/h3&gt;\n</code></pre>\n<p>NOTE: All shortcodes can be built using the TinyMCE dialog.  When in doubt, use the dialog to create correctly formed shortcodes.</p>\n<p><strong>The timed-content-client shortcode</strong></p>\n<pre><code>[timed-content-client show=\"mm:ss:fff\" hide=\"mm:ss:fff\"]Example Text[/timed-content-client]\n</code></pre>\n<ul>\n<li><code>show</code> &#8211; Specifies the time interval after loading the web page when the marked content should be displayed. The attribute consists of three parts,<br />\nseparated by colons: <code>mm</code> &#8211; minutes, <code>ss</code> &#8211; seconds, and <code>fff</code> &#8211; if greater than <code>0</code>, a fade-in effect lasting <code>fff</code> milliseconds is applied.</li>\n<li><code>hide</code> &#8211; Specifies the time interval after loading the web page when the marked content should be hidden. The attribute consists of three parts,<br />\nseparated by colons: <code>mm</code> &#8211; minutes, <code>ss</code> &#8211; seconds, and <code>fff</code> &#8211; if greater than <code>0</code>, a fade-out effect lasting <code>fff</code> milliseconds is applied.</li>\n</ul>\n<p>Both attributes are optional, but at least one attribute must be included. Leading zeros (0) are optional. The shortcode&#8217;s behaviour depends on which attributes are used:</p>\n<ul>\n<li><code>show</code> only &#8211; Marked content is initially not visible, then appears <code>mm</code> minutes and <code>ss</code> seconds after loading with a <code>fff</code> millisecond fade-in.</li>\n<li><code>hide</code> only &#8211; Marked content is initially visible, then disappears <code>mm</code> minutes and <code>ss</code> seconds after loading with a <code>fff</code> millisecond fade-out.</li>\n<li><code>show</code> and <code>hide</code> &#8211; Marked content is initially not visible, then appears according to the values set in <code>show</code>, then disappears according to the values set in <code>hide</code>.</li>\n</ul>\n<p>Your users must have JavaScript enabled for this shortcode to work.</p>\n<p><strong>The timed-content-server shortcode</strong></p>\n<pre><code>[timed-content-server show=\"datetime\" hide=\"datetime\" debug=\"true|false|when_hidden\"]Example Text[/timed-content-server]\n</code></pre>\n<ul>\n<li><code>show</code> &#8211; Specifies the date/time when the marked content should start being included on the web page.</li>\n<li><code>hide</code> &#8211; Specifies the date/time after which the marked content should stop being included on the web page.</li>\n<li><code>debug</code> &#8211; If <code>true</code>, adds some debugging statements to the web page as HTML comments. If <code>when_hidden</code>, the debugging statements are added only when the content is hidden. Defaults to <code>false</code>.</li>\n</ul>\n<p>The date and time are expected to be yyyy-mm-dd HH:MM (similar to ISO 8601), for example <code>2019-04-07 15:30</code> for April 7, 2019, 15:30. For backward compatiblity old &#8220;human readable&#8221; date formats should also work, but these should not be used any longer!</p>\n<p>In addition you can provide a timezone in the date/time parameter either as name or as offset like <code>2019-04-07 15:30 America/Chicago</code> or <code>2019-04-07 15:30 +0200</code>. If you do not provide a timezone, the WordPress timezone setting will be used as default.</p>\n<p>Both <code>show</code> and <code>hide</code> attributes are optional, but at least one attribute must be included. The shortcode&#8217;s behaviour depends on which attributes are used:</p>\n<ul>\n<li><code>show</code> only &#8211; Marked content is outputted only after the date/time set here.</li>\n<li><code>hide</code> only &#8211; Marked content is outputted only before the date/time set here.</li>\n<li><code>show</code> and <code>hide</code> &#8211; Marked content is outputted only during the time period defined by the <code>show</code> and <code>hide</code> attributes.</li>\n</ul>\n<p><strong>The timed-content-rule shortcode</strong></p>\n<pre><code>[timed-content-rule id=\"{rule_id}|{rule_name}\"]Example Text[/timed-content-rule]\n</code></pre>\n<p>You can find the correct shortcode from the Timed Content Rules overview page, or use the TinyMCE dialog.</p>\n<p><strong>Testing server side rules</strong></p>\n<p>For testing the behaviour of server side rules at specific times, you may use the GET parameter <code>tctest</code> in an URL, followed by date and time in the format <code>YYYY-MM-DD+hh:mm:ss</code>. This works only you are logged in with a user which has the right to edit the displayed page or post. For example: <code>http://mysite.example?tctest=2018-02-10+19:16:00</code> will show the content as if it was February 10, 2018 at 19:16.</p>\n<h3>Developer Documentation</h3>\n<p><strong>Action hooks</strong></p>\n<pre><code>add_action( \"timed_content_server_show\", \"{function_name}\", {priority_level}, 4 );\n</code></pre>\n<p>Fired when the <code>[timed-content-server]</code> shortcode is encountered <em>AND</em> the content is to be displayed based on the shortcode&#8217;s show/hide attributes.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$show</code> &#8211; the value of the <code>show</code> attribute. If not set, defaults to &#8220;1970-Jan-01 00:00:00 +000&#8221;</li>\n<li><code>$hide</code> &#8211; the value of the <code>hide</code> attribute. If not set, defaults to &#8220;2038-Jan-19 03:14:07 +000&#8221;</li>\n<li>\n<p><code>$content</code> &#8211; The content enclosed by the shortcode</p>\n<p>add_action( &#8220;timed_content_server_hide&#8221;, &#8220;{function_name}&#8221;, {priority_level}, 4 );</p>\n</li>\n</ul>\n<p>Fired when the <code>[timed-content-server]</code> shortcode is encountered <em>AND</em> the content is to be hidden based on the shortcode&#8217;s show/hide attributes.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$show</code> &#8211; the value of the <code>show</code> attribute. If not set, defaults to &#8220;1970-Jan-01 00:00:00 +000&#8221;</li>\n<li><code>$hide</code> &#8211; the value of the <code>hide</code> attribute. If not set, defaults to &#8220;2038-Jan-19 03:14:07 +000&#8221;</li>\n<li>\n<p><code>$content</code> &#8211; The content enclosed by the shortcode</p>\n<p>add_action( &#8220;timed_content_rule_show&#8221;, &#8220;{function_name}&#8221;, {priority_level}, 3 );</p>\n</li>\n</ul>\n<p>Fired when the <code>[timed-content-rule]</code> shortcode is encountered <em>AND</em> the content is to be displayed based on the Timed Content Rule&#8217;s properties.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$rule_id</code> &#8211; the ID of the Timed Content Rule being called. Use <code>get_post_meta( $rule_id )</code> to get the Rule&#8217;s properties.</li>\n<li>\n<p><code>$content</code> &#8211; The content enclosed by the shortcode</p>\n<p>add_action( &#8220;timed_content_rule_hide&#8221;, &#8220;{function_name}&#8221;, {priority_level}, 3 );</p>\n</li>\n</ul>\n<p>Fired when the <code>[timed-content-rule]</code> shortcode is encountered <em>AND</em> the content is to be hidden based on the Timed Content Rule&#8217;s properties.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$rule_id</code> &#8211; the ID of the Timed Content Rule being called. Use <code>get_post_meta( $rule_id )</code> to get the Rule&#8217;s properties.</li>\n<li><code>$content</code> &#8211; The content enclosed by the shortcode</li>\n</ul>\n<p><strong>Filter hooks</strong></p>\n<pre><code>timed_content_filter\n</code></pre>\n<p>Filter for any content enclosed by a Timed Content shortcode.  Implements the same filters as <code>the_content</code>:</p>\n<ul>\n<li><code>wptexturize</code></li>\n<li><code>convert_smilies</code></li>\n<li><code>convert_chars</code></li>\n<li><code>wpautop</code></li>\n<li><code>prepend_attachment</code></li>\n<li>\n<p><code>do_shortcode</code></p>\n<p>timed_content_filter_override</p>\n</li>\n</ul>\n<p>Replaces the <code>timed_content_filter</code> with another pre-existing filter to use for any content enclosed by a Timed Content shortcode.  Any function hooked into this filter must return the name of a filter (as a string).</p>\n",
        "installation": "<ol>\n<li>Extract the contents of the package to the <code>/wp-content/plugins/timed-content</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n</ol>\n",
        "faq": "\n<dt id='projected%20dates%2Ftimes%20seem%20to%20be%20fixed%20to%20a%20certain%20start%20date%20-%20why%3F'>\nProjected dates/times seem to be fixed to a certain start date &#8211; why?\n</h4>\n<p>\n<p>Since it makes no sense to get all values of the past, the projected dates/times will not display all available dates but will limit the start date to the current date minus a certain value depending on the interval.</p>\n<p>For hourly intervals: start at current date minus 1 day<br />\nFor daily intervals: start at current date minus 7 days<br />\nFor weekly intervals: start at current date minus 21 days<br />\nFor monthly intervals: start at current date minus 80 days<br />\nFor yearly intervals: start at current date minus 380 days</p>\n<p>Example: you set a rule to start on January 1, 2013 with daily repetetion. To get all the possible dates for that rule until today and a few weeks in the future this would mean to calculate more than ten(!) years or 3650 values until today. But most likely you don&#8217;t want to see the dates from 10 years ago but the values how they will be now and some repetitions into the future.</p>\n</p>\n<dt id='old%20rules%20after%20updating%20to%20version%202.50'>\nOld rules after updating to version 2.50\n</h4>\n<p>\n<p>In versions prior to 2.50 the date/time format was not handled very well which caused quite some confusion. Therefore version 2.50 now uses a fixed format similar to ISO 8601: yyyy-mm-dd HH:MM</p>\n<p>Existing shortcodes and rules containing dates in the format mm/dd/yyyy should still work, but when editing rules the date value is converted to the new format.</p>\n<p>To be sure, you should check your existing rules and shortcodes if you upgraded from a version below 2.50.</p>\n</p>\n<dt id='using%20timed%20content%20in%20gutenberg'>\nUsing Timed Content in Gutenberg\n</h4>\n<p>\n<p>If you want to use Timed Content with Gutenberg you have to add a &#8220;Classic&#8221; block. There is no way to show or hide other content blocks with Timed Content.</p>\n</p>\n\n",
        "changelog": "<h4>2.90</h4>\n<ul>\n<li>Use WordPress timezone setting as default for new server side rules and when server side shortcodes don&#8217;t contain a<br />\ntimezone in the date/time parameter.</li>\n</ul>\n<h4>2.82</h4>\n<ul>\n<li>Updated compatibility information for WordPress.</li>\n</ul>\n<h4>2.81</h4>\n<ul>\n<li>Updated compatibility information for WordPress.</li>\n</ul>\n<h4>2.80</h4>\n<ul>\n<li>Updated compatibility information for WordPress.</li>\n</ul>\n<h4>2.79</h4>\n<ul>\n<li>Fix backend code for admin dashboard &#8220;right now&#8221; output of timed content rule links.</li>\n</ul>\n<h4>2.78</h4>\n<ul>\n<li>Fixed a JavaScript error message in the backend UI.</li>\n</ul>\n<h4>2.77</h4>\n<ul>\n<li>Updated compatibility information for WordPress.</li>\n</ul>\n<h4>2.76</h4>\n<ul>\n<li>Fixed a bug which caused server side &#8220;hide&#8221; rules not to work any longer.</li>\n</ul>\n<h4>2.75</h4>\n<ul>\n<li>Fixed a bug which caused client side &#8220;hide&#8221; rules not to work any longer.</li>\n</ul>\n<h4>2.74</h4>\n<ul>\n<li>Fixed compatibility issue with PHP 7.</li>\n</ul>\n<h4>2.73</h4>\n<ul>\n<li>Fixed security issue with client side shortcodes which allowed to insert raw HTML and JavaScript via the shortcode.</li>\n<li>Refactored codebase according to WordPress Core coding guidelines.</li>\n<li>Adjusted time calculation to keep time in rules independent of current DST.</li>\n<li>Fixed a bug when creating new a server side rule and leaving the editor without saving it.</li>\n</ul>\n<h4>2.72</h4>\n<ul>\n<li>Fixed deprecation warnings with PHP 8.1.</li>\n</ul>\n<h4>2.71</h4>\n<ul>\n<li>Changed loading translations to support using custom translations by LOCO Translate.</li>\n</ul>\n<h4>2.70</h4>\n<ul>\n<li>The number of calculated date/time values is limited to avoid too many values for very long periods.</li>\n</ul>\n<h4>2.69</h4>\n<ul>\n<li>Updated compatibility for WordPress 6.0</li>\n</ul>\n<h4>2.68</h4>\n<ul>\n<li>Fixed a problem with shortcodes on pages without post object.</li>\n</ul>\n<h4>2.67</h4>\n<ul>\n<li>Refactor backend code to avoid errors in situations when there is no current post but a post is expected.</li>\n</ul>\n<h4>2.66</h4>\n<ul>\n<li>Updated compatibility information for WordPress 5.8.</li>\n</ul>\n<h4>2.65</h4>\n<ul>\n<li>Fixed a PHP warning which could occur if no exceptions are defined in a rule.</li>\n</ul>\n<h4>2.64</h4>\n<ul>\n<li>Fixed empty TinyMCE dialog.</li>\n</ul>\n<h4>2.62-2.63</h4>\n<ul>\n<li>Fixed PHP 7.3 compatibility issues.</li>\n</ul>\n<h4>2.61</h4>\n<ul>\n<li>Fixed PHP notice when using rules without exceptions.</li>\n</ul>\n<h4>2.60</h4>\n<ul>\n<li>Fixed broken handling of rule exceptions.</li>\n<li>Changed label for intervals in rule editor.</li>\n</ul>\n<h4>2.58</h4>\n<ul>\n<li>Changed the way how debug output is generated to the old variant without HTML sanitizing to make it easier to understand the output (thanks to Enrico Bacis for this).</li>\n</ul>\n<h4>2.57</h4>\n<ul>\n<li>Extended <code>debug</code> parameter: it&#8217;s now also possible to show debug output only if content is hidden (thanks to Enrico Bacis for this).</li>\n</ul>\n<h4>2.56</h4>\n<ul>\n<li>Use of &#8216;UTC&#8217; instead of &#8216;+0000&#8217; as default time zone to avoid problems with older PHP versions (eventhough you should better update to a supported PHP version).</li>\n</ul>\n<h4>2.55</h4>\n<ul>\n<li>Better handling of shortcodes with invalid timezones to avoid unhandled runtime exceptions.</li>\n<li>Improved debug output.</li>\n</ul>\n<h4>2.54</h4>\n<ul>\n<li>Default date values for new rules will now be in the correct format and not in the local date format of WordPress.</li>\n</ul>\n<h4>2.53</h4>\n<ul>\n<li>Added support for old shortcodes with localized date formats again. Every date/time which can be used in <code>strtotime()</code> should work now as well.</li>\n<li>Improved format of debug output.</li>\n</ul>\n<h4>2.52</h4>\n<ul>\n<li>Fixed a bug for server side shortcodes without or invalid &#8220;hide&#8221; attribute which did always hide the content.</li>\n</ul>\n<h4>2.51</h4>\n<ul>\n<li>Fixed a bug where the &#8220;hide&#8221; attribute of server side shortcodes did not get parsed correctly.</li>\n</ul>\n<h4>2.50</h4>\n<ul>\n<li>Major code refactoring and cleanup &#8211; please check your existing rules and shortcodes if they still work as expected and change them if needed!</li>\n<li>Increased minimum required WordPress version to 3.8</li>\n<li>Date format for new shortcodes and rules is now always &#8220;yyyy-mm-dd HH:MM&#8221; (similar to ISO 8601)</li>\n<li>Existing dates in rules and shortcodes will be parsed as &#8220;mm/dd/yyyy HH:MM&#8221; if they contain slashes</li>\n<li>Time values containing &#8220;AM&#8221; or &#8220;PM&#8221; will still work but converted to 24h format internally</li>\n</ul>\n<h4>2.15</h4>\n<ul>\n<li>Fixed 404 error caused by wrong URL for jquery date/time picker localization.</li>\n<li>Current date/time in TinyMCE dialog will be displayed as &#8220;yyyy-mm-dd HH:MM&#8221; as well.</li>\n</ul>\n<h4>2.10</h4>\n<ul>\n<li>Fixed a problem with unexpected <code>p</code> elements inside server side timed content sections.</li>\n</ul>\n<h4>2.9</h4>\n<ul>\n<li>Changed default sort order of the rules in the backend to the title.</li>\n</ul>\n<h4>2.8</h4>\n<ul>\n<li>Added debug parameter <code>tctest</code>.</li>\n</ul>\n<h4>2.7</h4>\n<ul>\n<li>Fixed deprecated class constructors.</li>\n</ul>\n<h4>2.6</h4>\n<ul>\n<li>New action hooks.</li>\n<li><code>[timed-content-rule]</code> shortcode now accepts a Timed Content Rule name as well as an ID.</li>\n<li>Streamlined i18n for date/time pickers (Use values available in WordPress settings and <code>$wp_locale</code> when available, combined *-i18n.js files into one).</li>\n<li>Some developer docs in the <code>readme.txt</code></li>\n</ul>\n<h4>2.5.1</h4>\n<ul>\n<li>Fixed <code>current_time()</code> bug in __rulesShowHTML() introduced in 2.5.</li>\n</ul>\n<h4>2.5</h4>\n<ul>\n<li>Removed dependency on jQuery UI Dialog; now uses Thickbox.</li>\n<li>Added and modified <code>fix_date_i18n()</code> from https://core.trac.wordpress.org/ticket/25768 to better handle DST and timezones with i18n.</li>\n<li>Added custom filter <code>timed_content_filter_override</code> so admins can modify/replace <code>timed_content_filter</code> if necessary.</li>\n<li>Using built-in spinner image now instead of <code>wpspin.gif</code></li>\n</ul>\n<h4>2.4</h4>\n<ul>\n<li>Removed <code>timed-content-admin-tinymce.js</code> (No need anymore; required JS variables now hooked directly into editor). Fixes incompatibility with OptimizePress.</li>\n</ul>\n<h4>2.3.1</h4>\n<ul>\n<li>Fixed minor bugs related to Exception Dates.</li>\n<li>Optimized rule periods arrays (array only needs &#8216;status&#8217; and &#8216;time&#8217; when it&#8217;s meant to be human-readable).</li>\n<li>Added custom filter <code>timed_content_filter</code> to emulate <code>apply_filter( 'the_content', ... )</code> functionality for content.</li>\n</ul>\n<h4>2.3</h4>\n<ul>\n<li>Fixed bug when setting up weekly recurrence for Timed Content Rules.</li>\n<li>NEW! Exception Dates (dates on which your Timed Content Rule shouldn&#8217;t run).</li>\n</ul>\n<h4>2.2</h4>\n<ul>\n<li>Much improved i18n</li>\n<li>New Spanish translation &#8211; Many thanks to Andrew Kurtis and Jelena Kovacevic from WebHostingHub (Nueva traducción de español &#8211; Muchas gracias a Andrew Kurtis y Jelena Kovacevic desde WebHostingHub).</li>\n</ul>\n<h4>2.1.5</h4>\n<ul>\n<li>Unified dashicons among all of my plugins.</li>\n<li>Minor improvements in TinyMCE dialog UI and Date/Time UI controls.</li>\n</ul>\n<h4>2.1.4</h4>\n<ul>\n<li>Fixed TinyMCE editor button for TinyMCE 4.x.</li>\n</ul>\n<h4>2.1.3</h4>\n<ul>\n<li>Removed support for PHP4 in <code>customFieldsInterface.php</code>.</li>\n<li>Fixed WordPress version check for deciding which image to use for TinyMCE button.</li>\n<li>Fixed &#8220;Strict Standards&#8221; warning in PHP 5.4 in <code>__getNextWeek()</code>.</li>\n</ul>\n<h4>2.1.2</h4>\n<ul>\n<li>Dashicons support for WP 3.8 + added. Support for old-style icons in Admin/TinyMCE is deprecated.</li>\n<li>Added versioning to all <code>wp_enqueue_style()</code> calls.</li>\n</ul>\n<h4>2.1.1</h4>\n<ul>\n<li>CSS for JQuery UI now loaded locally as required by WordPress plugin repository rules.</li>\n<li>Improved UX on TinyMCE dialog and Timed Content Rules detail page.</li>\n</ul>\n<h4>2.1</h4>\n<ul>\n<li>Fixed inconsistency in how the days of week to repeat on were being set up between the front and back ends.</li>\n<li>Fixed variable scope bug that occurred on activation.</li>\n<li>Improved i18n.</li>\n</ul>\n<h4>2.0</h4>\n<ul>\n<li>Added Timed Content Rules.</li>\n<li>Replaced AnyTime plugin with jQuery UI Timepicker (http://fgelinas.com/code/timepicker) and WordPress&#8217;s internal jQuery UI Datepicker.</li>\n<li>HTML code created by <code>[timed-content-client]</code> can now either be enclosed in either <code>&lt;div&gt;</code> or <code>&lt;span&gt;</code> tags.</li>\n<li>Debugging statements for <code>[timed-content-server]</code> now displayed on Post/Page (only if logged in and have the rights to edit that Post/Page &#8211; no more digging into the HTML source).</li>\n<li>Improved code documentation.</li>\n</ul>\n<h4>1.2</h4>\n<ul>\n<li>Upgraded AnyTime jQuery plugin.</li>\n<li><code>timed-content.js</code> is now always loaded (Size &gt; 1KB, so not a lot of extra overhead); fixes bug when multiple/nested shortcodes are used.</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Fixed some internal filename discrepancies.</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Initial release.</li>\n</ul>\n"
    },
    "short_description": "Plugin to show or hide portions of a Page or Post based on specific date/time characteristics.",
    "description": "<p>The Timed Content plugin allows users to specify that a portion of a Page or Post should appear/be visible or disappear/be invisible based on given time characteristics. You can also make portions of a Post or Page be visible at certain dates and times; you can even set up a schedule!</p>\n<p>The plugin adds the following:</p>\n<ul>\n<li>A &#8220;client-side&#8221; shortcode that allows the marking of content to appear or disappear after a given time interval; a &#8220;fade&#8221; effect is included.  This functionality is intended to be used for special effects only, as content marked in this manner is still visible in the HTML source and, therefore, not a secure method of hiding content.</li>\n<li>Two &#8220;server-side&#8221; shortcodes that allow the marking of content to be visible only during specified date/time intervals.  This functionality <strong>can</strong> be used as a secure method of hiding content, because the marked content will be included in the Page/Post <strong>only</strong> when viewed in the specified date/time intervals.</li>\n</ul>\n<p>A TinyMCE dialog is included to help users build the shortcodes. See the Screenshots tab for more info.</p>\n<h3>Examples</h3>\n<pre><code>[timed-content-client show=\"1:00\"]Show me after one minute.  Since we don't want a fade-in, we can leave it out of the \"show\" attribute completely.[/timed-content-client]\n\n[timed-content-client show=\"1:00:1000\"]Show me after one minute with a 1000 millisecond (1 second) fade-in.[/timed-content-client]\n\n[timed-content-client hide=\"1:00:1000\"]Hide me after one minute with a 1000 millisecond (1 second) fade-out.[/timed-content-client]\n\n[timed-content-client show=\"1:00:500\" hide=\"5:00:2000\"]Show me after one minute with a 500 millisecond (a half-second) fade-in, then hide me after five minutes with a 2000 millisecond (2 seconds) fade-out.[/timed-content-client]\n\n[timed-content-server show=\"2013-09-13 20:30:00 -0600\"]Show me starting at 8:30 PM Central Standard Time on September 13th, 2013. I will not be displayed before then.[/timed-content-server]\n\n[timed-content-server hide=\"2013-09-13 20:30:00 America/Chicago\"]Hide me starting at 8:30 PM Central Daylight Time (i.e., the same timezone as Chicago) on September 13th, 2013.  I will not be displayed after then[/timed-content-server]\n\n[timed-content-server show=\"2013-09-13 20:30:00 -0600\" hide=\"2013-09-13 21:30:00 -0600\"]Show me starting at 8:30 PM Central Standard Time on September 13th, 2013, then hide me an hour later. I will not be displayed before or after then.[/timed-content-server]\n\n[timed-content-rule id=\"164\"]Display me based on the settings for the Timed Content Rule whoseID is 164.[/timed-content-rule]&lt;h3&gt;Usage&lt;/h3&gt;\n</code></pre>\n<p>NOTE: All shortcodes can be built using the TinyMCE dialog.  When in doubt, use the dialog to create correctly formed shortcodes.</p>\n<p><strong>The timed-content-client shortcode</strong></p>\n<pre><code>[timed-content-client show=\"mm:ss:fff\" hide=\"mm:ss:fff\"]Example Text[/timed-content-client]\n</code></pre>\n<ul>\n<li><code>show</code> &#8211; Specifies the time interval after loading the web page when the marked content should be displayed. The attribute consists of three parts,<br />\nseparated by colons: <code>mm</code> &#8211; minutes, <code>ss</code> &#8211; seconds, and <code>fff</code> &#8211; if greater than <code>0</code>, a fade-in effect lasting <code>fff</code> milliseconds is applied.</li>\n<li><code>hide</code> &#8211; Specifies the time interval after loading the web page when the marked content should be hidden. The attribute consists of three parts,<br />\nseparated by colons: <code>mm</code> &#8211; minutes, <code>ss</code> &#8211; seconds, and <code>fff</code> &#8211; if greater than <code>0</code>, a fade-out effect lasting <code>fff</code> milliseconds is applied.</li>\n</ul>\n<p>Both attributes are optional, but at least one attribute must be included. Leading zeros (0) are optional. The shortcode&#8217;s behaviour depends on which attributes are used:</p>\n<ul>\n<li><code>show</code> only &#8211; Marked content is initially not visible, then appears <code>mm</code> minutes and <code>ss</code> seconds after loading with a <code>fff</code> millisecond fade-in.</li>\n<li><code>hide</code> only &#8211; Marked content is initially visible, then disappears <code>mm</code> minutes and <code>ss</code> seconds after loading with a <code>fff</code> millisecond fade-out.</li>\n<li><code>show</code> and <code>hide</code> &#8211; Marked content is initially not visible, then appears according to the values set in <code>show</code>, then disappears according to the values set in <code>hide</code>.</li>\n</ul>\n<p>Your users must have JavaScript enabled for this shortcode to work.</p>\n<p><strong>The timed-content-server shortcode</strong></p>\n<pre><code>[timed-content-server show=\"datetime\" hide=\"datetime\" debug=\"true|false|when_hidden\"]Example Text[/timed-content-server]\n</code></pre>\n<ul>\n<li><code>show</code> &#8211; Specifies the date/time when the marked content should start being included on the web page.</li>\n<li><code>hide</code> &#8211; Specifies the date/time after which the marked content should stop being included on the web page.</li>\n<li><code>debug</code> &#8211; If <code>true</code>, adds some debugging statements to the web page as HTML comments. If <code>when_hidden</code>, the debugging statements are added only when the content is hidden. Defaults to <code>false</code>.</li>\n</ul>\n<p>The date and time are expected to be yyyy-mm-dd HH:MM (similar to ISO 8601), for example <code>2019-04-07 15:30</code> for April 7, 2019, 15:30. For backward compatiblity old &#8220;human readable&#8221; date formats should also work, but these should not be used any longer!</p>\n<p>In addition you can provide a timezone in the date/time parameter either as name or as offset like <code>2019-04-07 15:30 America/Chicago</code> or <code>2019-04-07 15:30 +0200</code>. If you do not provide a timezone, the WordPress timezone setting will be used as default.</p>\n<p>Both <code>show</code> and <code>hide</code> attributes are optional, but at least one attribute must be included. The shortcode&#8217;s behaviour depends on which attributes are used:</p>\n<ul>\n<li><code>show</code> only &#8211; Marked content is outputted only after the date/time set here.</li>\n<li><code>hide</code> only &#8211; Marked content is outputted only before the date/time set here.</li>\n<li><code>show</code> and <code>hide</code> &#8211; Marked content is outputted only during the time period defined by the <code>show</code> and <code>hide</code> attributes.</li>\n</ul>\n<p><strong>The timed-content-rule shortcode</strong></p>\n<pre><code>[timed-content-rule id=\"{rule_id}|{rule_name}\"]Example Text[/timed-content-rule]\n</code></pre>\n<p>You can find the correct shortcode from the Timed Content Rules overview page, or use the TinyMCE dialog.</p>\n<p><strong>Testing server side rules</strong></p>\n<p>For testing the behaviour of server side rules at specific times, you may use the GET parameter <code>tctest</code> in an URL, followed by date and time in the format <code>YYYY-MM-DD+hh:mm:ss</code>. This works only you are logged in with a user which has the right to edit the displayed page or post. For example: <code>http://mysite.example?tctest=2018-02-10+19:16:00</code> will show the content as if it was February 10, 2018 at 19:16.</p>\n<h3>Developer Documentation</h3>\n<p><strong>Action hooks</strong></p>\n<pre><code>add_action( \"timed_content_server_show\", \"{function_name}\", {priority_level}, 4 );\n</code></pre>\n<p>Fired when the <code>[timed-content-server]</code> shortcode is encountered <em>AND</em> the content is to be displayed based on the shortcode&#8217;s show/hide attributes.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$show</code> &#8211; the value of the <code>show</code> attribute. If not set, defaults to &#8220;1970-Jan-01 00:00:00 +000&#8221;</li>\n<li><code>$hide</code> &#8211; the value of the <code>hide</code> attribute. If not set, defaults to &#8220;2038-Jan-19 03:14:07 +000&#8221;</li>\n<li>\n<p><code>$content</code> &#8211; The content enclosed by the shortcode</p>\n<p>add_action( &#8220;timed_content_server_hide&#8221;, &#8220;{function_name}&#8221;, {priority_level}, 4 );</p>\n</li>\n</ul>\n<p>Fired when the <code>[timed-content-server]</code> shortcode is encountered <em>AND</em> the content is to be hidden based on the shortcode&#8217;s show/hide attributes.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$show</code> &#8211; the value of the <code>show</code> attribute. If not set, defaults to &#8220;1970-Jan-01 00:00:00 +000&#8221;</li>\n<li><code>$hide</code> &#8211; the value of the <code>hide</code> attribute. If not set, defaults to &#8220;2038-Jan-19 03:14:07 +000&#8221;</li>\n<li>\n<p><code>$content</code> &#8211; The content enclosed by the shortcode</p>\n<p>add_action( &#8220;timed_content_rule_show&#8221;, &#8220;{function_name}&#8221;, {priority_level}, 3 );</p>\n</li>\n</ul>\n<p>Fired when the <code>[timed-content-rule]</code> shortcode is encountered <em>AND</em> the content is to be displayed based on the Timed Content Rule&#8217;s properties.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$rule_id</code> &#8211; the ID of the Timed Content Rule being called. Use <code>get_post_meta( $rule_id )</code> to get the Rule&#8217;s properties.</li>\n<li>\n<p><code>$content</code> &#8211; The content enclosed by the shortcode</p>\n<p>add_action( &#8220;timed_content_rule_hide&#8221;, &#8220;{function_name}&#8221;, {priority_level}, 3 );</p>\n</li>\n</ul>\n<p>Fired when the <code>[timed-content-rule]</code> shortcode is encountered <em>AND</em> the content is to be hidden based on the Timed Content Rule&#8217;s properties.  Functions using this hook should accept the following arguments in order:</p>\n<ul>\n<li><code>$post_id</code> &#8211; the ID of the currently displayed Post/Page</li>\n<li><code>$rule_id</code> &#8211; the ID of the Timed Content Rule being called. Use <code>get_post_meta( $rule_id )</code> to get the Rule&#8217;s properties.</li>\n<li><code>$content</code> &#8211; The content enclosed by the shortcode</li>\n</ul>\n<p><strong>Filter hooks</strong></p>\n<pre><code>timed_content_filter\n</code></pre>\n<p>Filter for any content enclosed by a Timed Content shortcode.  Implements the same filters as <code>the_content</code>:</p>\n<ul>\n<li><code>wptexturize</code></li>\n<li><code>convert_smilies</code></li>\n<li><code>convert_chars</code></li>\n<li><code>wpautop</code></li>\n<li><code>prepend_attachment</code></li>\n<li>\n<p><code>do_shortcode</code></p>\n<p>timed_content_filter_override</p>\n</li>\n</ul>\n<p>Replaces the <code>timed_content_filter</code> with another pre-existing filter to use for any content enclosed by a Timed Content shortcode.  Any function hooked into this filter must return the name of a filter (as a string).</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/timed-content.2.90.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/timed-content/assets/screenshot-1.png?rev=2953069",
            "caption": "An example showing use of the <code>[timed-content-client]</code> shortcode.  The \"alarm clock\" button on the editor menubar brings up a dialog box to help build the Timed Content shortcodes."
        },
        {
            "src": "https://ps.w.org/timed-content/assets/screenshot-2.png?rev=2953069",
            "caption": "The \"Add Timed Content shortcode\" dialog showing the Client tab.  Check the attribute you want to add and fill in the textboxes."
        },
        {
            "src": "https://ps.w.org/timed-content/assets/screenshot-3.png?rev=2953069",
            "caption": "The \"Add Timed Content shortcode\" dialog showing the Server tab.  Check the attribute you want to add, then click on the Date and Time textboxes."
        },
        {
            "src": "https://ps.w.org/timed-content/assets/screenshot-4.png?rev=2953069",
            "caption": "The date and time pickers help you format a correct date and time.  Here's the jQuery UI Datepicker in action."
        },
        {
            "src": "https://ps.w.org/timed-content/assets/screenshot-5.png?rev=2953069",
            "caption": "The \"Add Timed Content shortcode\" dialog showing the Timed Content Rules tab."
        }
    ],
    "tags": {
        "marketing-tool": "marketing tool",
        "schedule": "schedule",
        "timed-content": "timed content"
    },
    "stable_tag": "2.90",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/timed-content.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/timed-content.1.1.zip",
        "1.2": "https://downloads.wordpress.org/plugin/timed-content.1.2.zip",
        "2.0": "https://downloads.wordpress.org/plugin/timed-content.2.0.zip",
        "2.1": "https://downloads.wordpress.org/plugin/timed-content.2.1.zip",
        "2.1.1": "https://downloads.wordpress.org/plugin/timed-content.2.1.1.zip",
        "2.1.2": "https://downloads.wordpress.org/plugin/timed-content.2.1.2.zip",
        "2.1.3": "https://downloads.wordpress.org/plugin/timed-content.2.1.3.zip",
        "2.1.4": "https://downloads.wordpress.org/plugin/timed-content.2.1.4.zip",
        "2.1.5": "https://downloads.wordpress.org/plugin/timed-content.2.1.5.zip",
        "2.10": "https://downloads.wordpress.org/plugin/timed-content.2.10.zip",
        "2.11": "https://downloads.wordpress.org/plugin/timed-content.2.11.zip",
        "2.12": "https://downloads.wordpress.org/plugin/timed-content.2.12.zip",
        "2.15": "https://downloads.wordpress.org/plugin/timed-content.2.15.zip",
        "2.2": "https://downloads.wordpress.org/plugin/timed-content.2.2.zip",
        "2.3": "https://downloads.wordpress.org/plugin/timed-content.2.3.zip",
        "2.3.1": "https://downloads.wordpress.org/plugin/timed-content.2.3.1.zip",
        "2.4": "https://downloads.wordpress.org/plugin/timed-content.2.4.zip",
        "2.5": "https://downloads.wordpress.org/plugin/timed-content.2.5.zip",
        "2.5.1": "https://downloads.wordpress.org/plugin/timed-content.2.5.1.zip",
        "2.50": "https://downloads.wordpress.org/plugin/timed-content.2.50.zip",
        "2.51": "https://downloads.wordpress.org/plugin/timed-content.2.51.zip",
        "2.52": "https://downloads.wordpress.org/plugin/timed-content.2.52.zip",
        "2.53": "https://downloads.wordpress.org/plugin/timed-content.2.53.zip",
        "2.54": "https://downloads.wordpress.org/plugin/timed-content.2.54.zip",
        "2.55": "https://downloads.wordpress.org/plugin/timed-content.2.55.zip",
        "2.56": "https://downloads.wordpress.org/plugin/timed-content.2.56.zip",
        "2.57": "https://downloads.wordpress.org/plugin/timed-content.2.57.zip",
        "2.58": "https://downloads.wordpress.org/plugin/timed-content.2.58.zip",
        "2.6": "https://downloads.wordpress.org/plugin/timed-content.2.6.zip",
        "2.60": "https://downloads.wordpress.org/plugin/timed-content.2.60.zip",
        "2.61": "https://downloads.wordpress.org/plugin/timed-content.2.61.zip",
        "2.62": "https://downloads.wordpress.org/plugin/timed-content.2.62.zip",
        "2.63": "https://downloads.wordpress.org/plugin/timed-content.2.63.zip",
        "2.64": "https://downloads.wordpress.org/plugin/timed-content.2.64.zip",
        "2.65": "https://downloads.wordpress.org/plugin/timed-content.2.65.zip",
        "2.66": "https://downloads.wordpress.org/plugin/timed-content.2.66.zip",
        "2.67": "https://downloads.wordpress.org/plugin/timed-content.2.67.zip",
        "2.68": "https://downloads.wordpress.org/plugin/timed-content.2.68.zip",
        "2.69": "https://downloads.wordpress.org/plugin/timed-content.2.69.zip",
        "2.7": "https://downloads.wordpress.org/plugin/timed-content.2.7.zip",
        "2.70": "https://downloads.wordpress.org/plugin/timed-content.2.70.zip",
        "2.71": "https://downloads.wordpress.org/plugin/timed-content.2.71.zip",
        "2.72": "https://downloads.wordpress.org/plugin/timed-content.2.72.zip",
        "2.73": "https://downloads.wordpress.org/plugin/timed-content.2.73.zip",
        "2.74": "https://downloads.wordpress.org/plugin/timed-content.2.74.zip",
        "2.75": "https://downloads.wordpress.org/plugin/timed-content.2.75.zip",
        "2.76": "https://downloads.wordpress.org/plugin/timed-content.2.76.zip",
        "2.77": "https://downloads.wordpress.org/plugin/timed-content.2.77.zip",
        "2.78": "https://downloads.wordpress.org/plugin/timed-content.2.78.zip",
        "2.79": "https://downloads.wordpress.org/plugin/timed-content.2.79.zip",
        "2.8": "https://downloads.wordpress.org/plugin/timed-content.2.8.zip",
        "2.80": "https://downloads.wordpress.org/plugin/timed-content.2.80.zip",
        "2.81": "https://downloads.wordpress.org/plugin/timed-content.2.81.zip",
        "2.82": "https://downloads.wordpress.org/plugin/timed-content.2.82.zip",
        "2.9": "https://downloads.wordpress.org/plugin/timed-content.2.9.zip",
        "2.90": "https://downloads.wordpress.org/plugin/timed-content.2.90.zip",
        "trunk": "https://downloads.wordpress.org/plugin/timed-content.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/timed-content/assets/icon-128x128.png?rev=2953069",
        "2x": "https://ps.w.org/timed-content/assets/icon-256x256.png?rev=2953069"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 92,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}