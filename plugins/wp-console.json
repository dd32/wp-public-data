{
    "name": "WP Console &#8211; WordPress PHP Console powered by PsySH",
    "slug": "wp-console",
    "version": "2.4.1",
    "author": "<a href=\"https://github.com/ediamin\">Edi Amin</a>",
    "author_profile": "https://profiles.wordpress.org/ediamin/",
    "contributors": {
        "ediamin": {
            "profile": "https://profiles.wordpress.org/ediamin/",
            "avatar": "https://secure.gravatar.com/avatar/3d56613cee0387b319274c55307f4961?s=96&d=monsterid&r=g",
            "display_name": "Edi Amin"
        }
    },
    "requires": "5.3.12",
    "tested": "6.4.5",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 19,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 19,
    "support_url": "https://wordpress.org/support/plugin/wp-console/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 30000,
    "downloaded": 1608958,
    "last_updated": "2023-11-13 12:21:00",
    "added": "2019-06-21",
    "homepage": "https://github.com/ediamin/wp-console",
    "sections": {
        "description": "<p>WP Console brings the renowned PsySH directly to your browser. PsySH serves as a runtime developer console, an interactive debugger, and a PHP REPL (Read-Eval-Print Loop).</p>\n<p>To utilize WP Console, simply write your code within the code editor, then press Cmd-Enter (mac) or Ctrl-Enter (win/linux) to instantly view the output in your browser.</p>\n<p>Moreover, you have the option to employ PsySH alongside wp-cli by executing the command <code>wp shell</code>. Notably, wp-cli comes with inherent compatibility for psysh. All that is required is the activation of WP Console to leverage this feature.</p>\n<h3>Features</h3>\n<ul>\n<li>Powerful code editor powered by Ace Editor.</li>\n<li>Real-time autocompletion for PHP core and WordPress functions, complete with placeholders.</li>\n<li>Introducing <code>_dump</code> as a more versatile alternative to <code>var_dump</code>, leveraging the capabilities of Symfony VarDumper.</li>\n<li>Instant access to debug.log contents, with the added convenience of clearing them directly from your browser.</li>\n<li>Enhanced shell experience courtesy of psySH, facilitating advanced interaction through <code>wp shell</code>.</li>\n<li>Customizable code snippet functionality, compatible with VS Code supported code snippets. Explore examples like these <a href=\"https://github.com/claudiosanches/vscode-woocommerce/blob/master/snippets/functions.json\" rel=\"nofollow ugc\">WooCommerce snippets</a>.</li>\n</ul>\n<p>Please note that certain PsySH commands, such as <code>ls</code>, <code>doc</code>, <code>show</code>, and magic variables like <code>$_</code>, <code>$__class</code>, are not currently supported in the browser console.</p>\n<p>ðŸ‘‰ WP Console uses Gutenberg packages and components to ensure a seamless and user-friendly UI/UX.</p>\n<h3>Getting Started</h3>\n<p>To begin using the plugin, follow these steps:</p>\n<ol>\n<li>Activate the plugin within your WordPress setup.</li>\n<li>Look for a quick link labeled &#8220;Console&#8221; in the WP Admin Bar on the right-hand side (see the second screenshot below).</li>\n<li>Click on the &#8220;Console&#8221; link to access the WP Console panel.</li>\n</ol>\n<h3>Security Concern</h3>\n<p>WP Console explicitly verifies the presence of the <code>manage_options</code> permission to render the user interface and execute various functions. However, it&#8217;s important to note that this plugin is not intended for use on a production server.</p>\n",
        "changelog": "<p>2.4.1 &#8211; November 13, 2023<br />\n* Fix deprecation notice in PHP 8.2 related to strtolower argument type.<br />\n* Add an admin submenu under the tools menu to open the console window.<br />\n* Update WordPress compatibility to the latest version 6.4.2.</p>\n<p>2.4.0 &#8211; August 09, 2023<br />\n* Add support for PHP 8.0+.<br />\n* Update Ace Editor version to 1.23.4.</p>\n<p>2.3.1 &#8211; July 31, 2022<br />\n* Update script version of ace.</p>\n<p>2.3.0 &#8211; July 27, 2022<br />\n* Add code execution time in console output panel.<br />\n* Use ace.js with custom namespace to avoid conflict with other ace.js source.<br />\n* Fix snippet manager module style.<br />\n* Use verticle split as default in console panel.<br />\n* Fix error handling for PHP v5.6.<br />\n* Fix some UI issues in different WordPress versions.<br />\n* Add wp-env and e2e testing with Jest using wp-scripts for developing the plugin.</p>\n<p>2.2.0 &#8211; November 22, 2020<br />\n* Add custom code snippet support. You can use VS Code supported PHP code snippets now.<br />\n* Add Copy Output button.<br />\n* Enqueue scripts only for manage_options capability owners.<br />\n* Improve handling uncaught fatal errors.<br />\n* Add Twenty Twenty theme compatibility.<br />\n* Set default values for user Console settings in REST API.<br />\n* Fix horizontal output scolling issue for vertically split console.<br />\n* Fix close button get disappear in WooCommerce admin pages.<br />\n* Fix error line no in console editor.</p>\n<p>2.1.0 &#8211; April 14, 2020<br />\n* Lazy load React components to improve performance.<br />\n* Use a single store source for all components.<br />\n* Reset console responses after close app window.<br />\n* Fix navigation button icon css for WP v5.4.<br />\n* Resize editor screen after toggle split mode.</p>\n<p>2.0.0 &#8211; December 11, 2019<br />\n* Revamp UI/UX.<br />\n* Add Ace editor as code editor plugin. Remove CodeMirror.<br />\n* Live autocompletion with placeholders.<br />\n* Option to vertically split editor and output window.<br />\n* Add ability to clear debug.log.<br />\n* Restrict plugin UI and REST APIs for users who have manage_options capability.</p>\n<p>1.5.0 &#8211; November 07, 2019<br />\n* Tweak &#8211; Change <code>dump</code> function name to <code>_dump</code> to resolve conflict with wp-erp.</p>\n<p>1.4.0 &#8211; November 02, 2019<br />\n* New &#8211; Save code editor history in localStorage.<br />\n* Tweak &#8211; Use wp-scripts for assets build process.</p>\n<p>1.3.0 &#8211; October 26, 2019<br />\n* New &#8211; Fetch debug.log contents.<br />\n* Tweak &#8211; Support PHP version 5.6.</p>\n<p>1.2.0 &#8211; July 27, 2019<br />\n* New &#8211; Add autocompletion data(WP functions, PHP booleans, constants, functions, keywords).<br />\n* New &#8211; Add codemirror closebrackets, matchbrackets addon scripts.<br />\n* New &#8211; Show error stacktrace.</p>\n<p>1.1.0 &#8211; June 25, 2019<br />\n* New &#8211; Use output buffer handler.<br />\n* New &#8211; Add build process.<br />\n* Tweak &#8211; Remove unnecessary code.</p>\n<p>1.0.0 &#8211; June 21, 2019<br />\nInitial release.</p>\n"
    },
    "short_description": "An in-browser PHP console for WordPress powered by PsySH",
    "description": "<p>WP Console brings the renowned PsySH directly to your browser. PsySH serves as a runtime developer console, an interactive debugger, and a PHP REPL (Read-Eval-Print Loop).</p>\n<p>To utilize WP Console, simply write your code within the code editor, then press Cmd-Enter (mac) or Ctrl-Enter (win/linux) to instantly view the output in your browser.</p>\n<p>Moreover, you have the option to employ PsySH alongside wp-cli by executing the command <code>wp shell</code>. Notably, wp-cli comes with inherent compatibility for psysh. All that is required is the activation of WP Console to leverage this feature.</p>\n<h3>Features</h3>\n<ul>\n<li>Powerful code editor powered by Ace Editor.</li>\n<li>Real-time autocompletion for PHP core and WordPress functions, complete with placeholders.</li>\n<li>Introducing <code>_dump</code> as a more versatile alternative to <code>var_dump</code>, leveraging the capabilities of Symfony VarDumper.</li>\n<li>Instant access to debug.log contents, with the added convenience of clearing them directly from your browser.</li>\n<li>Enhanced shell experience courtesy of psySH, facilitating advanced interaction through <code>wp shell</code>.</li>\n<li>Customizable code snippet functionality, compatible with VS Code supported code snippets. Explore examples like these <a href=\"https://github.com/claudiosanches/vscode-woocommerce/blob/master/snippets/functions.json\" rel=\"nofollow ugc\">WooCommerce snippets</a>.</li>\n</ul>\n<p>Please note that certain PsySH commands, such as <code>ls</code>, <code>doc</code>, <code>show</code>, and magic variables like <code>$_</code>, <code>$__class</code>, are not currently supported in the browser console.</p>\n<p>ðŸ‘‰ WP Console uses Gutenberg packages and components to ensure a seamless and user-friendly UI/UX.</p>\n<h3>Getting Started</h3>\n<p>To begin using the plugin, follow these steps:</p>\n<ol>\n<li>Activate the plugin within your WordPress setup.</li>\n<li>Look for a quick link labeled &#8220;Console&#8221; in the WP Admin Bar on the right-hand side (see the second screenshot below).</li>\n<li>Click on the &#8220;Console&#8221; link to access the WP Console panel.</li>\n</ol>\n<h3>Security Concern</h3>\n<p>WP Console explicitly verifies the presence of the <code>manage_options</code> permission to render the user interface and execute various functions. However, it&#8217;s important to note that this plugin is not intended for use on a production server.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-console.2.4.1.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-1.png?rev=2209682",
            "caption": "Basic input output"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-2.png?rev=2950053",
            "caption": "How to open the browser console"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-3.png?rev=2950053",
            "caption": "_dump command"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-4.png?rev=2950053",
            "caption": "Vertical splitted window"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-5.png?rev=2950053",
            "caption": "Live Autocompletion"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-6.png?rev=2950053",
            "caption": "Autocompletion with placeholder"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-7.png?rev=2950053",
            "caption": "Display errors"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-8.png?rev=2950053",
            "caption": "wp shell command"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-9.png?rev=2950053",
            "caption": "Get debug.log contents"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-10.png?rev=2950053",
            "caption": "Clear debug.log"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-11.png?rev=2950053",
            "caption": "Add/Edit custom snippets"
        },
        {
            "src": "https://ps.w.org/wp-console/assets/screenshot-12.png?rev=2950053",
            "caption": "Custom snippets in action"
        }
    ],
    "tags": {
        "browser": "browser",
        "console": "console",
        "psysh": "psysh",
        "repl": "repl",
        "shell": "shell"
    },
    "stable_tag": "2.4.1",
    "versions": {
        "2.4.0": "https://downloads.wordpress.org/plugin/wp-console.2.4.0.zip",
        "2.4.1": "https://downloads.wordpress.org/plugin/wp-console.2.4.1.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-console.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/wp-console/assets/banner-772x250.png?rev=2397221",
        "high": "https://ps.w.org/wp-console/assets/banner-1544x500.png?rev=2397221"
    },
    "icons": {
        "1x": "https://ps.w.org/wp-console/assets/icon-128x128.png?rev=2397221",
        "2x": "https://ps.w.org/wp-console/assets/icon-256x256.png?rev=2397221"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}