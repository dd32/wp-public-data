{
    "name": "WP Max Submit Protect",
    "slug": "wp-max-submit-protect",
    "version": "1.1.2",
    "author": "<a href=\"http://www.academe.co.uk/\">Academe Computing</a>",
    "author_profile": "https://profiles.wordpress.org/judgej/",
    "contributors": {
        "judgej": {
            "profile": "https://profiles.wordpress.org/judgej/",
            "avatar": "https://secure.gravatar.com/avatar/eae410d9ee092f30485000d6bd6f4d00?s=96&d=monsterid&r=g",
            "display_name": "Jason Judge"
        }
    },
    "requires": "3.6",
    "tested": "4.2.38",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 7,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 7,
    "support_url": "https://wordpress.org/support/plugin/wp-max-submit-protect/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 600,
    "downloaded": 13237,
    "last_updated": "2015-07-30 15:00:00",
    "added": "2014-01-11",
    "homepage": "https://github.com/academe/wp-max-submit-protect",
    "sections": {
        "description": "<p>Some appications, such as ecommerce sites, can have administration forms that submit well over a thousand<br />\nparameters. PHP, by default, is set to accept only one thousand parameters and so some of the submitted data can get lost.</p>\n<p>Most applications don&#8217;t check whether they received everything, and so data can get broken easily and silently.<br />\nA WooCommerce product with 40 variations can have over 1300 submitted form items, and when saving the product you have no idea that much of that data is being discarded.</p>\n<p>Luckily <a href=\"http://docs.woothemes.com/document/problems-with-large-amounts-of-data-not-saving-variations-rates-etc/\" rel=\"nofollow ugc\">the maximum number of accepted parameters can be changed in php.ini</a><br />\nThe problem is, many site owners have no idea this needs to be done until it is too late and their application,<br />\nfor example their WooCommerce store, has lost half its product variations.</p>\n<p>If using php.ini on your site, the file needs to be in the /wp-admin directory as that is where the admin forms are submitted to.</p>\n<p>To protect yourself and make sure the server limit does not catch<br />\nyou unawares, install this plugin and let it run in the background. Each time you try to submit a form in the<br />\nadmin pages (e.g. updating a WooCommerce product with lots of variatrions) this plugin will check that the<br />\nnumber of form parameters you are about to submit does not exceed the server limit. If it does, then it<br />\nwill inform you and give you the opportunity to postpone the submit while you increase the server settings.<br />\nThe link above describes how to set the limits on the server. More details in the FQAs.</p>\n<p>This plugin has been tested against PHP5.4 but is written to be compatible with PHP5.3. The project repository is here:</p>\n<p><a href=\"https://github.com/academe/wp-max-submit-protect\" rel=\"nofollow ugc\">https://github.com/academe/wp-max-submit-protect</a></p>\n<p>Note: turning on the Gravity Forms&#8217; &#8220;&#8221;No-Conflict Mode&#8221; will disable this plugin. You may have reasons for using that setting, but it will disable most other plugins, some of which may be security-related.</p>\n<p>Please let me know how this plugin works for you, whether you like it, and how it can be improved.</p>\n",
        "installation": "<p>Upload wp-max-submit-protect/ to the <code>/wp-content/plugins/</code> directory or wp-max-submit-protect-x.y.z.zip through the &#8220;Add Plugins&#8221; administration page,<br />\nor install from wordpress.org by searching for &#8220;WP Max Submit Protect&#8221;.</p>\n",
        "faq": "\n<h4>Who is this plugin for?</h4>\n<p>\n<p>Any WordPress site that uses forms which have lots of fields. For example, a WooCommerce site containing products<br />\nwith many variations.</p>\n</p>\n<h4>Is this just for WooCommerce sites?</h4>\n<p>\n<p>No! Any WordPress application that submits big forms can benefit from the protection this plugin offers.<br />\nSites with multi-page forms implemented through GravityForms could use this.</p>\n</p>\n<h4>Are there any configuration options?</h4>\n<p>\n<p>Through the plugin no; you just install and go. There may be some server settings to update,<br />\nand the purpose of this plugin is to warn you about those.</p>\n</p>\n<h4>What are the PHP.ini settings that may need to be changed?</h4>\n<p>\n<p>The PHP ini settings that could affect the data in large forms are:</p>\n<ul>\n<li>max_input_vars</li>\n<li>suhosin.post.max_vars</li>\n<li>suhosin.request.max_vars</li>\n</ul>\n<p>You may have all, some or none of these settings configured. If none are set, then max_input_vars<br />\nwill default to 1000. This is certainly too low for some e-commerce plugins.</p>\n</p>\n\n",
        "changelog": "<h4>Version 1.1.2</h4>\n<ul>\n<li>Issue #10: Disable the inline JS in the header if the enqueued JS library link has not completed. This can happen if another plugin (e.g. Gravity Forms) disables the JS for all other plugins to avoid having to play nicely with them. This worries me.</li>\n</ul>\n<h4>Version 1.1.1</h4>\n<ul>\n<li>Remove check of suhosin.get.max_vars as we are only interested in POST forms.</li>\n<li>Change the form selector to limit only to POST forms.</li>\n</ul>\n<h4>Version 1.1.0</h4>\n<ul>\n<li>Upgraded jquery.maxsubmit.js to 1.2.1 containing some substantial rewrites</li>\n</ul>\n<h4>Version 1.0.7</h4>\n<ul>\n<li>Upgraded jquery.maxsubmit.js to 1.1.3 to fix HTML5 input field matching</li>\n</ul>\n<h4>Version 1.0.6</h4>\n<ul>\n<li>Fixed JS syntax error that Chrome was throwing up.</li>\n</ul>\n<h4>Version 1.0.5</h4>\n<ul>\n<li>Ticket #7 Suppress warning message if no options set at all on the server.</li>\n</ul>\n<h4>Version 1.0.4</h4>\n<ul>\n<li>Update the jQuery maxsubmit plugin to 1.1.0</li>\n</ul>\n<h4>Version 1.0.3</h4>\n<ul>\n<li>Issue #1 (this readme.txt)</li>\n</ul>\n<h4>Version 1.0.2</h4>\n<ul>\n<li>Bugfix to 1.0.1</li>\n</ul>\n<h4>Version 1.0.1</h4>\n<ul>\n<li>Issue #2 and make all text translatable.</li>\n</ul>\n<h4>Version 1.0.0</h4>\n<ul>\n<li>Initial release.</li>\n</ul>\n"
    },
    "short_description": "Prevent large forms being submitted that may blow the server&#039;s field count limit and lose data.",
    "description": "<p>Some appications, such as ecommerce sites, can have administration forms that submit well over a thousand<br />\nparameters. PHP, by default, is set to accept only one thousand parameters and so some of the submitted data can get lost.</p>\n<p>Most applications don&#8217;t check whether they received everything, and so data can get broken easily and silently.<br />\nA WooCommerce product with 40 variations can have over 1300 submitted form items, and when saving the product you have no idea that much of that data is being discarded.</p>\n<p>Luckily <a href=\"http://docs.woothemes.com/document/problems-with-large-amounts-of-data-not-saving-variations-rates-etc/\" rel=\"nofollow ugc\">the maximum number of accepted parameters can be changed in php.ini</a><br />\nThe problem is, many site owners have no idea this needs to be done until it is too late and their application,<br />\nfor example their WooCommerce store, has lost half its product variations.</p>\n<p>If using php.ini on your site, the file needs to be in the /wp-admin directory as that is where the admin forms are submitted to.</p>\n<p>To protect yourself and make sure the server limit does not catch<br />\nyou unawares, install this plugin and let it run in the background. Each time you try to submit a form in the<br />\nadmin pages (e.g. updating a WooCommerce product with lots of variatrions) this plugin will check that the<br />\nnumber of form parameters you are about to submit does not exceed the server limit. If it does, then it<br />\nwill inform you and give you the opportunity to postpone the submit while you increase the server settings.<br />\nThe link above describes how to set the limits on the server. More details in the FQAs.</p>\n<p>This plugin has been tested against PHP5.4 but is written to be compatible with PHP5.3. The project repository is here:</p>\n<p><a href=\"https://github.com/academe/wp-max-submit-protect\" rel=\"nofollow ugc\">https://github.com/academe/wp-max-submit-protect</a></p>\n<p>Note: turning on the Gravity Forms&#8217; &#8220;&#8221;No-Conflict Mode&#8221; will disable this plugin. You may have reasons for using that setting, but it will disable most other plugins, some of which may be security-related.</p>\n<p>Please let me know how this plugin works for you, whether you like it, and how it can be improved.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.1.2.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/wp-max-submit-protect/assets/screenshot-1.png?rev=1196971",
            "caption": "An example of the message that appears if you try to submit more POST parameters than the server is able to accept."
        }
    ],
    "tags": {
        "data-integrity": "data-integrity",
        "forms": "forms",
        "woocommerce": "woocommerce"
    },
    "stable_tag": "1.1.2",
    "versions": {
        "1.0.3": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.0.3.zip",
        "1.0.4": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.0.4.zip",
        "1.0.5": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.0.5.zip",
        "1.0.6": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.0.6.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.1.0.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.1.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wp-max-submit-protect.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=B4STZL8F5WHK6",
    "banners": {
        "low": "https://ps.w.org/wp-max-submit-protect/assets/banner-772x250.png?rev=1196971",
        "high": "https://ps.w.org/wp-max-submit-protect/assets/banner-1544x500.png?rev=1196971"
    },
    "icons": {
        "1x": "https://ps.w.org/wp-max-submit-protect/assets/icon-128x128.png?rev=1197427",
        "2x": "https://ps.w.org/wp-max-submit-protect/assets/icon-256x256.png?rev=1197427"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}