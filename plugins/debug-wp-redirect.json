{
    "name": "Debug wp_redirect()",
    "slug": "debug-wp-redirect",
    "version": "2.1.2",
    "author": "<a href=\"https://www.scottkclark.com/\">Scott Kingsley Clark</a>",
    "author_profile": "https://profiles.wordpress.org/sc0ttkclark/",
    "contributors": {
        "sc0ttkclark": {
            "profile": "https://profiles.wordpress.org/sc0ttkclark/",
            "avatar": "https://secure.gravatar.com/avatar/98a5ff37f01f66062ddeba64331a26b9?s=96&d=monsterid&r=g",
            "display_name": "Scott Kingsley Clark"
        }
    },
    "requires": "4.5",
    "tested": "6.1.7",
    "requires_php": "5.6",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 96,
    "ratings": {
        "5": 4,
        "4": 1,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 5,
    "support_url": "https://wordpress.org/support/plugin/debug-wp-redirect/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 200,
    "downloaded": 9341,
    "last_updated": "2022-09-09 15:52:00",
    "added": "2013-02-28",
    "homepage": "https://www.scottkclark.com/",
    "sections": {
        "description": "<p><em>Important:</em> It is not recommended you leave debugging enabled when you&#8217;re done, the debug information exposes file paths of files as well as PHP arguments passed into functions from the PHP <code>debug_backtrace()</code> which may contain sensitive information.</p>\n<p>This is useful for those times when you have a lot of plugins / theme functions interacting that cause an unknown redirect. This tool helps you figure out what is redirecting and where it&#8217;s redirecting at in the code.</p>\n<p>This plugin outputs information about each <code>wp_redirect()</code> and <code>wp_safe_redirect()</code> call done on the front and in the admin area of a site.</p>\n<h4>Usage: Enabling with the setting</h4>\n<p>You can enable redirect debugging by going to <code>Settings &gt; Debug wp_redirect()</code> on your site or in your network settings (if network activated). You have the option to enable debugging for frontend requests and/or admin dashboard requests. You also have the ability to only show debugging if the person is logged in or is an admin.</p>\n<p>If you encounter problems with this plugin blocking redirects you need for logging in or being able to disable the redirect, simply rename the plugin or define this in your wp-config.php file: <code>define( 'DEBUG_WP_REDIRECT', false );</code></p>\n<h4>Usage: Enabling through wp-config.php</h4>\n<p>You can define constants in your wp-config.php file to enable redirect handling for frontend / admin dashboard requests. Constants override any options set in the admin settings page.</p>\n<ul>\n<li>To enable redirect debugging on the frontend of a site: <code>define( 'DEBUG_WP_REDIRECT', true );</code></li>\n<li>To enable redirect debugging in the admin dashboard of a site: <code>define( 'DEBUG_WP_REDIRECT_ADMIN', true );</code></li>\n<li>To only show redirect debugging to logged-in admins of a site: <code>define( 'DEBUG_WP_REDIRECT_LOGGED_IN_ADMIN', true );</code></li>\n<li>To only show redirect debugging to logged-in users of a site: <code>define( 'DEBUG_WP_REDIRECT_LOGGED_IN', true );</code></li>\n<li>To only show redirect debugging to logged-in user ID(s) of a site: <code>define( 'DEBUG_WP_REDIRECT_LOGGED_IN_USER_ID', true );</code></li>\n</ul>\n<h4>Usage: Enabling debugging through PHP in your own code</h4>\n<p>You can enable/disable debugging when you have your own code you want to start/stop debugging after a certain point.</p>\n<p>These functions will start/stop debugging the redirects whether it&#8217;s on a frontend or admin dashboard request.</p>\n<ul>\n<li>Enable debugging: <code>debug_wp_redirect_enable()</code></li>\n<li>Disable debugging: <code>debug_wp_redirect_disable()</code></li>\n</ul>\n<h4>Usage: As an mu-plugin</h4>\n<p>Take the debug-wp-redirect.php file and add it to your mu-plugin folder in a location like: <code>/wp-content/mu-plugins/debug-wp-redirect.php</code></p>\n<p>You won&#8217;t need any other files. The admin settings page will not show up so you will need to use mu-plugin mode specifically with the constants for wp-config.php as documented above.</p>\n<h4>Contribute to make this plugin better</h4>\n<p>You can help to make this plugin better through <a href=\"https://github.com/sc0ttkclark/debug-wp-redirect\" rel=\"nofollow ugc\">GitHub</a> or <a href=\"https://github.com/sponsors/sc0ttkclark\" rel=\"nofollow ugc\">sponsor my time</a>.</p>\n",
        "installation": "<ol>\n<li>Unpack the entire contents of this plugin zip file into your <code>wp-content/plugins/</code> folder locally</li>\n<li>Upload to your site</li>\n<li>Navigate to <code>wp-admin/plugins.php</code> on your site (your WP Admin plugin page)</li>\n<li>Activate this plugin</li>\n</ol>\n<p>OR you can just install it with WordPress by going to Plugins &gt;&gt; Add New &gt;&gt; and type this plugin&#8217;s name</p>\n",
        "changelog": "<h4>2.1.2 &#8211; September 9th, 2022</h4>\n<ul>\n<li>Fixed: Added more checks for <code>is_user_logged_in()</code> function calls to be able to handle earlier redirect debugging.</li>\n</ul>\n<h4>2.1.1 &#8211; September 9th, 2022</h4>\n<ul>\n<li>Added: Now you can use debug-wp-redirect.php as an mu-plugin more easily.</li>\n<li>Fixed: User ID setting was not saving properly.</li>\n<li>Fixed: Resolved problems with user-restricted debugging &#8212; sometimes redirects could not be debugged when requiring a logged in user because the plugin attempted to check for access before the user functions were available to use.</li>\n</ul>\n<h4>2.1 &#8211; March 11th, 2022</h4>\n<ul>\n<li>Added new option to only show debugging if the person is logged in as specific user ID(s).</li>\n</ul>\n<h4>2.0.1 &#8211; March 5th, 2022</h4>\n<ul>\n<li>Updated the text on the debug output so that it includes where the debugging is coming from and gives a handy link to admins to disable the debugging output.</li>\n<li>Updated compatibility with WordPress 5.9+</li>\n</ul>\n<h4>2.0 &#8211; June 4th, 2021</h4>\n<ul>\n<li>Implemented new functions <code>debug_wp_redirect_enable()</code> and <code>debug_wp_redirect_disable()</code> to easily turn debugging on programmatically.</li>\n<li>Added new functionality to allow showing debugging only to those who are logged in.</li>\n<li>Added settings and network settings pages for the plugin so it&#8217;s easier to configure.</li>\n<li>Now requiring PHP 5.6+</li>\n<li>Updated compatibility with WordPress 5.7.1</li>\n</ul>\n<h4>1.1</h4>\n<ul>\n<li>Default for plugin is not to output unless <code>DEBUG_WP_REDIRECT</code> is defined and set to true</li>\n<li>Updated plugin to allow for translations of text</li>\n<li>Cleaned up debugging output</li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Just a simple wp_redirect debug plugin, nothing fancy to see here</li>\n</ul>\n"
    },
    "short_description": "What the.. Where&#039;d that redirect come from? This plugin helps to uncover redirects as they happen.",
    "description": "<p><em>Important:</em> It is not recommended you leave debugging enabled when you&#8217;re done, the debug information exposes file paths of files as well as PHP arguments passed into functions from the PHP <code>debug_backtrace()</code> which may contain sensitive information.</p>\n<p>This is useful for those times when you have a lot of plugins / theme functions interacting that cause an unknown redirect. This tool helps you figure out what is redirecting and where it&#8217;s redirecting at in the code.</p>\n<p>This plugin outputs information about each <code>wp_redirect()</code> and <code>wp_safe_redirect()</code> call done on the front and in the admin area of a site.</p>\n<h4>Usage: Enabling with the setting</h4>\n<p>You can enable redirect debugging by going to <code>Settings &gt; Debug wp_redirect()</code> on your site or in your network settings (if network activated). You have the option to enable debugging for frontend requests and/or admin dashboard requests. You also have the ability to only show debugging if the person is logged in or is an admin.</p>\n<p>If you encounter problems with this plugin blocking redirects you need for logging in or being able to disable the redirect, simply rename the plugin or define this in your wp-config.php file: <code>define( 'DEBUG_WP_REDIRECT', false );</code></p>\n<h4>Usage: Enabling through wp-config.php</h4>\n<p>You can define constants in your wp-config.php file to enable redirect handling for frontend / admin dashboard requests. Constants override any options set in the admin settings page.</p>\n<ul>\n<li>To enable redirect debugging on the frontend of a site: <code>define( 'DEBUG_WP_REDIRECT', true );</code></li>\n<li>To enable redirect debugging in the admin dashboard of a site: <code>define( 'DEBUG_WP_REDIRECT_ADMIN', true );</code></li>\n<li>To only show redirect debugging to logged-in admins of a site: <code>define( 'DEBUG_WP_REDIRECT_LOGGED_IN_ADMIN', true );</code></li>\n<li>To only show redirect debugging to logged-in users of a site: <code>define( 'DEBUG_WP_REDIRECT_LOGGED_IN', true );</code></li>\n<li>To only show redirect debugging to logged-in user ID(s) of a site: <code>define( 'DEBUG_WP_REDIRECT_LOGGED_IN_USER_ID', true );</code></li>\n</ul>\n<h4>Usage: Enabling debugging through PHP in your own code</h4>\n<p>You can enable/disable debugging when you have your own code you want to start/stop debugging after a certain point.</p>\n<p>These functions will start/stop debugging the redirects whether it&#8217;s on a frontend or admin dashboard request.</p>\n<ul>\n<li>Enable debugging: <code>debug_wp_redirect_enable()</code></li>\n<li>Disable debugging: <code>debug_wp_redirect_disable()</code></li>\n</ul>\n<h4>Usage: As an mu-plugin</h4>\n<p>Take the debug-wp-redirect.php file and add it to your mu-plugin folder in a location like: <code>/wp-content/mu-plugins/debug-wp-redirect.php</code></p>\n<p>You won&#8217;t need any other files. The admin settings page will not show up so you will need to use mu-plugin mode specifically with the constants for wp-config.php as documented above.</p>\n<h4>Contribute to make this plugin better</h4>\n<p>You can help to make this plugin better through <a href=\"https://github.com/sc0ttkclark/debug-wp-redirect\" rel=\"nofollow ugc\">GitHub</a> or <a href=\"https://github.com/sponsors/sc0ttkclark\" rel=\"nofollow ugc\">sponsor my time</a>.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/debug-wp-redirect.2.1.2.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "debug": "debug",
        "redirects": "redirects",
        "wp_redirect": "wp_redirect"
    },
    "stable_tag": "2.1.2",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/debug-wp-redirect.1.0.zip",
        "1.1": "https://downloads.wordpress.org/plugin/debug-wp-redirect.1.1.zip",
        "2.0": "https://downloads.wordpress.org/plugin/debug-wp-redirect.2.0.zip",
        "2.0.1": "https://downloads.wordpress.org/plugin/debug-wp-redirect.2.0.1.zip",
        "2.1": "https://downloads.wordpress.org/plugin/debug-wp-redirect.2.1.zip",
        "2.1.1": "https://downloads.wordpress.org/plugin/debug-wp-redirect.2.1.1.zip",
        "2.1.2": "https://downloads.wordpress.org/plugin/debug-wp-redirect.2.1.2.zip",
        "trunk": "https://downloads.wordpress.org/plugin/debug-wp-redirect.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.scottkclark.com/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/debug-wp-redirect.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 96,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}