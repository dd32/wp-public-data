{
    "name": "Gnarly Frontend Page Sort",
    "slug": "gnarly-frontend-page-sorter",
    "version": "1.0",
    "author": "<a href=\"http://www.gnarlyapps.com\">Gnarly Apps</a>",
    "author_profile": "https://profiles.wordpress.org/olie480/",
    "contributors": {
        "olie480": {
            "profile": "https://profiles.wordpress.org/olie480/",
            "avatar": "https://secure.gravatar.com/avatar/defa9453b73418700f8e043e2f81b707?s=96&d=monsterid&r=g",
            "display_name": "olie480"
        }
    },
    "requires": "3.9",
    "tested": "3.9.40",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/gnarly-frontend-page-sorter/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1300,
    "last_updated": "2014-07-17 10:00pm GMT",
    "added": "2014-06-25",
    "homepage": "http://www.gnarlyapps.com",
    "sections": {
        "description": "<p>Gives user the ability to order sub-pages on the parent page from the frontend of WordPress.</p>\n<p>There are some backend plugins that do this, but I recently had a project that had about 30 parent pages, and those had sub-pages, and the sub-pages had sub-pages. We needed to find an alternative solution on the frontend because the majority of the plugins were drag and drop on the admin screen. This fixed this problem.</p>\n",
        "installation": "<p>This is the code I used to list the child pages on a parent page. I changed the sort_column to menu_order instead of the default post_title, and the sort_order is asc.</p>\n<pre><code>&lt;?php\n\n    global $post;\n\n    $args = array(          \n        'hierarchical'  =&gt; 0,                       \n        'child_of'      =&gt; 0,\n        'parent'        =&gt; $post-&gt;ID,           \n        'number'        =&gt; '',\n        'sort_order'    =&gt;  'asc',\n        'sort_column'   =&gt;  'menu_order'\n    );\n\n    $child_pages = get_pages( $args );  \n?&gt;\n</code></pre>\n<p>With the Child pages, I then created a custom loop (an example will be included later on in a separate file. I made 2 functions to spit out the pages of the parent page). From there I can add the gnarly tags to the parent container and the child items.</p>\n<p>When you install the plugin, just find the template that controls your pages loop and make the following modifications. This example uses Twenty-Fourteen as an example.</p>\n<pre><code>&lt;div role=\"main\" class=\"site-content\" id=\"content\" data-gnarly-sort='true'&gt;\n\n    &lt;article data-gnarly-id=\"58\" class=\"page-58 page\" id=\"page-58\"&gt;\n        &lt;div class=\"entry-content\"&gt;\n            &lt;h2&gt;Your Page Title&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;!-- .entry-content --&gt;\n    &lt;/article&gt;\n    &lt;!-- #page-## --&gt;    \n\n    &lt;article data-gnarly-id=\"57\" class=\"page-57 page\" id=\"page-57\"&gt;\n        &lt;div class=\"entry-content\"&gt;\n            &lt;h2&gt;Your Page Title&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;!-- .entry-content --&gt;\n    &lt;/article&gt;\n    &lt;!-- #page-## --&gt;    \n\n    &lt;article data-gnarly-id=\"56\" class=\"page-56 page\" id=\"page-56\"&gt;\n        &lt;div class=\"entry-content\"&gt;\n            &lt;h2&gt;Your Page Title&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;!-- .entry-content --&gt;\n    &lt;/article&gt;\n    &lt;!-- #page-## --&gt;    \n\n    &lt;article data-gnarly-id=\"55\" class=\"page-55 page\" id=\"page-55\"&gt;\n        &lt;div class=\"entry-content\"&gt;\n            &lt;h2&gt;Your Page Title&lt;/h2&gt;\n        &lt;/div&gt;\n        &lt;!-- .entry-content --&gt;\n    &lt;/article&gt;\n    &lt;!-- #page-## --&gt;    \n\n&lt;/div&gt;\n</code></pre>\n<p>Notice the following code</p>\n<pre><code>&lt;div role=\"main\" class=\"site-content\" id=\"content\" data-gnarly-sort=\"true\"&gt;\n</code></pre>\n<p>The data-gnarly-sort=&#8217;true&#8217; attribute tag. This tells the plug-in that it is the parent element of the sorter.</p>\n<p>On each of the pages that get spit out, you must include the data-gnarly-id=&#8221;58&#8243; in order to tell the sorter that it is a page item that will be drag and drop sorted using the page ID. This attribute is important because it tells wordpress what position it&#8217;s in when you drag and drop each element by using the page ID. You can echo out the page ID by using the following PHP pre in the loop.</p>\n<pre><code>&lt;article data-gnarly-id=\"&lt;?php the_ID(); ?&gt;\" class=\"page-58 page\" id=\"page-58\"&gt; \n</code></pre>\n<h4>Minimum Requirements</h4>\n<ul>\n<li>WordPress 3.9 or greater</li>\n<li>PHP version 5.2.4 or greater</li>\n<li>MySQL version 5.0 or greater</li>\n</ul>\n",
        "faq": "\n<h4>I installed the plugin, I don&#8217;t know what to do.</h4>\n<p>\n<p>Please follow the instructions in the readme.txt file in order to set up the plugin correctly. Everyone&#8217;s themes are different, and I am currently working on a better solution to specify the parent and child elements</p>\n</p>\n\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Updated admin check in plugins main file</li>\n</ul>\n<h4>1.0.0 &#8211; 06/24/2014</h4>\n<ul>\n<li>Initial Release</li>\n</ul>\n"
    },
    "short_description": "Drag &amp; Drop sorting of pages on the front end of your wordpress site. Great for sites that use get_pages to list sub pages of a parent page.",
    "description": "<p>Gives user the ability to order sub-pages on the parent page from the frontend of WordPress.</p>\n<p>There are some backend plugins that do this, but I recently had a project that had about 30 parent pages, and those had sub-pages, and the sub-pages had sub-pages. We needed to find an alternative solution on the frontend because the majority of the plugins were drag and drop on the admin screen. This fixed this problem.</p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/gnarly-frontend-page-sorter.1.0.zip",
    "upgrade_notice": {
        "": "<ul>\n<li>No Upgrade Notices at this time. Initial Release</li>\n</ul>"
    },
    "screenshots": [],
    "tags": {
        "admin": "admin",
        "frontend": "Frontend",
        "page-sorting": "page sorting",
        "pages": "pages"
    },
    "stable_tag": "1.0",
    "versions": {
        "0.12": "https://downloads.wordpress.org/plugin/gnarly-frontend-page-sorter.0.12.zip",
        "1.0": "https://downloads.wordpress.org/plugin/gnarly-frontend-page-sorter.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/gnarly-frontend-page-sorter.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://www.paypal.com/us/cgi-bin/webscr?cmd=_flow&SESSION=b-6EV4MS6gQ9Wgixrs6Hgv4aiG9ax1HjZjqOAX6RltwK92g5MxPQWNvHqxa&dispatch=50a222a57771920b6a3d7b606239e4d529b525e0b7e69bf0224adecfb0124e9b61f737ba21b081988ee87121ca8032a43984da2b890102b1",
    "banners": {
        "low": "https://ps.w.org/gnarly-frontend-page-sorter/assets/banner-772x250.png?rev=950670",
        "high": "https://ps.w.org/gnarly-frontend-page-sorter/assets/banner-1544x500.png?rev=950670"
    },
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/gnarly-frontend-page-sorter_fdfdfd.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}