{
    "name": "Wrapping ShortCode",
    "slug": "wrapping-shortcode",
    "version": "0.1.0",
    "author": "Asumaru",
    "author_profile": "https://profiles.wordpress.org/asumaru/",
    "contributors": {
        "asumaru": {
            "profile": "https://profiles.wordpress.org/asumaru/",
            "avatar": "https://secure.gravatar.com/avatar/f2b08c0f0d903cf16cb6464bed65767d?s=96&d=monsterid&r=g",
            "display_name": "Asumaru"
        }
    },
    "requires": "5.9",
    "tested": "6.1.7",
    "requires_php": "7.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/wrapping-shortcode/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 1790,
    "last_updated": "2022-11-08 07:01:00",
    "added": "2022-11-08",
    "homepage": "https://asumaru.com/plugins/asm-wrapping-shortcode-block/",
    "sections": {
        "description": "<p>Are you using shortcodes?<br />\nThere is also a standard shortcode block in the default block editor.<br />\nBut it can&#8217;t be used without writing code.<br />\nAlso, you can&#8217;t enclose other blocks in shortcodes, so you have to write the HTML code.</p>\n<p>This plugin provides a shortcode block. It is not just a shortcode, it is a shortcode block that wraps other blocks.</p>\n<p>** Easy configuration **</p>\n<p>This is available by simply selecting a shortcode that you have enabled in WordPress.<br />\nShortcode arguments are also configurable.<br />\nThese are configurable in the block editor sidebar.<br />\nAlso, the selected shortcode name is displayed in the block on the editor.</p>\n<p>** Nestable blocks **</p>\n<p>This block can place blocks such as &#8220;paragraph&#8221; and &#8220;image&#8221;.<br />\nThis blocks can also be nested.<br />\nFor example, it is possible to repeat headings and paragraphs in combination with shortcodes that can list custom fields.</p>\n<p>This block can set a &#8220;Comment Label&#8221;.<br />\nWrite the specified HTML comment out before and after this block.<br />\nUseful for design adjustments.<br />\nIf you don&#8217;t set it, it won&#8217;t be written in the HTML source.</p>\n<p>** replacement keyword **</p>\n<p>This block has some replacement keywords.<br />\nKeywords are used to display shortcode information.<br />\nFor example, if you enter &#8220;%shortcode%&#8221; in the Additional CSS class, the selected shortcode name will be displayed in the CSS class.</p>\n<p>This block itself does not output HTML tags.<br />\nPlease use it together with &#8220;Group&#8221; block.</p>\n<p>This plugin includes &#8220;commentout&#8221; and &#8220;meta-loop&#8221; as sample shortcodes.</p>\n<p>There are many other shortcodes in the world.<br />\nTake advantage of useful shortcode assets in this block.</p>\n<h3>Usage</h3>\n<h4>Child blocks</h4>\n<p>Child blocks are optional.<br />\nChild blocks can be placed inside the block.<br />\nIt is also possible to use dynamic blocks.<br />\nThe &#8220;Wrapping ShortCode&#8221; itself is also available for child blocks.<br />\nIt is possible to use replacement keywords within child blocks.<br />\n&#8220;Wrapping ShortCode&#8221; itself has no HTML tags.<br />\nUse with &#8220;Group&#8221; block</p>\n<h4>ShortCode</h4>\n<p>List valid shortcodes within your WordPress site.<br />\nSelect the shortcode you want to use.</p>\n<p>*In the Pro version (paid), a shortcode filtering function is under development.</p>\n<h4>Arguments</h4>\n<p>Arguments are optional.<br />\nArguments can be set for the specified shortcode.<br />\nIt is okay to mix unkeyed and keyed arguments.<br />\nIt also supports the presence or absence of double quotes.<br />\nIt is possible to use replacement keywords in arguments.</p>\n<h4>Commnet labels</h4>\n<p>Commnet labels are optional.<br />\nWrite the specified HTML comment out before and after this block.<br />\nIf you don&#8217;t set it, it won&#8217;t be written in the HTML source.<br />\nIt is possible to use replacement keywords in comment labels.</p>\n<h4>Additional CSS Classes</h4>\n<p>Additional CSS classes are standard items.<br />\nAdditional CSS classes are optional.<br />\nIt is possible to use replacement keywords within additional CSS classes.</p>\n<h4>Replacement keywords</h4>\n<p>Replace any of the following replacement keywords in the block with the appropriate values.<br />\nHowever, if the shortcodes or child blocks is nested, the replacement keyword will take precedence over the shortcodes or child blocks.<br />\n* %shortcode%: Selected shortcode name<br />\n* %shortcodeAttrs%: Arguments of the set shortcode<br />\n* %shortcodeStr%: Generated shortcode string<br />\n* %wscClass%: Additional CSS class</p>\n<h3>Shortcode: commentout</h3>\n<h4>Overview</h4>\n<p>[commentout (arguments) ]comment here[/commentout]</p>\n<p>Writes the contents of the shortcode as HTML comments out.</p>\n<h4>Arguments</h4>\n<ul>\n<li>trim_br: Remove &lt; br &gt; before and after content. Default &#8220;yes&#8221;</li>\n<li>do_trim: Remove whitespace before and after content. Default &#8220;no&#8221;</li>\n<li>do_shortcode: Run a content shortcode. Default &#8220;yes&#8221;</li>\n<li>esc_html: Escape HTML tags in content. Default &#8220;yes&#8221;</li>\n</ul>\n<h3>Shortcode: meta-loop</h3>\n<h4>Overview</h4>\n<p>[meta-loop (arguments) ]template HTML[/meta-loop]</p>\n<p>Template and repeat the content of her shortcode by listing the custom field keys for the post.</p>\n<p>eg. [meta-loop sample1 sample2 sample3 order=random]</p>\n<p>#%number%) %key%:%value%</p>\n<p>[/meta-loop]</p>\n<h4>Arguments</h4>\n<ul>\n<li>(meta key): The key of the custom field to output. Multiple allowed. Sequential number if omitted.</li>\n<li>start: Output start position. 0 at the beginning. Default &#8220;0&#8221;</li>\n<li>end: Output end position. Number of keys if null. Default &#8220;null&#8221;</li>\n<li>step: position increment/decrement value. Default &#8220;1&#8221;</li>\n<li>lines: Number of outputs. Default &#8220;null&#8221;. null is output until the end. 0 is hidden.</li>\n<li>order: direction of sorting. default &#8220;none&#8221;<br />\n** none: no sorting.<br />\n** asc: Order sort.<br />\n** desc: Reverse sort.<br />\n** random: Random.</li>\n<li>orderby: what to sort<br />\n** counter: output position<br />\n** metakey: the key of the custom field<br />\n** metavalue: custom field value</li>\n<li>replaceNumber: Replacement keyword for output order. Default &#8220;%number%&#8221;</li>\n<li>replaceCounter: replacement keyword for output position. Default &#8220;%counter%&#8221;</li>\n<li>repkaceKey: Replacement keyword for the key of custom field. Default &#8220;%key%&#8221;</li>\n<li>repkaceValue: Replacement keyword for custom field value. Default &#8220;%value%&#8221;</li>\n<li>noContent: Alternate content if no template is specified.</li>\n<li>nl2br: Whether to convert BR tags when there is a newline in the custom field value. Default &#8220;yes&#8221;.</li>\n</ul>\n<h4>Alternate content</h4>\n<p>&lt; div class=&#8221;no-%number%&#8221;&gt;%key%:%value%</p>\n<h4>replacement keyword</h4>\n<ul>\n<li>%counter%: Repeated number starting from 0</li>\n<li>%number%: Repeated number starting from 1</li>\n<li>%key%: the key of the custom field</li>\n<li>%value%: custom field value</li>\n</ul>\n",
        "installation": "<ol>\n<li>Upload the plugin files to the <code>/wp-content/plugins/asm-wrapping-shortcode-block</code> directory, or install the plugin through the WordPress plugins screen directly.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; screen in WordPress</li>\n<li>Edit a post or page, select Block Editor and add a &#8220;Wrapping ShortCode&#8221; block.</li>\n<li>Select the block and set &#8220;Shortcode&#8221; and &#8220;Arguments&#8221; from &#8220;Settings&#8221;.</li>\n<li>Place some blocks inside the block.</li>\n</ol>\n",
        "faq": "\n<dt id='what%20happens%20if%20i%20don%27t%20specify%20a%20shortcode%3F'>\nWhat happens if I don&#8217;t specify a shortcode?\n</h4>\n<p>\n<p>The blocks placed within the block will be displayed.</p>\n</p>\n<dt id='what%20happens%20if%20you%20don%27t%20set%20the%20arguments%3F'>\nWhat happens if you don&#8217;t set the arguments?\n</h4>\n<p>\n<p>Arguments are optional.<br />\nFollow the shortcode you specify.</p>\n</p>\n<dt id='what%20happens%20if%20there%20are%20no%20child%20blocks%3F'>\nWhat happens if there are no child blocks?\n</h4>\n<p>\n<p>Child blocks are optional.<br />\nnothing happens</p>\n</p>\n<dt id='what%20is%20the%20icon%3F'>\nWhat is the icon?\n</h4>\n<p>\n<p>It is a Japanese food &#8220;Onigiri&#8221;(rice ball).</p>\n</p>\n<dt id='why%20is%20the%20icon%20%22onigiri%22%3F'>\nWhy is the icon &#8220;Onigiri&#8221;?\n</h4>\n<p>\n<p>Onigiri is often wrapped in seaweed.<br />\nThe &#8220;rice&#8221; inside is the child blocks.<br />\nThe &#8220;seaweed&#8221; that he wraps around is likened to the shortcode.</p>\n</p>\n<dt id='do%20you%20support%20unkeyed%20and%20keyed%20arguments%3F'>\nDo you support unkeyed and keyed arguments?\n</h4>\n<p>\n<p>It is okay to mix unkeyed and keyed arguments.<br />\nThey are processed separately internally.<br />\nIt also supports the presence or absence of double quotes.</p>\n</p>\n<dt id='can%20replacement%20keywords%20be%20used%20in%20arguments%2C%20comment%20labels%2C%20and%20additional%20css%20classes%3F'>\nCan replacement keywords be used in arguments, comment labels, and additional CSS classes?\n</h4>\n<p>\n<p>Yes.<br />\nHowever, if you nest this block, the replacement keyword takes precedence over the child blocks.</p>\n</p>\n\n",
        "changelog": "<h4>0.1.0</h4>\n<ul>\n<li>Release</li>\n</ul>\n"
    },
    "short_description": "This plugin provides a shortcode block. It is not just a shortcode, it is a shortcode block that wraps other blocks.",
    "description": "<p>Are you using shortcodes?<br />\nThere is also a standard shortcode block in the default block editor.<br />\nBut it can&#8217;t be used without writing code.<br />\nAlso, you can&#8217;t enclose other blocks in shortcodes, so you have to write the HTML code.</p>\n<p>This plugin provides a shortcode block. It is not just a shortcode, it is a shortcode block that wraps other blocks.</p>\n<p>** Easy configuration **</p>\n<p>This is available by simply selecting a shortcode that you have enabled in WordPress.<br />\nShortcode arguments are also configurable.<br />\nThese are configurable in the block editor sidebar.<br />\nAlso, the selected shortcode name is displayed in the block on the editor.</p>\n<p>** Nestable blocks **</p>\n<p>This block can place blocks such as &#8220;paragraph&#8221; and &#8220;image&#8221;.<br />\nThis blocks can also be nested.<br />\nFor example, it is possible to repeat headings and paragraphs in combination with shortcodes that can list custom fields.</p>\n<p>This block can set a &#8220;Comment Label&#8221;.<br />\nWrite the specified HTML comment out before and after this block.<br />\nUseful for design adjustments.<br />\nIf you don&#8217;t set it, it won&#8217;t be written in the HTML source.</p>\n<p>** replacement keyword **</p>\n<p>This block has some replacement keywords.<br />\nKeywords are used to display shortcode information.<br />\nFor example, if you enter &#8220;%shortcode%&#8221; in the Additional CSS class, the selected shortcode name will be displayed in the CSS class.</p>\n<p>This block itself does not output HTML tags.<br />\nPlease use it together with &#8220;Group&#8221; block.</p>\n<p>This plugin includes &#8220;commentout&#8221; and &#8220;meta-loop&#8221; as sample shortcodes.</p>\n<p>There are many other shortcodes in the world.<br />\nTake advantage of useful shortcode assets in this block.</p>\n<h3>Usage</h3>\n<h4>Child blocks</h4>\n<p>Child blocks are optional.<br />\nChild blocks can be placed inside the block.<br />\nIt is also possible to use dynamic blocks.<br />\nThe &#8220;Wrapping ShortCode&#8221; itself is also available for child blocks.<br />\nIt is possible to use replacement keywords within child blocks.<br />\n&#8220;Wrapping ShortCode&#8221; itself has no HTML tags.<br />\nUse with &#8220;Group&#8221; block</p>\n<h4>ShortCode</h4>\n<p>List valid shortcodes within your WordPress site.<br />\nSelect the shortcode you want to use.</p>\n<p>*In the Pro version (paid), a shortcode filtering function is under development.</p>\n<h4>Arguments</h4>\n<p>Arguments are optional.<br />\nArguments can be set for the specified shortcode.<br />\nIt is okay to mix unkeyed and keyed arguments.<br />\nIt also supports the presence or absence of double quotes.<br />\nIt is possible to use replacement keywords in arguments.</p>\n<h4>Commnet labels</h4>\n<p>Commnet labels are optional.<br />\nWrite the specified HTML comment out before and after this block.<br />\nIf you don&#8217;t set it, it won&#8217;t be written in the HTML source.<br />\nIt is possible to use replacement keywords in comment labels.</p>\n<h4>Additional CSS Classes</h4>\n<p>Additional CSS classes are standard items.<br />\nAdditional CSS classes are optional.<br />\nIt is possible to use replacement keywords within additional CSS classes.</p>\n<h4>Replacement keywords</h4>\n<p>Replace any of the following replacement keywords in the block with the appropriate values.<br />\nHowever, if the shortcodes or child blocks is nested, the replacement keyword will take precedence over the shortcodes or child blocks.<br />\n* %shortcode%: Selected shortcode name<br />\n* %shortcodeAttrs%: Arguments of the set shortcode<br />\n* %shortcodeStr%: Generated shortcode string<br />\n* %wscClass%: Additional CSS class</p>\n<h3>Shortcode: commentout</h3>\n<h4>Overview</h4>\n<p>[commentout (arguments) ]comment here[/commentout]</p>\n<p>Writes the contents of the shortcode as HTML comments out.</p>\n<h4>Arguments</h4>\n<ul>\n<li>trim_br: Remove &lt; br &gt; before and after content. Default &#8220;yes&#8221;</li>\n<li>do_trim: Remove whitespace before and after content. Default &#8220;no&#8221;</li>\n<li>do_shortcode: Run a content shortcode. Default &#8220;yes&#8221;</li>\n<li>esc_html: Escape HTML tags in content. Default &#8220;yes&#8221;</li>\n</ul>\n<h3>Shortcode: meta-loop</h3>\n<h4>Overview</h4>\n<p>[meta-loop (arguments) ]template HTML[/meta-loop]</p>\n<p>Template and repeat the content of her shortcode by listing the custom field keys for the post.</p>\n<p>eg. [meta-loop sample1 sample2 sample3 order=random]</p>\n<p>#%number%) %key%:%value%</p>\n<p>[/meta-loop]</p>\n<h4>Arguments</h4>\n<ul>\n<li>(meta key): The key of the custom field to output. Multiple allowed. Sequential number if omitted.</li>\n<li>start: Output start position. 0 at the beginning. Default &#8220;0&#8221;</li>\n<li>end: Output end position. Number of keys if null. Default &#8220;null&#8221;</li>\n<li>step: position increment/decrement value. Default &#8220;1&#8221;</li>\n<li>lines: Number of outputs. Default &#8220;null&#8221;. null is output until the end. 0 is hidden.</li>\n<li>order: direction of sorting. default &#8220;none&#8221;<br />\n** none: no sorting.<br />\n** asc: Order sort.<br />\n** desc: Reverse sort.<br />\n** random: Random.</li>\n<li>orderby: what to sort<br />\n** counter: output position<br />\n** metakey: the key of the custom field<br />\n** metavalue: custom field value</li>\n<li>replaceNumber: Replacement keyword for output order. Default &#8220;%number%&#8221;</li>\n<li>replaceCounter: replacement keyword for output position. Default &#8220;%counter%&#8221;</li>\n<li>repkaceKey: Replacement keyword for the key of custom field. Default &#8220;%key%&#8221;</li>\n<li>repkaceValue: Replacement keyword for custom field value. Default &#8220;%value%&#8221;</li>\n<li>noContent: Alternate content if no template is specified.</li>\n<li>nl2br: Whether to convert BR tags when there is a newline in the custom field value. Default &#8220;yes&#8221;.</li>\n</ul>\n<h4>Alternate content</h4>\n<p>&lt; div class=&#8221;no-%number%&#8221;&gt;%key%:%value%</p>\n<h4>replacement keyword</h4>\n<ul>\n<li>%counter%: Repeated number starting from 0</li>\n<li>%number%: Repeated number starting from 1</li>\n<li>%key%: the key of the custom field</li>\n<li>%value%: custom field value</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/wrapping-shortcode.0.1.0.zip",
    "upgrade_notice": {
        "0.1.0": "<ul>\n<li>Release</li>\n</ul>"
    },
    "screenshots": [
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-1.png?rev=2813972",
            "caption": "Block icon in the block editor"
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-2.png?rev=2813972",
            "caption": "\"Wrapping ShortCode\" block immediately after placement"
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-3.png?rev=2813972",
            "caption": "Place \"headings\" and \"paragraphs\" in child blocks"
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-4.png?rev=2813972",
            "caption": "Select \"Shortcode\" and set \"Arguments\""
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-5.png?rev=2813972",
            "caption": "Describe each content of the child block"
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-6.png?rev=2813972",
            "caption": "Add \"sample1\", \"sample2\" and \"sample3\" to custom fields"
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-7.png?rev=2813972",
            "caption": "Output result"
        },
        {
            "src": "https://ps.w.org/wrapping-shortcode/assets/screenshot-8.png?rev=2813972",
            "caption": "HTML source"
        }
    ],
    "tags": {
        "block": "block",
        "commentout": "commentout",
        "group": "group",
        "postmeta": "postmeta",
        "shortcode": "shortcode"
    },
    "stable_tag": "0.1.0",
    "versions": {
        "0.1.0": "https://downloads.wordpress.org/plugin/wrapping-shortcode.0.1.0.zip",
        "trunk": "https://downloads.wordpress.org/plugin/wrapping-shortcode.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://asumaru.com/plugins/asm-wrapping-shortcode-block/",
    "banners": {
        "low": "https://ps.w.org/wrapping-shortcode/assets/banner-772x250.png?rev=2813972",
        "high": "https://ps.w.org/wrapping-shortcode/assets/banner-1544x500.png?rev=2813972"
    },
    "icons": {
        "1x": "https://ps.w.org/wrapping-shortcode/assets/icon.svg?rev=2813972",
        "svg": "https://ps.w.org/wrapping-shortcode/assets/icon.svg?rev=2813972"
    },
    "blocks": {
        "asm-wrapping-shortcode/asm-wrapping-shortcode-block": {
            "$schema": "https://schemas.wp.org/trunk/block.json",
            "apiVersion": 2,
            "name": "asm-wrapping-shortcode/asm-wrapping-shortcode-block",
            "version": "0.1.0",
            "title": "Wrapping ShortCode",
            "category": "widgets",
            "description": "This plugin provides a shortcode block. It is not just a shortcode, it is a shortcode block that wraps other blocks.",
            "keywords": [
                "asumaru",
                "wrapping",
                "shortcode"
            ],
            "attributes": {
                "shortcode": {
                    "type": "string",
                    "selector": ".wrapping-sc",
                    "default": ""
                },
                "comment": {
                    "type": "string",
                    "selector": ".wrapping-sc",
                    "default": ""
                },
                "options": {
                    "type": "string",
                    "selector": ".wrapping-sc"
                }
            },
            "example": {
                "attributes": {
                    "shortCode": "commentout",
                    "comment": "Please Comment"
                }
            },
            "supports": {
                "className": false,
                "customClassName": true,
                "html": true
            },
            "usesContext": [
                "content"
            ],
            "textdomain": "asm-wrapping-shortcode-block",
            "editorScript": "file:./index.js",
            "editorStyle": "file:./index.css",
            "style": "file:./style-index.css",
            "icon": ""
        }
    },
    "block_assets": [],
    "author_block_count": 1,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "wrapping-shortcode",
            "language": "ja",
            "version": "0.1.0",
            "updated": "2023-04-16 11:42:08",
            "package": "http://downloads.wordpress.org/translation/plugin/wrapping-shortcode/0.1.0/ja.zip"
        }
    ]
}