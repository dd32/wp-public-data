{
    "name": "Related Links",
    "slug": "related-links",
    "version": "1.7.1",
    "author": "<a href=\"http://wordpress.org/extend/plugins/related-links/\">Triggvy Gunderson</a>",
    "author_profile": "https://profiles.wordpress.org/chabis/",
    "contributors": {
        "chabis": {
            "profile": "https://profiles.wordpress.org/chabis/",
            "avatar": "https://secure.gravatar.com/avatar/361dee11b607ae7eb1b6e9aeb7bc42f2?s=96&d=monsterid&r=g",
            "display_name": "piffpaffpuff"
        }
    },
    "requires": "3.0",
    "tested": "3.4.2",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 86,
    "ratings": {
        "5": 3,
        "4": 2,
        "3": 1,
        "2": 0,
        "1": 0
    },
    "num_ratings": 6,
    "support_url": "https://wordpress.org/support/plugin/related-links/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 400,
    "downloaded": 17783,
    "last_updated": "2012-09-12 09:15:00",
    "added": "2011-04-06",
    "homepage": "http://wordpress.org/extend/plugins/related-links/",
    "sections": {
        "description": "<p>Related Links gives you the possibility to manually link other posts to your current post. But you can also link pages, media or any custom post-type. And in addition you can use custom urls to link to external files. The plugin adds a Metabox to the writing page with a list of all available content.</p>\n<p>Features:</p>\n<ul>\n<li>Shows a list of all available content in a Metabox on the writing page</li>\n<li>Multiple links can be selected</li>\n<li>Link order can be changed through drag and drop</li>\n<li>Custom URLs can be added</li>\n<li>Search field to quickly find a link</li>\n<li>Simple theme integration with an included widget or <code>related_links()</code></li>\n<li>Works with custom post-types</li>\n<li>Settings to enable the post-types that should be shown in the Metabox</li>\n</ul>\n",
        "installation": "<ol>\n<li>Upload the <code>related-links</code> folder to the <code>/wp-content/plugins/</code> directory.</li>\n<li>Activate the plugin through the <code>Plugins</code> menu in WordPress.</li>\n<li>Set in the link types in <code>Related Links</code> under the <code>Settings</code> menu in WordPress.</li>\n<li>Place <code>&lt;?php related_links(); ?&gt;</code> in your templates.</li>\n</ol>\n",
        "faq": "\n<h4>How do I show the links in my theme?</h4>\n<p>\n<p>Use the <code>Related Links</code> widget to show a list of the related links.</p>\n</p>\n<h4>How do I show the links in a specific template?</h4>\n<p>\n<p>Use the <code>related_links()</code> function directly in your template files. This will return an unordered list with an <code>&lt;ul&gt;</code> wrapper. Use this code for example in your `content.php&#8217; template:</p>\n<pre><code>&lt;?php related_links(); ?&gt;\n</code></pre>\n</p>\n<h4>How can I modify the output of the link list?</h4>\n<p>\n<p>You need to use the <code>get_related_links()</code> function. A simple example that shows a list with all link names and the type of link:</p>\n<pre><code>&lt;?php $related_links = get_related_links(); ?&gt;\n&lt;ul&gt;\n    &lt;?php foreach ($related_links as $link): ?&gt;\n        &lt;li&gt;&lt;a href=\"&lt;?php echo $link['url']; ?&gt;\"&gt;&lt;?php echo $link['type']; ?&gt;: &lt;?php echo $link['title']; ?&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;?php endforeach; ?&gt;\n&lt;/ul&gt;\n</code></pre>\n</p>\n<h4>What are the properties returned by the `get_related_links()` function?</h4>\n<p>\n<p>The <code>get_related_links()</code> returns an array containing every related link. when you loop through this array every link consists of another array with the following keys:</p>\n<ul>\n<li>key <code>id</code>: equals to <code>$post-&gt;ID</code> or <code>null</code> for custom links</li>\n<li>key <code>url</code>: equals to <code>get_permalink()</code> or the manually entered url of a custom link</li>\n<li>key <code>title</code>: equals to <code>$post-&gt;post_title</code> or the manually entered title of a custom link</li>\n<li>key <code>type</code>: the <code>$post-&gt;post_type</code> or <code>null</code> for custom links</li>\n</ul>\n</p>\n<h4>How do I only show the links for a certain post_type in my theme?</h4>\n<p>\n<p>Set the <code>$post_type</code> in <code>get_related_links($post_type)</code> to <code>'post'</code>, <code>'page'</code> or any custom post-type. A simple example that show a list of links:</p>\n<pre><code>&lt;?php $related_links = get_related_links('page'); ?&gt;\n&lt;ul&gt;\n    &lt;?php foreach ($related_links as $link): ?&gt;\n        &lt;li&gt;&lt;a href=\"&lt;?php echo $link['url']; ?&gt;\"&gt;&lt;?php echo $link['type']; ?&gt;: &lt;?php echo $link['title']; ?&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;?php endforeach; ?&gt;\n&lt;/ul&gt;\n</code></pre>\n</p>\n<h4>How do I show the related links of another post (not the current one)?</h4>\n<p>\n<p>Set the <code>$post_id</code> in <code>get_related_links(null, $post_id)</code> to the id of the post. A simple example that show a list of links:</p>\n<pre><code>&lt;?php $related_links = get_related_links(null, 1); ?&gt;\n&lt;ul&gt;\n    &lt;?php foreach ($related_links as $link): ?&gt;\n        &lt;li&gt;&lt;a href=\"&lt;?php echo $link['url']; ?&gt;\"&gt;&lt;?php echo $link['type']; ?&gt;: &lt;?php echo $link['title']; ?&gt;&lt;/a&gt;&lt;/li&gt;\n    &lt;?php endforeach; ?&gt;\n&lt;/ul&gt;\n</code></pre>\n</p>\n<h4>How do I link directly to a media file?</h4>\n<p>\n<p>You need to check the <code>'type'</code> and then get with <code>wp_get_attachment_url()</code> the attachment url from the <code>'id'</code>.</p>\n<pre><code>&lt;?php $related_links = get_related_links(null, 1); ?&gt;\n&lt;ul&gt;\n&lt;?php foreach ($related_links as $link): ?&gt;\n    &lt;?php if ($link['type'] == 'attachment') :\n        $url = wp_get_attachment_url($link['id']);\n    else :\n        $url = $link['url'];\n    endif; ?&gt;\n    &lt;li&gt;&lt;a href=\"&lt;?php echo $url; ?&gt;\"&gt;&lt;?php echo $link['title']; ?&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;?php endforeach; ?&gt;\n&lt;/ul&gt;\n</code></pre>\n</p>\n<h4>How do show the type of a media file?</h4>\n<p>\n<p>You need to check the <code>'type'</code> and then get with <code>wp_get_attachment_url()</code> the attachment url from the <code>'id'</code>.</p>\n<pre><code>&lt;?php $related_links = get_related_links(null, 1); ?&gt;\n&lt;ul&gt;\n&lt;?php foreach ($related_links as $link): ?&gt;\n    &lt;?php \n    if ($link['type'] == 'attachment') :\n        $url = wp_get_attachment_url($link['id']);\n        $mime = explode('/', get_post_mime_type($link['id']));\n        $mime = $mime[sizeof($mime) - 1];           \n    else :\n        $url = $link['url'];\n        $mime = null;\n    endif; \n    ?&gt;\n    &lt;li&gt;&lt;a href=\"&lt;?php echo $url; ?&gt;\"&gt;&lt;?php echo $link['title']; ?&gt;&lt;?php echo isset($mime) ? ' (' . $mime . ')' : ''; ?&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;?php endforeach; ?&gt;\n&lt;/ul&gt;\n</code></pre>\n</p>\n<h4>How to prevent a PHP error when the plugin is not activated?</h4>\n<p>\n<p>Put the <code>get_related_links()</code> function or your whole code into an <code>if</code> clause. Like this your theme will still work even if the plugin is deactivated.</p>\n<pre><code>&lt;?php if(function_exists('get_related_links')) : ?&gt;\n    &lt;?php $related_links = get_related_links(); ?&gt;\n    &lt;ul&gt;\n        &lt;?php foreach ($related_links as $link): ?&gt;\n            &lt;li&gt;&lt;a href=\"&lt;?php echo $link['url']; ?&gt;\"&gt;&lt;?php echo $link['type']; ?&gt;: &lt;?php echo $link['title']; ?&gt;&lt;/a&gt;&lt;/li&gt;\n        &lt;?php endforeach; ?&gt;\n    &lt;/ul&gt;\n&lt;?php endif; ?&gt;\n</code></pre>\n</p>\n\n",
        "changelog": "<h4>1.7.1</h4>\n<ul>\n<li>Removed an obsolete console log that may cause problems on Internet Explorer 7 and 8.</li>\n</ul>\n<h4>1.7</h4>\n<ul>\n<li>Added a Widget to show the related links in your widgetized theme areas.</li>\n<li>Fixed a JavaScript error when adding custom links.</li>\n<li>Settings aren&#8217;t reset after plugin reactivation.</li>\n</ul>\n<h4>1.6</h4>\n<ul>\n<li>Metabox loads new list items while scrolling. Leads to a better load and search performance when a blog contains many hundred posts. </li>\n<li>Use placeholder attribute for input fields.</li>\n<li>Use plugins_url() to load stylesheets and javascript.</li>\n<li>Enqueue jQuery UI correctly.</li>\n</ul>\n<h4>1.5.7</h4>\n<ul>\n<li>Added related_links() function to echo an unordered list of links</li>\n<li>Added media post-type to link to media files (thanks jhned)</li>\n</ul>\n<h4>1.5.6</h4>\n<ul>\n<li>Fixed a problem where empty post data could lead to a php error</li>\n</ul>\n<h4>1.5.5</h4>\n<ul>\n<li>Fixed the marking of already selected links in the list (thanks robert_k for the fix)</li>\n</ul>\n<h4>1.5.4</h4>\n<ul>\n<li>Fixed a bug where get_related_links() always returned custom links when the post_type parameter was set</li>\n</ul>\n<h4>1.5.3</h4>\n<ul>\n<li>Updated CSS for WordPress 3.3 </li>\n</ul>\n<h4>1.5.2</h4>\n<ul>\n<li>Updated the way how settings are saved to be compatible with future WordPress versions</li>\n</ul>\n<h4>1.5.1</h4>\n<ul>\n<li>Fixed a bug where the plugin was also loaded on the taxonomy admin pages</li>\n</ul>\n<h4>1.5</h4>\n<ul>\n<li>Links order can be changed with drag and drop</li>\n<li>Search field to quickly find a link by name</li>\n<li>External URLs can be added</li>\n<li>Added an <code>id</code> property to the get_related_links() function</li>\n<li>New meta data structure but legacy support for older plugin versions is added</li>\n<li>Checking if the post really exists before it is added to the output</li>\n<li>Better list loading through ajax</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>The meta box content list is now scrollable</li>\n</ul>\n<h4>1.0</h4>\n<p>Initial release</p>\n"
    },
    "short_description": "Manually link to existing content or a custom url through a meta box on the writing page.",
    "description": "<p>Related Links gives you the possibility to manually link other posts to your current post. But you can also link pages, media or any custom post-type. And in addition you can use custom urls to link to external files. The plugin adds a Metabox to the writing page with a list of all available content.</p>\n<p>Features:</p>\n<ul>\n<li>Shows a list of all available content in a Metabox on the writing page</li>\n<li>Multiple links can be selected</li>\n<li>Link order can be changed through drag and drop</li>\n<li>Custom URLs can be added</li>\n<li>Search field to quickly find a link</li>\n<li>Simple theme integration with an included widget or <code>related_links()</code></li>\n<li>Works with custom post-types</li>\n<li>Settings to enable the post-types that should be shown in the Metabox</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/related-links.zip",
    "upgrade_notice": [],
    "screenshots": [
        {
            "src": "https://ps.w.org/related-links/trunk/screenshot-1.jpg?rev=1538855",
            "caption": "Related links Metabox on the post page."
        },
        {
            "src": "https://ps.w.org/related-links/trunk/screenshot-2.jpg?rev=1538855",
            "caption": "Settings page."
        }
    ],
    "tags": {
        "deep": "deep",
        "internal": "internal",
        "link": "link",
        "post": "post",
        "related": "related"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.7": "https://downloads.wordpress.org/plugin/related-links.1.7.zip",
        "1.7.1": "https://downloads.wordpress.org/plugin/related-links.1.7.1.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://wordpress.org/extend/plugins/related-links/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/related-links.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 86,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}