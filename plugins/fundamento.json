{
    "name": "Fundamento",
    "slug": "fundamento",
    "version": "1.1.10",
    "author": "<a href=\"https://webprogrammingsolutions.com/\">Web Programming Solutions</a>",
    "author_profile": "https://profiles.wordpress.org/w3dev/",
    "contributors": {
        "w3dev": {
            "profile": "https://profiles.wordpress.org/w3dev/",
            "avatar": "https://secure.gravatar.com/avatar/749206a7fa9c194e43cef41cb31c5a04?s=96&d=monsterid&r=g",
            "display_name": "w3dev"
        },
        "torchsmith": {
            "profile": "https://profiles.wordpress.org/torchsmith/",
            "avatar": "https://secure.gravatar.com/avatar/ddab42f057788d9fbdd3b2dfe8777123?s=96&d=monsterid&r=g",
            "display_name": "Isaac"
        }
    },
    "requires": "5.2",
    "tested": "6.5.5",
    "requires_php": "7.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 2,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 2,
    "support_url": "https://wordpress.org/support/plugin/fundamento/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 100,
    "downloaded": 6330,
    "last_updated": "2024-04-05 12:48pm GMT",
    "added": "2022-03-28",
    "homepage": "",
    "sections": {
        "description": "<p>Have you ever wanted to alter the way Elementor renders one of its widgets on your website?</p>\n<p>Fundamento provides an easier way to achieve this by allowing you to inject extra CSS classes into Elementor&#8217;s widgets.</p>\n<h3>Usage</h3>\n<p>Tell Elementor that you have a new skin available by utilizing the following code in your <code>functions.php</code> file:</p>\n<ol>\n<li>\n<p>Add an action to initialize Fundamento, then add a call to Fundamento&#8217;s <code>register_skin()</code> function:</p>\n<pre><code>if(is_plugin_active('fundamento/fundamento.php')) {\n    function fundamento_init() {\n        // create a new Fundamento instance\n        $f = \\Fundamento\\Plugin::instance(); \n\n        // register a new skin\n        $f-&gt;register_skin([\n            'name'       =&gt; 'Red',                                                      // The name of your new skin, as it will appear in Elementor\n            'element'    =&gt; 'button',                                                      // The elementor element you are skinning\n            'is_default' =&gt; true,                                                          // optional - should this skin be set by default on all elements of this type\n            'css'        =&gt; get_stylesheet_directory_uri() . '/skins/button/red.css',   // optional - have Fundamento enqueue an extra css file\n            'js'         =&gt; get_stylesheet_directory_uri() . '/skins/button/red.js',    // optional - have Fundamento enqueue an extra js file\n        ]);\n    }\n    add_action('elementor/init', 'fundamento_init');\n}\n</code></pre>\n</li>\n<li>\n<p>Add the selector to your css file:</p>\n<pre><code>/* Class will always be .skin-{element}-{name} */\n/* Name is transformed to lowercase and spaces are replaced with \"-\" */\n.skin-button-red {\n    background: #f00;\n}\n</code></pre>\n</li>\n</ol>\n<p>Tell Elementor that you have a new padding preset by utilizing the following code in your <code>functions.php</code> file:</p>\n<ol>\n<li>\n<p>Add an action to initialize Fundamento, then add a call to Fundamento&#8217;s <code>register_padding()</code> function:</p>\n<pre><code>if(is_plugin_active('fundamento/fundamento.php')) {\n    function fundamento_init() {\n        // create a new Fundamento instance\n        $f = \\Fundamento\\Plugin::instance(); \n\n        // register a new skin\n        $f-&gt;register_padding([\n            'name'       =&gt; 'Standard',                                                    // The name of your padding preset, as it will appear in Elementor\n            'element'    =&gt; 'section',                                                     // The elementor element you are skinning\n            'padding'    =&gt; '30px',                                                        // The value and unit of the amount of padding this preset should apply\n            'is_default' =&gt; true,                                                          // optional - should this skin be set by default on all elements of this type\n        ]);\n    }\n    add_action('elementor/init', 'fundamento_init');\n}\n</code></pre>\n</li>\n</ol>\n",
        "installation": "<ol>\n<li>Upload the <code>fundamento</code> folder to your <code>plugins</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress</li>\n<li>Add the Fundamento function call to your WordPress theme&#8217;s <code>functions.php</code> file</li>\n<li>Select a widget on your Elementor-enabled page and choose the custom skin you created<br />\nor</li>\n<li>Select a widget on your Elementor-enabled page and choose the padding preset you created</li>\n</ol>\n",
        "changelog": "<h4>1.1.10</h4>\n<ul>\n<li>Updated version alignment/support.</li>\n</ul>\n<h4>1.1.9</h4>\n<ul>\n<li>Add padding-top/bottom/left/right for inline and block padding on Elementor 3.16+.</li>\n</ul>\n<h4>1.1.8</h4>\n<ul>\n<li>Fixed bug where classes were not always being added to frontend in Elementor v3.14+.</li>\n</ul>\n<h4>1.1.7</h4>\n<ul>\n<li>Moved container padding presets to a custom controls section</li>\n</ul>\n<h4>1.1.6</h4>\n<ul>\n<li>Tested in updated WP / Elementor environments</li>\n</ul>\n<h4>1.1.5</h4>\n<ul>\n<li>Update padding-control.php to work with section/container templates</li>\n</ul>\n<h4>1.1.4</h4>\n<ul>\n<li>Update readme.txt</li>\n</ul>\n<h4>1.1.3</h4>\n<ul>\n<li>Added improved, responsive padding controls</li>\n</ul>\n<h4>1.1.2</h4>\n<ul>\n<li>Fix behavior of <code>Default</code> padding preset</li>\n</ul>\n<h4>1.1.1</h4>\n<ul>\n<li>Fix selector for padding presets on <code>column</code> element</li>\n<li>Change <code>None (default)</code> for column padding preset to <code>10px</code> to match Elementor&#8217;s default column padding</li>\n</ul>\n<h4>1.1.0</h4>\n<ul>\n<li>Add register_padding function</li>\n<li>Fix &#8220;Undefined index: skin_options&#8221; bug</li>\n</ul>\n<h4>1.0.5</h4>\n<ul>\n<li>Optimize how classes are being added to elements</li>\n<li>Fix sections/columns not getting classes applied to them</li>\n</ul>\n<h4>1.0.4</h4>\n<ul>\n<li>Add WP Admin notice if not registering skins in the right hook</li>\n</ul>\n<h4>1.0.3</h4>\n<ul>\n<li>Enqueue all skin styles and scripts into page editor</li>\n</ul>\n<h4>1.0.2</h4>\n<ul>\n<li>Fix plugin so it can add skins dropdown to any element</li>\n</ul>\n<h4>1.0.1</h4>\n<ul>\n<li>Added is_default option.</li>\n<li>Prevent Fundamento from double-enqueuing the same css/js file for an element. </li>\n</ul>\n<h4>1.0</h4>\n<ul>\n<li>Our initial release.</li>\n</ul>\n"
    },
    "short_description": "Fundamento creates the ability to easily add custom skins and padding-presets into your Elementor-based Wordpress website.",
    "description": "<p>Have you ever wanted to alter the way Elementor renders one of its widgets on your website?</p>\n<p>Fundamento provides an easier way to achieve this by allowing you to inject extra CSS classes into Elementor&#8217;s widgets.</p>\n<h3>Usage</h3>\n<p>Tell Elementor that you have a new skin available by utilizing the following code in your <code>functions.php</code> file:</p>\n<ol>\n<li>\n<p>Add an action to initialize Fundamento, then add a call to Fundamento&#8217;s <code>register_skin()</code> function:</p>\n<pre><code>if(is_plugin_active('fundamento/fundamento.php')) {\n    function fundamento_init() {\n        // create a new Fundamento instance\n        $f = \\Fundamento\\Plugin::instance(); \n\n        // register a new skin\n        $f-&gt;register_skin([\n            'name'       =&gt; 'Red',                                                      // The name of your new skin, as it will appear in Elementor\n            'element'    =&gt; 'button',                                                      // The elementor element you are skinning\n            'is_default' =&gt; true,                                                          // optional - should this skin be set by default on all elements of this type\n            'css'        =&gt; get_stylesheet_directory_uri() . '/skins/button/red.css',   // optional - have Fundamento enqueue an extra css file\n            'js'         =&gt; get_stylesheet_directory_uri() . '/skins/button/red.js',    // optional - have Fundamento enqueue an extra js file\n        ]);\n    }\n    add_action('elementor/init', 'fundamento_init');\n}\n</code></pre>\n</li>\n<li>\n<p>Add the selector to your css file:</p>\n<pre><code>/* Class will always be .skin-{element}-{name} */\n/* Name is transformed to lowercase and spaces are replaced with \"-\" */\n.skin-button-red {\n    background: #f00;\n}\n</code></pre>\n</li>\n</ol>\n<p>Tell Elementor that you have a new padding preset by utilizing the following code in your <code>functions.php</code> file:</p>\n<ol>\n<li>\n<p>Add an action to initialize Fundamento, then add a call to Fundamento&#8217;s <code>register_padding()</code> function:</p>\n<pre><code>if(is_plugin_active('fundamento/fundamento.php')) {\n    function fundamento_init() {\n        // create a new Fundamento instance\n        $f = \\Fundamento\\Plugin::instance(); \n\n        // register a new skin\n        $f-&gt;register_padding([\n            'name'       =&gt; 'Standard',                                                    // The name of your padding preset, as it will appear in Elementor\n            'element'    =&gt; 'section',                                                     // The elementor element you are skinning\n            'padding'    =&gt; '30px',                                                        // The value and unit of the amount of padding this preset should apply\n            'is_default' =&gt; true,                                                          // optional - should this skin be set by default on all elements of this type\n        ]);\n    }\n    add_action('elementor/init', 'fundamento_init');\n}\n</code></pre>\n</li>\n</ol>\n",
    "download_link": "https://downloads.wordpress.org/plugin/fundamento.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "elementor": "elementor",
        "globals": "globals",
        "skin": "skin",
        "template": "template"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/fundamento.1.0.zip",
        "1.0.1": "https://downloads.wordpress.org/plugin/fundamento.1.0.1.zip",
        "1.0.2": "https://downloads.wordpress.org/plugin/fundamento.1.0.2.zip",
        "1.0.3": "https://downloads.wordpress.org/plugin/fundamento.1.0.3.zip",
        "1.0.4": "https://downloads.wordpress.org/plugin/fundamento.1.0.4.zip",
        "1.0.5": "https://downloads.wordpress.org/plugin/fundamento.1.0.5.zip",
        "1.1.0": "https://downloads.wordpress.org/plugin/fundamento.1.1.0.zip",
        "1.1.1": "https://downloads.wordpress.org/plugin/fundamento.1.1.1.zip",
        "1.1.2": "https://downloads.wordpress.org/plugin/fundamento.1.1.2.zip",
        "1.1.3": "https://downloads.wordpress.org/plugin/fundamento.1.1.3.zip",
        "1.1.4": "https://downloads.wordpress.org/plugin/fundamento.1.1.4.zip",
        "1.1.5": "https://downloads.wordpress.org/plugin/fundamento.1.1.5.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": [],
    "icons": {
        "1x": "https://ps.w.org/fundamento/assets/icon-128x128.jpg?rev=2700890",
        "2x": "https://ps.w.org/fundamento/assets/icon-256x256.jpg?rev=2700890"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}