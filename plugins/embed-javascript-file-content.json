{
    "name": "Embed JavaScript File Content",
    "slug": "embed-javascript-file-content",
    "version": "1.0",
    "author": "<a href=\"https://palasthotel.de\">Palasthotel  (Kim Meyer)</a>",
    "author_profile": "https://profiles.wordpress.org/palasthotel/",
    "contributors": {
        "palasthotel": {
            "profile": "https://profiles.wordpress.org/palasthotel/",
            "avatar": "https://secure.gravatar.com/avatar/c58364064b015c9661bd84ddd6cb105e?s=96&d=monsterid&r=g",
            "display_name": "Palasthotel"
        },
        "greatestview": {
            "profile": "https://profiles.wordpress.org/greatestview/",
            "avatar": "https://secure.gravatar.com/avatar/edf77867e43b067a156ab6fe5ab3a093?s=96&d=monsterid&r=g",
            "display_name": "greatestview"
        }
    },
    "requires": "4.1",
    "tested": "5.4.16",
    "requires_php": "5.4",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/embed-javascript-file-content/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 573,
    "last_updated": "2020-04-29 8:03pm GMT",
    "added": "2020-04-29",
    "homepage": "",
    "sections": {
        "description": "<p>In some critical cases you cannot wait for a JavaScript file to load. Then you can benefit from better performance, if you embed the JavaScript code directly into the <code>&lt;script&gt;</code> tag. This is where this plugin comes in: It provides a filter <code>embed_javascript_file_content_handles</code>, which takes JavaScript handles and echos their code content into the DOM instead of linking to a file.</p>\n<p>Please beware that placing lots of embedded JavaScript code can be critical! First you lose caching benefits and second the document size can increase easily. A general rule of thumb is that you should only consider JavaScript files for inline placement, which are critical and which have a file size lower than ~500 Bytes.</p>\n<h4>Example</h4>\n<pre><code>add_action( 'wp_enqueue_scripts', 'my_scripts' );\nfunction my_scripts() {\n    // Some critical script is enqueued\n    wp_enqueue_script( 'js-detection', get_template_directory_uri() . '/js/js-detection.js' );\n}\n\n/**\n * Define JavaScript handles to be echoed inline in the html head section.\n */\nadd_filter( 'embed_javascript_file_content_handles', 'my_embed_javascript_file_content_handles' );\nfunction my_embed_javascript_file_content_handles( $handles ) {\n    $scripts = [ 'js-detection' ];\n\n    return array_merge( $handles, $scripts );\n}\n</code></pre>\n",
        "installation": "<ol>\n<li>Upload <code>embed-javascript-file-content.zip</code> to the <code>/wp-content/plugins/</code> directory.</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress.</li>\n<li>Use the <code>embed_javascript_file_content_handles</code> filter in your theme or plugin.</li>\n<li>Youâ€™re done!</li>\n</ol>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>First release</li>\n</ul>\n"
    },
    "short_description": "Boosts performance of critical short JavaScript files by allowing to embed their code instead of linking to files. Script positions and extra scripts  &hellip;",
    "description": "<p>In some critical cases you cannot wait for a JavaScript file to load. Then you can benefit from better performance, if you embed the JavaScript code directly into the <code>&lt;script&gt;</code> tag. This is where this plugin comes in: It provides a filter <code>embed_javascript_file_content_handles</code>, which takes JavaScript handles and echos their code content into the DOM instead of linking to a file.</p>\n<p>Please beware that placing lots of embedded JavaScript code can be critical! First you lose caching benefits and second the document size can increase easily. A general rule of thumb is that you should only consider JavaScript files for inline placement, which are critical and which have a file size lower than ~500 Bytes.</p>\n<h4>Example</h4>\n<pre><code>add_action( 'wp_enqueue_scripts', 'my_scripts' );\nfunction my_scripts() {\n    // Some critical script is enqueued\n    wp_enqueue_script( 'js-detection', get_template_directory_uri() . '/js/js-detection.js' );\n}\n\n/**\n * Define JavaScript handles to be echoed inline in the html head section.\n */\nadd_filter( 'embed_javascript_file_content_handles', 'my_embed_javascript_file_content_handles' );\nfunction my_embed_javascript_file_content_handles( $handles ) {\n    $scripts = [ 'js-detection' ];\n\n    return array_merge( $handles, $scripts );\n}\n</code></pre>\n",
    "download_link": "https://downloads.wordpress.org/plugin/embed-javascript-file-content.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "embed": "embed",
        "enqueue": "enqueue",
        "inline": "inline",
        "javascript": "javascript",
        "scripts": "scripts"
    },
    "stable_tag": "trunk",
    "versions": {
        "1.0": "https://downloads.wordpress.org/plugin/embed-javascript-file-content.1.0.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "https://palasthotel.de/",
    "banners": [],
    "icons": {
        "default": "https://s.w.org/plugins/geopattern-icon/embed-javascript-file-content.svg"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": []
}