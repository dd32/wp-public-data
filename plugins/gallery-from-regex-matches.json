{
    "name": "Gallery From Regex Matches",
    "slug": "gallery-from-regex-matches",
    "version": "0.6.3",
    "author": "<a href=\"https://github.com/doddo\">Petter Hassberg</a>",
    "author_profile": "https://profiles.wordpress.org/doddo/",
    "contributors": {
        "doddo": {
            "profile": "https://profiles.wordpress.org/doddo/",
            "avatar": "https://secure.gravatar.com/avatar/4aa9e70a8695cf9a3b45c3bb5623a4de?s=96&d=monsterid&r=g",
            "display_name": "doddo"
        }
    },
    "requires": "4.9.1",
    "tested": "5.2.21",
    "requires_php": "7.0",
    "requires_plugins": [],
    "compatibility": [],
    "rating": 100,
    "ratings": {
        "5": 1,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 1,
    "support_url": "https://wordpress.org/support/plugin/gallery-from-regex-matches/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 0,
    "downloaded": 996,
    "last_updated": "2019-05-30 5:14pm GMT",
    "added": "2018-01-08",
    "homepage": "https://wordpress.org/plugins/gallery-from-regex-matches/",
    "sections": {
        "description": "<p>A plugin which adds a shortcode: <code>[gallery_from_regex_matches]</code> in which a regex attribute should be specified. It will then look for matches in the descriptions and titles of all published images in your library, and create a gallery from the matches it finds.</p>\n<ul>\n<li>Use for example like this <code>[gallery_from_regex_matches regex=\"lillill\" exclude_ids=\"764\"]</code>, and it will generate a gallery of all your pictures of &#8220;Lillill&#8221;, except the one which has ID 764.</li>\n<li>Sometimes it might be advicable to limit the amount of matches. that can be achieved by adding <code>limit</code> to the shortcode. <code>[gallery_from_regex_matches regex=\"lillill\" exclude_ids=\"764\" limit=\"10\"]</code>.</li>\n<li>Sometimes you want to make a gallery of &#8220;cats&#8221; but not &#8220;catsup&#8221;, but you don&#8217;t want to add <a href=\"https://dev.mysql.com/doc/refman/5.7/en/regexp.html\" rel=\"nofollow ugc\">word boundary</a> <code>[[:&gt;:]]</code>, in this case you can <code>exclude_regex=catsup</code>. Then it could look something along the line of <code>[gallery_from_regex_matches regex=\"cats\" exclude_regex=\"catsup\"]</code>.</li>\n<li>The same params (except for <code>ids</code>) as for the <code>[media]</code> shortcode can be used (as this plugin calls that shortcodes callback function (<code>gallery_shortcode()</code>) to generate the gallery), so if you want to specify a particular type (style) of gallery from for example your cat pictures , this might do the trick: <code>[gallery_from_regex_matches regex=\"(cat|kitten)\" type=\"square\"]</code>.</li>\n<li>The regular expressions follows the <a href=\"https://dev.mysql.com/doc/refman/5.7/en/regexp.html\" rel=\"nofollow ugc\">MySQL Regexp syntax</a></li>\n<li>Some characters will per default not work inside of the shortcode, see the &#8220;Caveats&#8221; section.</li>\n<li>There are no bells and whistles for this plugin but it could potentionally be added in the futre.</li>\n</ul>\n<h3>Caveats</h3>\n<p>Since the regex used by the plugin is specified as an attribute value inside of a shortcode, and the <a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">Shortcode Api</a> disallows the use of certain characters which could be a part of a valid, useful regex, there are some things to consider.</p>\n<blockquote>\n<p>Attribute values must never contain the following characters:<br />\n   * Square braces: [ ]<br />\n   * Quotes: &#8221; &#8216;</p>\n<p>[ &#8230; ]<br />\n  The recommended method of escaping special characters in shortcode attributes is HTML encoding. Most importantly, any user input appearing in a shortcode attribute must be escaped or stripped of special characters.</p>\n</blockquote>\n<ul>\n<li>if in the regex you need to macth a character set <code>[a-z]</code>, then (following the shortcode Api documentation guidline), they need to be encoded. There are two encodings which the plugin accepts: &#8220;html&#8221; and &#8220;base64&#8221; </li>\n<li>Currently there is no way to encode these things with help of the plugin, although it is planned for a future release, so the regexes must be encoded manually for now&#8217;<br />\nFor example, for regex <code>w[0u][0u]ti</code> can be expressed either:</li>\n</ul>\n<p>With HTML encoding:<br />\n    <code>[gallery_from_regex_matches regex=\"w&#038;#091;0u&#038;#093;&#038;#091;0u&#038;#093;ti\" encoding=\"html\"]</code></p>\n<p>With Base64 encoding:<br />\n    <code>[gallery_from_regex_matches regex=\"d1swdV1bMHVddGk=\" encoding=\"base64\"]</code></p>\n<p>To encode a string to base64, it can be done from the terminal like this:<br />\n    <code>% echo -n \"catsup\" | base64<br />\nY2F0c3Vw<br />\n% echo -n Y2F0c3Vw | base64 --decode<br />\ncatsup%</code></p>\n",
        "installation": "<ol>\n<li>unpack the zip into the <code>/wp-content/plugins</code> dir</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu</li>\n</ol>\n",
        "changelog": "<h4>0.6.3</h4>\n<ul>\n<li>Fixed a bug in which attachments with no parent were never selected.</li>\n</ul>\n<h4>0.6.2</h4>\n<ul>\n<li>Fixed a bug with mysql query and empty regexp</li>\n</ul>\n<h4>0.6.1</h4>\n<ul>\n<li>Added <code>exclude_regex</code> shortcode parameter.</li>\n</ul>\n<h4>0.6.0</h4>\n<ul>\n<li>Move the regex matching into the database and use MySQL regex syntax instead of calling all posts and applying the regex filters on them. This to increase performance and to work better on big galleries.</li>\n<li>Syntax for regex attr then is also slightly changed:  no need to use delimiter &#8216;/&#8217;: &#8220;<code>/(cat|kitten)/</code>&#8221; is now written &#8220;<code>(cat|kitten)</code>&#8220;, but either way will work for backwards-compatiblity reasons.</li>\n<li>Number of matches can now be limited with the <code>limit</code> which defaults to 10000, but can be set to a higher value if need be.</li>\n</ul>\n<h4>0.5.1</h4>\n<ul>\n<li>Add possibility of decoding encoded regexes, so that special characters which would collide with the Shortcode Api can still be used in them. </li>\n</ul>\n<h4>0.5</h4>\n<ul>\n<li>Search also title field</li>\n<li>use preg_grep on array of target search fields instead of concatinating it to a string as that can lead to unforseen matches.</li>\n</ul>\n<h4>0.1</h4>\n<p>First pre-prod version with potential bugs in it.</p>\n"
    },
    "short_description": "Maintain a gallery by including all published images in your library which match a regex (in title or description).",
    "description": "<p>A plugin which adds a shortcode: <code>[gallery_from_regex_matches]</code> in which a regex attribute should be specified. It will then look for matches in the descriptions and titles of all published images in your library, and create a gallery from the matches it finds.</p>\n<ul>\n<li>Use for example like this <code>[gallery_from_regex_matches regex=\"lillill\" exclude_ids=\"764\"]</code>, and it will generate a gallery of all your pictures of &#8220;Lillill&#8221;, except the one which has ID 764.</li>\n<li>Sometimes it might be advicable to limit the amount of matches. that can be achieved by adding <code>limit</code> to the shortcode. <code>[gallery_from_regex_matches regex=\"lillill\" exclude_ids=\"764\" limit=\"10\"]</code>.</li>\n<li>Sometimes you want to make a gallery of &#8220;cats&#8221; but not &#8220;catsup&#8221;, but you don&#8217;t want to add <a href=\"https://dev.mysql.com/doc/refman/5.7/en/regexp.html\" rel=\"nofollow ugc\">word boundary</a> <code>[[:&gt;:]]</code>, in this case you can <code>exclude_regex=catsup</code>. Then it could look something along the line of <code>[gallery_from_regex_matches regex=\"cats\" exclude_regex=\"catsup\"]</code>.</li>\n<li>The same params (except for <code>ids</code>) as for the <code>[media]</code> shortcode can be used (as this plugin calls that shortcodes callback function (<code>gallery_shortcode()</code>) to generate the gallery), so if you want to specify a particular type (style) of gallery from for example your cat pictures , this might do the trick: <code>[gallery_from_regex_matches regex=\"(cat|kitten)\" type=\"square\"]</code>.</li>\n<li>The regular expressions follows the <a href=\"https://dev.mysql.com/doc/refman/5.7/en/regexp.html\" rel=\"nofollow ugc\">MySQL Regexp syntax</a></li>\n<li>Some characters will per default not work inside of the shortcode, see the &#8220;Caveats&#8221; section.</li>\n<li>There are no bells and whistles for this plugin but it could potentionally be added in the futre.</li>\n</ul>\n<h3>Caveats</h3>\n<p>Since the regex used by the plugin is specified as an attribute value inside of a shortcode, and the <a href=\"https://codex.wordpress.org/Shortcode_API\" rel=\"nofollow ugc\">Shortcode Api</a> disallows the use of certain characters which could be a part of a valid, useful regex, there are some things to consider.</p>\n<blockquote>\n<p>Attribute values must never contain the following characters:<br />\n   * Square braces: [ ]<br />\n   * Quotes: &#8221; &#8216;</p>\n<p>[ &#8230; ]<br />\n  The recommended method of escaping special characters in shortcode attributes is HTML encoding. Most importantly, any user input appearing in a shortcode attribute must be escaped or stripped of special characters.</p>\n</blockquote>\n<ul>\n<li>if in the regex you need to macth a character set <code>[a-z]</code>, then (following the shortcode Api documentation guidline), they need to be encoded. There are two encodings which the plugin accepts: &#8220;html&#8221; and &#8220;base64&#8221; </li>\n<li>Currently there is no way to encode these things with help of the plugin, although it is planned for a future release, so the regexes must be encoded manually for now&#8217;<br />\nFor example, for regex <code>w[0u][0u]ti</code> can be expressed either:</li>\n</ul>\n<p>With HTML encoding:<br />\n    <code>[gallery_from_regex_matches regex=\"w&#038;#091;0u&#038;#093;&#038;#091;0u&#038;#093;ti\" encoding=\"html\"]</code></p>\n<p>With Base64 encoding:<br />\n    <code>[gallery_from_regex_matches regex=\"d1swdV1bMHVddGk=\" encoding=\"base64\"]</code></p>\n<p>To encode a string to base64, it can be done from the terminal like this:<br />\n    <code>% echo -n \"catsup\" | base64<br />\nY2F0c3Vw<br />\n% echo -n Y2F0c3Vw | base64 --decode<br />\ncatsup%</code></p>\n",
    "download_link": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.6.3.zip",
    "upgrade_notice": {
        "0.6.0": "<p>Performance upgrade, no need to use delimiter &#039;/&#039; when specifying regex, because MySQL run sthe regexes now. All existing slashes and flags will be stripped from regex before running to maintain backwards compatiblity.</p>"
    },
    "screenshots": [],
    "tags": {
        "gallery": "gallery"
    },
    "stable_tag": "0.6.3",
    "versions": {
        "0.1": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.1.zip",
        "0.5": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.5.zip",
        "0.5.1": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.5.1.zip",
        "0.6.0": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.6.0.zip",
        "0.6.1": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.6.1.zip",
        "0.6.2": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.6.2.zip",
        "0.6.3": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.0.6.3.zip",
        "trunk": "https://downloads.wordpress.org/plugin/gallery-from-regex-matches.zip"
    },
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "",
    "banners": {
        "low": "https://ps.w.org/gallery-from-regex-matches/assets/banner-772x250.jpg?rev=1802650",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/gallery-from-regex-matches/assets/icon-128x128.png?rev=1800844",
        "2x": "https://ps.w.org/gallery-from-regex-matches/assets/icon-256x256.png?rev=1800844"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 100,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "gallery-from-regex-matches",
            "language": "sv_SE",
            "version": "0.6.3",
            "updated": "2019-09-12 16:04:08",
            "package": "http://downloads.wordpress.org/translation/plugin/gallery-from-regex-matches/0.6.3/sv_SE.zip"
        }
    ]
}