{
    "name": "picowall",
    "slug": "picowall",
    "version": "1.0.0",
    "author": "<a href=\"http://www.iazami.ir/\">mohammad azami</a>",
    "author_profile": "https://profiles.wordpress.org/mhazami/",
    "contributors": {
        "mhazami": {
            "profile": "https://profiles.wordpress.org/mhazami/",
            "avatar": "https://secure.gravatar.com/avatar/a40582cdb859cb9266d469abeb81b8ed?s=96&d=monsterid&r=g",
            "display_name": "mhazami"
        }
    },
    "requires": "3.8.0",
    "tested": "4.5.32",
    "requires_php": false,
    "requires_plugins": [],
    "compatibility": [],
    "rating": 0,
    "ratings": {
        "5": 0,
        "4": 0,
        "3": 0,
        "2": 0,
        "1": 0
    },
    "num_ratings": 0,
    "support_url": "https://wordpress.org/support/plugin/picowall/",
    "support_threads": 0,
    "support_threads_resolved": 0,
    "active_installs": 10,
    "downloaded": 1136,
    "last_updated": "2016-06-04 23:08:00",
    "added": "2016-06-04",
    "homepage": "http://www.wordpress.com/plugins/picowall",
    "sections": {
        "description": "<p>With this plugin installed, you could resize images on the fly. just define the size and the way that you want to resize then it&#8217;s done.<br />\nit is perfect for wallpaper and stock photography websites.</p>\n<p>Features of plugin include:</p>\n<ul>\n<li>support different images formats. (PNG, JPG, JPEG, GIF)</li>\n<li>Intelligent sizing &#8211; No image distortion!</li>\n<li>Resize by exact width/height. (exact)</li>\n<li>Auto determine &#8211; let the script determine how to handle it. (auto)</li>\n<li>Resize, then crop, with the exact size and no distortion. (crop)</li>\n<li>Automatic download after resize.</li>\n<li>Powerful shortcode.</li>\n</ul>\n<h4>Languages</h4>\n<ol>\n<li>English</li>\n<li>Persian (Farsi) &#8211; <a href=\"https://github.com/iazami/picowall/wiki/Function-Reference\" rel=\"nofollow ugc\">(ÿ±ÿßŸáŸÜŸÖÿß€å ŸÅÿßÿ±ÿ≥€å)</a></li>\n</ol>\n<h4>Notes</h4>\n<p>Automatic download works with a wide range of devices and browsers.</p>\n<p>You can expect it to work for the vast majority of your users, with some common-sense limits:</p>\n<ul>\n<li>Devices without file systems like iPhone, iPad, Wii, et al. have nowhere to save the file to, sorry.</li>\n<li>Android support starts at 4.2 for the built-in browser, though chrome 36+ and firefox 20+ on android 2.3+ work well.<br />\n*Devices without Blob support won&#8217;t be able to download Blobs or TypedArrays</li>\n<li>Legacy devices a[download] support can only download a few hundred kilobytes of data, and can&#8217;t give the file a custom name.</li>\n<li>Devices without window.URL support can only download a couple megabytes of data</li>\n<li>IE versions of 9 and before are NOT supported because the don&#8217;t support a[download] or dataURL frame locations.</li>\n</ul>\n<h3>Function Reference</h3>\n<p>there is two way to use this plugin, function, and shortcode.</p>\n<h4>shortcode</h4>\n<p>if you&#8217;re not familiar with programming. then use picowall shortcode to setup the script without programming knowledge.</p>\n<p>shortcode attributes:</p>\n<ul>\n<li><strong>size (required)</strong> &#8211; you should at least define a width and height but also you can define multiple sizes (width,height,option|width,height,option|&#8230; width,height,option).</li>\n<li><strong>option (optional) (default:auto)</strong> &#8211; define the way that you want to resize (auto|exact|crop) if you don&#8217;t define this attribute then the script will automatically decide how to handle it.<br />\nkeep in mind that this attribute will make a global effect on each size block that you didn&#8217;t define an option for it.</li>\n<li><strong>sep (optional) (default: non-breaking space &#8221; &#8220;)</strong> &#8211; with this attribute you can define a character to separate output links from each other.</li>\n</ul>\n<p><strong>examples</strong></p>\n<p>resize to exact width/height: [picowall size=&#8221;800,600&#8243; option=&#8221;exact&#8221;]</p>\n<p>resize to exact width/height (multiple size): [picowall size=&#8221;800,600|1920,1080&#8243; option=&#8221;exact&#8221;]</p>\n<p>resize then crop the first one and then for other ones just resize to exact width/height and then separate the results with a dash (pretty cool huh ?!)</p>\n<p>picowall[size=&#8221;800,600,crop|1920,1080|150,150&#8243; option=&#8221;exact&#8221; sep=&#8221;-&#8220;]</p>\n<p>you can see that I use a different syntax in the last example. that is a &#8220;sizing block&#8221;.<br />\n it means that you can define multiple sizes with different ways to resize. simply just define it like this:</p>\n<p>with,height,option|width,height,option| &#8230;. width(n),height(n),option(n).</p>\n<p><strong>note:</strong> use a vertical bar (|) to separate the size block.</p>\n<p>keep in mind that if you don&#8217;t define the option for a sizing block then the value of &#8220;option&#8221; attribute will effect on that block. and also if you don&#8217;t define it there, then the script will automatically decide how to handle resizing.</p>\n<h4>functions</h4>\n<p><strong>picowall($size,$option,$id)</strong></p>\n<p>this function will return an array of links to download resized images.</p>\n<p><strong>parameters</strong></p>\n<ul>\n<li>$size (required) &#8211; just like the shortcode you can define setting blocks too</li>\n<li>$option  (optional) (default: &#8216;auto&#8217;)- same as option attribute in shortcode.</li>\n<li>$id (optional) (default: null) &#8211; if you use this function outside the loop then you have to define the id of post that you want to fetch photo from.</li>\n</ul>\n<p><strong>picowall_generate_links($size,$option,$sep,$id)</strong></p>\n<p>this function will print the result of above function in HTML.</p>\n<p><strong>parameters</strong></p>\n<ul>\n<li>$size (required) &#8211; just like the shortcode you can define setting blocks too</li>\n<li>$option  (optional) (default: &#8216;auto&#8217;)- same as option attribute in shortcode.</li>\n<li>$sep (optional) (default: non breaking space &#8221; &#8220;) &#8211; same as sep attribute in shortcode.</li>\n<li>$id (optional) (default: null) &#8211; if you use this function outside post loop then you have to define the id of that post which you want to fetch photo.<br />\nu want to fetch photo.</li>\n</ul>\n",
        "installation": "<p>Using the Plugin Manager</p>\n<ol>\n<li>Click Plugins</li>\n<li>Click Add New</li>\n<li>Search for <code>picowall</code></li>\n<li>Click Install</li>\n<li>Click Install Now</li>\n<li>Click Activate Plugin</li>\n</ol>\n<p>Manually</p>\n<ol>\n<li>Upload <code>picowall</code> folder to the <code>/wp-content/plugins/</code> directory</li>\n<li>Activate the plugin through the &#8216;Plugins&#8217; menu in WordPress and enjoy üôÇ</li>\n</ol>\n",
        "changelog": "<h4>1.0</h4>\n<ul>\n<li>Hello World.</li>\n</ul>\n"
    },
    "short_description": "Resize images on the fly.",
    "description": "<p>With this plugin installed, you could resize images on the fly. just define the size and the way that you want to resize then it&#8217;s done.<br />\nit is perfect for wallpaper and stock photography websites.</p>\n<p>Features of plugin include:</p>\n<ul>\n<li>support different images formats. (PNG, JPG, JPEG, GIF)</li>\n<li>Intelligent sizing &#8211; No image distortion!</li>\n<li>Resize by exact width/height. (exact)</li>\n<li>Auto determine &#8211; let the script determine how to handle it. (auto)</li>\n<li>Resize, then crop, with the exact size and no distortion. (crop)</li>\n<li>Automatic download after resize.</li>\n<li>Powerful shortcode.</li>\n</ul>\n<h4>Languages</h4>\n<ol>\n<li>English</li>\n<li>Persian (Farsi) &#8211; <a href=\"https://github.com/iazami/picowall/wiki/Function-Reference\" rel=\"nofollow ugc\">(ÿ±ÿßŸáŸÜŸÖÿß€å ŸÅÿßÿ±ÿ≥€å)</a></li>\n</ol>\n<h4>Notes</h4>\n<p>Automatic download works with a wide range of devices and browsers.</p>\n<p>You can expect it to work for the vast majority of your users, with some common-sense limits:</p>\n<ul>\n<li>Devices without file systems like iPhone, iPad, Wii, et al. have nowhere to save the file to, sorry.</li>\n<li>Android support starts at 4.2 for the built-in browser, though chrome 36+ and firefox 20+ on android 2.3+ work well.<br />\n*Devices without Blob support won&#8217;t be able to download Blobs or TypedArrays</li>\n<li>Legacy devices a[download] support can only download a few hundred kilobytes of data, and can&#8217;t give the file a custom name.</li>\n<li>Devices without window.URL support can only download a couple megabytes of data</li>\n<li>IE versions of 9 and before are NOT supported because the don&#8217;t support a[download] or dataURL frame locations.</li>\n</ul>\n<h3>Function Reference</h3>\n<p>there is two way to use this plugin, function, and shortcode.</p>\n<h4>shortcode</h4>\n<p>if you&#8217;re not familiar with programming. then use picowall shortcode to setup the script without programming knowledge.</p>\n<p>shortcode attributes:</p>\n<ul>\n<li><strong>size (required)</strong> &#8211; you should at least define a width and height but also you can define multiple sizes (width,height,option|width,height,option|&#8230; width,height,option).</li>\n<li><strong>option (optional) (default:auto)</strong> &#8211; define the way that you want to resize (auto|exact|crop) if you don&#8217;t define this attribute then the script will automatically decide how to handle it.<br />\nkeep in mind that this attribute will make a global effect on each size block that you didn&#8217;t define an option for it.</li>\n<li><strong>sep (optional) (default: non-breaking space &#8221; &#8220;)</strong> &#8211; with this attribute you can define a character to separate output links from each other.</li>\n</ul>\n<p><strong>examples</strong></p>\n<p>resize to exact width/height: [picowall size=&#8221;800,600&#8243; option=&#8221;exact&#8221;]</p>\n<p>resize to exact width/height (multiple size): [picowall size=&#8221;800,600|1920,1080&#8243; option=&#8221;exact&#8221;]</p>\n<p>resize then crop the first one and then for other ones just resize to exact width/height and then separate the results with a dash (pretty cool huh ?!)</p>\n<p>picowall[size=&#8221;800,600,crop|1920,1080|150,150&#8243; option=&#8221;exact&#8221; sep=&#8221;-&#8220;]</p>\n<p>you can see that I use a different syntax in the last example. that is a &#8220;sizing block&#8221;.<br />\n it means that you can define multiple sizes with different ways to resize. simply just define it like this:</p>\n<p>with,height,option|width,height,option| &#8230;. width(n),height(n),option(n).</p>\n<p><strong>note:</strong> use a vertical bar (|) to separate the size block.</p>\n<p>keep in mind that if you don&#8217;t define the option for a sizing block then the value of &#8220;option&#8221; attribute will effect on that block. and also if you don&#8217;t define it there, then the script will automatically decide how to handle resizing.</p>\n<h4>functions</h4>\n<p><strong>picowall($size,$option,$id)</strong></p>\n<p>this function will return an array of links to download resized images.</p>\n<p><strong>parameters</strong></p>\n<ul>\n<li>$size (required) &#8211; just like the shortcode you can define setting blocks too</li>\n<li>$option  (optional) (default: &#8216;auto&#8217;)- same as option attribute in shortcode.</li>\n<li>$id (optional) (default: null) &#8211; if you use this function outside the loop then you have to define the id of post that you want to fetch photo from.</li>\n</ul>\n<p><strong>picowall_generate_links($size,$option,$sep,$id)</strong></p>\n<p>this function will print the result of above function in HTML.</p>\n<p><strong>parameters</strong></p>\n<ul>\n<li>$size (required) &#8211; just like the shortcode you can define setting blocks too</li>\n<li>$option  (optional) (default: &#8216;auto&#8217;)- same as option attribute in shortcode.</li>\n<li>$sep (optional) (default: non breaking space &#8221; &#8220;) &#8211; same as sep attribute in shortcode.</li>\n<li>$id (optional) (default: null) &#8211; if you use this function outside post loop then you have to define the id of that post which you want to fetch photo.<br />\nu want to fetch photo.</li>\n</ul>\n",
    "download_link": "https://downloads.wordpress.org/plugin/picowall.zip",
    "upgrade_notice": [],
    "screenshots": [],
    "tags": {
        "image": "image",
        "no-saving": "no-saving",
        "resize": "resize",
        "resizer": "resizer",
        "resizing": "resizing"
    },
    "stable_tag": "trunk",
    "versions": [],
    "business_model": false,
    "repository_url": "",
    "commercial_support_url": "",
    "donate_link": "http://www.iazami.ir/",
    "banners": {
        "low": "https://ps.w.org/picowall/assets/banner-772x250.jpg?rev=1430616",
        "high": false
    },
    "icons": {
        "1x": "https://ps.w.org/picowall/assets/icon-128x128.jpg?rev=1430616",
        "2x": "https://ps.w.org/picowall/assets/icon-256x256.jpg?rev=1430616"
    },
    "blocks": [],
    "block_assets": [],
    "author_block_count": 0,
    "author_block_rating": 0,
    "blueprints": [],
    "preview_link": "",
    "language_packs": [
        {
            "type": "plugin",
            "slug": "picowall",
            "language": "fa_IR",
            "version": "1.0.0",
            "updated": "2018-01-14 16:37:51",
            "package": "https://downloads.wordpress.org/translation/plugin/picowall/1.0.0/fa_IR.zip"
        }
    ]
}